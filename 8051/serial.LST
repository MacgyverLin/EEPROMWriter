C51 COMPILER V9.01   SERIAL                                                                03/02/2019 07:51:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN serial.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE serial.c COMPACT ROM(SMALL) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "serial.h"
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          // #include <stdio.h>
   5          // #include <string.h>
   6          // #include <stdarg.h>
   7          // #include "vsscanf.h"
   8          
   9          #define TXBUF_SIZE 32
  10          #define RXBUF_SIZE 128
  11          
  12          unsigned char rxIdx;
  13          unsigned char rxBuffer[RXBUF_SIZE];
  14          unsigned char byteToRX;
  15          char rxDone;
  16          
  17          unsigned char txIdx;
  18          unsigned char txBuffer[TXBUF_SIZE];
  19          unsigned char byteToTX;
  20          char txDone;
  21          
  22          void serialISR(void) interrupt 4  
  23          {
  24   1              if(RI)
  25   1              {
  26   2                      if(!rxDone)
  27   2                      {
  28   3                              rxBuffer[rxIdx++] = SBUF;
  29   3                              if(rxIdx>=byteToRX)
  30   3                              {
  31   4                                      rxDone = -1;
  32   4                              }
  33   3                      }
  34   2                      
  35   2                      RI = 0;
  36   2              }
  37   1              if(TI)
  38   1              {
  39   2                      if(!txDone)
  40   2                      {
  41   3                              SBUF = txBuffer[txIdx++];
  42   3                              if(txIdx>=byteToTX)
  43   3                              {
  44   4                                      txDone = -1;
  45   4                              }
  46   3                      }
  47   2                      
  48   2                      TI = 0;
  49   2              }
  50   1      }
  51          
  52          void serialInitSendBuffer()
  53          {
  54   1              unsigned int i = 0;
  55   1              
C51 COMPILER V9.01   SERIAL                                                                03/02/2019 07:51:49 PAGE 2   

  56   1              while(TI);
  57   1      
  58   1              while(i<TXBUF_SIZE)
  59   1              {
  60   2                      txBuffer[i] = 0;
  61   2                      i++;
  62   2              }
  63   1              txIdx = 0;
  64   1              byteToTX = 0;
  65   1              txDone = -1;
  66   1      }
  67          
  68          void serialSendDataAsync(unsigned char* buffer, unsigned int size)
  69          {
  70   1              unsigned int i = 0;
  71   1              
  72   1              while(!txDone || TI);
  73   1              
  74   1              if(size>=TXBUF_SIZE)
  75   1                      size=TXBUF_SIZE;
  76   1              while(i<size)
  77   1              {
  78   2                      txBuffer[i] = buffer[i];
  79   2                      i++;
  80   2              }
  81   1              txIdx = 0;
  82   1              byteToTX = size;
  83   1              txDone = 0;
  84   1      
  85   1              TI = 1;
  86   1      }
  87          
  88          char serialIsSendDataDone()
  89          {
  90   1              while(TI);
  91   1      
  92   1              return txDone;
  93   1      }
  94          
  95          void serialSendData(unsigned char* buffer, unsigned int size, int timeout)
  96          {
  97   1              int time = 0;
  98   1              
  99   1              serialSendDataAsync(buffer, size);
 100   1      
 101   1              while(!serialIsSendDataDone() && (timeout==-1 || time++<timeout));
 102   1      }
 103           
 104          void serialInitReceiveBuffer()
 105          {
 106   1              unsigned int i = 0;
 107   1              
 108   1              while(RI);
 109   1              
 110   1              while(i<RXBUF_SIZE)
 111   1              {
 112   2                      rxBuffer[i++] = 0;
 113   2              }
 114   1              rxIdx = 0;
 115   1              byteToRX = 0;
 116   1              rxDone = -1;
 117   1      }
C51 COMPILER V9.01   SERIAL                                                                03/02/2019 07:51:49 PAGE 3   

 118          
 119          void serialReceiveDataAsync(unsigned int size)
 120          {
 121   1              unsigned int i = 0;
 122   1              
 123   1              while(!rxDone || RI);
 124   1      
 125   1              if(size>=RXBUF_SIZE)
 126   1                      size=RXBUF_SIZE;        
 127   1              while(i<RXBUF_SIZE)
 128   1              {
 129   2                      rxBuffer[i++] = 0;
 130   2              }       
 131   1              rxIdx = 0;
 132   1              byteToRX = size;
 133   1      
 134   1              rxDone = 0;
 135   1      }
 136          
 137          char serialIsReceiveDataDone()
 138          {
 139   1              while(RI);
 140   1      
 141   1              return rxDone;
 142   1      }
 143          
 144          char* serialReceiveData(unsigned int size, int timeout)
 145          {
 146   1              int time = 0;
 147   1              
 148   1              serialReceiveDataAsync(size);
 149   1      
 150   1              while(!serialIsReceiveDataDone() && (timeout==-1 || time++<timeout));
 151   1              
 152   1              return rxBuffer;
 153   1      }
 154          
 155          /*
 156          int serialPrintf(char* buffer, const char *fmt, ...)
 157          {
 158                  //char buffer[16];
 159          
 160                  va_list argptr;
 161                  int cnt;
 162                  va_start(argptr, fmt);
 163          
 164                  cnt = vsprintf(buffer, fmt, argptr);
 165          
 166                  va_end(argptr);
 167                  
 168                  serialSendData(buffer, strlen(buffer));
 169          
 170                  return cnt;
 171          }
 172          
 173          int serialScanf(char* buffer, const char *fmt, ...)
 174          {
 175                  va_list argptr;
 176                  int cnt;
 177          
 178                  //char buffer[16];
 179                  serialReceiveData(strlen(buffer));
C51 COMPILER V9.01   SERIAL                                                                03/02/2019 07:51:49 PAGE 4   

 180          
 181                  va_start(argptr, fmt);
 182          
 183                  cnt = vsscanf(buffer, fmt, argptr);
 184          
 185                  va_end(argptr); 
 186          
 187                  return cnt;
 188          }
 189          */
 190          
 191          int serialInitialize(int baud)
 192          {       
 193   1              serialInitSendBuffer();
 194   1              serialInitReceiveBuffer();
 195   1                      
 196   1              ///////////////////////////////
 197   1              SCON=0X50;                      //设置为工作方式1
 198   1              TMOD=0X20;                      //设置计数器工作方式2
 199   1              PCON=0X80;                      //波特率加倍
 200   1              TH1=0XFA;                               //计数器初始值设置，注意波特率是4800的
 201   1              TL1=0XFA;
 202   1              ES=1;                                           //打开接收中断
 203   1              EA=1;                                           //打开总中断
 204   1              TR1=1;                                  //打开计数器
 205   1              
 206   1              return -1;
 207   1      }
*** WARNING C280 IN LINE 191 OF SERIAL.C: 'baud': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    497    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    166      18
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
