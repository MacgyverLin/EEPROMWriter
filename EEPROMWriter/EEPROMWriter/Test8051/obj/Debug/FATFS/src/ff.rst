                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module ff
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _find_volume
                                     12 	.globl _get_fat
                                     13 	.globl _clust2sect
                                     14 	.globl _disk_read
                                     15 	.globl _disk_status
                                     16 	.globl _disk_initialize
                                     17 	.globl _ff_memfree
                                     18 	.globl _ff_memalloc
                                     19 	.globl _ff_wtoupper
                                     20 	.globl _ff_convert
                                     21 	.globl _CY
                                     22 	.globl _AC
                                     23 	.globl _F0
                                     24 	.globl _RS1
                                     25 	.globl _RS0
                                     26 	.globl _OV
                                     27 	.globl _F1
                                     28 	.globl _P
                                     29 	.globl _PS
                                     30 	.globl _PT1
                                     31 	.globl _PX1
                                     32 	.globl _PT0
                                     33 	.globl _PX0
                                     34 	.globl _RD
                                     35 	.globl _WR
                                     36 	.globl _T1
                                     37 	.globl _T0
                                     38 	.globl _INT1
                                     39 	.globl _INT0
                                     40 	.globl _TXD
                                     41 	.globl _RXD
                                     42 	.globl _P3_7
                                     43 	.globl _P3_6
                                     44 	.globl _P3_5
                                     45 	.globl _P3_4
                                     46 	.globl _P3_3
                                     47 	.globl _P3_2
                                     48 	.globl _P3_1
                                     49 	.globl _P3_0
                                     50 	.globl _EA
                                     51 	.globl _ES
                                     52 	.globl _ET1
                                     53 	.globl _EX1
                                     54 	.globl _ET0
                                     55 	.globl _EX0
                                     56 	.globl _P2_7
                                     57 	.globl _P2_6
                                     58 	.globl _P2_5
                                     59 	.globl _P2_4
                                     60 	.globl _P2_3
                                     61 	.globl _P2_2
                                     62 	.globl _P2_1
                                     63 	.globl _P2_0
                                     64 	.globl _SM0
                                     65 	.globl _SM1
                                     66 	.globl _SM2
                                     67 	.globl _REN
                                     68 	.globl _TB8
                                     69 	.globl _RB8
                                     70 	.globl _TI
                                     71 	.globl _RI
                                     72 	.globl _P1_7
                                     73 	.globl _P1_6
                                     74 	.globl _P1_5
                                     75 	.globl _P1_4
                                     76 	.globl _P1_3
                                     77 	.globl _P1_2
                                     78 	.globl _P1_1
                                     79 	.globl _P1_0
                                     80 	.globl _TF1
                                     81 	.globl _TR1
                                     82 	.globl _TF0
                                     83 	.globl _TR0
                                     84 	.globl _IE1
                                     85 	.globl _IT1
                                     86 	.globl _IE0
                                     87 	.globl _IT0
                                     88 	.globl _P0_7
                                     89 	.globl _P0_6
                                     90 	.globl _P0_5
                                     91 	.globl _P0_4
                                     92 	.globl _P0_3
                                     93 	.globl _P0_2
                                     94 	.globl _P0_1
                                     95 	.globl _P0_0
                                     96 	.globl _B
                                     97 	.globl _ACC
                                     98 	.globl _PSW
                                     99 	.globl _IP
                                    100 	.globl _P3
                                    101 	.globl _IE
                                    102 	.globl _P2
                                    103 	.globl _SBUF
                                    104 	.globl _SCON
                                    105 	.globl _P1
                                    106 	.globl _TH1
                                    107 	.globl _TH0
                                    108 	.globl _TL1
                                    109 	.globl _TL0
                                    110 	.globl _TMOD
                                    111 	.globl _TCON
                                    112 	.globl _PCON
                                    113 	.globl _DPH
                                    114 	.globl _DPL
                                    115 	.globl _SP
                                    116 	.globl _P0
                                    117 	.globl _f_mount
                                    118 	.globl _f_open
                                    119 	.globl _f_read
                                    120 	.globl _f_close
                                    121 	.globl _f_lseek
                                    122 	.globl _f_opendir
                                    123 	.globl _f_closedir
                                    124 	.globl _f_readdir
                                    125 	.globl _f_stat
                                    126 	.globl _f_getlabel
                                    127 	.globl _f_gets
                                    128 ;--------------------------------------------------------
                                    129 ; special function registers
                                    130 ;--------------------------------------------------------
                                    131 	.area RSEG    (ABS,DATA)
      000000                        132 	.org 0x0000
                           000080   133 _P0	=	0x0080
                           000081   134 _SP	=	0x0081
                           000082   135 _DPL	=	0x0082
                           000083   136 _DPH	=	0x0083
                           000087   137 _PCON	=	0x0087
                           000088   138 _TCON	=	0x0088
                           000089   139 _TMOD	=	0x0089
                           00008A   140 _TL0	=	0x008a
                           00008B   141 _TL1	=	0x008b
                           00008C   142 _TH0	=	0x008c
                           00008D   143 _TH1	=	0x008d
                           000090   144 _P1	=	0x0090
                           000098   145 _SCON	=	0x0098
                           000099   146 _SBUF	=	0x0099
                           0000A0   147 _P2	=	0x00a0
                           0000A8   148 _IE	=	0x00a8
                           0000B0   149 _P3	=	0x00b0
                           0000B8   150 _IP	=	0x00b8
                           0000D0   151 _PSW	=	0x00d0
                           0000E0   152 _ACC	=	0x00e0
                           0000F0   153 _B	=	0x00f0
                                    154 ;--------------------------------------------------------
                                    155 ; special function bits
                                    156 ;--------------------------------------------------------
                                    157 	.area RSEG    (ABS,DATA)
      000000                        158 	.org 0x0000
                           000080   159 _P0_0	=	0x0080
                           000081   160 _P0_1	=	0x0081
                           000082   161 _P0_2	=	0x0082
                           000083   162 _P0_3	=	0x0083
                           000084   163 _P0_4	=	0x0084
                           000085   164 _P0_5	=	0x0085
                           000086   165 _P0_6	=	0x0086
                           000087   166 _P0_7	=	0x0087
                           000088   167 _IT0	=	0x0088
                           000089   168 _IE0	=	0x0089
                           00008A   169 _IT1	=	0x008a
                           00008B   170 _IE1	=	0x008b
                           00008C   171 _TR0	=	0x008c
                           00008D   172 _TF0	=	0x008d
                           00008E   173 _TR1	=	0x008e
                           00008F   174 _TF1	=	0x008f
                           000090   175 _P1_0	=	0x0090
                           000091   176 _P1_1	=	0x0091
                           000092   177 _P1_2	=	0x0092
                           000093   178 _P1_3	=	0x0093
                           000094   179 _P1_4	=	0x0094
                           000095   180 _P1_5	=	0x0095
                           000096   181 _P1_6	=	0x0096
                           000097   182 _P1_7	=	0x0097
                           000098   183 _RI	=	0x0098
                           000099   184 _TI	=	0x0099
                           00009A   185 _RB8	=	0x009a
                           00009B   186 _TB8	=	0x009b
                           00009C   187 _REN	=	0x009c
                           00009D   188 _SM2	=	0x009d
                           00009E   189 _SM1	=	0x009e
                           00009F   190 _SM0	=	0x009f
                           0000A0   191 _P2_0	=	0x00a0
                           0000A1   192 _P2_1	=	0x00a1
                           0000A2   193 _P2_2	=	0x00a2
                           0000A3   194 _P2_3	=	0x00a3
                           0000A4   195 _P2_4	=	0x00a4
                           0000A5   196 _P2_5	=	0x00a5
                           0000A6   197 _P2_6	=	0x00a6
                           0000A7   198 _P2_7	=	0x00a7
                           0000A8   199 _EX0	=	0x00a8
                           0000A9   200 _ET0	=	0x00a9
                           0000AA   201 _EX1	=	0x00aa
                           0000AB   202 _ET1	=	0x00ab
                           0000AC   203 _ES	=	0x00ac
                           0000AF   204 _EA	=	0x00af
                           0000B0   205 _P3_0	=	0x00b0
                           0000B1   206 _P3_1	=	0x00b1
                           0000B2   207 _P3_2	=	0x00b2
                           0000B3   208 _P3_3	=	0x00b3
                           0000B4   209 _P3_4	=	0x00b4
                           0000B5   210 _P3_5	=	0x00b5
                           0000B6   211 _P3_6	=	0x00b6
                           0000B7   212 _P3_7	=	0x00b7
                           0000B0   213 _RXD	=	0x00b0
                           0000B1   214 _TXD	=	0x00b1
                           0000B2   215 _INT0	=	0x00b2
                           0000B3   216 _INT1	=	0x00b3
                           0000B4   217 _T0	=	0x00b4
                           0000B5   218 _T1	=	0x00b5
                           0000B6   219 _WR	=	0x00b6
                           0000B7   220 _RD	=	0x00b7
                           0000B8   221 _PX0	=	0x00b8
                           0000B9   222 _PT0	=	0x00b9
                           0000BA   223 _PX1	=	0x00ba
                           0000BB   224 _PT1	=	0x00bb
                           0000BC   225 _PS	=	0x00bc
                           0000D0   226 _P	=	0x00d0
                           0000D1   227 _F1	=	0x00d1
                           0000D2   228 _OV	=	0x00d2
                           0000D3   229 _RS0	=	0x00d3
                           0000D4   230 _RS1	=	0x00d4
                           0000D5   231 _F0	=	0x00d5
                           0000D6   232 _AC	=	0x00d6
                           0000D7   233 _CY	=	0x00d7
                                    234 ;--------------------------------------------------------
                                    235 ; overlayable register banks
                                    236 ;--------------------------------------------------------
                                    237 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        238 	.ds 8
                                    239 ;--------------------------------------------------------
                                    240 ; internal ram data
                                    241 ;--------------------------------------------------------
                                    242 	.area DSEG    (DATA)
                                    243 ;--------------------------------------------------------
                                    244 ; overlayable items in internal ram 
                                    245 ;--------------------------------------------------------
                                    246 ;--------------------------------------------------------
                                    247 ; indirectly addressable internal ram data
                                    248 ;--------------------------------------------------------
                                    249 	.area ISEG    (DATA)
                                    250 ;--------------------------------------------------------
                                    251 ; absolute internal ram data
                                    252 ;--------------------------------------------------------
                                    253 	.area IABS    (ABS,DATA)
                                    254 	.area IABS    (ABS,DATA)
                                    255 ;--------------------------------------------------------
                                    256 ; bit data
                                    257 ;--------------------------------------------------------
                                    258 	.area BSEG    (BIT)
                                    259 ;--------------------------------------------------------
                                    260 ; paged external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area PSEG    (PAG,XDATA)
                                    263 ;--------------------------------------------------------
                                    264 ; external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area XSEG    (XDATA)
      00A247                        267 _FatFs:
      00A247                        268 	.ds 6
      00A24D                        269 _Fsid:
      00A24D                        270 	.ds 2
                                    271 ;--------------------------------------------------------
                                    272 ; absolute external ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area XABS    (ABS,XDATA)
                                    275 ;--------------------------------------------------------
                                    276 ; external initialized ram data
                                    277 ;--------------------------------------------------------
                                    278 	.area XISEG   (XDATA)
                                    279 	.area HOME    (CODE)
                                    280 	.area GSINIT0 (CODE)
                                    281 	.area GSINIT1 (CODE)
                                    282 	.area GSINIT2 (CODE)
                                    283 	.area GSINIT3 (CODE)
                                    284 	.area GSINIT4 (CODE)
                                    285 	.area GSINIT5 (CODE)
                                    286 	.area GSINIT  (CODE)
                                    287 	.area GSFINAL (CODE)
                                    288 	.area CSEG    (CODE)
                                    289 ;--------------------------------------------------------
                                    290 ; global & static initialisations
                                    291 ;--------------------------------------------------------
                                    292 	.area HOME    (CODE)
                                    293 	.area GSINIT  (CODE)
                                    294 	.area GSFINAL (CODE)
                                    295 	.area GSINIT  (CODE)
                                    296 ;--------------------------------------------------------
                                    297 ; Home
                                    298 ;--------------------------------------------------------
                                    299 	.area HOME    (CODE)
                                    300 	.area HOME    (CODE)
                                    301 ;--------------------------------------------------------
                                    302 ; code
                                    303 ;--------------------------------------------------------
                                    304 	.area CSEG    (CODE)
                                    305 ;------------------------------------------------------------
                                    306 ;Allocation info for local variables in function 'mem_cpy'
                                    307 ;------------------------------------------------------------
                                    308 ;src                       Allocated to stack - _bp -6
                                    309 ;cnt                       Allocated to stack - _bp -8
                                    310 ;dst                       Allocated to registers r5 r6 r7 
                                    311 ;d                         Allocated to registers 
                                    312 ;s                         Allocated to registers 
                                    313 ;sloc0                     Allocated to stack - _bp +1
                                    314 ;sloc1                     Allocated to stack - _bp +3
                                    315 ;------------------------------------------------------------
                                    316 ;	FATFS\src\ff.c:560: void mem_cpy (void* dst, const void* src, UINT cnt) {
                                    317 ;	-----------------------------------------
                                    318 ;	 function mem_cpy
                                    319 ;	-----------------------------------------
      000BB9                        320 _mem_cpy:
                           000007   321 	ar7 = 0x07
                           000006   322 	ar6 = 0x06
                           000005   323 	ar5 = 0x05
                           000004   324 	ar4 = 0x04
                           000003   325 	ar3 = 0x03
                           000002   326 	ar2 = 0x02
                           000001   327 	ar1 = 0x01
                           000000   328 	ar0 = 0x00
      000BB9 C0 00            [24]  329 	push	_bp
      000BBB E5 81            [12]  330 	mov	a,sp
      000BBD F5 00            [12]  331 	mov	_bp,a
      000BBF 24 05            [12]  332 	add	a,#0x05
      000BC1 F5 81            [12]  333 	mov	sp,a
      000BC3 AD 82            [24]  334 	mov	r5,dpl
      000BC5 AE 83            [24]  335 	mov	r6,dph
      000BC7 AF F0            [24]  336 	mov	r7,b
                                    337 ;	FATFS\src\ff.c:561: BYTE *d = (BYTE*)dst;
                                    338 ;	FATFS\src\ff.c:562: const BYTE *s = (const BYTE*)src;
      000BC9 E5 00            [12]  339 	mov	a,_bp
      000BCB 24 FA            [12]  340 	add	a,#0xfa
      000BCD F8               [12]  341 	mov	r0,a
      000BCE E5 00            [12]  342 	mov	a,_bp
      000BD0 24 03            [12]  343 	add	a,#0x03
      000BD2 F9               [12]  344 	mov	r1,a
      000BD3 E6               [12]  345 	mov	a,@r0
      000BD4 F7               [12]  346 	mov	@r1,a
      000BD5 08               [12]  347 	inc	r0
      000BD6 09               [12]  348 	inc	r1
      000BD7 E6               [12]  349 	mov	a,@r0
      000BD8 F7               [12]  350 	mov	@r1,a
      000BD9 08               [12]  351 	inc	r0
      000BDA 09               [12]  352 	inc	r1
      000BDB E6               [12]  353 	mov	a,@r0
      000BDC F7               [12]  354 	mov	@r1,a
                                    355 ;	FATFS\src\ff.c:571: while (cnt--)
      000BDD E5 00            [12]  356 	mov	a,_bp
      000BDF 24 F8            [12]  357 	add	a,#0xf8
      000BE1 F8               [12]  358 	mov	r0,a
      000BE2 A9 00            [24]  359 	mov	r1,_bp
      000BE4 09               [12]  360 	inc	r1
      000BE5 E6               [12]  361 	mov	a,@r0
      000BE6 F7               [12]  362 	mov	@r1,a
      000BE7 08               [12]  363 	inc	r0
      000BE8 09               [12]  364 	inc	r1
      000BE9 E6               [12]  365 	mov	a,@r0
      000BEA F7               [12]  366 	mov	@r1,a
      000BEB                        367 00101$:
      000BEB A8 00            [24]  368 	mov	r0,_bp
      000BED 08               [12]  369 	inc	r0
      000BEE 86 03            [24]  370 	mov	ar3,@r0
      000BF0 08               [12]  371 	inc	r0
      000BF1 86 04            [24]  372 	mov	ar4,@r0
      000BF3 A8 00            [24]  373 	mov	r0,_bp
      000BF5 08               [12]  374 	inc	r0
      000BF6 16               [12]  375 	dec	@r0
      000BF7 B6 FF 02         [24]  376 	cjne	@r0,#0xff,00115$
      000BFA 08               [12]  377 	inc	r0
      000BFB 16               [12]  378 	dec	@r0
      000BFC                        379 00115$:
      000BFC EB               [12]  380 	mov	a,r3
      000BFD 4C               [12]  381 	orl	a,r4
      000BFE 60 2A            [24]  382 	jz	00104$
                                    383 ;	FATFS\src\ff.c:572: *d++ = *s++;
      000C00 E5 00            [12]  384 	mov	a,_bp
      000C02 24 03            [12]  385 	add	a,#0x03
      000C04 F8               [12]  386 	mov	r0,a
      000C05 86 82            [24]  387 	mov	dpl,@r0
      000C07 08               [12]  388 	inc	r0
      000C08 86 83            [24]  389 	mov	dph,@r0
      000C0A 08               [12]  390 	inc	r0
      000C0B 86 F0            [24]  391 	mov	b,@r0
      000C0D 12 00 00         [24]  392 	lcall	__gptrget
      000C10 FC               [12]  393 	mov	r4,a
      000C11 A3               [24]  394 	inc	dptr
      000C12 18               [12]  395 	dec	r0
      000C13 18               [12]  396 	dec	r0
      000C14 A6 82            [24]  397 	mov	@r0,dpl
      000C16 08               [12]  398 	inc	r0
      000C17 A6 83            [24]  399 	mov	@r0,dph
      000C19 8D 82            [24]  400 	mov	dpl,r5
      000C1B 8E 83            [24]  401 	mov	dph,r6
      000C1D 8F F0            [24]  402 	mov	b,r7
      000C1F EC               [12]  403 	mov	a,r4
      000C20 12 00 00         [24]  404 	lcall	__gptrput
      000C23 A3               [24]  405 	inc	dptr
      000C24 AD 82            [24]  406 	mov	r5,dpl
      000C26 AE 83            [24]  407 	mov	r6,dph
      000C28 80 C1            [24]  408 	sjmp	00101$
      000C2A                        409 00104$:
                                    410 ;	FATFS\src\ff.c:573: }
      000C2A 85 00 81         [24]  411 	mov	sp,_bp
      000C2D D0 00            [24]  412 	pop	_bp
      000C2F 02 00 00         [24]  413 	ljmp	__sdcc_banked_ret
                                    414 ;------------------------------------------------------------
                                    415 ;Allocation info for local variables in function 'mem_set'
                                    416 ;------------------------------------------------------------
                                    417 ;val                       Allocated to stack - _bp -5
                                    418 ;cnt                       Allocated to stack - _bp -7
                                    419 ;dst                       Allocated to registers r5 r6 r7 
                                    420 ;d                         Allocated to registers 
                                    421 ;sloc0                     Allocated to stack - _bp +1
                                    422 ;------------------------------------------------------------
                                    423 ;	FATFS\src\ff.c:577: void mem_set (void* dst, int val, UINT cnt) {
                                    424 ;	-----------------------------------------
                                    425 ;	 function mem_set
                                    426 ;	-----------------------------------------
      000C32                        427 _mem_set:
      000C32 C0 00            [24]  428 	push	_bp
      000C34 85 81 00         [24]  429 	mov	_bp,sp
      000C37 05 81            [12]  430 	inc	sp
      000C39 05 81            [12]  431 	inc	sp
      000C3B AD 82            [24]  432 	mov	r5,dpl
      000C3D AE 83            [24]  433 	mov	r6,dph
      000C3F AF F0            [24]  434 	mov	r7,b
                                    435 ;	FATFS\src\ff.c:578: BYTE *d = (BYTE*)dst;
                                    436 ;	FATFS\src\ff.c:580: while (cnt--)
      000C41 E5 00            [12]  437 	mov	a,_bp
      000C43 24 F9            [12]  438 	add	a,#0xf9
      000C45 F8               [12]  439 	mov	r0,a
      000C46 A9 00            [24]  440 	mov	r1,_bp
      000C48 09               [12]  441 	inc	r1
      000C49 E6               [12]  442 	mov	a,@r0
      000C4A F7               [12]  443 	mov	@r1,a
      000C4B 08               [12]  444 	inc	r0
      000C4C 09               [12]  445 	inc	r1
      000C4D E6               [12]  446 	mov	a,@r0
      000C4E F7               [12]  447 	mov	@r1,a
      000C4F                        448 00101$:
      000C4F A8 00            [24]  449 	mov	r0,_bp
      000C51 08               [12]  450 	inc	r0
      000C52 86 02            [24]  451 	mov	ar2,@r0
      000C54 08               [12]  452 	inc	r0
      000C55 86 04            [24]  453 	mov	ar4,@r0
      000C57 A8 00            [24]  454 	mov	r0,_bp
      000C59 08               [12]  455 	inc	r0
      000C5A 16               [12]  456 	dec	@r0
      000C5B B6 FF 02         [24]  457 	cjne	@r0,#0xff,00115$
      000C5E 08               [12]  458 	inc	r0
      000C5F 16               [12]  459 	dec	@r0
      000C60                        460 00115$:
      000C60 EA               [12]  461 	mov	a,r2
      000C61 4C               [12]  462 	orl	a,r4
      000C62 60 18            [24]  463 	jz	00104$
                                    464 ;	FATFS\src\ff.c:581: *d++ = (BYTE)val;
      000C64 E5 00            [12]  465 	mov	a,_bp
      000C66 24 FB            [12]  466 	add	a,#0xfb
      000C68 F8               [12]  467 	mov	r0,a
      000C69 86 04            [24]  468 	mov	ar4,@r0
      000C6B 8D 82            [24]  469 	mov	dpl,r5
      000C6D 8E 83            [24]  470 	mov	dph,r6
      000C6F 8F F0            [24]  471 	mov	b,r7
      000C71 EC               [12]  472 	mov	a,r4
      000C72 12 00 00         [24]  473 	lcall	__gptrput
      000C75 A3               [24]  474 	inc	dptr
      000C76 AD 82            [24]  475 	mov	r5,dpl
      000C78 AE 83            [24]  476 	mov	r6,dph
      000C7A 80 D3            [24]  477 	sjmp	00101$
      000C7C                        478 00104$:
                                    479 ;	FATFS\src\ff.c:582: }
      000C7C 85 00 81         [24]  480 	mov	sp,_bp
      000C7F D0 00            [24]  481 	pop	_bp
      000C81 02 00 00         [24]  482 	ljmp	__sdcc_banked_ret
                                    483 ;------------------------------------------------------------
                                    484 ;Allocation info for local variables in function 'mem_cmp'
                                    485 ;------------------------------------------------------------
                                    486 ;src                       Allocated to stack - _bp -6
                                    487 ;cnt                       Allocated to stack - _bp -8
                                    488 ;dst                       Allocated to registers r5 r6 r7 
                                    489 ;d                         Allocated to registers 
                                    490 ;s                         Allocated to registers 
                                    491 ;r                         Allocated to stack - _bp +3
                                    492 ;sloc0                     Allocated to stack - _bp +3
                                    493 ;sloc1                     Allocated to stack - _bp +8
                                    494 ;sloc2                     Allocated to stack - _bp +5
                                    495 ;sloc3                     Allocated to stack - _bp +1
                                    496 ;------------------------------------------------------------
                                    497 ;	FATFS\src\ff.c:586: int mem_cmp (const void* dst, const void* src, UINT cnt) {
                                    498 ;	-----------------------------------------
                                    499 ;	 function mem_cmp
                                    500 ;	-----------------------------------------
      000C84                        501 _mem_cmp:
      000C84 C0 00            [24]  502 	push	_bp
      000C86 E5 81            [12]  503 	mov	a,sp
      000C88 F5 00            [12]  504 	mov	_bp,a
      000C8A 24 09            [12]  505 	add	a,#0x09
      000C8C F5 81            [12]  506 	mov	sp,a
      000C8E AD 82            [24]  507 	mov	r5,dpl
      000C90 AE 83            [24]  508 	mov	r6,dph
      000C92 AF F0            [24]  509 	mov	r7,b
                                    510 ;	FATFS\src\ff.c:587: const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
      000C94 E5 00            [12]  511 	mov	a,_bp
      000C96 24 FA            [12]  512 	add	a,#0xfa
      000C98 F8               [12]  513 	mov	r0,a
      000C99 E5 00            [12]  514 	mov	a,_bp
      000C9B 24 05            [12]  515 	add	a,#0x05
      000C9D F9               [12]  516 	mov	r1,a
      000C9E E6               [12]  517 	mov	a,@r0
      000C9F F7               [12]  518 	mov	@r1,a
      000CA0 08               [12]  519 	inc	r0
      000CA1 09               [12]  520 	inc	r1
      000CA2 E6               [12]  521 	mov	a,@r0
      000CA3 F7               [12]  522 	mov	@r1,a
      000CA4 08               [12]  523 	inc	r0
      000CA5 09               [12]  524 	inc	r1
      000CA6 E6               [12]  525 	mov	a,@r0
      000CA7 F7               [12]  526 	mov	@r1,a
                                    527 ;	FATFS\src\ff.c:588: int r = 0;
      000CA8 E5 00            [12]  528 	mov	a,_bp
      000CAA 24 03            [12]  529 	add	a,#0x03
      000CAC F8               [12]  530 	mov	r0,a
      000CAD E4               [12]  531 	clr	a
      000CAE F6               [12]  532 	mov	@r0,a
      000CAF 08               [12]  533 	inc	r0
      000CB0 F6               [12]  534 	mov	@r0,a
                                    535 ;	FATFS\src\ff.c:590: while (cnt-- && (r = *d++ - *s++) == 0) ;
      000CB1 E5 00            [12]  536 	mov	a,_bp
      000CB3 24 F8            [12]  537 	add	a,#0xf8
      000CB5 F8               [12]  538 	mov	r0,a
      000CB6 E5 00            [12]  539 	mov	a,_bp
      000CB8 24 08            [12]  540 	add	a,#0x08
      000CBA F9               [12]  541 	mov	r1,a
      000CBB E6               [12]  542 	mov	a,@r0
      000CBC F7               [12]  543 	mov	@r1,a
      000CBD 08               [12]  544 	inc	r0
      000CBE 09               [12]  545 	inc	r1
      000CBF E6               [12]  546 	mov	a,@r0
      000CC0 F7               [12]  547 	mov	@r1,a
      000CC1                        548 00102$:
      000CC1 E5 00            [12]  549 	mov	a,_bp
      000CC3 24 08            [12]  550 	add	a,#0x08
      000CC5 F8               [12]  551 	mov	r0,a
      000CC6 86 03            [24]  552 	mov	ar3,@r0
      000CC8 08               [12]  553 	inc	r0
      000CC9 86 04            [24]  554 	mov	ar4,@r0
      000CCB E5 00            [12]  555 	mov	a,_bp
      000CCD 24 08            [12]  556 	add	a,#0x08
      000CCF F8               [12]  557 	mov	r0,a
      000CD0 16               [12]  558 	dec	@r0
      000CD1 B6 FF 02         [24]  559 	cjne	@r0,#0xff,00116$
      000CD4 08               [12]  560 	inc	r0
      000CD5 16               [12]  561 	dec	@r0
      000CD6                        562 00116$:
      000CD6 EB               [12]  563 	mov	a,r3
      000CD7 4C               [12]  564 	orl	a,r4
      000CD8 60 4B            [24]  565 	jz	00104$
      000CDA 8D 82            [24]  566 	mov	dpl,r5
      000CDC 8E 83            [24]  567 	mov	dph,r6
      000CDE 8F F0            [24]  568 	mov	b,r7
      000CE0 12 00 00         [24]  569 	lcall	__gptrget
      000CE3 FC               [12]  570 	mov	r4,a
      000CE4 A3               [24]  571 	inc	dptr
      000CE5 AD 82            [24]  572 	mov	r5,dpl
      000CE7 AE 83            [24]  573 	mov	r6,dph
      000CE9 A8 00            [24]  574 	mov	r0,_bp
      000CEB 08               [12]  575 	inc	r0
      000CEC A6 04            [24]  576 	mov	@r0,ar4
      000CEE 08               [12]  577 	inc	r0
      000CEF 76 00            [12]  578 	mov	@r0,#0x00
      000CF1 E5 00            [12]  579 	mov	a,_bp
      000CF3 24 05            [12]  580 	add	a,#0x05
      000CF5 F8               [12]  581 	mov	r0,a
      000CF6 86 82            [24]  582 	mov	dpl,@r0
      000CF8 08               [12]  583 	inc	r0
      000CF9 86 83            [24]  584 	mov	dph,@r0
      000CFB 08               [12]  585 	inc	r0
      000CFC 86 F0            [24]  586 	mov	b,@r0
      000CFE 12 00 00         [24]  587 	lcall	__gptrget
      000D01 FA               [12]  588 	mov	r2,a
      000D02 A3               [24]  589 	inc	dptr
      000D03 18               [12]  590 	dec	r0
      000D04 18               [12]  591 	dec	r0
      000D05 A6 82            [24]  592 	mov	@r0,dpl
      000D07 08               [12]  593 	inc	r0
      000D08 A6 83            [24]  594 	mov	@r0,dph
      000D0A 7C 00            [12]  595 	mov	r4,#0x00
      000D0C A8 00            [24]  596 	mov	r0,_bp
      000D0E 08               [12]  597 	inc	r0
      000D0F E6               [12]  598 	mov	a,@r0
      000D10 C3               [12]  599 	clr	c
      000D11 9A               [12]  600 	subb	a,r2
      000D12 FA               [12]  601 	mov	r2,a
      000D13 08               [12]  602 	inc	r0
      000D14 E6               [12]  603 	mov	a,@r0
      000D15 9C               [12]  604 	subb	a,r4
      000D16 FC               [12]  605 	mov	r4,a
      000D17 E5 00            [12]  606 	mov	a,_bp
      000D19 24 03            [12]  607 	add	a,#0x03
      000D1B F8               [12]  608 	mov	r0,a
      000D1C A6 02            [24]  609 	mov	@r0,ar2
      000D1E 08               [12]  610 	inc	r0
      000D1F A6 04            [24]  611 	mov	@r0,ar4
      000D21 EA               [12]  612 	mov	a,r2
      000D22 4C               [12]  613 	orl	a,r4
      000D23 60 9C            [24]  614 	jz	00102$
      000D25                        615 00104$:
                                    616 ;	FATFS\src\ff.c:591: return r;
      000D25 E5 00            [12]  617 	mov	a,_bp
      000D27 24 03            [12]  618 	add	a,#0x03
      000D29 F8               [12]  619 	mov	r0,a
      000D2A 86 82            [24]  620 	mov	dpl,@r0
      000D2C 08               [12]  621 	inc	r0
      000D2D 86 83            [24]  622 	mov	dph,@r0
                                    623 ;	FATFS\src\ff.c:592: }
      000D2F 85 00 81         [24]  624 	mov	sp,_bp
      000D32 D0 00            [24]  625 	pop	_bp
      000D34 02 00 00         [24]  626 	ljmp	__sdcc_banked_ret
                                    627 ;------------------------------------------------------------
                                    628 ;Allocation info for local variables in function 'chk_chr'
                                    629 ;------------------------------------------------------------
                                    630 ;chr                       Allocated to stack - _bp -5
                                    631 ;str                       Allocated to registers 
                                    632 ;------------------------------------------------------------
                                    633 ;	FATFS\src\ff.c:596: int chk_chr (const char* str, int chr) {
                                    634 ;	-----------------------------------------
                                    635 ;	 function chk_chr
                                    636 ;	-----------------------------------------
      000D37                        637 _chk_chr:
      000D37 C0 00            [24]  638 	push	_bp
      000D39 85 81 00         [24]  639 	mov	_bp,sp
      000D3C AD 82            [24]  640 	mov	r5,dpl
      000D3E AE 83            [24]  641 	mov	r6,dph
      000D40 AF F0            [24]  642 	mov	r7,b
                                    643 ;	FATFS\src\ff.c:597: while (*str && *str != chr) str++;
      000D42                        644 00102$:
      000D42 8D 82            [24]  645 	mov	dpl,r5
      000D44 8E 83            [24]  646 	mov	dph,r6
      000D46 8F F0            [24]  647 	mov	b,r7
      000D48 12 00 00         [24]  648 	lcall	__gptrget
      000D4B FC               [12]  649 	mov	r4,a
      000D4C 60 19            [24]  650 	jz	00104$
      000D4E 7B 00            [12]  651 	mov	r3,#0x00
      000D50 E5 00            [12]  652 	mov	a,_bp
      000D52 24 FB            [12]  653 	add	a,#0xfb
      000D54 F8               [12]  654 	mov	r0,a
      000D55 E6               [12]  655 	mov	a,@r0
      000D56 B5 04 07         [24]  656 	cjne	a,ar4,00121$
      000D59 08               [12]  657 	inc	r0
      000D5A E6               [12]  658 	mov	a,@r0
      000D5B B5 03 02         [24]  659 	cjne	a,ar3,00121$
      000D5E 80 07            [24]  660 	sjmp	00104$
      000D60                        661 00121$:
      000D60 0D               [12]  662 	inc	r5
      000D61 BD 00 DE         [24]  663 	cjne	r5,#0x00,00102$
      000D64 0E               [12]  664 	inc	r6
      000D65 80 DB            [24]  665 	sjmp	00102$
      000D67                        666 00104$:
                                    667 ;	FATFS\src\ff.c:598: return *str;
      000D67 8D 82            [24]  668 	mov	dpl,r5
      000D69 8E 83            [24]  669 	mov	dph,r6
      000D6B 8F F0            [24]  670 	mov	b,r7
      000D6D 12 00 00         [24]  671 	lcall	__gptrget
      000D70 FD               [12]  672 	mov	r5,a
      000D71 7F 00            [12]  673 	mov	r7,#0x00
      000D73 8D 82            [24]  674 	mov	dpl,r5
      000D75 8F 83            [24]  675 	mov	dph,r7
                                    676 ;	FATFS\src\ff.c:599: }
      000D77 D0 00            [24]  677 	pop	_bp
      000D79 02 00 00         [24]  678 	ljmp	__sdcc_banked_ret
                                    679 ;------------------------------------------------------------
                                    680 ;Allocation info for local variables in function 'move_window'
                                    681 ;------------------------------------------------------------
                                    682 ;sector                    Allocated to stack - _bp -7
                                    683 ;fs                        Allocated to stack - _bp +1
                                    684 ;sloc0                     Allocated to stack - _bp +4
                                    685 ;------------------------------------------------------------
                                    686 ;	FATFS\src\ff.c:779: FRESULT move_window (
                                    687 ;	-----------------------------------------
                                    688 ;	 function move_window
                                    689 ;	-----------------------------------------
      000D7C                        690 _move_window:
      000D7C C0 00            [24]  691 	push	_bp
      000D7E 85 81 00         [24]  692 	mov	_bp,sp
      000D81 C0 82            [24]  693 	push	dpl
      000D83 C0 83            [24]  694 	push	dph
      000D85 C0 F0            [24]  695 	push	b
      000D87 05 81            [12]  696 	inc	sp
      000D89 05 81            [12]  697 	inc	sp
      000D8B 05 81            [12]  698 	inc	sp
                                    699 ;	FATFS\src\ff.c:784: if (sector != fs->winsect) {	/* Changed current window */
      000D8D A8 00            [24]  700 	mov	r0,_bp
      000D8F 08               [12]  701 	inc	r0
      000D90 E5 00            [12]  702 	mov	a,_bp
      000D92 24 04            [12]  703 	add	a,#0x04
      000D94 F9               [12]  704 	mov	r1,a
      000D95 74 22            [12]  705 	mov	a,#0x22
      000D97 26               [12]  706 	add	a,@r0
      000D98 F7               [12]  707 	mov	@r1,a
      000D99 E4               [12]  708 	clr	a
      000D9A 08               [12]  709 	inc	r0
      000D9B 36               [12]  710 	addc	a,@r0
      000D9C 09               [12]  711 	inc	r1
      000D9D F7               [12]  712 	mov	@r1,a
      000D9E 08               [12]  713 	inc	r0
      000D9F 09               [12]  714 	inc	r1
      000DA0 E6               [12]  715 	mov	a,@r0
      000DA1 F7               [12]  716 	mov	@r1,a
      000DA2 E5 00            [12]  717 	mov	a,_bp
      000DA4 24 04            [12]  718 	add	a,#0x04
      000DA6 F8               [12]  719 	mov	r0,a
      000DA7 86 82            [24]  720 	mov	dpl,@r0
      000DA9 08               [12]  721 	inc	r0
      000DAA 86 83            [24]  722 	mov	dph,@r0
      000DAC 08               [12]  723 	inc	r0
      000DAD 86 F0            [24]  724 	mov	b,@r0
      000DAF 12 00 00         [24]  725 	lcall	__gptrget
      000DB2 FC               [12]  726 	mov	r4,a
      000DB3 A3               [24]  727 	inc	dptr
      000DB4 12 00 00         [24]  728 	lcall	__gptrget
      000DB7 FD               [12]  729 	mov	r5,a
      000DB8 A3               [24]  730 	inc	dptr
      000DB9 12 00 00         [24]  731 	lcall	__gptrget
      000DBC FE               [12]  732 	mov	r6,a
      000DBD A3               [24]  733 	inc	dptr
      000DBE 12 00 00         [24]  734 	lcall	__gptrget
      000DC1 FF               [12]  735 	mov	r7,a
      000DC2 E5 00            [12]  736 	mov	a,_bp
      000DC4 24 F9            [12]  737 	add	a,#0xf9
      000DC6 F8               [12]  738 	mov	r0,a
      000DC7 E6               [12]  739 	mov	a,@r0
      000DC8 B5 04 12         [24]  740 	cjne	a,ar4,00115$
      000DCB 08               [12]  741 	inc	r0
      000DCC E6               [12]  742 	mov	a,@r0
      000DCD B5 05 0D         [24]  743 	cjne	a,ar5,00115$
      000DD0 08               [12]  744 	inc	r0
      000DD1 E6               [12]  745 	mov	a,@r0
      000DD2 B5 06 08         [24]  746 	cjne	a,ar6,00115$
      000DD5 08               [12]  747 	inc	r0
      000DD6 E6               [12]  748 	mov	a,@r0
      000DD7 B5 07 03         [24]  749 	cjne	a,ar7,00115$
      000DDA 02 0E 67         [24]  750 	ljmp	00104$
      000DDD                        751 00115$:
                                    752 ;	FATFS\src\ff.c:789: if (disk_read(fs->drv, fs->win, sector, 1))
      000DDD A8 00            [24]  753 	mov	r0,_bp
      000DDF 08               [12]  754 	inc	r0
      000DE0 74 26            [12]  755 	mov	a,#0x26
      000DE2 26               [12]  756 	add	a,@r0
      000DE3 FD               [12]  757 	mov	r5,a
      000DE4 E4               [12]  758 	clr	a
      000DE5 08               [12]  759 	inc	r0
      000DE6 36               [12]  760 	addc	a,@r0
      000DE7 FE               [12]  761 	mov	r6,a
      000DE8 08               [12]  762 	inc	r0
      000DE9 86 07            [24]  763 	mov	ar7,@r0
      000DEB A8 00            [24]  764 	mov	r0,_bp
      000DED 08               [12]  765 	inc	r0
      000DEE 74 01            [12]  766 	mov	a,#0x01
      000DF0 26               [12]  767 	add	a,@r0
      000DF1 FA               [12]  768 	mov	r2,a
      000DF2 E4               [12]  769 	clr	a
      000DF3 08               [12]  770 	inc	r0
      000DF4 36               [12]  771 	addc	a,@r0
      000DF5 FB               [12]  772 	mov	r3,a
      000DF6 08               [12]  773 	inc	r0
      000DF7 86 04            [24]  774 	mov	ar4,@r0
      000DF9 8A 82            [24]  775 	mov	dpl,r2
      000DFB 8B 83            [24]  776 	mov	dph,r3
      000DFD 8C F0            [24]  777 	mov	b,r4
      000DFF 12 00 00         [24]  778 	lcall	__gptrget
      000E02 FA               [12]  779 	mov	r2,a
      000E03 74 01            [12]  780 	mov	a,#0x01
      000E05 C0 E0            [24]  781 	push	acc
      000E07 E4               [12]  782 	clr	a
      000E08 C0 E0            [24]  783 	push	acc
      000E0A E5 00            [12]  784 	mov	a,_bp
      000E0C 24 F9            [12]  785 	add	a,#0xf9
      000E0E F8               [12]  786 	mov	r0,a
      000E0F E6               [12]  787 	mov	a,@r0
      000E10 C0 E0            [24]  788 	push	acc
      000E12 08               [12]  789 	inc	r0
      000E13 E6               [12]  790 	mov	a,@r0
      000E14 C0 E0            [24]  791 	push	acc
      000E16 08               [12]  792 	inc	r0
      000E17 E6               [12]  793 	mov	a,@r0
      000E18 C0 E0            [24]  794 	push	acc
      000E1A 08               [12]  795 	inc	r0
      000E1B E6               [12]  796 	mov	a,@r0
      000E1C C0 E0            [24]  797 	push	acc
      000E1E C0 05            [24]  798 	push	ar5
      000E20 C0 06            [24]  799 	push	ar6
      000E22 C0 07            [24]  800 	push	ar7
      000E24 8A 82            [24]  801 	mov	dpl,r2
      000E26 78 60            [12]  802 	mov	r0,#_disk_read
      000E28 79 07            [12]  803 	mov	r1,#(_disk_read >> 8)
      000E2A 7A 00            [12]  804 	mov	r2,#(_disk_read >> 16)
      000E2C 12 00 00         [24]  805 	lcall	__sdcc_banked_call
      000E2F AF 82            [24]  806 	mov	r7,dpl
      000E31 E5 81            [12]  807 	mov	a,sp
      000E33 24 F7            [12]  808 	add	a,#0xf7
      000E35 F5 81            [12]  809 	mov	sp,a
      000E37 EF               [12]  810 	mov	a,r7
      000E38 60 05            [24]  811 	jz	00102$
                                    812 ;	FATFS\src\ff.c:790: return FR_DISK_ERR;
      000E3A 75 82 01         [24]  813 	mov	dpl,#0x01
      000E3D 80 2B            [24]  814 	sjmp	00105$
      000E3F                        815 00102$:
                                    816 ;	FATFS\src\ff.c:791: fs->winsect = sector;
      000E3F E5 00            [12]  817 	mov	a,_bp
      000E41 24 04            [12]  818 	add	a,#0x04
      000E43 F8               [12]  819 	mov	r0,a
      000E44 86 82            [24]  820 	mov	dpl,@r0
      000E46 08               [12]  821 	inc	r0
      000E47 86 83            [24]  822 	mov	dph,@r0
      000E49 08               [12]  823 	inc	r0
      000E4A 86 F0            [24]  824 	mov	b,@r0
      000E4C E5 00            [12]  825 	mov	a,_bp
      000E4E 24 F9            [12]  826 	add	a,#0xf9
      000E50 F9               [12]  827 	mov	r1,a
      000E51 E7               [12]  828 	mov	a,@r1
      000E52 12 00 00         [24]  829 	lcall	__gptrput
      000E55 A3               [24]  830 	inc	dptr
      000E56 09               [12]  831 	inc	r1
      000E57 E7               [12]  832 	mov	a,@r1
      000E58 12 00 00         [24]  833 	lcall	__gptrput
      000E5B A3               [24]  834 	inc	dptr
      000E5C 09               [12]  835 	inc	r1
      000E5D E7               [12]  836 	mov	a,@r1
      000E5E 12 00 00         [24]  837 	lcall	__gptrput
      000E61 A3               [24]  838 	inc	dptr
      000E62 09               [12]  839 	inc	r1
      000E63 E7               [12]  840 	mov	a,@r1
      000E64 12 00 00         [24]  841 	lcall	__gptrput
      000E67                        842 00104$:
                                    843 ;	FATFS\src\ff.c:794: return FR_OK;
      000E67 75 82 00         [24]  844 	mov	dpl,#0x00
      000E6A                        845 00105$:
                                    846 ;	FATFS\src\ff.c:795: }
      000E6A 85 00 81         [24]  847 	mov	sp,_bp
      000E6D D0 00            [24]  848 	pop	_bp
      000E6F 02 00 00         [24]  849 	ljmp	__sdcc_banked_ret
                                    850 ;------------------------------------------------------------
                                    851 ;Allocation info for local variables in function 'clust2sect'
                                    852 ;------------------------------------------------------------
                                    853 ;clst                      Allocated to stack - _bp -7
                                    854 ;fs                        Allocated to stack - _bp +5
                                    855 ;sloc0                     Allocated to stack - _bp +1
                                    856 ;------------------------------------------------------------
                                    857 ;	FATFS\src\ff.c:845: DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
                                    858 ;	-----------------------------------------
                                    859 ;	 function clust2sect
                                    860 ;	-----------------------------------------
      000E72                        861 _clust2sect:
      000E72 C0 00            [24]  862 	push	_bp
      000E74 E5 81            [12]  863 	mov	a,sp
      000E76 F5 00            [12]  864 	mov	_bp,a
      000E78 24 07            [12]  865 	add	a,#0x07
      000E7A F5 81            [12]  866 	mov	sp,a
      000E7C C8               [12]  867 	xch	a,r0
      000E7D E5 00            [12]  868 	mov	a,_bp
      000E7F 24 05            [12]  869 	add	a,#0x05
      000E81 C8               [12]  870 	xch	a,r0
      000E82 A6 82            [24]  871 	mov	@r0,dpl
      000E84 08               [12]  872 	inc	r0
      000E85 A6 83            [24]  873 	mov	@r0,dph
      000E87 08               [12]  874 	inc	r0
      000E88 A6 F0            [24]  875 	mov	@r0,b
                                    876 ;	FATFS\src\ff.c:850: clst -= 2;
      000E8A E5 00            [12]  877 	mov	a,_bp
      000E8C 24 F9            [12]  878 	add	a,#0xf9
      000E8E F8               [12]  879 	mov	r0,a
      000E8F E6               [12]  880 	mov	a,@r0
      000E90 24 FE            [12]  881 	add	a,#0xfe
      000E92 F6               [12]  882 	mov	@r0,a
      000E93 08               [12]  883 	inc	r0
      000E94 E6               [12]  884 	mov	a,@r0
      000E95 34 FF            [12]  885 	addc	a,#0xff
      000E97 F6               [12]  886 	mov	@r0,a
      000E98 08               [12]  887 	inc	r0
      000E99 E6               [12]  888 	mov	a,@r0
      000E9A 34 FF            [12]  889 	addc	a,#0xff
      000E9C F6               [12]  890 	mov	@r0,a
      000E9D 08               [12]  891 	inc	r0
      000E9E E6               [12]  892 	mov	a,@r0
      000E9F 34 FF            [12]  893 	addc	a,#0xff
      000EA1 F6               [12]  894 	mov	@r0,a
                                    895 ;	FATFS\src\ff.c:851: if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
      000EA2 E5 00            [12]  896 	mov	a,_bp
      000EA4 24 05            [12]  897 	add	a,#0x05
      000EA6 F8               [12]  898 	mov	r0,a
      000EA7 74 0A            [12]  899 	mov	a,#0x0a
      000EA9 26               [12]  900 	add	a,@r0
      000EAA FA               [12]  901 	mov	r2,a
      000EAB E4               [12]  902 	clr	a
      000EAC 08               [12]  903 	inc	r0
      000EAD 36               [12]  904 	addc	a,@r0
      000EAE FB               [12]  905 	mov	r3,a
      000EAF 08               [12]  906 	inc	r0
      000EB0 86 04            [24]  907 	mov	ar4,@r0
      000EB2 8A 82            [24]  908 	mov	dpl,r2
      000EB4 8B 83            [24]  909 	mov	dph,r3
      000EB6 8C F0            [24]  910 	mov	b,r4
      000EB8 12 00 00         [24]  911 	lcall	__gptrget
      000EBB FA               [12]  912 	mov	r2,a
      000EBC A3               [24]  913 	inc	dptr
      000EBD 12 00 00         [24]  914 	lcall	__gptrget
      000EC0 FB               [12]  915 	mov	r3,a
      000EC1 A3               [24]  916 	inc	dptr
      000EC2 12 00 00         [24]  917 	lcall	__gptrget
      000EC5 FC               [12]  918 	mov	r4,a
      000EC6 A3               [24]  919 	inc	dptr
      000EC7 12 00 00         [24]  920 	lcall	__gptrget
      000ECA FF               [12]  921 	mov	r7,a
      000ECB EA               [12]  922 	mov	a,r2
      000ECC 24 FE            [12]  923 	add	a,#0xfe
      000ECE FA               [12]  924 	mov	r2,a
      000ECF EB               [12]  925 	mov	a,r3
      000ED0 34 FF            [12]  926 	addc	a,#0xff
      000ED2 FB               [12]  927 	mov	r3,a
      000ED3 EC               [12]  928 	mov	a,r4
      000ED4 34 FF            [12]  929 	addc	a,#0xff
      000ED6 FC               [12]  930 	mov	r4,a
      000ED7 EF               [12]  931 	mov	a,r7
      000ED8 34 FF            [12]  932 	addc	a,#0xff
      000EDA FF               [12]  933 	mov	r7,a
      000EDB E5 00            [12]  934 	mov	a,_bp
      000EDD 24 F9            [12]  935 	add	a,#0xf9
      000EDF F8               [12]  936 	mov	r0,a
      000EE0 C3               [12]  937 	clr	c
      000EE1 E6               [12]  938 	mov	a,@r0
      000EE2 9A               [12]  939 	subb	a,r2
      000EE3 08               [12]  940 	inc	r0
      000EE4 E6               [12]  941 	mov	a,@r0
      000EE5 9B               [12]  942 	subb	a,r3
      000EE6 08               [12]  943 	inc	r0
      000EE7 E6               [12]  944 	mov	a,@r0
      000EE8 9C               [12]  945 	subb	a,r4
      000EE9 08               [12]  946 	inc	r0
      000EEA E6               [12]  947 	mov	a,@r0
      000EEB 9F               [12]  948 	subb	a,r7
      000EEC 40 09            [24]  949 	jc	00102$
      000EEE 90 00 00         [24]  950 	mov	dptr,#(0x00&0x00ff)
      000EF1 E4               [12]  951 	clr	a
      000EF2 F5 F0            [12]  952 	mov	b,a
      000EF4 02 0F 85         [24]  953 	ljmp	00103$
      000EF7                        954 00102$:
                                    955 ;	FATFS\src\ff.c:852: return clst * fs->csize + fs->database;
      000EF7 E5 00            [12]  956 	mov	a,_bp
      000EF9 24 05            [12]  957 	add	a,#0x05
      000EFB F8               [12]  958 	mov	r0,a
      000EFC 74 02            [12]  959 	mov	a,#0x02
      000EFE 26               [12]  960 	add	a,@r0
      000EFF FD               [12]  961 	mov	r5,a
      000F00 E4               [12]  962 	clr	a
      000F01 08               [12]  963 	inc	r0
      000F02 36               [12]  964 	addc	a,@r0
      000F03 FE               [12]  965 	mov	r6,a
      000F04 08               [12]  966 	inc	r0
      000F05 86 07            [24]  967 	mov	ar7,@r0
      000F07 8D 82            [24]  968 	mov	dpl,r5
      000F09 8E 83            [24]  969 	mov	dph,r6
      000F0B 8F F0            [24]  970 	mov	b,r7
      000F0D 12 00 00         [24]  971 	lcall	__gptrget
      000F10 FD               [12]  972 	mov	r5,a
      000F11 7F 00            [12]  973 	mov	r7,#0x00
      000F13 7E 00            [12]  974 	mov	r6,#0x00
      000F15 7C 00            [12]  975 	mov	r4,#0x00
      000F17 C0 05            [24]  976 	push	ar5
      000F19 C0 07            [24]  977 	push	ar7
      000F1B C0 06            [24]  978 	push	ar6
      000F1D C0 04            [24]  979 	push	ar4
      000F1F E5 00            [12]  980 	mov	a,_bp
      000F21 24 F9            [12]  981 	add	a,#0xf9
      000F23 F8               [12]  982 	mov	r0,a
      000F24 86 82            [24]  983 	mov	dpl,@r0
      000F26 08               [12]  984 	inc	r0
      000F27 86 83            [24]  985 	mov	dph,@r0
      000F29 08               [12]  986 	inc	r0
      000F2A 86 F0            [24]  987 	mov	b,@r0
      000F2C 08               [12]  988 	inc	r0
      000F2D E6               [12]  989 	mov	a,@r0
      000F2E 12 00 B5         [24]  990 	lcall	__mullong
      000F31 A8 00            [24]  991 	mov	r0,_bp
      000F33 08               [12]  992 	inc	r0
      000F34 A6 82            [24]  993 	mov	@r0,dpl
      000F36 08               [12]  994 	inc	r0
      000F37 A6 83            [24]  995 	mov	@r0,dph
      000F39 08               [12]  996 	inc	r0
      000F3A A6 F0            [24]  997 	mov	@r0,b
      000F3C 08               [12]  998 	inc	r0
      000F3D F6               [12]  999 	mov	@r0,a
      000F3E E5 81            [12] 1000 	mov	a,sp
      000F40 24 FC            [12] 1001 	add	a,#0xfc
      000F42 F5 81            [12] 1002 	mov	sp,a
      000F44 E5 00            [12] 1003 	mov	a,_bp
      000F46 24 05            [12] 1004 	add	a,#0x05
      000F48 F8               [12] 1005 	mov	r0,a
      000F49 74 1E            [12] 1006 	mov	a,#0x1e
      000F4B 26               [12] 1007 	add	a,@r0
      000F4C FA               [12] 1008 	mov	r2,a
      000F4D E4               [12] 1009 	clr	a
      000F4E 08               [12] 1010 	inc	r0
      000F4F 36               [12] 1011 	addc	a,@r0
      000F50 FB               [12] 1012 	mov	r3,a
      000F51 08               [12] 1013 	inc	r0
      000F52 86 07            [24] 1014 	mov	ar7,@r0
      000F54 8A 82            [24] 1015 	mov	dpl,r2
      000F56 8B 83            [24] 1016 	mov	dph,r3
      000F58 8F F0            [24] 1017 	mov	b,r7
      000F5A 12 00 00         [24] 1018 	lcall	__gptrget
      000F5D FA               [12] 1019 	mov	r2,a
      000F5E A3               [24] 1020 	inc	dptr
      000F5F 12 00 00         [24] 1021 	lcall	__gptrget
      000F62 FB               [12] 1022 	mov	r3,a
      000F63 A3               [24] 1023 	inc	dptr
      000F64 12 00 00         [24] 1024 	lcall	__gptrget
      000F67 FF               [12] 1025 	mov	r7,a
      000F68 A3               [24] 1026 	inc	dptr
      000F69 12 00 00         [24] 1027 	lcall	__gptrget
      000F6C FE               [12] 1028 	mov	r6,a
      000F6D A8 00            [24] 1029 	mov	r0,_bp
      000F6F 08               [12] 1030 	inc	r0
      000F70 EA               [12] 1031 	mov	a,r2
      000F71 26               [12] 1032 	add	a,@r0
      000F72 FA               [12] 1033 	mov	r2,a
      000F73 EB               [12] 1034 	mov	a,r3
      000F74 08               [12] 1035 	inc	r0
      000F75 36               [12] 1036 	addc	a,@r0
      000F76 FB               [12] 1037 	mov	r3,a
      000F77 EF               [12] 1038 	mov	a,r7
      000F78 08               [12] 1039 	inc	r0
      000F79 36               [12] 1040 	addc	a,@r0
      000F7A FF               [12] 1041 	mov	r7,a
      000F7B EE               [12] 1042 	mov	a,r6
      000F7C 08               [12] 1043 	inc	r0
      000F7D 36               [12] 1044 	addc	a,@r0
      000F7E FE               [12] 1045 	mov	r6,a
      000F7F 8A 82            [24] 1046 	mov	dpl,r2
      000F81 8B 83            [24] 1047 	mov	dph,r3
      000F83 8F F0            [24] 1048 	mov	b,r7
      000F85                       1049 00103$:
                                   1050 ;	FATFS\src\ff.c:853: }
      000F85 85 00 81         [24] 1051 	mov	sp,_bp
      000F88 D0 00            [24] 1052 	pop	_bp
      000F8A 02 00 00         [24] 1053 	ljmp	__sdcc_banked_ret
                                   1054 ;------------------------------------------------------------
                                   1055 ;Allocation info for local variables in function 'get_fat'
                                   1056 ;------------------------------------------------------------
                                   1057 ;clst                      Allocated to stack - _bp -7
                                   1058 ;fs                        Allocated to stack - _bp +1
                                   1059 ;wc                        Allocated to registers r6 r7 
                                   1060 ;bc                        Allocated to stack - _bp +15
                                   1061 ;p                         Allocated to stack - _bp +12
                                   1062 ;sloc0                     Allocated to stack - _bp +4
                                   1063 ;sloc1                     Allocated to stack - _bp +8
                                   1064 ;------------------------------------------------------------
                                   1065 ;	FATFS\src\ff.c:863: DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
                                   1066 ;	-----------------------------------------
                                   1067 ;	 function get_fat
                                   1068 ;	-----------------------------------------
      000F8D                       1069 _get_fat:
      000F8D C0 00            [24] 1070 	push	_bp
      000F8F 85 81 00         [24] 1071 	mov	_bp,sp
      000F92 C0 82            [24] 1072 	push	dpl
      000F94 C0 83            [24] 1073 	push	dph
      000F96 C0 F0            [24] 1074 	push	b
      000F98 E5 81            [12] 1075 	mov	a,sp
      000F9A 24 0D            [12] 1076 	add	a,#0x0d
      000F9C F5 81            [12] 1077 	mov	sp,a
                                   1078 ;	FATFS\src\ff.c:872: if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
      000F9E E5 00            [12] 1079 	mov	a,_bp
      000FA0 24 F9            [12] 1080 	add	a,#0xf9
      000FA2 F8               [12] 1081 	mov	r0,a
      000FA3 C3               [12] 1082 	clr	c
      000FA4 E6               [12] 1083 	mov	a,@r0
      000FA5 94 02            [12] 1084 	subb	a,#0x02
      000FA7 08               [12] 1085 	inc	r0
      000FA8 E6               [12] 1086 	mov	a,@r0
      000FA9 94 00            [12] 1087 	subb	a,#0x00
      000FAB 08               [12] 1088 	inc	r0
      000FAC E6               [12] 1089 	mov	a,@r0
      000FAD 94 00            [12] 1090 	subb	a,#0x00
      000FAF 08               [12] 1091 	inc	r0
      000FB0 E6               [12] 1092 	mov	a,@r0
      000FB1 94 00            [12] 1093 	subb	a,#0x00
      000FB3 40 3A            [24] 1094 	jc	00101$
      000FB5 A8 00            [24] 1095 	mov	r0,_bp
      000FB7 08               [12] 1096 	inc	r0
      000FB8 74 0A            [12] 1097 	mov	a,#0x0a
      000FBA 26               [12] 1098 	add	a,@r0
      000FBB FA               [12] 1099 	mov	r2,a
      000FBC E4               [12] 1100 	clr	a
      000FBD 08               [12] 1101 	inc	r0
      000FBE 36               [12] 1102 	addc	a,@r0
      000FBF FB               [12] 1103 	mov	r3,a
      000FC0 08               [12] 1104 	inc	r0
      000FC1 86 04            [24] 1105 	mov	ar4,@r0
      000FC3 8A 82            [24] 1106 	mov	dpl,r2
      000FC5 8B 83            [24] 1107 	mov	dph,r3
      000FC7 8C F0            [24] 1108 	mov	b,r4
      000FC9 12 00 00         [24] 1109 	lcall	__gptrget
      000FCC FA               [12] 1110 	mov	r2,a
      000FCD A3               [24] 1111 	inc	dptr
      000FCE 12 00 00         [24] 1112 	lcall	__gptrget
      000FD1 FB               [12] 1113 	mov	r3,a
      000FD2 A3               [24] 1114 	inc	dptr
      000FD3 12 00 00         [24] 1115 	lcall	__gptrget
      000FD6 FC               [12] 1116 	mov	r4,a
      000FD7 A3               [24] 1117 	inc	dptr
      000FD8 12 00 00         [24] 1118 	lcall	__gptrget
      000FDB FF               [12] 1119 	mov	r7,a
      000FDC E5 00            [12] 1120 	mov	a,_bp
      000FDE 24 F9            [12] 1121 	add	a,#0xf9
      000FE0 F8               [12] 1122 	mov	r0,a
      000FE1 C3               [12] 1123 	clr	c
      000FE2 E6               [12] 1124 	mov	a,@r0
      000FE3 9A               [12] 1125 	subb	a,r2
      000FE4 08               [12] 1126 	inc	r0
      000FE5 E6               [12] 1127 	mov	a,@r0
      000FE6 9B               [12] 1128 	subb	a,r3
      000FE7 08               [12] 1129 	inc	r0
      000FE8 E6               [12] 1130 	mov	a,@r0
      000FE9 9C               [12] 1131 	subb	a,r4
      000FEA 08               [12] 1132 	inc	r0
      000FEB E6               [12] 1133 	mov	a,@r0
      000FEC 9F               [12] 1134 	subb	a,r7
      000FED 40 09            [24] 1135 	jc	00102$
      000FEF                       1136 00101$:
                                   1137 ;	FATFS\src\ff.c:873: return 1;
      000FEF 90 00 01         [24] 1138 	mov	dptr,#(0x01&0x00ff)
      000FF2 E4               [12] 1139 	clr	a
      000FF3 F5 F0            [12] 1140 	mov	b,a
      000FF5 02 14 8D         [24] 1141 	ljmp	00117$
      000FF8                       1142 00102$:
                                   1143 ;	FATFS\src\ff.c:875: switch (fs->fs_type) {
      000FF8 A8 00            [24] 1144 	mov	r0,_bp
      000FFA 08               [12] 1145 	inc	r0
      000FFB 86 82            [24] 1146 	mov	dpl,@r0
      000FFD 08               [12] 1147 	inc	r0
      000FFE 86 83            [24] 1148 	mov	dph,@r0
      001000 08               [12] 1149 	inc	r0
      001001 86 F0            [24] 1150 	mov	b,@r0
      001003 12 00 00         [24] 1151 	lcall	__gptrget
      001006 FC               [12] 1152 	mov	r4,a
      001007 BC 01 02         [24] 1153 	cjne	r4,#0x01,00168$
      00100A 80 0F            [24] 1154 	sjmp	00104$
      00100C                       1155 00168$:
      00100C BC 02 03         [24] 1156 	cjne	r4,#0x02,00169$
      00100F 02 11 DC         [24] 1157 	ljmp	00109$
      001012                       1158 00169$:
      001012 BC 03 03         [24] 1159 	cjne	r4,#0x03,00170$
      001015 02 12 C8         [24] 1160 	ljmp	00112$
      001018                       1161 00170$:
      001018 02 14 7E         [24] 1162 	ljmp	00115$
                                   1163 ;	FATFS\src\ff.c:876: case FS_FAT12 :
      00101B                       1164 00104$:
                                   1165 ;	FATFS\src\ff.c:877: bc = (UINT)clst; bc += bc / 2;
      00101B E5 00            [12] 1166 	mov	a,_bp
      00101D 24 F9            [12] 1167 	add	a,#0xf9
      00101F F8               [12] 1168 	mov	r0,a
      001020 86 03            [24] 1169 	mov	ar3,@r0
      001022 08               [12] 1170 	inc	r0
      001023 86 04            [24] 1171 	mov	ar4,@r0
      001025 8B 02            [24] 1172 	mov	ar2,r3
      001027 EC               [12] 1173 	mov	a,r4
      001028 C3               [12] 1174 	clr	c
      001029 13               [12] 1175 	rrc	a
      00102A CA               [12] 1176 	xch	a,r2
      00102B 13               [12] 1177 	rrc	a
      00102C CA               [12] 1178 	xch	a,r2
      00102D FF               [12] 1179 	mov	r7,a
      00102E EA               [12] 1180 	mov	a,r2
      00102F 2B               [12] 1181 	add	a,r3
      001030 FA               [12] 1182 	mov	r2,a
      001031 EF               [12] 1183 	mov	a,r7
      001032 3C               [12] 1184 	addc	a,r4
      001033 FF               [12] 1185 	mov	r7,a
      001034 E5 00            [12] 1186 	mov	a,_bp
      001036 24 0F            [12] 1187 	add	a,#0x0f
      001038 F8               [12] 1188 	mov	r0,a
      001039 A6 02            [24] 1189 	mov	@r0,ar2
      00103B 08               [12] 1190 	inc	r0
      00103C A6 07            [24] 1191 	mov	@r0,ar7
                                   1192 ;	FATFS\src\ff.c:878: if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
      00103E A8 00            [24] 1193 	mov	r0,_bp
      001040 08               [12] 1194 	inc	r0
      001041 74 16            [12] 1195 	mov	a,#0x16
      001043 26               [12] 1196 	add	a,@r0
      001044 FB               [12] 1197 	mov	r3,a
      001045 E4               [12] 1198 	clr	a
      001046 08               [12] 1199 	inc	r0
      001047 36               [12] 1200 	addc	a,@r0
      001048 FC               [12] 1201 	mov	r4,a
      001049 08               [12] 1202 	inc	r0
      00104A 86 05            [24] 1203 	mov	ar5,@r0
      00104C 8B 82            [24] 1204 	mov	dpl,r3
      00104E 8C 83            [24] 1205 	mov	dph,r4
      001050 8D F0            [24] 1206 	mov	b,r5
      001052 E5 00            [12] 1207 	mov	a,_bp
      001054 24 04            [12] 1208 	add	a,#0x04
      001056 F8               [12] 1209 	mov	r0,a
      001057 12 00 00         [24] 1210 	lcall	__gptrget
      00105A F6               [12] 1211 	mov	@r0,a
      00105B A3               [24] 1212 	inc	dptr
      00105C 12 00 00         [24] 1213 	lcall	__gptrget
      00105F 08               [12] 1214 	inc	r0
      001060 F6               [12] 1215 	mov	@r0,a
      001061 A3               [24] 1216 	inc	dptr
      001062 12 00 00         [24] 1217 	lcall	__gptrget
      001065 08               [12] 1218 	inc	r0
      001066 F6               [12] 1219 	mov	@r0,a
      001067 A3               [24] 1220 	inc	dptr
      001068 12 00 00         [24] 1221 	lcall	__gptrget
      00106B 08               [12] 1222 	inc	r0
      00106C F6               [12] 1223 	mov	@r0,a
      00106D E5 00            [12] 1224 	mov	a,_bp
      00106F 24 0F            [12] 1225 	add	a,#0x0f
      001071 F8               [12] 1226 	mov	r0,a
      001072 08               [12] 1227 	inc	r0
      001073 E6               [12] 1228 	mov	a,@r0
      001074 C3               [12] 1229 	clr	c
      001075 13               [12] 1230 	rrc	a
      001076 FE               [12] 1231 	mov	r6,a
      001077 7F 00            [12] 1232 	mov	r7,#0x00
      001079 8E 04            [24] 1233 	mov	ar4,r6
      00107B 8F 05            [24] 1234 	mov	ar5,r7
      00107D E4               [12] 1235 	clr	a
      00107E FE               [12] 1236 	mov	r6,a
      00107F FF               [12] 1237 	mov	r7,a
      001080 E5 00            [12] 1238 	mov	a,_bp
      001082 24 04            [12] 1239 	add	a,#0x04
      001084 F8               [12] 1240 	mov	r0,a
      001085 EC               [12] 1241 	mov	a,r4
      001086 26               [12] 1242 	add	a,@r0
      001087 FC               [12] 1243 	mov	r4,a
      001088 ED               [12] 1244 	mov	a,r5
      001089 08               [12] 1245 	inc	r0
      00108A 36               [12] 1246 	addc	a,@r0
      00108B FD               [12] 1247 	mov	r5,a
      00108C EE               [12] 1248 	mov	a,r6
      00108D 08               [12] 1249 	inc	r0
      00108E 36               [12] 1250 	addc	a,@r0
      00108F FE               [12] 1251 	mov	r6,a
      001090 EF               [12] 1252 	mov	a,r7
      001091 08               [12] 1253 	inc	r0
      001092 36               [12] 1254 	addc	a,@r0
      001093 FF               [12] 1255 	mov	r7,a
      001094 C0 04            [24] 1256 	push	ar4
      001096 C0 05            [24] 1257 	push	ar5
      001098 C0 06            [24] 1258 	push	ar6
      00109A C0 07            [24] 1259 	push	ar7
      00109C A8 00            [24] 1260 	mov	r0,_bp
      00109E 08               [12] 1261 	inc	r0
      00109F 86 82            [24] 1262 	mov	dpl,@r0
      0010A1 08               [12] 1263 	inc	r0
      0010A2 86 83            [24] 1264 	mov	dph,@r0
      0010A4 08               [12] 1265 	inc	r0
      0010A5 86 F0            [24] 1266 	mov	b,@r0
      0010A7 78 7C            [12] 1267 	mov	r0,#_move_window
      0010A9 79 0D            [12] 1268 	mov	r1,#(_move_window >> 8)
      0010AB 7A 00            [12] 1269 	mov	r2,#(_move_window >> 16)
      0010AD 12 00 00         [24] 1270 	lcall	__sdcc_banked_call
      0010B0 AF 82            [24] 1271 	mov	r7,dpl
      0010B2 E5 81            [12] 1272 	mov	a,sp
      0010B4 24 FC            [12] 1273 	add	a,#0xfc
      0010B6 F5 81            [12] 1274 	mov	sp,a
      0010B8 EF               [12] 1275 	mov	a,r7
      0010B9 60 03            [24] 1276 	jz	00171$
      0010BB 02 14 86         [24] 1277 	ljmp	00116$
      0010BE                       1278 00171$:
                                   1279 ;	FATFS\src\ff.c:879: wc = fs->win[bc % SS(fs)]; bc++;
      0010BE A8 00            [24] 1280 	mov	r0,_bp
      0010C0 08               [12] 1281 	inc	r0
      0010C1 74 26            [12] 1282 	mov	a,#0x26
      0010C3 26               [12] 1283 	add	a,@r0
      0010C4 FD               [12] 1284 	mov	r5,a
      0010C5 E4               [12] 1285 	clr	a
      0010C6 08               [12] 1286 	inc	r0
      0010C7 36               [12] 1287 	addc	a,@r0
      0010C8 FE               [12] 1288 	mov	r6,a
      0010C9 08               [12] 1289 	inc	r0
      0010CA 86 07            [24] 1290 	mov	ar7,@r0
      0010CC E5 00            [12] 1291 	mov	a,_bp
      0010CE 24 0F            [12] 1292 	add	a,#0x0f
      0010D0 F8               [12] 1293 	mov	r0,a
      0010D1 86 03            [24] 1294 	mov	ar3,@r0
      0010D3 74 01            [12] 1295 	mov	a,#0x01
      0010D5 08               [12] 1296 	inc	r0
      0010D6 56               [12] 1297 	anl	a,@r0
      0010D7 FC               [12] 1298 	mov	r4,a
      0010D8 EB               [12] 1299 	mov	a,r3
      0010D9 2D               [12] 1300 	add	a,r5
      0010DA FD               [12] 1301 	mov	r5,a
      0010DB EC               [12] 1302 	mov	a,r4
      0010DC 3E               [12] 1303 	addc	a,r6
      0010DD FE               [12] 1304 	mov	r6,a
      0010DE 8D 82            [24] 1305 	mov	dpl,r5
      0010E0 8E 83            [24] 1306 	mov	dph,r6
      0010E2 8F F0            [24] 1307 	mov	b,r7
      0010E4 12 00 00         [24] 1308 	lcall	__gptrget
      0010E7 FD               [12] 1309 	mov	r5,a
      0010E8 E5 00            [12] 1310 	mov	a,_bp
      0010EA 24 04            [12] 1311 	add	a,#0x04
      0010EC F8               [12] 1312 	mov	r0,a
      0010ED A6 05            [24] 1313 	mov	@r0,ar5
      0010EF 08               [12] 1314 	inc	r0
      0010F0 76 00            [12] 1315 	mov	@r0,#0x00
      0010F2 E5 00            [12] 1316 	mov	a,_bp
      0010F4 24 0F            [12] 1317 	add	a,#0x0f
      0010F6 F8               [12] 1318 	mov	r0,a
      0010F7 74 01            [12] 1319 	mov	a,#0x01
      0010F9 26               [12] 1320 	add	a,@r0
      0010FA FC               [12] 1321 	mov	r4,a
      0010FB E4               [12] 1322 	clr	a
      0010FC 08               [12] 1323 	inc	r0
      0010FD 36               [12] 1324 	addc	a,@r0
      0010FE FE               [12] 1325 	mov	r6,a
                                   1326 ;	FATFS\src\ff.c:880: if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
      0010FF A8 00            [24] 1327 	mov	r0,_bp
      001101 08               [12] 1328 	inc	r0
      001102 74 16            [12] 1329 	mov	a,#0x16
      001104 26               [12] 1330 	add	a,@r0
      001105 FA               [12] 1331 	mov	r2,a
      001106 E4               [12] 1332 	clr	a
      001107 08               [12] 1333 	inc	r0
      001108 36               [12] 1334 	addc	a,@r0
      001109 FB               [12] 1335 	mov	r3,a
      00110A 08               [12] 1336 	inc	r0
      00110B 86 07            [24] 1337 	mov	ar7,@r0
      00110D 8A 82            [24] 1338 	mov	dpl,r2
      00110F 8B 83            [24] 1339 	mov	dph,r3
      001111 8F F0            [24] 1340 	mov	b,r7
      001113 E5 00            [12] 1341 	mov	a,_bp
      001115 24 08            [12] 1342 	add	a,#0x08
      001117 F8               [12] 1343 	mov	r0,a
      001118 12 00 00         [24] 1344 	lcall	__gptrget
      00111B F6               [12] 1345 	mov	@r0,a
      00111C A3               [24] 1346 	inc	dptr
      00111D 12 00 00         [24] 1347 	lcall	__gptrget
      001120 08               [12] 1348 	inc	r0
      001121 F6               [12] 1349 	mov	@r0,a
      001122 A3               [24] 1350 	inc	dptr
      001123 12 00 00         [24] 1351 	lcall	__gptrget
      001126 08               [12] 1352 	inc	r0
      001127 F6               [12] 1353 	mov	@r0,a
      001128 A3               [24] 1354 	inc	dptr
      001129 12 00 00         [24] 1355 	lcall	__gptrget
      00112C 08               [12] 1356 	inc	r0
      00112D F6               [12] 1357 	mov	@r0,a
      00112E EE               [12] 1358 	mov	a,r6
      00112F C3               [12] 1359 	clr	c
      001130 13               [12] 1360 	rrc	a
      001131 FD               [12] 1361 	mov	r5,a
      001132 E4               [12] 1362 	clr	a
      001133 FF               [12] 1363 	mov	r7,a
      001134 FB               [12] 1364 	mov	r3,a
      001135 FA               [12] 1365 	mov	r2,a
      001136 E5 00            [12] 1366 	mov	a,_bp
      001138 24 08            [12] 1367 	add	a,#0x08
      00113A F8               [12] 1368 	mov	r0,a
      00113B ED               [12] 1369 	mov	a,r5
      00113C 26               [12] 1370 	add	a,@r0
      00113D FD               [12] 1371 	mov	r5,a
      00113E EF               [12] 1372 	mov	a,r7
      00113F 08               [12] 1373 	inc	r0
      001140 36               [12] 1374 	addc	a,@r0
      001141 FF               [12] 1375 	mov	r7,a
      001142 EB               [12] 1376 	mov	a,r3
      001143 08               [12] 1377 	inc	r0
      001144 36               [12] 1378 	addc	a,@r0
      001145 FB               [12] 1379 	mov	r3,a
      001146 EA               [12] 1380 	mov	a,r2
      001147 08               [12] 1381 	inc	r0
      001148 36               [12] 1382 	addc	a,@r0
      001149 FA               [12] 1383 	mov	r2,a
      00114A C0 06            [24] 1384 	push	ar6
      00114C C0 04            [24] 1385 	push	ar4
      00114E C0 05            [24] 1386 	push	ar5
      001150 C0 07            [24] 1387 	push	ar7
      001152 C0 03            [24] 1388 	push	ar3
      001154 C0 02            [24] 1389 	push	ar2
      001156 A8 00            [24] 1390 	mov	r0,_bp
      001158 08               [12] 1391 	inc	r0
      001159 86 82            [24] 1392 	mov	dpl,@r0
      00115B 08               [12] 1393 	inc	r0
      00115C 86 83            [24] 1394 	mov	dph,@r0
      00115E 08               [12] 1395 	inc	r0
      00115F 86 F0            [24] 1396 	mov	b,@r0
      001161 78 7C            [12] 1397 	mov	r0,#_move_window
      001163 79 0D            [12] 1398 	mov	r1,#(_move_window >> 8)
      001165 7A 00            [12] 1399 	mov	r2,#(_move_window >> 16)
      001167 12 00 00         [24] 1400 	lcall	__sdcc_banked_call
      00116A AF 82            [24] 1401 	mov	r7,dpl
      00116C E5 81            [12] 1402 	mov	a,sp
      00116E 24 FC            [12] 1403 	add	a,#0xfc
      001170 F5 81            [12] 1404 	mov	sp,a
      001172 D0 04            [24] 1405 	pop	ar4
      001174 D0 06            [24] 1406 	pop	ar6
      001176 EF               [12] 1407 	mov	a,r7
      001177 60 03            [24] 1408 	jz	00172$
      001179 02 14 86         [24] 1409 	ljmp	00116$
      00117C                       1410 00172$:
                                   1411 ;	FATFS\src\ff.c:881: wc |= fs->win[bc % SS(fs)] << 8;
      00117C A8 00            [24] 1412 	mov	r0,_bp
      00117E 08               [12] 1413 	inc	r0
      00117F 74 26            [12] 1414 	mov	a,#0x26
      001181 26               [12] 1415 	add	a,@r0
      001182 FB               [12] 1416 	mov	r3,a
      001183 E4               [12] 1417 	clr	a
      001184 08               [12] 1418 	inc	r0
      001185 36               [12] 1419 	addc	a,@r0
      001186 FD               [12] 1420 	mov	r5,a
      001187 08               [12] 1421 	inc	r0
      001188 86 07            [24] 1422 	mov	ar7,@r0
      00118A 53 06 01         [24] 1423 	anl	ar6,#0x01
      00118D EC               [12] 1424 	mov	a,r4
      00118E 2B               [12] 1425 	add	a,r3
      00118F FB               [12] 1426 	mov	r3,a
      001190 EE               [12] 1427 	mov	a,r6
      001191 3D               [12] 1428 	addc	a,r5
      001192 FD               [12] 1429 	mov	r5,a
      001193 8B 82            [24] 1430 	mov	dpl,r3
      001195 8D 83            [24] 1431 	mov	dph,r5
      001197 8F F0            [24] 1432 	mov	b,r7
      001199 12 00 00         [24] 1433 	lcall	__gptrget
      00119C FF               [12] 1434 	mov	r7,a
      00119D 7B 00            [12] 1435 	mov	r3,#0x00
      00119F E5 00            [12] 1436 	mov	a,_bp
      0011A1 24 04            [12] 1437 	add	a,#0x04
      0011A3 F8               [12] 1438 	mov	r0,a
      0011A4 E6               [12] 1439 	mov	a,@r0
      0011A5 42 03            [12] 1440 	orl	ar3,a
      0011A7 08               [12] 1441 	inc	r0
      0011A8 E6               [12] 1442 	mov	a,@r0
      0011A9 42 07            [12] 1443 	orl	ar7,a
      0011AB 8B 06            [24] 1444 	mov	ar6,r3
                                   1445 ;	FATFS\src\ff.c:882: return clst & 1 ? wc >> 4 : (wc & 0xFFF);
      0011AD E5 00            [12] 1446 	mov	a,_bp
      0011AF 24 F9            [12] 1447 	add	a,#0xf9
      0011B1 F8               [12] 1448 	mov	r0,a
      0011B2 E6               [12] 1449 	mov	a,@r0
      0011B3 30 E0 12         [24] 1450 	jnb	acc.0,00119$
      0011B6 8E 04            [24] 1451 	mov	ar4,r6
      0011B8 EF               [12] 1452 	mov	a,r7
      0011B9 C4               [12] 1453 	swap	a
      0011BA CC               [12] 1454 	xch	a,r4
      0011BB C4               [12] 1455 	swap	a
      0011BC 54 0F            [12] 1456 	anl	a,#0x0f
      0011BE 6C               [12] 1457 	xrl	a,r4
      0011BF CC               [12] 1458 	xch	a,r4
      0011C0 54 0F            [12] 1459 	anl	a,#0x0f
      0011C2 CC               [12] 1460 	xch	a,r4
      0011C3 6C               [12] 1461 	xrl	a,r4
      0011C4 CC               [12] 1462 	xch	a,r4
      0011C5 FD               [12] 1463 	mov	r5,a
      0011C6 80 06            [24] 1464 	sjmp	00120$
      0011C8                       1465 00119$:
      0011C8 8E 04            [24] 1466 	mov	ar4,r6
      0011CA 74 0F            [12] 1467 	mov	a,#0x0f
      0011CC 5F               [12] 1468 	anl	a,r7
      0011CD FD               [12] 1469 	mov	r5,a
      0011CE                       1470 00120$:
      0011CE 7F 00            [12] 1471 	mov	r7,#0x00
      0011D0 7E 00            [12] 1472 	mov	r6,#0x00
      0011D2 8C 82            [24] 1473 	mov	dpl,r4
      0011D4 8D 83            [24] 1474 	mov	dph,r5
      0011D6 8F F0            [24] 1475 	mov	b,r7
      0011D8 EE               [12] 1476 	mov	a,r6
      0011D9 02 14 8D         [24] 1477 	ljmp	00117$
                                   1478 ;	FATFS\src\ff.c:884: case FS_FAT16 :
      0011DC                       1479 00109$:
                                   1480 ;	FATFS\src\ff.c:885: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
      0011DC A8 00            [24] 1481 	mov	r0,_bp
      0011DE 08               [12] 1482 	inc	r0
      0011DF 74 16            [12] 1483 	mov	a,#0x16
      0011E1 26               [12] 1484 	add	a,@r0
      0011E2 FD               [12] 1485 	mov	r5,a
      0011E3 E4               [12] 1486 	clr	a
      0011E4 08               [12] 1487 	inc	r0
      0011E5 36               [12] 1488 	addc	a,@r0
      0011E6 FE               [12] 1489 	mov	r6,a
      0011E7 08               [12] 1490 	inc	r0
      0011E8 86 07            [24] 1491 	mov	ar7,@r0
      0011EA 8D 82            [24] 1492 	mov	dpl,r5
      0011EC 8E 83            [24] 1493 	mov	dph,r6
      0011EE 8F F0            [24] 1494 	mov	b,r7
      0011F0 E5 00            [12] 1495 	mov	a,_bp
      0011F2 24 08            [12] 1496 	add	a,#0x08
      0011F4 F8               [12] 1497 	mov	r0,a
      0011F5 12 00 00         [24] 1498 	lcall	__gptrget
      0011F8 F6               [12] 1499 	mov	@r0,a
      0011F9 A3               [24] 1500 	inc	dptr
      0011FA 12 00 00         [24] 1501 	lcall	__gptrget
      0011FD 08               [12] 1502 	inc	r0
      0011FE F6               [12] 1503 	mov	@r0,a
      0011FF A3               [24] 1504 	inc	dptr
      001200 12 00 00         [24] 1505 	lcall	__gptrget
      001203 08               [12] 1506 	inc	r0
      001204 F6               [12] 1507 	mov	@r0,a
      001205 A3               [24] 1508 	inc	dptr
      001206 12 00 00         [24] 1509 	lcall	__gptrget
      001209 08               [12] 1510 	inc	r0
      00120A F6               [12] 1511 	mov	@r0,a
      00120B E5 00            [12] 1512 	mov	a,_bp
      00120D 24 F9            [12] 1513 	add	a,#0xf9
      00120F F8               [12] 1514 	mov	r0,a
      001210 08               [12] 1515 	inc	r0
      001211 86 02            [24] 1516 	mov	ar2,@r0
      001213 08               [12] 1517 	inc	r0
      001214 86 03            [24] 1518 	mov	ar3,@r0
      001216 08               [12] 1519 	inc	r0
      001217 86 06            [24] 1520 	mov	ar6,@r0
      001219 7F 00            [12] 1521 	mov	r7,#0x00
      00121B E5 00            [12] 1522 	mov	a,_bp
      00121D 24 08            [12] 1523 	add	a,#0x08
      00121F F8               [12] 1524 	mov	r0,a
      001220 EA               [12] 1525 	mov	a,r2
      001221 26               [12] 1526 	add	a,@r0
      001222 FA               [12] 1527 	mov	r2,a
      001223 EB               [12] 1528 	mov	a,r3
      001224 08               [12] 1529 	inc	r0
      001225 36               [12] 1530 	addc	a,@r0
      001226 FB               [12] 1531 	mov	r3,a
      001227 EE               [12] 1532 	mov	a,r6
      001228 08               [12] 1533 	inc	r0
      001229 36               [12] 1534 	addc	a,@r0
      00122A FE               [12] 1535 	mov	r6,a
      00122B EF               [12] 1536 	mov	a,r7
      00122C 08               [12] 1537 	inc	r0
      00122D 36               [12] 1538 	addc	a,@r0
      00122E FF               [12] 1539 	mov	r7,a
      00122F C0 02            [24] 1540 	push	ar2
      001231 C0 03            [24] 1541 	push	ar3
      001233 C0 06            [24] 1542 	push	ar6
      001235 C0 07            [24] 1543 	push	ar7
      001237 A8 00            [24] 1544 	mov	r0,_bp
      001239 08               [12] 1545 	inc	r0
      00123A 86 82            [24] 1546 	mov	dpl,@r0
      00123C 08               [12] 1547 	inc	r0
      00123D 86 83            [24] 1548 	mov	dph,@r0
      00123F 08               [12] 1549 	inc	r0
      001240 86 F0            [24] 1550 	mov	b,@r0
      001242 78 7C            [12] 1551 	mov	r0,#_move_window
      001244 79 0D            [12] 1552 	mov	r1,#(_move_window >> 8)
      001246 7A 00            [12] 1553 	mov	r2,#(_move_window >> 16)
      001248 12 00 00         [24] 1554 	lcall	__sdcc_banked_call
      00124B AF 82            [24] 1555 	mov	r7,dpl
      00124D E5 81            [12] 1556 	mov	a,sp
      00124F 24 FC            [12] 1557 	add	a,#0xfc
      001251 F5 81            [12] 1558 	mov	sp,a
      001253 EF               [12] 1559 	mov	a,r7
      001254 60 03            [24] 1560 	jz	00174$
      001256 02 14 86         [24] 1561 	ljmp	00116$
      001259                       1562 00174$:
                                   1563 ;	FATFS\src\ff.c:886: p = &fs->win[clst * 2 % SS(fs)];
      001259 A8 00            [24] 1564 	mov	r0,_bp
      00125B 08               [12] 1565 	inc	r0
      00125C E5 00            [12] 1566 	mov	a,_bp
      00125E 24 08            [12] 1567 	add	a,#0x08
      001260 F9               [12] 1568 	mov	r1,a
      001261 74 26            [12] 1569 	mov	a,#0x26
      001263 26               [12] 1570 	add	a,@r0
      001264 F7               [12] 1571 	mov	@r1,a
      001265 E4               [12] 1572 	clr	a
      001266 08               [12] 1573 	inc	r0
      001267 36               [12] 1574 	addc	a,@r0
      001268 09               [12] 1575 	inc	r1
      001269 F7               [12] 1576 	mov	@r1,a
      00126A 08               [12] 1577 	inc	r0
      00126B 09               [12] 1578 	inc	r1
      00126C E6               [12] 1579 	mov	a,@r0
      00126D F7               [12] 1580 	mov	@r1,a
      00126E E5 00            [12] 1581 	mov	a,_bp
      001270 24 F9            [12] 1582 	add	a,#0xf9
      001272 F8               [12] 1583 	mov	r0,a
      001273 E6               [12] 1584 	mov	a,@r0
      001274 25 E0            [12] 1585 	add	a,acc
      001276 FA               [12] 1586 	mov	r2,a
      001277 08               [12] 1587 	inc	r0
      001278 E6               [12] 1588 	mov	a,@r0
      001279 33               [12] 1589 	rlc	a
      00127A FB               [12] 1590 	mov	r3,a
      00127B 08               [12] 1591 	inc	r0
      00127C E6               [12] 1592 	mov	a,@r0
      00127D 33               [12] 1593 	rlc	a
      00127E 08               [12] 1594 	inc	r0
      00127F E6               [12] 1595 	mov	a,@r0
      001280 33               [12] 1596 	rlc	a
      001281 53 03 01         [24] 1597 	anl	ar3,#0x01
      001284 E4               [12] 1598 	clr	a
      001285 E5 00            [12] 1599 	mov	a,_bp
      001287 24 08            [12] 1600 	add	a,#0x08
      001289 F8               [12] 1601 	mov	r0,a
      00128A EA               [12] 1602 	mov	a,r2
      00128B 26               [12] 1603 	add	a,@r0
      00128C FA               [12] 1604 	mov	r2,a
      00128D EB               [12] 1605 	mov	a,r3
      00128E 08               [12] 1606 	inc	r0
      00128F 36               [12] 1607 	addc	a,@r0
      001290 FB               [12] 1608 	mov	r3,a
      001291 08               [12] 1609 	inc	r0
      001292 86 04            [24] 1610 	mov	ar4,@r0
                                   1611 ;	FATFS\src\ff.c:887: return LD_WORD(p);
      001294 74 01            [12] 1612 	mov	a,#0x01
      001296 2A               [12] 1613 	add	a,r2
      001297 FD               [12] 1614 	mov	r5,a
      001298 E4               [12] 1615 	clr	a
      001299 3B               [12] 1616 	addc	a,r3
      00129A FE               [12] 1617 	mov	r6,a
      00129B 8C 07            [24] 1618 	mov	ar7,r4
      00129D 8D 82            [24] 1619 	mov	dpl,r5
      00129F 8E 83            [24] 1620 	mov	dph,r6
      0012A1 8F F0            [24] 1621 	mov	b,r7
      0012A3 12 00 00         [24] 1622 	lcall	__gptrget
      0012A6 FF               [12] 1623 	mov	r7,a
      0012A7 7D 00            [12] 1624 	mov	r5,#0x00
      0012A9 8A 82            [24] 1625 	mov	dpl,r2
      0012AB 8B 83            [24] 1626 	mov	dph,r3
      0012AD 8C F0            [24] 1627 	mov	b,r4
      0012AF 12 00 00         [24] 1628 	lcall	__gptrget
      0012B2 FA               [12] 1629 	mov	r2,a
      0012B3 7E 00            [12] 1630 	mov	r6,#0x00
      0012B5 42 05            [12] 1631 	orl	ar5,a
      0012B7 EE               [12] 1632 	mov	a,r6
      0012B8 42 07            [12] 1633 	orl	ar7,a
      0012BA 7E 00            [12] 1634 	mov	r6,#0x00
      0012BC 7C 00            [12] 1635 	mov	r4,#0x00
      0012BE 8D 82            [24] 1636 	mov	dpl,r5
      0012C0 8F 83            [24] 1637 	mov	dph,r7
      0012C2 8E F0            [24] 1638 	mov	b,r6
      0012C4 EC               [12] 1639 	mov	a,r4
      0012C5 02 14 8D         [24] 1640 	ljmp	00117$
                                   1641 ;	FATFS\src\ff.c:889: case FS_FAT32 :
      0012C8                       1642 00112$:
                                   1643 ;	FATFS\src\ff.c:890: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
      0012C8 A8 00            [24] 1644 	mov	r0,_bp
      0012CA 08               [12] 1645 	inc	r0
      0012CB 74 16            [12] 1646 	mov	a,#0x16
      0012CD 26               [12] 1647 	add	a,@r0
      0012CE FD               [12] 1648 	mov	r5,a
      0012CF E4               [12] 1649 	clr	a
      0012D0 08               [12] 1650 	inc	r0
      0012D1 36               [12] 1651 	addc	a,@r0
      0012D2 FE               [12] 1652 	mov	r6,a
      0012D3 08               [12] 1653 	inc	r0
      0012D4 86 07            [24] 1654 	mov	ar7,@r0
      0012D6 8D 82            [24] 1655 	mov	dpl,r5
      0012D8 8E 83            [24] 1656 	mov	dph,r6
      0012DA 8F F0            [24] 1657 	mov	b,r7
      0012DC E5 00            [12] 1658 	mov	a,_bp
      0012DE 24 08            [12] 1659 	add	a,#0x08
      0012E0 F8               [12] 1660 	mov	r0,a
      0012E1 12 00 00         [24] 1661 	lcall	__gptrget
      0012E4 F6               [12] 1662 	mov	@r0,a
      0012E5 A3               [24] 1663 	inc	dptr
      0012E6 12 00 00         [24] 1664 	lcall	__gptrget
      0012E9 08               [12] 1665 	inc	r0
      0012EA F6               [12] 1666 	mov	@r0,a
      0012EB A3               [24] 1667 	inc	dptr
      0012EC 12 00 00         [24] 1668 	lcall	__gptrget
      0012EF 08               [12] 1669 	inc	r0
      0012F0 F6               [12] 1670 	mov	@r0,a
      0012F1 A3               [24] 1671 	inc	dptr
      0012F2 12 00 00         [24] 1672 	lcall	__gptrget
      0012F5 08               [12] 1673 	inc	r0
      0012F6 F6               [12] 1674 	mov	@r0,a
      0012F7 E5 00            [12] 1675 	mov	a,_bp
      0012F9 24 F9            [12] 1676 	add	a,#0xf9
      0012FB F8               [12] 1677 	mov	r0,a
      0012FC 86 02            [24] 1678 	mov	ar2,@r0
      0012FE 08               [12] 1679 	inc	r0
      0012FF E6               [12] 1680 	mov	a,@r0
      001300 A2 E7            [12] 1681 	mov	c,acc.7
      001302 CA               [12] 1682 	xch	a,r2
      001303 33               [12] 1683 	rlc	a
      001304 CA               [12] 1684 	xch	a,r2
      001305 33               [12] 1685 	rlc	a
      001306 CA               [12] 1686 	xch	a,r2
      001307 54 01            [12] 1687 	anl	a,#0x01
      001309 FB               [12] 1688 	mov	r3,a
      00130A 08               [12] 1689 	inc	r0
      00130B E6               [12] 1690 	mov	a,@r0
      00130C 25 E0            [12] 1691 	add	a,acc
      00130E 4B               [12] 1692 	orl	a,r3
      00130F FB               [12] 1693 	mov	r3,a
      001310 86 06            [24] 1694 	mov	ar6,@r0
      001312 08               [12] 1695 	inc	r0
      001313 E6               [12] 1696 	mov	a,@r0
      001314 A2 E7            [12] 1697 	mov	c,acc.7
      001316 CE               [12] 1698 	xch	a,r6
      001317 33               [12] 1699 	rlc	a
      001318 CE               [12] 1700 	xch	a,r6
      001319 33               [12] 1701 	rlc	a
      00131A CE               [12] 1702 	xch	a,r6
      00131B 54 01            [12] 1703 	anl	a,#0x01
      00131D FF               [12] 1704 	mov	r7,a
      00131E E5 00            [12] 1705 	mov	a,_bp
      001320 24 08            [12] 1706 	add	a,#0x08
      001322 F8               [12] 1707 	mov	r0,a
      001323 EA               [12] 1708 	mov	a,r2
      001324 26               [12] 1709 	add	a,@r0
      001325 FA               [12] 1710 	mov	r2,a
      001326 EB               [12] 1711 	mov	a,r3
      001327 08               [12] 1712 	inc	r0
      001328 36               [12] 1713 	addc	a,@r0
      001329 FB               [12] 1714 	mov	r3,a
      00132A EE               [12] 1715 	mov	a,r6
      00132B 08               [12] 1716 	inc	r0
      00132C 36               [12] 1717 	addc	a,@r0
      00132D FE               [12] 1718 	mov	r6,a
      00132E EF               [12] 1719 	mov	a,r7
      00132F 08               [12] 1720 	inc	r0
      001330 36               [12] 1721 	addc	a,@r0
      001331 FF               [12] 1722 	mov	r7,a
      001332 C0 02            [24] 1723 	push	ar2
      001334 C0 03            [24] 1724 	push	ar3
      001336 C0 06            [24] 1725 	push	ar6
      001338 C0 07            [24] 1726 	push	ar7
      00133A A8 00            [24] 1727 	mov	r0,_bp
      00133C 08               [12] 1728 	inc	r0
      00133D 86 82            [24] 1729 	mov	dpl,@r0
      00133F 08               [12] 1730 	inc	r0
      001340 86 83            [24] 1731 	mov	dph,@r0
      001342 08               [12] 1732 	inc	r0
      001343 86 F0            [24] 1733 	mov	b,@r0
      001345 78 7C            [12] 1734 	mov	r0,#_move_window
      001347 79 0D            [12] 1735 	mov	r1,#(_move_window >> 8)
      001349 7A 00            [12] 1736 	mov	r2,#(_move_window >> 16)
      00134B 12 00 00         [24] 1737 	lcall	__sdcc_banked_call
      00134E AF 82            [24] 1738 	mov	r7,dpl
      001350 E5 81            [12] 1739 	mov	a,sp
      001352 24 FC            [12] 1740 	add	a,#0xfc
      001354 F5 81            [12] 1741 	mov	sp,a
      001356 EF               [12] 1742 	mov	a,r7
      001357 60 03            [24] 1743 	jz	00175$
      001359 02 14 86         [24] 1744 	ljmp	00116$
      00135C                       1745 00175$:
                                   1746 ;	FATFS\src\ff.c:891: p = &fs->win[clst * 4 % SS(fs)];
      00135C A8 00            [24] 1747 	mov	r0,_bp
      00135E 08               [12] 1748 	inc	r0
      00135F E5 00            [12] 1749 	mov	a,_bp
      001361 24 08            [12] 1750 	add	a,#0x08
      001363 F9               [12] 1751 	mov	r1,a
      001364 74 26            [12] 1752 	mov	a,#0x26
      001366 26               [12] 1753 	add	a,@r0
      001367 F7               [12] 1754 	mov	@r1,a
      001368 E4               [12] 1755 	clr	a
      001369 08               [12] 1756 	inc	r0
      00136A 36               [12] 1757 	addc	a,@r0
      00136B 09               [12] 1758 	inc	r1
      00136C F7               [12] 1759 	mov	@r1,a
      00136D 08               [12] 1760 	inc	r0
      00136E 09               [12] 1761 	inc	r1
      00136F E6               [12] 1762 	mov	a,@r0
      001370 F7               [12] 1763 	mov	@r1,a
      001371 E5 00            [12] 1764 	mov	a,_bp
      001373 24 F9            [12] 1765 	add	a,#0xf9
      001375 F8               [12] 1766 	mov	r0,a
      001376 E6               [12] 1767 	mov	a,@r0
      001377 25 E0            [12] 1768 	add	a,acc
      001379 FA               [12] 1769 	mov	r2,a
      00137A 08               [12] 1770 	inc	r0
      00137B E6               [12] 1771 	mov	a,@r0
      00137C 33               [12] 1772 	rlc	a
      00137D FB               [12] 1773 	mov	r3,a
      00137E 08               [12] 1774 	inc	r0
      00137F E6               [12] 1775 	mov	a,@r0
      001380 33               [12] 1776 	rlc	a
      001381 FC               [12] 1777 	mov	r4,a
      001382 08               [12] 1778 	inc	r0
      001383 E6               [12] 1779 	mov	a,@r0
      001384 33               [12] 1780 	rlc	a
      001385 FF               [12] 1781 	mov	r7,a
      001386 EA               [12] 1782 	mov	a,r2
      001387 2A               [12] 1783 	add	a,r2
      001388 FA               [12] 1784 	mov	r2,a
      001389 EB               [12] 1785 	mov	a,r3
      00138A 33               [12] 1786 	rlc	a
      00138B FB               [12] 1787 	mov	r3,a
      00138C EC               [12] 1788 	mov	a,r4
      00138D 33               [12] 1789 	rlc	a
      00138E EF               [12] 1790 	mov	a,r7
      00138F 33               [12] 1791 	rlc	a
      001390 53 03 01         [24] 1792 	anl	ar3,#0x01
      001393 E4               [12] 1793 	clr	a
      001394 E5 00            [12] 1794 	mov	a,_bp
      001396 24 08            [12] 1795 	add	a,#0x08
      001398 F8               [12] 1796 	mov	r0,a
      001399 EA               [12] 1797 	mov	a,r2
      00139A 26               [12] 1798 	add	a,@r0
      00139B FA               [12] 1799 	mov	r2,a
      00139C EB               [12] 1800 	mov	a,r3
      00139D 08               [12] 1801 	inc	r0
      00139E 36               [12] 1802 	addc	a,@r0
      00139F FB               [12] 1803 	mov	r3,a
      0013A0 08               [12] 1804 	inc	r0
      0013A1 86 04            [24] 1805 	mov	ar4,@r0
      0013A3 E5 00            [12] 1806 	mov	a,_bp
      0013A5 24 0C            [12] 1807 	add	a,#0x0c
      0013A7 F8               [12] 1808 	mov	r0,a
      0013A8 A6 02            [24] 1809 	mov	@r0,ar2
      0013AA 08               [12] 1810 	inc	r0
      0013AB A6 03            [24] 1811 	mov	@r0,ar3
      0013AD 08               [12] 1812 	inc	r0
      0013AE A6 04            [24] 1813 	mov	@r0,ar4
                                   1814 ;	FATFS\src\ff.c:892: return LD_DWORD(p) & 0x0FFFFFFF;
      0013B0 E5 00            [12] 1815 	mov	a,_bp
      0013B2 24 0C            [12] 1816 	add	a,#0x0c
      0013B4 F8               [12] 1817 	mov	r0,a
      0013B5 74 03            [12] 1818 	mov	a,#0x03
      0013B7 26               [12] 1819 	add	a,@r0
      0013B8 FD               [12] 1820 	mov	r5,a
      0013B9 E4               [12] 1821 	clr	a
      0013BA 08               [12] 1822 	inc	r0
      0013BB 36               [12] 1823 	addc	a,@r0
      0013BC FE               [12] 1824 	mov	r6,a
      0013BD 08               [12] 1825 	inc	r0
      0013BE 86 07            [24] 1826 	mov	ar7,@r0
      0013C0 8D 82            [24] 1827 	mov	dpl,r5
      0013C2 8E 83            [24] 1828 	mov	dph,r6
      0013C4 8F F0            [24] 1829 	mov	b,r7
      0013C6 12 00 00         [24] 1830 	lcall	__gptrget
      0013C9 FC               [12] 1831 	mov	r4,a
      0013CA E4               [12] 1832 	clr	a
      0013CB E5 00            [12] 1833 	mov	a,_bp
      0013CD 24 08            [12] 1834 	add	a,#0x08
      0013CF F8               [12] 1835 	mov	r0,a
      0013D0 08               [12] 1836 	inc	r0
      0013D1 08               [12] 1837 	inc	r0
      0013D2 08               [12] 1838 	inc	r0
      0013D3 A6 04            [24] 1839 	mov	@r0,ar4
      0013D5 18               [12] 1840 	dec	r0
      0013D6 18               [12] 1841 	dec	r0
      0013D7 18               [12] 1842 	dec	r0
      0013D8 76 00            [12] 1843 	mov	@r0,#0x00
      0013DA 08               [12] 1844 	inc	r0
      0013DB 76 00            [12] 1845 	mov	@r0,#0x00
      0013DD 08               [12] 1846 	inc	r0
      0013DE 76 00            [12] 1847 	mov	@r0,#0x00
      0013E0 E5 00            [12] 1848 	mov	a,_bp
      0013E2 24 0C            [12] 1849 	add	a,#0x0c
      0013E4 F8               [12] 1850 	mov	r0,a
      0013E5 74 02            [12] 1851 	mov	a,#0x02
      0013E7 26               [12] 1852 	add	a,@r0
      0013E8 FA               [12] 1853 	mov	r2,a
      0013E9 E4               [12] 1854 	clr	a
      0013EA 08               [12] 1855 	inc	r0
      0013EB 36               [12] 1856 	addc	a,@r0
      0013EC FB               [12] 1857 	mov	r3,a
      0013ED 08               [12] 1858 	inc	r0
      0013EE 86 07            [24] 1859 	mov	ar7,@r0
      0013F0 8A 82            [24] 1860 	mov	dpl,r2
      0013F2 8B 83            [24] 1861 	mov	dph,r3
      0013F4 8F F0            [24] 1862 	mov	b,r7
      0013F6 12 00 00         [24] 1863 	lcall	__gptrget
      0013F9 FA               [12] 1864 	mov	r2,a
      0013FA 7F 00            [12] 1865 	mov	r7,#0x00
      0013FC 8F 05            [24] 1866 	mov	ar5,r7
      0013FE 8A 06            [24] 1867 	mov	ar6,r2
      001400 E4               [12] 1868 	clr	a
      001401 FA               [12] 1869 	mov	r2,a
      001402 FF               [12] 1870 	mov	r7,a
      001403 E5 00            [12] 1871 	mov	a,_bp
      001405 24 08            [12] 1872 	add	a,#0x08
      001407 F8               [12] 1873 	mov	r0,a
      001408 EA               [12] 1874 	mov	a,r2
      001409 46               [12] 1875 	orl	a,@r0
      00140A F6               [12] 1876 	mov	@r0,a
      00140B EF               [12] 1877 	mov	a,r7
      00140C 08               [12] 1878 	inc	r0
      00140D 46               [12] 1879 	orl	a,@r0
      00140E F6               [12] 1880 	mov	@r0,a
      00140F EE               [12] 1881 	mov	a,r6
      001410 08               [12] 1882 	inc	r0
      001411 46               [12] 1883 	orl	a,@r0
      001412 F6               [12] 1884 	mov	@r0,a
      001413 ED               [12] 1885 	mov	a,r5
      001414 08               [12] 1886 	inc	r0
      001415 46               [12] 1887 	orl	a,@r0
      001416 F6               [12] 1888 	mov	@r0,a
      001417 E5 00            [12] 1889 	mov	a,_bp
      001419 24 0C            [12] 1890 	add	a,#0x0c
      00141B F8               [12] 1891 	mov	r0,a
      00141C 74 01            [12] 1892 	mov	a,#0x01
      00141E 26               [12] 1893 	add	a,@r0
      00141F FB               [12] 1894 	mov	r3,a
      001420 E4               [12] 1895 	clr	a
      001421 08               [12] 1896 	inc	r0
      001422 36               [12] 1897 	addc	a,@r0
      001423 FC               [12] 1898 	mov	r4,a
      001424 08               [12] 1899 	inc	r0
      001425 86 07            [24] 1900 	mov	ar7,@r0
      001427 8B 82            [24] 1901 	mov	dpl,r3
      001429 8C 83            [24] 1902 	mov	dph,r4
      00142B 8F F0            [24] 1903 	mov	b,r7
      00142D 12 00 00         [24] 1904 	lcall	__gptrget
      001430 FF               [12] 1905 	mov	r7,a
      001431 E4               [12] 1906 	clr	a
      001432 FB               [12] 1907 	mov	r3,a
      001433 FE               [12] 1908 	mov	r6,a
      001434 FD               [12] 1909 	mov	r5,a
      001435 E5 00            [12] 1910 	mov	a,_bp
      001437 24 08            [12] 1911 	add	a,#0x08
      001439 F8               [12] 1912 	mov	r0,a
      00143A EB               [12] 1913 	mov	a,r3
      00143B 46               [12] 1914 	orl	a,@r0
      00143C F6               [12] 1915 	mov	@r0,a
      00143D EF               [12] 1916 	mov	a,r7
      00143E 08               [12] 1917 	inc	r0
      00143F 46               [12] 1918 	orl	a,@r0
      001440 F6               [12] 1919 	mov	@r0,a
      001441 EE               [12] 1920 	mov	a,r6
      001442 08               [12] 1921 	inc	r0
      001443 46               [12] 1922 	orl	a,@r0
      001444 F6               [12] 1923 	mov	@r0,a
      001445 ED               [12] 1924 	mov	a,r5
      001446 08               [12] 1925 	inc	r0
      001447 46               [12] 1926 	orl	a,@r0
      001448 F6               [12] 1927 	mov	@r0,a
      001449 E5 00            [12] 1928 	mov	a,_bp
      00144B 24 0C            [12] 1929 	add	a,#0x0c
      00144D F8               [12] 1930 	mov	r0,a
      00144E 86 82            [24] 1931 	mov	dpl,@r0
      001450 08               [12] 1932 	inc	r0
      001451 86 83            [24] 1933 	mov	dph,@r0
      001453 08               [12] 1934 	inc	r0
      001454 86 F0            [24] 1935 	mov	b,@r0
      001456 12 00 00         [24] 1936 	lcall	__gptrget
      001459 FA               [12] 1937 	mov	r2,a
      00145A E4               [12] 1938 	clr	a
      00145B FC               [12] 1939 	mov	r4,a
      00145C FE               [12] 1940 	mov	r6,a
      00145D FF               [12] 1941 	mov	r7,a
      00145E E5 00            [12] 1942 	mov	a,_bp
      001460 24 08            [12] 1943 	add	a,#0x08
      001462 F8               [12] 1944 	mov	r0,a
      001463 E6               [12] 1945 	mov	a,@r0
      001464 42 02            [12] 1946 	orl	ar2,a
      001466 08               [12] 1947 	inc	r0
      001467 E6               [12] 1948 	mov	a,@r0
      001468 42 04            [12] 1949 	orl	ar4,a
      00146A 08               [12] 1950 	inc	r0
      00146B E6               [12] 1951 	mov	a,@r0
      00146C 42 06            [12] 1952 	orl	ar6,a
      00146E 08               [12] 1953 	inc	r0
      00146F E6               [12] 1954 	mov	a,@r0
      001470 42 07            [12] 1955 	orl	ar7,a
      001472 53 07 0F         [24] 1956 	anl	ar7,#0x0f
      001475 8A 82            [24] 1957 	mov	dpl,r2
      001477 8C 83            [24] 1958 	mov	dph,r4
      001479 8E F0            [24] 1959 	mov	b,r6
      00147B EF               [12] 1960 	mov	a,r7
                                   1961 ;	FATFS\src\ff.c:894: default:
      00147C 80 0F            [24] 1962 	sjmp	00117$
      00147E                       1963 00115$:
                                   1964 ;	FATFS\src\ff.c:895: return 1;
      00147E 90 00 01         [24] 1965 	mov	dptr,#(0x01&0x00ff)
      001481 E4               [12] 1966 	clr	a
      001482 F5 F0            [12] 1967 	mov	b,a
                                   1968 ;	FATFS\src\ff.c:896: }
      001484 80 07            [24] 1969 	sjmp	00117$
      001486                       1970 00116$:
                                   1971 ;	FATFS\src\ff.c:898: return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
      001486 90 FF FF         [24] 1972 	mov	dptr,#0xffff
      001489 74 FF            [12] 1973 	mov	a,#0xff
      00148B F5 F0            [12] 1974 	mov	b,a
      00148D                       1975 00117$:
                                   1976 ;	FATFS\src\ff.c:899: }
      00148D 85 00 81         [24] 1977 	mov	sp,_bp
      001490 D0 00            [24] 1978 	pop	_bp
      001492 02 00 00         [24] 1979 	ljmp	__sdcc_banked_ret
                                   1980 ;------------------------------------------------------------
                                   1981 ;Allocation info for local variables in function 'clmt_clust'
                                   1982 ;------------------------------------------------------------
                                   1983 ;ofs                       Allocated to stack - _bp -7
                                   1984 ;fp                        Allocated to registers r5 r6 r7 
                                   1985 ;cl                        Allocated to stack - _bp +8
                                   1986 ;ncl                       Allocated to registers r2 r3 r6 r7 
                                   1987 ;tbl                       Allocated to stack - _bp +12
                                   1988 ;sloc0                     Allocated to stack - _bp +1
                                   1989 ;sloc1                     Allocated to stack - _bp +4
                                   1990 ;------------------------------------------------------------
                                   1991 ;	FATFS\src\ff.c:1087: DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
                                   1992 ;	-----------------------------------------
                                   1993 ;	 function clmt_clust
                                   1994 ;	-----------------------------------------
      001495                       1995 _clmt_clust:
      001495 C0 00            [24] 1996 	push	_bp
      001497 E5 81            [12] 1997 	mov	a,sp
      001499 F5 00            [12] 1998 	mov	_bp,a
      00149B 24 0E            [12] 1999 	add	a,#0x0e
      00149D F5 81            [12] 2000 	mov	sp,a
      00149F AD 82            [24] 2001 	mov	r5,dpl
      0014A1 AE 83            [24] 2002 	mov	r6,dph
      0014A3 AF F0            [24] 2003 	mov	r7,b
                                   2004 ;	FATFS\src\ff.c:1095: tbl = fp->cltbl + 1;	/* Top of CLMT */
      0014A5 74 1B            [12] 2005 	mov	a,#0x1b
      0014A7 2D               [12] 2006 	add	a,r5
      0014A8 FA               [12] 2007 	mov	r2,a
      0014A9 E4               [12] 2008 	clr	a
      0014AA 3E               [12] 2009 	addc	a,r6
      0014AB FB               [12] 2010 	mov	r3,a
      0014AC 8F 04            [24] 2011 	mov	ar4,r7
      0014AE 8A 82            [24] 2012 	mov	dpl,r2
      0014B0 8B 83            [24] 2013 	mov	dph,r3
      0014B2 8C F0            [24] 2014 	mov	b,r4
      0014B4 12 00 00         [24] 2015 	lcall	__gptrget
      0014B7 FA               [12] 2016 	mov	r2,a
      0014B8 A3               [24] 2017 	inc	dptr
      0014B9 12 00 00         [24] 2018 	lcall	__gptrget
      0014BC FB               [12] 2019 	mov	r3,a
      0014BD A3               [24] 2020 	inc	dptr
      0014BE 12 00 00         [24] 2021 	lcall	__gptrget
      0014C1 FC               [12] 2022 	mov	r4,a
      0014C2 A8 00            [24] 2023 	mov	r0,_bp
      0014C4 08               [12] 2024 	inc	r0
      0014C5 74 04            [12] 2025 	mov	a,#0x04
      0014C7 2A               [12] 2026 	add	a,r2
      0014C8 F6               [12] 2027 	mov	@r0,a
      0014C9 E4               [12] 2028 	clr	a
      0014CA 3B               [12] 2029 	addc	a,r3
      0014CB 08               [12] 2030 	inc	r0
      0014CC F6               [12] 2031 	mov	@r0,a
      0014CD 08               [12] 2032 	inc	r0
      0014CE A6 04            [24] 2033 	mov	@r0,ar4
                                   2034 ;	FATFS\src\ff.c:1096: cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
      0014D0 E5 00            [12] 2035 	mov	a,_bp
      0014D2 24 F9            [12] 2036 	add	a,#0xf9
      0014D4 F8               [12] 2037 	mov	r0,a
      0014D5 E5 00            [12] 2038 	mov	a,_bp
      0014D7 24 04            [12] 2039 	add	a,#0x04
      0014D9 F9               [12] 2040 	mov	r1,a
      0014DA 08               [12] 2041 	inc	r0
      0014DB 08               [12] 2042 	inc	r0
      0014DC 08               [12] 2043 	inc	r0
      0014DD E6               [12] 2044 	mov	a,@r0
      0014DE 09               [12] 2045 	inc	r1
      0014DF 09               [12] 2046 	inc	r1
      0014E0 09               [12] 2047 	inc	r1
      0014E1 77 00            [12] 2048 	mov	@r1,#0x00
      0014E3 C3               [12] 2049 	clr	c
      0014E4 13               [12] 2050 	rrc	a
      0014E5 19               [12] 2051 	dec	r1
      0014E6 F7               [12] 2052 	mov	@r1,a
      0014E7 18               [12] 2053 	dec	r0
      0014E8 E6               [12] 2054 	mov	a,@r0
      0014E9 13               [12] 2055 	rrc	a
      0014EA 19               [12] 2056 	dec	r1
      0014EB F7               [12] 2057 	mov	@r1,a
      0014EC 18               [12] 2058 	dec	r0
      0014ED E6               [12] 2059 	mov	a,@r0
      0014EE 13               [12] 2060 	rrc	a
      0014EF 19               [12] 2061 	dec	r1
      0014F0 F7               [12] 2062 	mov	@r1,a
      0014F1 8D 82            [24] 2063 	mov	dpl,r5
      0014F3 8E 83            [24] 2064 	mov	dph,r6
      0014F5 8F F0            [24] 2065 	mov	b,r7
      0014F7 12 00 00         [24] 2066 	lcall	__gptrget
      0014FA FA               [12] 2067 	mov	r2,a
      0014FB A3               [24] 2068 	inc	dptr
      0014FC 12 00 00         [24] 2069 	lcall	__gptrget
      0014FF FB               [12] 2070 	mov	r3,a
      001500 A3               [24] 2071 	inc	dptr
      001501 12 00 00         [24] 2072 	lcall	__gptrget
      001504 FF               [12] 2073 	mov	r7,a
      001505 74 02            [12] 2074 	mov	a,#0x02
      001507 2A               [12] 2075 	add	a,r2
      001508 FA               [12] 2076 	mov	r2,a
      001509 E4               [12] 2077 	clr	a
      00150A 3B               [12] 2078 	addc	a,r3
      00150B FB               [12] 2079 	mov	r3,a
      00150C 8A 82            [24] 2080 	mov	dpl,r2
      00150E 8B 83            [24] 2081 	mov	dph,r3
      001510 8F F0            [24] 2082 	mov	b,r7
      001512 12 00 00         [24] 2083 	lcall	__gptrget
      001515 FA               [12] 2084 	mov	r2,a
      001516 7F 00            [12] 2085 	mov	r7,#0x00
      001518 7E 00            [12] 2086 	mov	r6,#0x00
      00151A 7D 00            [12] 2087 	mov	r5,#0x00
      00151C C0 02            [24] 2088 	push	ar2
      00151E C0 07            [24] 2089 	push	ar7
      001520 C0 06            [24] 2090 	push	ar6
      001522 C0 05            [24] 2091 	push	ar5
      001524 E5 00            [12] 2092 	mov	a,_bp
      001526 24 04            [12] 2093 	add	a,#0x04
      001528 F8               [12] 2094 	mov	r0,a
      001529 86 82            [24] 2095 	mov	dpl,@r0
      00152B 08               [12] 2096 	inc	r0
      00152C 86 83            [24] 2097 	mov	dph,@r0
      00152E 08               [12] 2098 	inc	r0
      00152F 86 F0            [24] 2099 	mov	b,@r0
      001531 08               [12] 2100 	inc	r0
      001532 E6               [12] 2101 	mov	a,@r0
      001533 12 00 23         [24] 2102 	lcall	__divulong
      001536 AC 82            [24] 2103 	mov	r4,dpl
      001538 AD 83            [24] 2104 	mov	r5,dph
      00153A AE F0            [24] 2105 	mov	r6,b
      00153C FF               [12] 2106 	mov	r7,a
      00153D E5 81            [12] 2107 	mov	a,sp
      00153F 24 FC            [12] 2108 	add	a,#0xfc
      001541 F5 81            [12] 2109 	mov	sp,a
      001543 E5 00            [12] 2110 	mov	a,_bp
      001545 24 08            [12] 2111 	add	a,#0x08
      001547 F8               [12] 2112 	mov	r0,a
      001548 A6 04            [24] 2113 	mov	@r0,ar4
      00154A 08               [12] 2114 	inc	r0
      00154B A6 05            [24] 2115 	mov	@r0,ar5
      00154D 08               [12] 2116 	inc	r0
      00154E A6 06            [24] 2117 	mov	@r0,ar6
      001550 08               [12] 2118 	inc	r0
      001551 A6 07            [24] 2119 	mov	@r0,ar7
      001553                       2120 00106$:
                                   2121 ;	FATFS\src\ff.c:1098: ncl = *tbl++;			/* Number of cluters in the fragment */
      001553 A8 00            [24] 2122 	mov	r0,_bp
      001555 08               [12] 2123 	inc	r0
      001556 86 82            [24] 2124 	mov	dpl,@r0
      001558 08               [12] 2125 	inc	r0
      001559 86 83            [24] 2126 	mov	dph,@r0
      00155B 08               [12] 2127 	inc	r0
      00155C 86 F0            [24] 2128 	mov	b,@r0
      00155E 12 00 00         [24] 2129 	lcall	__gptrget
      001561 FA               [12] 2130 	mov	r2,a
      001562 A3               [24] 2131 	inc	dptr
      001563 12 00 00         [24] 2132 	lcall	__gptrget
      001566 FB               [12] 2133 	mov	r3,a
      001567 A3               [24] 2134 	inc	dptr
      001568 12 00 00         [24] 2135 	lcall	__gptrget
      00156B FE               [12] 2136 	mov	r6,a
      00156C A3               [24] 2137 	inc	dptr
      00156D 12 00 00         [24] 2138 	lcall	__gptrget
      001570 FF               [12] 2139 	mov	r7,a
      001571 A8 00            [24] 2140 	mov	r0,_bp
      001573 08               [12] 2141 	inc	r0
      001574 E5 00            [12] 2142 	mov	a,_bp
      001576 24 0C            [12] 2143 	add	a,#0x0c
      001578 F9               [12] 2144 	mov	r1,a
      001579 74 04            [12] 2145 	mov	a,#0x04
      00157B 26               [12] 2146 	add	a,@r0
      00157C F7               [12] 2147 	mov	@r1,a
      00157D E4               [12] 2148 	clr	a
      00157E 08               [12] 2149 	inc	r0
      00157F 36               [12] 2150 	addc	a,@r0
      001580 09               [12] 2151 	inc	r1
      001581 F7               [12] 2152 	mov	@r1,a
      001582 08               [12] 2153 	inc	r0
      001583 09               [12] 2154 	inc	r1
      001584 E6               [12] 2155 	mov	a,@r0
      001585 F7               [12] 2156 	mov	@r1,a
                                   2157 ;	FATFS\src\ff.c:1099: if (!ncl) return 0;		/* End of table? (error) */
      001586 EA               [12] 2158 	mov	a,r2
      001587 4B               [12] 2159 	orl	a,r3
      001588 4E               [12] 2160 	orl	a,r6
      001589 4F               [12] 2161 	orl	a,r7
      00158A 70 08            [24] 2162 	jnz	00102$
      00158C 90 00 00         [24] 2163 	mov	dptr,#(0x00&0x00ff)
      00158F E4               [12] 2164 	clr	a
      001590 F5 F0            [12] 2165 	mov	b,a
      001592 80 7A            [24] 2166 	sjmp	00108$
      001594                       2167 00102$:
                                   2168 ;	FATFS\src\ff.c:1100: if (cl < ncl) break;	/* In this fragment? */
      001594 E5 00            [12] 2169 	mov	a,_bp
      001596 24 08            [12] 2170 	add	a,#0x08
      001598 F8               [12] 2171 	mov	r0,a
      001599 C3               [12] 2172 	clr	c
      00159A E6               [12] 2173 	mov	a,@r0
      00159B 9A               [12] 2174 	subb	a,r2
      00159C 08               [12] 2175 	inc	r0
      00159D E6               [12] 2176 	mov	a,@r0
      00159E 9B               [12] 2177 	subb	a,r3
      00159F 08               [12] 2178 	inc	r0
      0015A0 E6               [12] 2179 	mov	a,@r0
      0015A1 9E               [12] 2180 	subb	a,r6
      0015A2 08               [12] 2181 	inc	r0
      0015A3 E6               [12] 2182 	mov	a,@r0
      0015A4 9F               [12] 2183 	subb	a,r7
      0015A5 40 2D            [24] 2184 	jc	00105$
                                   2185 ;	FATFS\src\ff.c:1101: cl -= ncl; tbl++;		/* Next fragment */
      0015A7 E5 00            [12] 2186 	mov	a,_bp
      0015A9 24 08            [12] 2187 	add	a,#0x08
      0015AB F8               [12] 2188 	mov	r0,a
      0015AC E6               [12] 2189 	mov	a,@r0
      0015AD C3               [12] 2190 	clr	c
      0015AE 9A               [12] 2191 	subb	a,r2
      0015AF F6               [12] 2192 	mov	@r0,a
      0015B0 08               [12] 2193 	inc	r0
      0015B1 E6               [12] 2194 	mov	a,@r0
      0015B2 9B               [12] 2195 	subb	a,r3
      0015B3 F6               [12] 2196 	mov	@r0,a
      0015B4 08               [12] 2197 	inc	r0
      0015B5 E6               [12] 2198 	mov	a,@r0
      0015B6 9E               [12] 2199 	subb	a,r6
      0015B7 F6               [12] 2200 	mov	@r0,a
      0015B8 08               [12] 2201 	inc	r0
      0015B9 E6               [12] 2202 	mov	a,@r0
      0015BA 9F               [12] 2203 	subb	a,r7
      0015BB F6               [12] 2204 	mov	@r0,a
      0015BC E5 00            [12] 2205 	mov	a,_bp
      0015BE 24 0C            [12] 2206 	add	a,#0x0c
      0015C0 F8               [12] 2207 	mov	r0,a
      0015C1 A9 00            [24] 2208 	mov	r1,_bp
      0015C3 09               [12] 2209 	inc	r1
      0015C4 74 04            [12] 2210 	mov	a,#0x04
      0015C6 26               [12] 2211 	add	a,@r0
      0015C7 F7               [12] 2212 	mov	@r1,a
      0015C8 E4               [12] 2213 	clr	a
      0015C9 08               [12] 2214 	inc	r0
      0015CA 36               [12] 2215 	addc	a,@r0
      0015CB 09               [12] 2216 	inc	r1
      0015CC F7               [12] 2217 	mov	@r1,a
      0015CD 08               [12] 2218 	inc	r0
      0015CE 09               [12] 2219 	inc	r1
      0015CF E6               [12] 2220 	mov	a,@r0
      0015D0 F7               [12] 2221 	mov	@r1,a
      0015D1 02 15 53         [24] 2222 	ljmp	00106$
      0015D4                       2223 00105$:
                                   2224 ;	FATFS\src\ff.c:1103: return cl + *tbl;	/* Return the cluster number */
      0015D4 E5 00            [12] 2225 	mov	a,_bp
      0015D6 24 0C            [12] 2226 	add	a,#0x0c
      0015D8 F8               [12] 2227 	mov	r0,a
      0015D9 86 82            [24] 2228 	mov	dpl,@r0
      0015DB 08               [12] 2229 	inc	r0
      0015DC 86 83            [24] 2230 	mov	dph,@r0
      0015DE 08               [12] 2231 	inc	r0
      0015DF 86 F0            [24] 2232 	mov	b,@r0
      0015E1 12 00 00         [24] 2233 	lcall	__gptrget
      0015E4 FC               [12] 2234 	mov	r4,a
      0015E5 A3               [24] 2235 	inc	dptr
      0015E6 12 00 00         [24] 2236 	lcall	__gptrget
      0015E9 FD               [12] 2237 	mov	r5,a
      0015EA A3               [24] 2238 	inc	dptr
      0015EB 12 00 00         [24] 2239 	lcall	__gptrget
      0015EE FE               [12] 2240 	mov	r6,a
      0015EF A3               [24] 2241 	inc	dptr
      0015F0 12 00 00         [24] 2242 	lcall	__gptrget
      0015F3 FF               [12] 2243 	mov	r7,a
      0015F4 E5 00            [12] 2244 	mov	a,_bp
      0015F6 24 08            [12] 2245 	add	a,#0x08
      0015F8 F8               [12] 2246 	mov	r0,a
      0015F9 EC               [12] 2247 	mov	a,r4
      0015FA 26               [12] 2248 	add	a,@r0
      0015FB FC               [12] 2249 	mov	r4,a
      0015FC ED               [12] 2250 	mov	a,r5
      0015FD 08               [12] 2251 	inc	r0
      0015FE 36               [12] 2252 	addc	a,@r0
      0015FF FD               [12] 2253 	mov	r5,a
      001600 EE               [12] 2254 	mov	a,r6
      001601 08               [12] 2255 	inc	r0
      001602 36               [12] 2256 	addc	a,@r0
      001603 FE               [12] 2257 	mov	r6,a
      001604 EF               [12] 2258 	mov	a,r7
      001605 08               [12] 2259 	inc	r0
      001606 36               [12] 2260 	addc	a,@r0
      001607 FF               [12] 2261 	mov	r7,a
      001608 8C 82            [24] 2262 	mov	dpl,r4
      00160A 8D 83            [24] 2263 	mov	dph,r5
      00160C 8E F0            [24] 2264 	mov	b,r6
      00160E                       2265 00108$:
                                   2266 ;	FATFS\src\ff.c:1104: }
      00160E 85 00 81         [24] 2267 	mov	sp,_bp
      001611 D0 00            [24] 2268 	pop	_bp
      001613 02 00 00         [24] 2269 	ljmp	__sdcc_banked_ret
                                   2270 ;------------------------------------------------------------
                                   2271 ;Allocation info for local variables in function 'dir_sdi'
                                   2272 ;------------------------------------------------------------
                                   2273 ;idx                       Allocated to stack - _bp -5
                                   2274 ;dp                        Allocated to stack - _bp +1
                                   2275 ;clst                      Allocated to stack - _bp +15
                                   2276 ;sect                      Allocated to stack - _bp +11
                                   2277 ;ic                        Allocated to registers r3 r2 
                                   2278 ;sloc0                     Allocated to stack - _bp +4
                                   2279 ;sloc1                     Allocated to stack - _bp +7
                                   2280 ;------------------------------------------------------------
                                   2281 ;	FATFS\src\ff.c:1115: FRESULT dir_sdi (
                                   2282 ;	-----------------------------------------
                                   2283 ;	 function dir_sdi
                                   2284 ;	-----------------------------------------
      001616                       2285 _dir_sdi:
      001616 C0 00            [24] 2286 	push	_bp
      001618 85 81 00         [24] 2287 	mov	_bp,sp
      00161B C0 82            [24] 2288 	push	dpl
      00161D C0 83            [24] 2289 	push	dph
      00161F C0 F0            [24] 2290 	push	b
      001621 E5 81            [12] 2291 	mov	a,sp
      001623 24 0F            [12] 2292 	add	a,#0x0f
      001625 F5 81            [12] 2293 	mov	sp,a
                                   2294 ;	FATFS\src\ff.c:1124: dp->index = (WORD)idx;	/* Current index */
      001627 A8 00            [24] 2295 	mov	r0,_bp
      001629 08               [12] 2296 	inc	r0
      00162A 74 05            [12] 2297 	mov	a,#0x05
      00162C 26               [12] 2298 	add	a,@r0
      00162D FA               [12] 2299 	mov	r2,a
      00162E E4               [12] 2300 	clr	a
      00162F 08               [12] 2301 	inc	r0
      001630 36               [12] 2302 	addc	a,@r0
      001631 FB               [12] 2303 	mov	r3,a
      001632 08               [12] 2304 	inc	r0
      001633 86 04            [24] 2305 	mov	ar4,@r0
      001635 8A 82            [24] 2306 	mov	dpl,r2
      001637 8B 83            [24] 2307 	mov	dph,r3
      001639 8C F0            [24] 2308 	mov	b,r4
      00163B E5 00            [12] 2309 	mov	a,_bp
      00163D 24 FB            [12] 2310 	add	a,#0xfb
      00163F F8               [12] 2311 	mov	r0,a
      001640 E6               [12] 2312 	mov	a,@r0
      001641 12 00 00         [24] 2313 	lcall	__gptrput
      001644 A3               [24] 2314 	inc	dptr
      001645 08               [12] 2315 	inc	r0
      001646 E6               [12] 2316 	mov	a,@r0
      001647 12 00 00         [24] 2317 	lcall	__gptrput
                                   2318 ;	FATFS\src\ff.c:1125: clst = dp->sclust;		/* Table start cluster (0:root) */
      00164A A8 00            [24] 2319 	mov	r0,_bp
      00164C 08               [12] 2320 	inc	r0
      00164D 74 07            [12] 2321 	mov	a,#0x07
      00164F 26               [12] 2322 	add	a,@r0
      001650 FA               [12] 2323 	mov	r2,a
      001651 E4               [12] 2324 	clr	a
      001652 08               [12] 2325 	inc	r0
      001653 36               [12] 2326 	addc	a,@r0
      001654 FB               [12] 2327 	mov	r3,a
      001655 08               [12] 2328 	inc	r0
      001656 86 04            [24] 2329 	mov	ar4,@r0
      001658 8A 82            [24] 2330 	mov	dpl,r2
      00165A 8B 83            [24] 2331 	mov	dph,r3
      00165C 8C F0            [24] 2332 	mov	b,r4
      00165E E5 00            [12] 2333 	mov	a,_bp
      001660 24 0F            [12] 2334 	add	a,#0x0f
      001662 F8               [12] 2335 	mov	r0,a
      001663 12 00 00         [24] 2336 	lcall	__gptrget
      001666 F6               [12] 2337 	mov	@r0,a
      001667 A3               [24] 2338 	inc	dptr
      001668 12 00 00         [24] 2339 	lcall	__gptrget
      00166B 08               [12] 2340 	inc	r0
      00166C F6               [12] 2341 	mov	@r0,a
      00166D A3               [24] 2342 	inc	dptr
      00166E 12 00 00         [24] 2343 	lcall	__gptrget
      001671 08               [12] 2344 	inc	r0
      001672 F6               [12] 2345 	mov	@r0,a
      001673 A3               [24] 2346 	inc	dptr
      001674 12 00 00         [24] 2347 	lcall	__gptrget
      001677 08               [12] 2348 	inc	r0
      001678 F6               [12] 2349 	mov	@r0,a
                                   2350 ;	FATFS\src\ff.c:1126: if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
      001679 E5 00            [12] 2351 	mov	a,_bp
      00167B 24 0F            [12] 2352 	add	a,#0x0f
      00167D F8               [12] 2353 	mov	r0,a
      00167E B6 01 0E         [24] 2354 	cjne	@r0,#0x01,00164$
      001681 08               [12] 2355 	inc	r0
      001682 B6 00 0A         [24] 2356 	cjne	@r0,#0x00,00164$
      001685 08               [12] 2357 	inc	r0
      001686 B6 00 06         [24] 2358 	cjne	@r0,#0x00,00164$
      001689 08               [12] 2359 	inc	r0
      00168A B6 00 02         [24] 2360 	cjne	@r0,#0x00,00164$
      00168D 80 5C            [24] 2361 	sjmp	00101$
      00168F                       2362 00164$:
      00168F A8 00            [24] 2363 	mov	r0,_bp
      001691 08               [12] 2364 	inc	r0
      001692 86 82            [24] 2365 	mov	dpl,@r0
      001694 08               [12] 2366 	inc	r0
      001695 86 83            [24] 2367 	mov	dph,@r0
      001697 08               [12] 2368 	inc	r0
      001698 86 F0            [24] 2369 	mov	b,@r0
      00169A E5 00            [12] 2370 	mov	a,_bp
      00169C 24 04            [12] 2371 	add	a,#0x04
      00169E F9               [12] 2372 	mov	r1,a
      00169F 12 00 00         [24] 2373 	lcall	__gptrget
      0016A2 F7               [12] 2374 	mov	@r1,a
      0016A3 A3               [24] 2375 	inc	dptr
      0016A4 12 00 00         [24] 2376 	lcall	__gptrget
      0016A7 09               [12] 2377 	inc	r1
      0016A8 F7               [12] 2378 	mov	@r1,a
      0016A9 A3               [24] 2379 	inc	dptr
      0016AA 12 00 00         [24] 2380 	lcall	__gptrget
      0016AD 09               [12] 2381 	inc	r1
      0016AE F7               [12] 2382 	mov	@r1,a
      0016AF E5 00            [12] 2383 	mov	a,_bp
      0016B1 24 04            [12] 2384 	add	a,#0x04
      0016B3 F8               [12] 2385 	mov	r0,a
      0016B4 74 0A            [12] 2386 	mov	a,#0x0a
      0016B6 26               [12] 2387 	add	a,@r0
      0016B7 FA               [12] 2388 	mov	r2,a
      0016B8 E4               [12] 2389 	clr	a
      0016B9 08               [12] 2390 	inc	r0
      0016BA 36               [12] 2391 	addc	a,@r0
      0016BB FB               [12] 2392 	mov	r3,a
      0016BC 08               [12] 2393 	inc	r0
      0016BD 86 04            [24] 2394 	mov	ar4,@r0
      0016BF 8A 82            [24] 2395 	mov	dpl,r2
      0016C1 8B 83            [24] 2396 	mov	dph,r3
      0016C3 8C F0            [24] 2397 	mov	b,r4
      0016C5 12 00 00         [24] 2398 	lcall	__gptrget
      0016C8 FA               [12] 2399 	mov	r2,a
      0016C9 A3               [24] 2400 	inc	dptr
      0016CA 12 00 00         [24] 2401 	lcall	__gptrget
      0016CD FB               [12] 2402 	mov	r3,a
      0016CE A3               [24] 2403 	inc	dptr
      0016CF 12 00 00         [24] 2404 	lcall	__gptrget
      0016D2 FC               [12] 2405 	mov	r4,a
      0016D3 A3               [24] 2406 	inc	dptr
      0016D4 12 00 00         [24] 2407 	lcall	__gptrget
      0016D7 FF               [12] 2408 	mov	r7,a
      0016D8 E5 00            [12] 2409 	mov	a,_bp
      0016DA 24 0F            [12] 2410 	add	a,#0x0f
      0016DC F8               [12] 2411 	mov	r0,a
      0016DD C3               [12] 2412 	clr	c
      0016DE E6               [12] 2413 	mov	a,@r0
      0016DF 9A               [12] 2414 	subb	a,r2
      0016E0 08               [12] 2415 	inc	r0
      0016E1 E6               [12] 2416 	mov	a,@r0
      0016E2 9B               [12] 2417 	subb	a,r3
      0016E3 08               [12] 2418 	inc	r0
      0016E4 E6               [12] 2419 	mov	a,@r0
      0016E5 9C               [12] 2420 	subb	a,r4
      0016E6 08               [12] 2421 	inc	r0
      0016E7 E6               [12] 2422 	mov	a,@r0
      0016E8 9F               [12] 2423 	subb	a,r7
      0016E9 40 06            [24] 2424 	jc	00102$
      0016EB                       2425 00101$:
                                   2426 ;	FATFS\src\ff.c:1127: return FR_INT_ERR;
      0016EB 75 82 02         [24] 2427 	mov	dpl,#0x02
      0016EE 02 1A 6C         [24] 2428 	ljmp	00122$
      0016F1                       2429 00102$:
                                   2430 ;	FATFS\src\ff.c:1128: if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
      0016F1 E5 00            [12] 2431 	mov	a,_bp
      0016F3 24 0F            [12] 2432 	add	a,#0x0f
      0016F5 F8               [12] 2433 	mov	r0,a
      0016F6 E6               [12] 2434 	mov	a,@r0
      0016F7 08               [12] 2435 	inc	r0
      0016F8 46               [12] 2436 	orl	a,@r0
      0016F9 08               [12] 2437 	inc	r0
      0016FA 46               [12] 2438 	orl	a,@r0
      0016FB 08               [12] 2439 	inc	r0
      0016FC 46               [12] 2440 	orl	a,@r0
      0016FD 70 45            [24] 2441 	jnz	00105$
      0016FF E5 00            [12] 2442 	mov	a,_bp
      001701 24 04            [12] 2443 	add	a,#0x04
      001703 F8               [12] 2444 	mov	r0,a
      001704 86 82            [24] 2445 	mov	dpl,@r0
      001706 08               [12] 2446 	inc	r0
      001707 86 83            [24] 2447 	mov	dph,@r0
      001709 08               [12] 2448 	inc	r0
      00170A 86 F0            [24] 2449 	mov	b,@r0
      00170C 12 00 00         [24] 2450 	lcall	__gptrget
      00170F FF               [12] 2451 	mov	r7,a
      001710 BF 03 31         [24] 2452 	cjne	r7,#0x03,00105$
                                   2453 ;	FATFS\src\ff.c:1129: clst = dp->fs->dirbase;
      001713 E5 00            [12] 2454 	mov	a,_bp
      001715 24 04            [12] 2455 	add	a,#0x04
      001717 F8               [12] 2456 	mov	r0,a
      001718 74 1A            [12] 2457 	mov	a,#0x1a
      00171A 26               [12] 2458 	add	a,@r0
      00171B FD               [12] 2459 	mov	r5,a
      00171C E4               [12] 2460 	clr	a
      00171D 08               [12] 2461 	inc	r0
      00171E 36               [12] 2462 	addc	a,@r0
      00171F FE               [12] 2463 	mov	r6,a
      001720 08               [12] 2464 	inc	r0
      001721 86 07            [24] 2465 	mov	ar7,@r0
      001723 8D 82            [24] 2466 	mov	dpl,r5
      001725 8E 83            [24] 2467 	mov	dph,r6
      001727 8F F0            [24] 2468 	mov	b,r7
      001729 E5 00            [12] 2469 	mov	a,_bp
      00172B 24 0F            [12] 2470 	add	a,#0x0f
      00172D F8               [12] 2471 	mov	r0,a
      00172E 12 00 00         [24] 2472 	lcall	__gptrget
      001731 F6               [12] 2473 	mov	@r0,a
      001732 A3               [24] 2474 	inc	dptr
      001733 12 00 00         [24] 2475 	lcall	__gptrget
      001736 08               [12] 2476 	inc	r0
      001737 F6               [12] 2477 	mov	@r0,a
      001738 A3               [24] 2478 	inc	dptr
      001739 12 00 00         [24] 2479 	lcall	__gptrget
      00173C 08               [12] 2480 	inc	r0
      00173D F6               [12] 2481 	mov	@r0,a
      00173E A3               [24] 2482 	inc	dptr
      00173F 12 00 00         [24] 2483 	lcall	__gptrget
      001742 08               [12] 2484 	inc	r0
      001743 F6               [12] 2485 	mov	@r0,a
      001744                       2486 00105$:
                                   2487 ;	FATFS\src\ff.c:1131: if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
      001744 E5 00            [12] 2488 	mov	a,_bp
      001746 24 0F            [12] 2489 	add	a,#0x0f
      001748 F8               [12] 2490 	mov	r0,a
      001749 E6               [12] 2491 	mov	a,@r0
      00174A 08               [12] 2492 	inc	r0
      00174B 46               [12] 2493 	orl	a,@r0
      00174C 08               [12] 2494 	inc	r0
      00174D 46               [12] 2495 	orl	a,@r0
      00174E 08               [12] 2496 	inc	r0
      00174F 46               [12] 2497 	orl	a,@r0
      001750 70 66            [24] 2498 	jnz	00118$
                                   2499 ;	FATFS\src\ff.c:1132: if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
      001752 E5 00            [12] 2500 	mov	a,_bp
      001754 24 04            [12] 2501 	add	a,#0x04
      001756 F8               [12] 2502 	mov	r0,a
      001757 74 08            [12] 2503 	mov	a,#0x08
      001759 26               [12] 2504 	add	a,@r0
      00175A FD               [12] 2505 	mov	r5,a
      00175B E4               [12] 2506 	clr	a
      00175C 08               [12] 2507 	inc	r0
      00175D 36               [12] 2508 	addc	a,@r0
      00175E FE               [12] 2509 	mov	r6,a
      00175F 08               [12] 2510 	inc	r0
      001760 86 07            [24] 2511 	mov	ar7,@r0
      001762 8D 82            [24] 2512 	mov	dpl,r5
      001764 8E 83            [24] 2513 	mov	dph,r6
      001766 8F F0            [24] 2514 	mov	b,r7
      001768 12 00 00         [24] 2515 	lcall	__gptrget
      00176B FD               [12] 2516 	mov	r5,a
      00176C A3               [24] 2517 	inc	dptr
      00176D 12 00 00         [24] 2518 	lcall	__gptrget
      001770 FE               [12] 2519 	mov	r6,a
      001771 E5 00            [12] 2520 	mov	a,_bp
      001773 24 FB            [12] 2521 	add	a,#0xfb
      001775 F8               [12] 2522 	mov	r0,a
      001776 C3               [12] 2523 	clr	c
      001777 E6               [12] 2524 	mov	a,@r0
      001778 9D               [12] 2525 	subb	a,r5
      001779 08               [12] 2526 	inc	r0
      00177A E6               [12] 2527 	mov	a,@r0
      00177B 9E               [12] 2528 	subb	a,r6
      00177C 40 06            [24] 2529 	jc	00108$
                                   2530 ;	FATFS\src\ff.c:1133: return FR_INT_ERR;
      00177E 75 82 02         [24] 2531 	mov	dpl,#0x02
      001781 02 1A 6C         [24] 2532 	ljmp	00122$
      001784                       2533 00108$:
                                   2534 ;	FATFS\src\ff.c:1134: sect = dp->fs->dirbase;
      001784 E5 00            [12] 2535 	mov	a,_bp
      001786 24 04            [12] 2536 	add	a,#0x04
      001788 F8               [12] 2537 	mov	r0,a
      001789 74 1A            [12] 2538 	mov	a,#0x1a
      00178B 26               [12] 2539 	add	a,@r0
      00178C FF               [12] 2540 	mov	r7,a
      00178D E4               [12] 2541 	clr	a
      00178E 08               [12] 2542 	inc	r0
      00178F 36               [12] 2543 	addc	a,@r0
      001790 FD               [12] 2544 	mov	r5,a
      001791 08               [12] 2545 	inc	r0
      001792 86 06            [24] 2546 	mov	ar6,@r0
      001794 8F 82            [24] 2547 	mov	dpl,r7
      001796 8D 83            [24] 2548 	mov	dph,r5
      001798 8E F0            [24] 2549 	mov	b,r6
      00179A E5 00            [12] 2550 	mov	a,_bp
      00179C 24 0B            [12] 2551 	add	a,#0x0b
      00179E F8               [12] 2552 	mov	r0,a
      00179F 12 00 00         [24] 2553 	lcall	__gptrget
      0017A2 F6               [12] 2554 	mov	@r0,a
      0017A3 A3               [24] 2555 	inc	dptr
      0017A4 12 00 00         [24] 2556 	lcall	__gptrget
      0017A7 08               [12] 2557 	inc	r0
      0017A8 F6               [12] 2558 	mov	@r0,a
      0017A9 A3               [24] 2559 	inc	dptr
      0017AA 12 00 00         [24] 2560 	lcall	__gptrget
      0017AD 08               [12] 2561 	inc	r0
      0017AE F6               [12] 2562 	mov	@r0,a
      0017AF A3               [24] 2563 	inc	dptr
      0017B0 12 00 00         [24] 2564 	lcall	__gptrget
      0017B3 08               [12] 2565 	inc	r0
      0017B4 F6               [12] 2566 	mov	@r0,a
      0017B5 02 19 52         [24] 2567 	ljmp	00119$
      0017B8                       2568 00118$:
                                   2569 ;	FATFS\src\ff.c:1137: ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
      0017B8 E5 00            [12] 2570 	mov	a,_bp
      0017BA 24 04            [12] 2571 	add	a,#0x04
      0017BC F8               [12] 2572 	mov	r0,a
      0017BD 74 02            [12] 2573 	mov	a,#0x02
      0017BF 26               [12] 2574 	add	a,@r0
      0017C0 FF               [12] 2575 	mov	r7,a
      0017C1 E4               [12] 2576 	clr	a
      0017C2 08               [12] 2577 	inc	r0
      0017C3 36               [12] 2578 	addc	a,@r0
      0017C4 FE               [12] 2579 	mov	r6,a
      0017C5 08               [12] 2580 	inc	r0
      0017C6 86 05            [24] 2581 	mov	ar5,@r0
      0017C8 8F 82            [24] 2582 	mov	dpl,r7
      0017CA 8E 83            [24] 2583 	mov	dph,r6
      0017CC 8D F0            [24] 2584 	mov	b,r5
      0017CE 12 00 00         [24] 2585 	lcall	__gptrget
      0017D1 FB               [12] 2586 	mov	r3,a
      0017D2 E4               [12] 2587 	clr	a
      0017D3 CB               [12] 2588 	xch	a,r3
      0017D4 C4               [12] 2589 	swap	a
      0017D5 CB               [12] 2590 	xch	a,r3
      0017D6 6B               [12] 2591 	xrl	a,r3
      0017D7 CB               [12] 2592 	xch	a,r3
      0017D8 54 F0            [12] 2593 	anl	a,#0xf0
      0017DA CB               [12] 2594 	xch	a,r3
      0017DB 6B               [12] 2595 	xrl	a,r3
      0017DC FA               [12] 2596 	mov	r2,a
                                   2597 ;	FATFS\src\ff.c:1138: while (idx >= ic) {	/* Follow cluster chain */
      0017DD                       2598 00114$:
      0017DD E5 00            [12] 2599 	mov	a,_bp
      0017DF 24 FB            [12] 2600 	add	a,#0xfb
      0017E1 F8               [12] 2601 	mov	r0,a
      0017E2 C3               [12] 2602 	clr	c
      0017E3 E6               [12] 2603 	mov	a,@r0
      0017E4 9B               [12] 2604 	subb	a,r3
      0017E5 08               [12] 2605 	inc	r0
      0017E6 E6               [12] 2606 	mov	a,@r0
      0017E7 9A               [12] 2607 	subb	a,r2
      0017E8 50 03            [24] 2608 	jnc	00171$
      0017EA 02 18 F9         [24] 2609 	ljmp	00116$
      0017ED                       2610 00171$:
                                   2611 ;	FATFS\src\ff.c:1139: clst = get_fat(dp->fs, clst);				/* Get next cluster */
      0017ED C0 03            [24] 2612 	push	ar3
      0017EF C0 02            [24] 2613 	push	ar2
      0017F1 A8 00            [24] 2614 	mov	r0,_bp
      0017F3 08               [12] 2615 	inc	r0
      0017F4 86 82            [24] 2616 	mov	dpl,@r0
      0017F6 08               [12] 2617 	inc	r0
      0017F7 86 83            [24] 2618 	mov	dph,@r0
      0017F9 08               [12] 2619 	inc	r0
      0017FA 86 F0            [24] 2620 	mov	b,@r0
      0017FC 12 00 00         [24] 2621 	lcall	__gptrget
      0017FF FF               [12] 2622 	mov	r7,a
      001800 A3               [24] 2623 	inc	dptr
      001801 12 00 00         [24] 2624 	lcall	__gptrget
      001804 FE               [12] 2625 	mov	r6,a
      001805 A3               [24] 2626 	inc	dptr
      001806 12 00 00         [24] 2627 	lcall	__gptrget
      001809 FD               [12] 2628 	mov	r5,a
      00180A C0 03            [24] 2629 	push	ar3
      00180C C0 02            [24] 2630 	push	ar2
      00180E E5 00            [12] 2631 	mov	a,_bp
      001810 24 0F            [12] 2632 	add	a,#0x0f
      001812 F8               [12] 2633 	mov	r0,a
      001813 E6               [12] 2634 	mov	a,@r0
      001814 C0 E0            [24] 2635 	push	acc
      001816 08               [12] 2636 	inc	r0
      001817 E6               [12] 2637 	mov	a,@r0
      001818 C0 E0            [24] 2638 	push	acc
      00181A 08               [12] 2639 	inc	r0
      00181B E6               [12] 2640 	mov	a,@r0
      00181C C0 E0            [24] 2641 	push	acc
      00181E 08               [12] 2642 	inc	r0
      00181F E6               [12] 2643 	mov	a,@r0
      001820 C0 E0            [24] 2644 	push	acc
      001822 8F 82            [24] 2645 	mov	dpl,r7
      001824 8E 83            [24] 2646 	mov	dph,r6
      001826 8D F0            [24] 2647 	mov	b,r5
      001828 78 8D            [12] 2648 	mov	r0,#_get_fat
      00182A 79 0F            [12] 2649 	mov	r1,#(_get_fat >> 8)
      00182C 7A 00            [12] 2650 	mov	r2,#(_get_fat >> 16)
      00182E 12 00 00         [24] 2651 	lcall	__sdcc_banked_call
      001831 AD 82            [24] 2652 	mov	r5,dpl
      001833 AE 83            [24] 2653 	mov	r6,dph
      001835 AC F0            [24] 2654 	mov	r4,b
      001837 FF               [12] 2655 	mov	r7,a
      001838 E5 81            [12] 2656 	mov	a,sp
      00183A 24 FC            [12] 2657 	add	a,#0xfc
      00183C F5 81            [12] 2658 	mov	sp,a
      00183E D0 02            [24] 2659 	pop	ar2
      001840 D0 03            [24] 2660 	pop	ar3
      001842 E5 00            [12] 2661 	mov	a,_bp
      001844 24 0F            [12] 2662 	add	a,#0x0f
      001846 F8               [12] 2663 	mov	r0,a
      001847 A6 05            [24] 2664 	mov	@r0,ar5
      001849 08               [12] 2665 	inc	r0
      00184A A6 06            [24] 2666 	mov	@r0,ar6
      00184C 08               [12] 2667 	inc	r0
      00184D A6 04            [24] 2668 	mov	@r0,ar4
      00184F 08               [12] 2669 	inc	r0
      001850 A6 07            [24] 2670 	mov	@r0,ar7
                                   2671 ;	FATFS\src\ff.c:1140: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
      001852 E5 00            [12] 2672 	mov	a,_bp
      001854 24 0F            [12] 2673 	add	a,#0x0f
      001856 F8               [12] 2674 	mov	r0,a
      001857 B6 FF 0E         [24] 2675 	cjne	@r0,#0xff,00172$
      00185A 08               [12] 2676 	inc	r0
      00185B B6 FF 0A         [24] 2677 	cjne	@r0,#0xff,00172$
      00185E 08               [12] 2678 	inc	r0
      00185F B6 FF 06         [24] 2679 	cjne	@r0,#0xff,00172$
      001862 08               [12] 2680 	inc	r0
      001863 B6 FF 02         [24] 2681 	cjne	@r0,#0xff,00172$
      001866 80 06            [24] 2682 	sjmp	00173$
      001868                       2683 00172$:
      001868 D0 02            [24] 2684 	pop	ar2
      00186A D0 03            [24] 2685 	pop	ar3
      00186C 80 0A            [24] 2686 	sjmp	00110$
      00186E                       2687 00173$:
      00186E D0 02            [24] 2688 	pop	ar2
      001870 D0 03            [24] 2689 	pop	ar3
      001872 75 82 01         [24] 2690 	mov	dpl,#0x01
      001875 02 1A 6C         [24] 2691 	ljmp	00122$
      001878                       2692 00110$:
                                   2693 ;	FATFS\src\ff.c:1141: if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
      001878 E5 00            [12] 2694 	mov	a,_bp
      00187A 24 0F            [12] 2695 	add	a,#0x0f
      00187C F8               [12] 2696 	mov	r0,a
      00187D C3               [12] 2697 	clr	c
      00187E E6               [12] 2698 	mov	a,@r0
      00187F 94 02            [12] 2699 	subb	a,#0x02
      001881 08               [12] 2700 	inc	r0
      001882 E6               [12] 2701 	mov	a,@r0
      001883 94 00            [12] 2702 	subb	a,#0x00
      001885 08               [12] 2703 	inc	r0
      001886 E6               [12] 2704 	mov	a,@r0
      001887 94 00            [12] 2705 	subb	a,#0x00
      001889 08               [12] 2706 	inc	r0
      00188A E6               [12] 2707 	mov	a,@r0
      00188B 94 00            [12] 2708 	subb	a,#0x00
      00188D 40 54            [24] 2709 	jc	00111$
      00188F C0 03            [24] 2710 	push	ar3
      001891 C0 02            [24] 2711 	push	ar2
      001893 A8 00            [24] 2712 	mov	r0,_bp
      001895 08               [12] 2713 	inc	r0
      001896 86 82            [24] 2714 	mov	dpl,@r0
      001898 08               [12] 2715 	inc	r0
      001899 86 83            [24] 2716 	mov	dph,@r0
      00189B 08               [12] 2717 	inc	r0
      00189C 86 F0            [24] 2718 	mov	b,@r0
      00189E 12 00 00         [24] 2719 	lcall	__gptrget
      0018A1 FF               [12] 2720 	mov	r7,a
      0018A2 A3               [24] 2721 	inc	dptr
      0018A3 12 00 00         [24] 2722 	lcall	__gptrget
      0018A6 FE               [12] 2723 	mov	r6,a
      0018A7 A3               [24] 2724 	inc	dptr
      0018A8 12 00 00         [24] 2725 	lcall	__gptrget
      0018AB FD               [12] 2726 	mov	r5,a
      0018AC 74 0A            [12] 2727 	mov	a,#0x0a
      0018AE 2F               [12] 2728 	add	a,r7
      0018AF FF               [12] 2729 	mov	r7,a
      0018B0 E4               [12] 2730 	clr	a
      0018B1 3E               [12] 2731 	addc	a,r6
      0018B2 FE               [12] 2732 	mov	r6,a
      0018B3 8F 82            [24] 2733 	mov	dpl,r7
      0018B5 8E 83            [24] 2734 	mov	dph,r6
      0018B7 8D F0            [24] 2735 	mov	b,r5
      0018B9 12 00 00         [24] 2736 	lcall	__gptrget
      0018BC FF               [12] 2737 	mov	r7,a
      0018BD A3               [24] 2738 	inc	dptr
      0018BE 12 00 00         [24] 2739 	lcall	__gptrget
      0018C1 FE               [12] 2740 	mov	r6,a
      0018C2 A3               [24] 2741 	inc	dptr
      0018C3 12 00 00         [24] 2742 	lcall	__gptrget
      0018C6 FD               [12] 2743 	mov	r5,a
      0018C7 A3               [24] 2744 	inc	dptr
      0018C8 12 00 00         [24] 2745 	lcall	__gptrget
      0018CB FC               [12] 2746 	mov	r4,a
      0018CC E5 00            [12] 2747 	mov	a,_bp
      0018CE 24 0F            [12] 2748 	add	a,#0x0f
      0018D0 F8               [12] 2749 	mov	r0,a
      0018D1 C3               [12] 2750 	clr	c
      0018D2 E6               [12] 2751 	mov	a,@r0
      0018D3 9F               [12] 2752 	subb	a,r7
      0018D4 08               [12] 2753 	inc	r0
      0018D5 E6               [12] 2754 	mov	a,@r0
      0018D6 9E               [12] 2755 	subb	a,r6
      0018D7 08               [12] 2756 	inc	r0
      0018D8 E6               [12] 2757 	mov	a,@r0
      0018D9 9D               [12] 2758 	subb	a,r5
      0018DA 08               [12] 2759 	inc	r0
      0018DB E6               [12] 2760 	mov	a,@r0
      0018DC 9C               [12] 2761 	subb	a,r4
      0018DD D0 02            [24] 2762 	pop	ar2
      0018DF D0 03            [24] 2763 	pop	ar3
      0018E1 40 06            [24] 2764 	jc	00112$
      0018E3                       2765 00111$:
                                   2766 ;	FATFS\src\ff.c:1142: return FR_INT_ERR;
      0018E3 75 82 02         [24] 2767 	mov	dpl,#0x02
      0018E6 02 1A 6C         [24] 2768 	ljmp	00122$
      0018E9                       2769 00112$:
                                   2770 ;	FATFS\src\ff.c:1143: idx -= ic;
      0018E9 E5 00            [12] 2771 	mov	a,_bp
      0018EB 24 FB            [12] 2772 	add	a,#0xfb
      0018ED F8               [12] 2773 	mov	r0,a
      0018EE E6               [12] 2774 	mov	a,@r0
      0018EF C3               [12] 2775 	clr	c
      0018F0 9B               [12] 2776 	subb	a,r3
      0018F1 F6               [12] 2777 	mov	@r0,a
      0018F2 08               [12] 2778 	inc	r0
      0018F3 E6               [12] 2779 	mov	a,@r0
      0018F4 9A               [12] 2780 	subb	a,r2
      0018F5 F6               [12] 2781 	mov	@r0,a
      0018F6 02 17 DD         [24] 2782 	ljmp	00114$
      0018F9                       2783 00116$:
                                   2784 ;	FATFS\src\ff.c:1145: sect = clust2sect(dp->fs, clst);
      0018F9 A8 00            [24] 2785 	mov	r0,_bp
      0018FB 08               [12] 2786 	inc	r0
      0018FC 86 82            [24] 2787 	mov	dpl,@r0
      0018FE 08               [12] 2788 	inc	r0
      0018FF 86 83            [24] 2789 	mov	dph,@r0
      001901 08               [12] 2790 	inc	r0
      001902 86 F0            [24] 2791 	mov	b,@r0
      001904 12 00 00         [24] 2792 	lcall	__gptrget
      001907 FF               [12] 2793 	mov	r7,a
      001908 A3               [24] 2794 	inc	dptr
      001909 12 00 00         [24] 2795 	lcall	__gptrget
      00190C FE               [12] 2796 	mov	r6,a
      00190D A3               [24] 2797 	inc	dptr
      00190E 12 00 00         [24] 2798 	lcall	__gptrget
      001911 FD               [12] 2799 	mov	r5,a
      001912 E5 00            [12] 2800 	mov	a,_bp
      001914 24 0F            [12] 2801 	add	a,#0x0f
      001916 F8               [12] 2802 	mov	r0,a
      001917 E6               [12] 2803 	mov	a,@r0
      001918 C0 E0            [24] 2804 	push	acc
      00191A 08               [12] 2805 	inc	r0
      00191B E6               [12] 2806 	mov	a,@r0
      00191C C0 E0            [24] 2807 	push	acc
      00191E 08               [12] 2808 	inc	r0
      00191F E6               [12] 2809 	mov	a,@r0
      001920 C0 E0            [24] 2810 	push	acc
      001922 08               [12] 2811 	inc	r0
      001923 E6               [12] 2812 	mov	a,@r0
      001924 C0 E0            [24] 2813 	push	acc
      001926 8F 82            [24] 2814 	mov	dpl,r7
      001928 8E 83            [24] 2815 	mov	dph,r6
      00192A 8D F0            [24] 2816 	mov	b,r5
      00192C 78 72            [12] 2817 	mov	r0,#_clust2sect
      00192E 79 0E            [12] 2818 	mov	r1,#(_clust2sect >> 8)
      001930 7A 00            [12] 2819 	mov	r2,#(_clust2sect >> 16)
      001932 12 00 00         [24] 2820 	lcall	__sdcc_banked_call
      001935 AC 82            [24] 2821 	mov	r4,dpl
      001937 AD 83            [24] 2822 	mov	r5,dph
      001939 AE F0            [24] 2823 	mov	r6,b
      00193B FF               [12] 2824 	mov	r7,a
      00193C E5 81            [12] 2825 	mov	a,sp
      00193E 24 FC            [12] 2826 	add	a,#0xfc
      001940 F5 81            [12] 2827 	mov	sp,a
      001942 E5 00            [12] 2828 	mov	a,_bp
      001944 24 0B            [12] 2829 	add	a,#0x0b
      001946 F8               [12] 2830 	mov	r0,a
      001947 A6 04            [24] 2831 	mov	@r0,ar4
      001949 08               [12] 2832 	inc	r0
      00194A A6 05            [24] 2833 	mov	@r0,ar5
      00194C 08               [12] 2834 	inc	r0
      00194D A6 06            [24] 2835 	mov	@r0,ar6
      00194F 08               [12] 2836 	inc	r0
      001950 A6 07            [24] 2837 	mov	@r0,ar7
      001952                       2838 00119$:
                                   2839 ;	FATFS\src\ff.c:1147: dp->clust = clst;	/* Current cluster# */
      001952 A8 00            [24] 2840 	mov	r0,_bp
      001954 08               [12] 2841 	inc	r0
      001955 74 0B            [12] 2842 	mov	a,#0x0b
      001957 26               [12] 2843 	add	a,@r0
      001958 FA               [12] 2844 	mov	r2,a
      001959 E4               [12] 2845 	clr	a
      00195A 08               [12] 2846 	inc	r0
      00195B 36               [12] 2847 	addc	a,@r0
      00195C FB               [12] 2848 	mov	r3,a
      00195D 08               [12] 2849 	inc	r0
      00195E 86 07            [24] 2850 	mov	ar7,@r0
      001960 8A 82            [24] 2851 	mov	dpl,r2
      001962 8B 83            [24] 2852 	mov	dph,r3
      001964 8F F0            [24] 2853 	mov	b,r7
      001966 E5 00            [12] 2854 	mov	a,_bp
      001968 24 0F            [12] 2855 	add	a,#0x0f
      00196A F8               [12] 2856 	mov	r0,a
      00196B E6               [12] 2857 	mov	a,@r0
      00196C 12 00 00         [24] 2858 	lcall	__gptrput
      00196F A3               [24] 2859 	inc	dptr
      001970 08               [12] 2860 	inc	r0
      001971 E6               [12] 2861 	mov	a,@r0
      001972 12 00 00         [24] 2862 	lcall	__gptrput
      001975 A3               [24] 2863 	inc	dptr
      001976 08               [12] 2864 	inc	r0
      001977 E6               [12] 2865 	mov	a,@r0
      001978 12 00 00         [24] 2866 	lcall	__gptrput
      00197B A3               [24] 2867 	inc	dptr
      00197C 08               [12] 2868 	inc	r0
      00197D E6               [12] 2869 	mov	a,@r0
      00197E 12 00 00         [24] 2870 	lcall	__gptrput
                                   2871 ;	FATFS\src\ff.c:1148: if (!sect) return FR_INT_ERR;
      001981 E5 00            [12] 2872 	mov	a,_bp
      001983 24 0B            [12] 2873 	add	a,#0x0b
      001985 F8               [12] 2874 	mov	r0,a
      001986 E6               [12] 2875 	mov	a,@r0
      001987 08               [12] 2876 	inc	r0
      001988 46               [12] 2877 	orl	a,@r0
      001989 08               [12] 2878 	inc	r0
      00198A 46               [12] 2879 	orl	a,@r0
      00198B 08               [12] 2880 	inc	r0
      00198C 46               [12] 2881 	orl	a,@r0
      00198D 70 06            [24] 2882 	jnz	00121$
      00198F 75 82 02         [24] 2883 	mov	dpl,#0x02
      001992 02 1A 6C         [24] 2884 	ljmp	00122$
      001995                       2885 00121$:
                                   2886 ;	FATFS\src\ff.c:1149: dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
      001995 A8 00            [24] 2887 	mov	r0,_bp
      001997 08               [12] 2888 	inc	r0
      001998 E5 00            [12] 2889 	mov	a,_bp
      00199A 24 07            [12] 2890 	add	a,#0x07
      00199C F9               [12] 2891 	mov	r1,a
      00199D 74 0F            [12] 2892 	mov	a,#0x0f
      00199F 26               [12] 2893 	add	a,@r0
      0019A0 F7               [12] 2894 	mov	@r1,a
      0019A1 E4               [12] 2895 	clr	a
      0019A2 08               [12] 2896 	inc	r0
      0019A3 36               [12] 2897 	addc	a,@r0
      0019A4 09               [12] 2898 	inc	r1
      0019A5 F7               [12] 2899 	mov	@r1,a
      0019A6 08               [12] 2900 	inc	r0
      0019A7 09               [12] 2901 	inc	r1
      0019A8 E6               [12] 2902 	mov	a,@r0
      0019A9 F7               [12] 2903 	mov	@r1,a
      0019AA E5 00            [12] 2904 	mov	a,_bp
      0019AC 24 FB            [12] 2905 	add	a,#0xfb
      0019AE F8               [12] 2906 	mov	r0,a
      0019AF 86 03            [24] 2907 	mov	ar3,@r0
      0019B1 08               [12] 2908 	inc	r0
      0019B2 E6               [12] 2909 	mov	a,@r0
      0019B3 C4               [12] 2910 	swap	a
      0019B4 CB               [12] 2911 	xch	a,r3
      0019B5 C4               [12] 2912 	swap	a
      0019B6 54 0F            [12] 2913 	anl	a,#0x0f
      0019B8 6B               [12] 2914 	xrl	a,r3
      0019B9 CB               [12] 2915 	xch	a,r3
      0019BA 54 0F            [12] 2916 	anl	a,#0x0f
      0019BC CB               [12] 2917 	xch	a,r3
      0019BD 6B               [12] 2918 	xrl	a,r3
      0019BE CB               [12] 2919 	xch	a,r3
      0019BF FA               [12] 2920 	mov	r2,a
      0019C0 E4               [12] 2921 	clr	a
      0019C1 FC               [12] 2922 	mov	r4,a
      0019C2 FF               [12] 2923 	mov	r7,a
      0019C3 E5 00            [12] 2924 	mov	a,_bp
      0019C5 24 0B            [12] 2925 	add	a,#0x0b
      0019C7 F8               [12] 2926 	mov	r0,a
      0019C8 EB               [12] 2927 	mov	a,r3
      0019C9 26               [12] 2928 	add	a,@r0
      0019CA FB               [12] 2929 	mov	r3,a
      0019CB EA               [12] 2930 	mov	a,r2
      0019CC 08               [12] 2931 	inc	r0
      0019CD 36               [12] 2932 	addc	a,@r0
      0019CE FA               [12] 2933 	mov	r2,a
      0019CF EC               [12] 2934 	mov	a,r4
      0019D0 08               [12] 2935 	inc	r0
      0019D1 36               [12] 2936 	addc	a,@r0
      0019D2 FC               [12] 2937 	mov	r4,a
      0019D3 EF               [12] 2938 	mov	a,r7
      0019D4 08               [12] 2939 	inc	r0
      0019D5 36               [12] 2940 	addc	a,@r0
      0019D6 FF               [12] 2941 	mov	r7,a
      0019D7 E5 00            [12] 2942 	mov	a,_bp
      0019D9 24 07            [12] 2943 	add	a,#0x07
      0019DB F8               [12] 2944 	mov	r0,a
      0019DC 86 82            [24] 2945 	mov	dpl,@r0
      0019DE 08               [12] 2946 	inc	r0
      0019DF 86 83            [24] 2947 	mov	dph,@r0
      0019E1 08               [12] 2948 	inc	r0
      0019E2 86 F0            [24] 2949 	mov	b,@r0
      0019E4 EB               [12] 2950 	mov	a,r3
      0019E5 12 00 00         [24] 2951 	lcall	__gptrput
      0019E8 A3               [24] 2952 	inc	dptr
      0019E9 EA               [12] 2953 	mov	a,r2
      0019EA 12 00 00         [24] 2954 	lcall	__gptrput
      0019ED A3               [24] 2955 	inc	dptr
      0019EE EC               [12] 2956 	mov	a,r4
      0019EF 12 00 00         [24] 2957 	lcall	__gptrput
      0019F2 A3               [24] 2958 	inc	dptr
      0019F3 EF               [12] 2959 	mov	a,r7
      0019F4 12 00 00         [24] 2960 	lcall	__gptrput
                                   2961 ;	FATFS\src\ff.c:1150: dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
      0019F7 A8 00            [24] 2962 	mov	r0,_bp
      0019F9 08               [12] 2963 	inc	r0
      0019FA 74 13            [12] 2964 	mov	a,#0x13
      0019FC 26               [12] 2965 	add	a,@r0
      0019FD FD               [12] 2966 	mov	r5,a
      0019FE E4               [12] 2967 	clr	a
      0019FF 08               [12] 2968 	inc	r0
      001A00 36               [12] 2969 	addc	a,@r0
      001A01 FE               [12] 2970 	mov	r6,a
      001A02 08               [12] 2971 	inc	r0
      001A03 86 07            [24] 2972 	mov	ar7,@r0
      001A05 A8 00            [24] 2973 	mov	r0,_bp
      001A07 08               [12] 2974 	inc	r0
      001A08 86 82            [24] 2975 	mov	dpl,@r0
      001A0A 08               [12] 2976 	inc	r0
      001A0B 86 83            [24] 2977 	mov	dph,@r0
      001A0D 08               [12] 2978 	inc	r0
      001A0E 86 F0            [24] 2979 	mov	b,@r0
      001A10 12 00 00         [24] 2980 	lcall	__gptrget
      001A13 FA               [12] 2981 	mov	r2,a
      001A14 A3               [24] 2982 	inc	dptr
      001A15 12 00 00         [24] 2983 	lcall	__gptrget
      001A18 FB               [12] 2984 	mov	r3,a
      001A19 A3               [24] 2985 	inc	dptr
      001A1A 12 00 00         [24] 2986 	lcall	__gptrget
      001A1D FC               [12] 2987 	mov	r4,a
      001A1E E5 00            [12] 2988 	mov	a,_bp
      001A20 24 07            [12] 2989 	add	a,#0x07
      001A22 F8               [12] 2990 	mov	r0,a
      001A23 74 26            [12] 2991 	mov	a,#0x26
      001A25 2A               [12] 2992 	add	a,r2
      001A26 F6               [12] 2993 	mov	@r0,a
      001A27 E4               [12] 2994 	clr	a
      001A28 3B               [12] 2995 	addc	a,r3
      001A29 08               [12] 2996 	inc	r0
      001A2A F6               [12] 2997 	mov	@r0,a
      001A2B 08               [12] 2998 	inc	r0
      001A2C A6 04            [24] 2999 	mov	@r0,ar4
      001A2E E5 00            [12] 3000 	mov	a,_bp
      001A30 24 FB            [12] 3001 	add	a,#0xfb
      001A32 F8               [12] 3002 	mov	r0,a
      001A33 74 0F            [12] 3003 	mov	a,#0x0f
      001A35 56               [12] 3004 	anl	a,@r0
      001A36 FB               [12] 3005 	mov	r3,a
      001A37 E4               [12] 3006 	clr	a
      001A38 23               [12] 3007 	rl	a
      001A39 54 E0            [12] 3008 	anl	a,#0xe0
      001A3B CB               [12] 3009 	xch	a,r3
      001A3C C4               [12] 3010 	swap	a
      001A3D 23               [12] 3011 	rl	a
      001A3E CB               [12] 3012 	xch	a,r3
      001A3F 6B               [12] 3013 	xrl	a,r3
      001A40 CB               [12] 3014 	xch	a,r3
      001A41 54 E0            [12] 3015 	anl	a,#0xe0
      001A43 CB               [12] 3016 	xch	a,r3
      001A44 6B               [12] 3017 	xrl	a,r3
      001A45 FC               [12] 3018 	mov	r4,a
      001A46 E5 00            [12] 3019 	mov	a,_bp
      001A48 24 07            [12] 3020 	add	a,#0x07
      001A4A F8               [12] 3021 	mov	r0,a
      001A4B EB               [12] 3022 	mov	a,r3
      001A4C 26               [12] 3023 	add	a,@r0
      001A4D FB               [12] 3024 	mov	r3,a
      001A4E EC               [12] 3025 	mov	a,r4
      001A4F 08               [12] 3026 	inc	r0
      001A50 36               [12] 3027 	addc	a,@r0
      001A51 FC               [12] 3028 	mov	r4,a
      001A52 08               [12] 3029 	inc	r0
      001A53 86 02            [24] 3030 	mov	ar2,@r0
      001A55 8D 82            [24] 3031 	mov	dpl,r5
      001A57 8E 83            [24] 3032 	mov	dph,r6
      001A59 8F F0            [24] 3033 	mov	b,r7
      001A5B EB               [12] 3034 	mov	a,r3
      001A5C 12 00 00         [24] 3035 	lcall	__gptrput
      001A5F A3               [24] 3036 	inc	dptr
      001A60 EC               [12] 3037 	mov	a,r4
      001A61 12 00 00         [24] 3038 	lcall	__gptrput
      001A64 A3               [24] 3039 	inc	dptr
      001A65 EA               [12] 3040 	mov	a,r2
      001A66 12 00 00         [24] 3041 	lcall	__gptrput
                                   3042 ;	FATFS\src\ff.c:1152: return FR_OK;
      001A69 75 82 00         [24] 3043 	mov	dpl,#0x00
      001A6C                       3044 00122$:
                                   3045 ;	FATFS\src\ff.c:1153: }
      001A6C 85 00 81         [24] 3046 	mov	sp,_bp
      001A6F D0 00            [24] 3047 	pop	_bp
      001A71 02 00 00         [24] 3048 	ljmp	__sdcc_banked_ret
                                   3049 ;------------------------------------------------------------
                                   3050 ;Allocation info for local variables in function 'dir_next'
                                   3051 ;------------------------------------------------------------
                                   3052 ;stretch                   Allocated to stack - _bp -5
                                   3053 ;dp                        Allocated to stack - _bp +1
                                   3054 ;clst                      Allocated to stack - _bp +25
                                   3055 ;i                         Allocated to stack - _bp +23
                                   3056 ;sloc0                     Allocated to stack - _bp +4
                                   3057 ;sloc1                     Allocated to stack - _bp +7
                                   3058 ;sloc2                     Allocated to stack - _bp +17
                                   3059 ;sloc3                     Allocated to stack - _bp +19
                                   3060 ;sloc4                     Allocated to stack - _bp +11
                                   3061 ;sloc5                     Allocated to stack - _bp +14
                                   3062 ;------------------------------------------------------------
                                   3063 ;	FATFS\src\ff.c:1163: FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
                                   3064 ;	-----------------------------------------
                                   3065 ;	 function dir_next
                                   3066 ;	-----------------------------------------
      001A74                       3067 _dir_next:
      001A74 C0 00            [24] 3068 	push	_bp
      001A76 85 81 00         [24] 3069 	mov	_bp,sp
      001A79 C0 82            [24] 3070 	push	dpl
      001A7B C0 83            [24] 3071 	push	dph
      001A7D C0 F0            [24] 3072 	push	b
      001A7F E5 81            [12] 3073 	mov	a,sp
      001A81 24 19            [12] 3074 	add	a,#0x19
      001A83 F5 81            [12] 3075 	mov	sp,a
                                   3076 ;	FATFS\src\ff.c:1172: i = dp->index + 1;
      001A85 A8 00            [24] 3077 	mov	r0,_bp
      001A87 08               [12] 3078 	inc	r0
      001A88 E5 00            [12] 3079 	mov	a,_bp
      001A8A 24 0E            [12] 3080 	add	a,#0x0e
      001A8C F9               [12] 3081 	mov	r1,a
      001A8D 74 05            [12] 3082 	mov	a,#0x05
      001A8F 26               [12] 3083 	add	a,@r0
      001A90 F7               [12] 3084 	mov	@r1,a
      001A91 E4               [12] 3085 	clr	a
      001A92 08               [12] 3086 	inc	r0
      001A93 36               [12] 3087 	addc	a,@r0
      001A94 09               [12] 3088 	inc	r1
      001A95 F7               [12] 3089 	mov	@r1,a
      001A96 08               [12] 3090 	inc	r0
      001A97 09               [12] 3091 	inc	r1
      001A98 E6               [12] 3092 	mov	a,@r0
      001A99 F7               [12] 3093 	mov	@r1,a
      001A9A E5 00            [12] 3094 	mov	a,_bp
      001A9C 24 0E            [12] 3095 	add	a,#0x0e
      001A9E F8               [12] 3096 	mov	r0,a
      001A9F 86 82            [24] 3097 	mov	dpl,@r0
      001AA1 08               [12] 3098 	inc	r0
      001AA2 86 83            [24] 3099 	mov	dph,@r0
      001AA4 08               [12] 3100 	inc	r0
      001AA5 86 F0            [24] 3101 	mov	b,@r0
      001AA7 12 00 00         [24] 3102 	lcall	__gptrget
      001AAA FE               [12] 3103 	mov	r6,a
      001AAB A3               [24] 3104 	inc	dptr
      001AAC 12 00 00         [24] 3105 	lcall	__gptrget
      001AAF FF               [12] 3106 	mov	r7,a
      001AB0 E5 00            [12] 3107 	mov	a,_bp
      001AB2 24 17            [12] 3108 	add	a,#0x17
      001AB4 F8               [12] 3109 	mov	r0,a
      001AB5 74 01            [12] 3110 	mov	a,#0x01
      001AB7 2E               [12] 3111 	add	a,r6
      001AB8 F6               [12] 3112 	mov	@r0,a
      001AB9 E4               [12] 3113 	clr	a
      001ABA 3F               [12] 3114 	addc	a,r7
      001ABB 08               [12] 3115 	inc	r0
      001ABC F6               [12] 3116 	mov	@r0,a
                                   3117 ;	FATFS\src\ff.c:1173: if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
      001ABD E5 00            [12] 3118 	mov	a,_bp
      001ABF 24 17            [12] 3119 	add	a,#0x17
      001AC1 F8               [12] 3120 	mov	r0,a
      001AC2 E6               [12] 3121 	mov	a,@r0
      001AC3 08               [12] 3122 	inc	r0
      001AC4 46               [12] 3123 	orl	a,@r0
      001AC5 60 3B            [24] 3124 	jz	00101$
      001AC7 A8 00            [24] 3125 	mov	r0,_bp
      001AC9 08               [12] 3126 	inc	r0
      001ACA E5 00            [12] 3127 	mov	a,_bp
      001ACC 24 04            [12] 3128 	add	a,#0x04
      001ACE F9               [12] 3129 	mov	r1,a
      001ACF 74 0F            [12] 3130 	mov	a,#0x0f
      001AD1 26               [12] 3131 	add	a,@r0
      001AD2 F7               [12] 3132 	mov	@r1,a
      001AD3 E4               [12] 3133 	clr	a
      001AD4 08               [12] 3134 	inc	r0
      001AD5 36               [12] 3135 	addc	a,@r0
      001AD6 09               [12] 3136 	inc	r1
      001AD7 F7               [12] 3137 	mov	@r1,a
      001AD8 08               [12] 3138 	inc	r0
      001AD9 09               [12] 3139 	inc	r1
      001ADA E6               [12] 3140 	mov	a,@r0
      001ADB F7               [12] 3141 	mov	@r1,a
      001ADC E5 00            [12] 3142 	mov	a,_bp
      001ADE 24 04            [12] 3143 	add	a,#0x04
      001AE0 F8               [12] 3144 	mov	r0,a
      001AE1 86 82            [24] 3145 	mov	dpl,@r0
      001AE3 08               [12] 3146 	inc	r0
      001AE4 86 83            [24] 3147 	mov	dph,@r0
      001AE6 08               [12] 3148 	inc	r0
      001AE7 86 F0            [24] 3149 	mov	b,@r0
      001AE9 12 00 00         [24] 3150 	lcall	__gptrget
      001AEC FF               [12] 3151 	mov	r7,a
      001AED A3               [24] 3152 	inc	dptr
      001AEE 12 00 00         [24] 3153 	lcall	__gptrget
      001AF1 FE               [12] 3154 	mov	r6,a
      001AF2 A3               [24] 3155 	inc	dptr
      001AF3 12 00 00         [24] 3156 	lcall	__gptrget
      001AF6 FC               [12] 3157 	mov	r4,a
      001AF7 A3               [24] 3158 	inc	dptr
      001AF8 12 00 00         [24] 3159 	lcall	__gptrget
      001AFB FD               [12] 3160 	mov	r5,a
      001AFC EF               [12] 3161 	mov	a,r7
      001AFD 4E               [12] 3162 	orl	a,r6
      001AFE 4C               [12] 3163 	orl	a,r4
      001AFF 4D               [12] 3164 	orl	a,r5
      001B00 70 06            [24] 3165 	jnz	00102$
      001B02                       3166 00101$:
                                   3167 ;	FATFS\src\ff.c:1174: return FR_NO_FILE;
      001B02 75 82 04         [24] 3168 	mov	dpl,#0x04
      001B05 02 1E 46         [24] 3169 	ljmp	00121$
      001B08                       3170 00102$:
                                   3171 ;	FATFS\src\ff.c:1176: if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
      001B08 E5 00            [12] 3172 	mov	a,_bp
      001B0A 24 17            [12] 3173 	add	a,#0x17
      001B0C F8               [12] 3174 	mov	r0,a
      001B0D E5 00            [12] 3175 	mov	a,_bp
      001B0F 24 11            [12] 3176 	add	a,#0x11
      001B11 F9               [12] 3177 	mov	r1,a
      001B12 74 0F            [12] 3178 	mov	a,#0x0f
      001B14 56               [12] 3179 	anl	a,@r0
      001B15 F7               [12] 3180 	mov	@r1,a
      001B16 09               [12] 3181 	inc	r1
      001B17 77 00            [12] 3182 	mov	@r1,#0x00
      001B19 E5 00            [12] 3183 	mov	a,_bp
      001B1B 24 11            [12] 3184 	add	a,#0x11
      001B1D F8               [12] 3185 	mov	r0,a
      001B1E E6               [12] 3186 	mov	a,@r0
      001B1F 08               [12] 3187 	inc	r0
      001B20 46               [12] 3188 	orl	a,@r0
      001B21 60 03            [24] 3189 	jz	00161$
      001B23 02 1D B5         [24] 3190 	ljmp	00120$
      001B26                       3191 00161$:
                                   3192 ;	FATFS\src\ff.c:1177: dp->sect++;					/* Next sector */
      001B26 74 01            [12] 3193 	mov	a,#0x01
      001B28 2F               [12] 3194 	add	a,r7
      001B29 FA               [12] 3195 	mov	r2,a
      001B2A E4               [12] 3196 	clr	a
      001B2B 3E               [12] 3197 	addc	a,r6
      001B2C FB               [12] 3198 	mov	r3,a
      001B2D E4               [12] 3199 	clr	a
      001B2E 3C               [12] 3200 	addc	a,r4
      001B2F FC               [12] 3201 	mov	r4,a
      001B30 E4               [12] 3202 	clr	a
      001B31 3D               [12] 3203 	addc	a,r5
      001B32 FD               [12] 3204 	mov	r5,a
      001B33 E5 00            [12] 3205 	mov	a,_bp
      001B35 24 04            [12] 3206 	add	a,#0x04
      001B37 F8               [12] 3207 	mov	r0,a
      001B38 86 82            [24] 3208 	mov	dpl,@r0
      001B3A 08               [12] 3209 	inc	r0
      001B3B 86 83            [24] 3210 	mov	dph,@r0
      001B3D 08               [12] 3211 	inc	r0
      001B3E 86 F0            [24] 3212 	mov	b,@r0
      001B40 EA               [12] 3213 	mov	a,r2
      001B41 12 00 00         [24] 3214 	lcall	__gptrput
      001B44 A3               [24] 3215 	inc	dptr
      001B45 EB               [12] 3216 	mov	a,r3
      001B46 12 00 00         [24] 3217 	lcall	__gptrput
      001B49 A3               [24] 3218 	inc	dptr
      001B4A EC               [12] 3219 	mov	a,r4
      001B4B 12 00 00         [24] 3220 	lcall	__gptrput
      001B4E A3               [24] 3221 	inc	dptr
      001B4F ED               [12] 3222 	mov	a,r5
      001B50 12 00 00         [24] 3223 	lcall	__gptrput
                                   3224 ;	FATFS\src\ff.c:1179: if (!dp->clust) {		/* Static table */
      001B53 A8 00            [24] 3225 	mov	r0,_bp
      001B55 08               [12] 3226 	inc	r0
      001B56 E5 00            [12] 3227 	mov	a,_bp
      001B58 24 07            [12] 3228 	add	a,#0x07
      001B5A F9               [12] 3229 	mov	r1,a
      001B5B 74 0B            [12] 3230 	mov	a,#0x0b
      001B5D 26               [12] 3231 	add	a,@r0
      001B5E F7               [12] 3232 	mov	@r1,a
      001B5F E4               [12] 3233 	clr	a
      001B60 08               [12] 3234 	inc	r0
      001B61 36               [12] 3235 	addc	a,@r0
      001B62 09               [12] 3236 	inc	r1
      001B63 F7               [12] 3237 	mov	@r1,a
      001B64 08               [12] 3238 	inc	r0
      001B65 09               [12] 3239 	inc	r1
      001B66 E6               [12] 3240 	mov	a,@r0
      001B67 F7               [12] 3241 	mov	@r1,a
      001B68 E5 00            [12] 3242 	mov	a,_bp
      001B6A 24 07            [12] 3243 	add	a,#0x07
      001B6C F8               [12] 3244 	mov	r0,a
      001B6D 86 82            [24] 3245 	mov	dpl,@r0
      001B6F 08               [12] 3246 	inc	r0
      001B70 86 83            [24] 3247 	mov	dph,@r0
      001B72 08               [12] 3248 	inc	r0
      001B73 86 F0            [24] 3249 	mov	b,@r0
      001B75 E5 00            [12] 3250 	mov	a,_bp
      001B77 24 13            [12] 3251 	add	a,#0x13
      001B79 F9               [12] 3252 	mov	r1,a
      001B7A 12 00 00         [24] 3253 	lcall	__gptrget
      001B7D F7               [12] 3254 	mov	@r1,a
      001B7E A3               [24] 3255 	inc	dptr
      001B7F 12 00 00         [24] 3256 	lcall	__gptrget
      001B82 09               [12] 3257 	inc	r1
      001B83 F7               [12] 3258 	mov	@r1,a
      001B84 A3               [24] 3259 	inc	dptr
      001B85 12 00 00         [24] 3260 	lcall	__gptrget
      001B88 09               [12] 3261 	inc	r1
      001B89 F7               [12] 3262 	mov	@r1,a
      001B8A A3               [24] 3263 	inc	dptr
      001B8B 12 00 00         [24] 3264 	lcall	__gptrget
      001B8E 09               [12] 3265 	inc	r1
      001B8F F7               [12] 3266 	mov	@r1,a
      001B90 E5 00            [12] 3267 	mov	a,_bp
      001B92 24 13            [12] 3268 	add	a,#0x13
      001B94 F8               [12] 3269 	mov	r0,a
      001B95 E6               [12] 3270 	mov	a,@r0
      001B96 08               [12] 3271 	inc	r0
      001B97 46               [12] 3272 	orl	a,@r0
      001B98 08               [12] 3273 	inc	r0
      001B99 46               [12] 3274 	orl	a,@r0
      001B9A 08               [12] 3275 	inc	r0
      001B9B 46               [12] 3276 	orl	a,@r0
      001B9C 70 45            [24] 3277 	jnz	00117$
                                   3278 ;	FATFS\src\ff.c:1180: if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
      001B9E A8 00            [24] 3279 	mov	r0,_bp
      001BA0 08               [12] 3280 	inc	r0
      001BA1 86 82            [24] 3281 	mov	dpl,@r0
      001BA3 08               [12] 3282 	inc	r0
      001BA4 86 83            [24] 3283 	mov	dph,@r0
      001BA6 08               [12] 3284 	inc	r0
      001BA7 86 F0            [24] 3285 	mov	b,@r0
      001BA9 12 00 00         [24] 3286 	lcall	__gptrget
      001BAC FB               [12] 3287 	mov	r3,a
      001BAD A3               [24] 3288 	inc	dptr
      001BAE 12 00 00         [24] 3289 	lcall	__gptrget
      001BB1 FC               [12] 3290 	mov	r4,a
      001BB2 A3               [24] 3291 	inc	dptr
      001BB3 12 00 00         [24] 3292 	lcall	__gptrget
      001BB6 FD               [12] 3293 	mov	r5,a
      001BB7 74 08            [12] 3294 	mov	a,#0x08
      001BB9 2B               [12] 3295 	add	a,r3
      001BBA FB               [12] 3296 	mov	r3,a
      001BBB E4               [12] 3297 	clr	a
      001BBC 3C               [12] 3298 	addc	a,r4
      001BBD FC               [12] 3299 	mov	r4,a
      001BBE 8B 82            [24] 3300 	mov	dpl,r3
      001BC0 8C 83            [24] 3301 	mov	dph,r4
      001BC2 8D F0            [24] 3302 	mov	b,r5
      001BC4 12 00 00         [24] 3303 	lcall	__gptrget
      001BC7 FB               [12] 3304 	mov	r3,a
      001BC8 A3               [24] 3305 	inc	dptr
      001BC9 12 00 00         [24] 3306 	lcall	__gptrget
      001BCC FC               [12] 3307 	mov	r4,a
      001BCD E5 00            [12] 3308 	mov	a,_bp
      001BCF 24 17            [12] 3309 	add	a,#0x17
      001BD1 F8               [12] 3310 	mov	r0,a
      001BD2 C3               [12] 3311 	clr	c
      001BD3 E6               [12] 3312 	mov	a,@r0
      001BD4 9B               [12] 3313 	subb	a,r3
      001BD5 08               [12] 3314 	inc	r0
      001BD6 E6               [12] 3315 	mov	a,@r0
      001BD7 9C               [12] 3316 	subb	a,r4
      001BD8 50 03            [24] 3317 	jnc	00163$
      001BDA 02 1D B5         [24] 3318 	ljmp	00120$
      001BDD                       3319 00163$:
                                   3320 ;	FATFS\src\ff.c:1181: return FR_NO_FILE;
      001BDD 75 82 04         [24] 3321 	mov	dpl,#0x04
      001BE0 02 1E 46         [24] 3322 	ljmp	00121$
      001BE3                       3323 00117$:
                                   3324 ;	FATFS\src\ff.c:1184: if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
      001BE3 E5 00            [12] 3325 	mov	a,_bp
      001BE5 24 17            [12] 3326 	add	a,#0x17
      001BE7 F8               [12] 3327 	mov	r0,a
      001BE8 86 04            [24] 3328 	mov	ar4,@r0
      001BEA 08               [12] 3329 	inc	r0
      001BEB E6               [12] 3330 	mov	a,@r0
      001BEC C4               [12] 3331 	swap	a
      001BED CC               [12] 3332 	xch	a,r4
      001BEE C4               [12] 3333 	swap	a
      001BEF 54 0F            [12] 3334 	anl	a,#0x0f
      001BF1 6C               [12] 3335 	xrl	a,r4
      001BF2 CC               [12] 3336 	xch	a,r4
      001BF3 54 0F            [12] 3337 	anl	a,#0x0f
      001BF5 CC               [12] 3338 	xch	a,r4
      001BF6 6C               [12] 3339 	xrl	a,r4
      001BF7 CC               [12] 3340 	xch	a,r4
      001BF8 FD               [12] 3341 	mov	r5,a
      001BF9 A8 00            [24] 3342 	mov	r0,_bp
      001BFB 08               [12] 3343 	inc	r0
      001BFC 86 82            [24] 3344 	mov	dpl,@r0
      001BFE 08               [12] 3345 	inc	r0
      001BFF 86 83            [24] 3346 	mov	dph,@r0
      001C01 08               [12] 3347 	inc	r0
      001C02 86 F0            [24] 3348 	mov	b,@r0
      001C04 E5 00            [12] 3349 	mov	a,_bp
      001C06 24 0B            [12] 3350 	add	a,#0x0b
      001C08 F9               [12] 3351 	mov	r1,a
      001C09 12 00 00         [24] 3352 	lcall	__gptrget
      001C0C F7               [12] 3353 	mov	@r1,a
      001C0D A3               [24] 3354 	inc	dptr
      001C0E 12 00 00         [24] 3355 	lcall	__gptrget
      001C11 09               [12] 3356 	inc	r1
      001C12 F7               [12] 3357 	mov	@r1,a
      001C13 A3               [24] 3358 	inc	dptr
      001C14 12 00 00         [24] 3359 	lcall	__gptrget
      001C17 09               [12] 3360 	inc	r1
      001C18 F7               [12] 3361 	mov	@r1,a
      001C19 E5 00            [12] 3362 	mov	a,_bp
      001C1B 24 0B            [12] 3363 	add	a,#0x0b
      001C1D F8               [12] 3364 	mov	r0,a
      001C1E 74 02            [12] 3365 	mov	a,#0x02
      001C20 26               [12] 3366 	add	a,@r0
      001C21 FA               [12] 3367 	mov	r2,a
      001C22 E4               [12] 3368 	clr	a
      001C23 08               [12] 3369 	inc	r0
      001C24 36               [12] 3370 	addc	a,@r0
      001C25 FB               [12] 3371 	mov	r3,a
      001C26 08               [12] 3372 	inc	r0
      001C27 86 07            [24] 3373 	mov	ar7,@r0
      001C29 8A 82            [24] 3374 	mov	dpl,r2
      001C2B 8B 83            [24] 3375 	mov	dph,r3
      001C2D 8F F0            [24] 3376 	mov	b,r7
      001C2F 12 00 00         [24] 3377 	lcall	__gptrget
      001C32 FA               [12] 3378 	mov	r2,a
      001C33 7F 00            [12] 3379 	mov	r7,#0x00
      001C35 1A               [12] 3380 	dec	r2
      001C36 BA FF 01         [24] 3381 	cjne	r2,#0xff,00164$
      001C39 1F               [12] 3382 	dec	r7
      001C3A                       3383 00164$:
      001C3A EA               [12] 3384 	mov	a,r2
      001C3B 52 04            [12] 3385 	anl	ar4,a
      001C3D EF               [12] 3386 	mov	a,r7
      001C3E 52 05            [12] 3387 	anl	ar5,a
      001C40 EC               [12] 3388 	mov	a,r4
      001C41 4D               [12] 3389 	orl	a,r5
      001C42 60 03            [24] 3390 	jz	00165$
      001C44 02 1D B5         [24] 3391 	ljmp	00120$
      001C47                       3392 00165$:
                                   3393 ;	FATFS\src\ff.c:1185: clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
      001C47 E5 00            [12] 3394 	mov	a,_bp
      001C49 24 13            [12] 3395 	add	a,#0x13
      001C4B F8               [12] 3396 	mov	r0,a
      001C4C E6               [12] 3397 	mov	a,@r0
      001C4D C0 E0            [24] 3398 	push	acc
      001C4F 08               [12] 3399 	inc	r0
      001C50 E6               [12] 3400 	mov	a,@r0
      001C51 C0 E0            [24] 3401 	push	acc
      001C53 08               [12] 3402 	inc	r0
      001C54 E6               [12] 3403 	mov	a,@r0
      001C55 C0 E0            [24] 3404 	push	acc
      001C57 08               [12] 3405 	inc	r0
      001C58 E6               [12] 3406 	mov	a,@r0
      001C59 C0 E0            [24] 3407 	push	acc
      001C5B E5 00            [12] 3408 	mov	a,_bp
      001C5D 24 0B            [12] 3409 	add	a,#0x0b
      001C5F F8               [12] 3410 	mov	r0,a
      001C60 86 82            [24] 3411 	mov	dpl,@r0
      001C62 08               [12] 3412 	inc	r0
      001C63 86 83            [24] 3413 	mov	dph,@r0
      001C65 08               [12] 3414 	inc	r0
      001C66 86 F0            [24] 3415 	mov	b,@r0
      001C68 78 8D            [12] 3416 	mov	r0,#_get_fat
      001C6A 79 0F            [12] 3417 	mov	r1,#(_get_fat >> 8)
      001C6C 7A 00            [12] 3418 	mov	r2,#(_get_fat >> 16)
      001C6E 12 00 00         [24] 3419 	lcall	__sdcc_banked_call
      001C71 AC 82            [24] 3420 	mov	r4,dpl
      001C73 AD 83            [24] 3421 	mov	r5,dph
      001C75 AE F0            [24] 3422 	mov	r6,b
      001C77 FF               [12] 3423 	mov	r7,a
      001C78 E5 81            [12] 3424 	mov	a,sp
      001C7A 24 FC            [12] 3425 	add	a,#0xfc
      001C7C F5 81            [12] 3426 	mov	sp,a
      001C7E E5 00            [12] 3427 	mov	a,_bp
      001C80 24 19            [12] 3428 	add	a,#0x19
      001C82 F8               [12] 3429 	mov	r0,a
      001C83 A6 04            [24] 3430 	mov	@r0,ar4
      001C85 08               [12] 3431 	inc	r0
      001C86 A6 05            [24] 3432 	mov	@r0,ar5
      001C88 08               [12] 3433 	inc	r0
      001C89 A6 06            [24] 3434 	mov	@r0,ar6
      001C8B 08               [12] 3435 	inc	r0
      001C8C A6 07            [24] 3436 	mov	@r0,ar7
                                   3437 ;	FATFS\src\ff.c:1186: if (clst <= 1) return FR_INT_ERR;
      001C8E E5 00            [12] 3438 	mov	a,_bp
      001C90 24 19            [12] 3439 	add	a,#0x19
      001C92 F8               [12] 3440 	mov	r0,a
      001C93 C3               [12] 3441 	clr	c
      001C94 74 01            [12] 3442 	mov	a,#0x01
      001C96 96               [12] 3443 	subb	a,@r0
      001C97 E4               [12] 3444 	clr	a
      001C98 08               [12] 3445 	inc	r0
      001C99 96               [12] 3446 	subb	a,@r0
      001C9A E4               [12] 3447 	clr	a
      001C9B 08               [12] 3448 	inc	r0
      001C9C 96               [12] 3449 	subb	a,@r0
      001C9D E4               [12] 3450 	clr	a
      001C9E 08               [12] 3451 	inc	r0
      001C9F 96               [12] 3452 	subb	a,@r0
      001CA0 40 06            [24] 3453 	jc	00107$
      001CA2 75 82 02         [24] 3454 	mov	dpl,#0x02
      001CA5 02 1E 46         [24] 3455 	ljmp	00121$
      001CA8                       3456 00107$:
                                   3457 ;	FATFS\src\ff.c:1187: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
      001CA8 E5 00            [12] 3458 	mov	a,_bp
      001CAA 24 19            [12] 3459 	add	a,#0x19
      001CAC F8               [12] 3460 	mov	r0,a
      001CAD B6 FF 12         [24] 3461 	cjne	@r0,#0xff,00109$
      001CB0 08               [12] 3462 	inc	r0
      001CB1 B6 FF 0E         [24] 3463 	cjne	@r0,#0xff,00109$
      001CB4 08               [12] 3464 	inc	r0
      001CB5 B6 FF 0A         [24] 3465 	cjne	@r0,#0xff,00109$
      001CB8 08               [12] 3466 	inc	r0
      001CB9 B6 FF 06         [24] 3467 	cjne	@r0,#0xff,00109$
      001CBC 75 82 01         [24] 3468 	mov	dpl,#0x01
      001CBF 02 1E 46         [24] 3469 	ljmp	00121$
      001CC2                       3470 00109$:
                                   3471 ;	FATFS\src\ff.c:1188: if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
      001CC2 A8 00            [24] 3472 	mov	r0,_bp
      001CC4 08               [12] 3473 	inc	r0
      001CC5 86 82            [24] 3474 	mov	dpl,@r0
      001CC7 08               [12] 3475 	inc	r0
      001CC8 86 83            [24] 3476 	mov	dph,@r0
      001CCA 08               [12] 3477 	inc	r0
      001CCB 86 F0            [24] 3478 	mov	b,@r0
      001CCD 12 00 00         [24] 3479 	lcall	__gptrget
      001CD0 FA               [12] 3480 	mov	r2,a
      001CD1 A3               [24] 3481 	inc	dptr
      001CD2 12 00 00         [24] 3482 	lcall	__gptrget
      001CD5 FB               [12] 3483 	mov	r3,a
      001CD6 A3               [24] 3484 	inc	dptr
      001CD7 12 00 00         [24] 3485 	lcall	__gptrget
      001CDA FF               [12] 3486 	mov	r7,a
      001CDB 74 0A            [12] 3487 	mov	a,#0x0a
      001CDD 2A               [12] 3488 	add	a,r2
      001CDE FA               [12] 3489 	mov	r2,a
      001CDF E4               [12] 3490 	clr	a
      001CE0 3B               [12] 3491 	addc	a,r3
      001CE1 FB               [12] 3492 	mov	r3,a
      001CE2 8A 82            [24] 3493 	mov	dpl,r2
      001CE4 8B 83            [24] 3494 	mov	dph,r3
      001CE6 8F F0            [24] 3495 	mov	b,r7
      001CE8 12 00 00         [24] 3496 	lcall	__gptrget
      001CEB FA               [12] 3497 	mov	r2,a
      001CEC A3               [24] 3498 	inc	dptr
      001CED 12 00 00         [24] 3499 	lcall	__gptrget
      001CF0 FB               [12] 3500 	mov	r3,a
      001CF1 A3               [24] 3501 	inc	dptr
      001CF2 12 00 00         [24] 3502 	lcall	__gptrget
      001CF5 FF               [12] 3503 	mov	r7,a
      001CF6 A3               [24] 3504 	inc	dptr
      001CF7 12 00 00         [24] 3505 	lcall	__gptrget
      001CFA FE               [12] 3506 	mov	r6,a
      001CFB E5 00            [12] 3507 	mov	a,_bp
      001CFD 24 19            [12] 3508 	add	a,#0x19
      001CFF F8               [12] 3509 	mov	r0,a
      001D00 C3               [12] 3510 	clr	c
      001D01 E6               [12] 3511 	mov	a,@r0
      001D02 9A               [12] 3512 	subb	a,r2
      001D03 08               [12] 3513 	inc	r0
      001D04 E6               [12] 3514 	mov	a,@r0
      001D05 9B               [12] 3515 	subb	a,r3
      001D06 08               [12] 3516 	inc	r0
      001D07 E6               [12] 3517 	mov	a,@r0
      001D08 9F               [12] 3518 	subb	a,r7
      001D09 08               [12] 3519 	inc	r0
      001D0A E6               [12] 3520 	mov	a,@r0
      001D0B 9E               [12] 3521 	subb	a,r6
      001D0C 40 16            [24] 3522 	jc	00113$
                                   3523 ;	FATFS\src\ff.c:1207: if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warning) */
      001D0E E5 00            [12] 3524 	mov	a,_bp
      001D10 24 FB            [12] 3525 	add	a,#0xfb
      001D12 F8               [12] 3526 	mov	r0,a
      001D13 E6               [12] 3527 	mov	a,@r0
      001D14 08               [12] 3528 	inc	r0
      001D15 46               [12] 3529 	orl	a,@r0
      001D16 70 06            [24] 3530 	jnz	00111$
      001D18 75 82 04         [24] 3531 	mov	dpl,#0x04
      001D1B 02 1E 46         [24] 3532 	ljmp	00121$
      001D1E                       3533 00111$:
                                   3534 ;	FATFS\src\ff.c:1208: return FR_NO_FILE;							/* Report EOT */
      001D1E 75 82 04         [24] 3535 	mov	dpl,#0x04
      001D21 02 1E 46         [24] 3536 	ljmp	00121$
      001D24                       3537 00113$:
                                   3538 ;	FATFS\src\ff.c:1211: dp->clust = clst;				/* Initialize data for new cluster */
      001D24 E5 00            [12] 3539 	mov	a,_bp
      001D26 24 07            [12] 3540 	add	a,#0x07
      001D28 F8               [12] 3541 	mov	r0,a
      001D29 86 82            [24] 3542 	mov	dpl,@r0
      001D2B 08               [12] 3543 	inc	r0
      001D2C 86 83            [24] 3544 	mov	dph,@r0
      001D2E 08               [12] 3545 	inc	r0
      001D2F 86 F0            [24] 3546 	mov	b,@r0
      001D31 E5 00            [12] 3547 	mov	a,_bp
      001D33 24 19            [12] 3548 	add	a,#0x19
      001D35 F9               [12] 3549 	mov	r1,a
      001D36 E7               [12] 3550 	mov	a,@r1
      001D37 12 00 00         [24] 3551 	lcall	__gptrput
      001D3A A3               [24] 3552 	inc	dptr
      001D3B 09               [12] 3553 	inc	r1
      001D3C E7               [12] 3554 	mov	a,@r1
      001D3D 12 00 00         [24] 3555 	lcall	__gptrput
      001D40 A3               [24] 3556 	inc	dptr
      001D41 09               [12] 3557 	inc	r1
      001D42 E7               [12] 3558 	mov	a,@r1
      001D43 12 00 00         [24] 3559 	lcall	__gptrput
      001D46 A3               [24] 3560 	inc	dptr
      001D47 09               [12] 3561 	inc	r1
      001D48 E7               [12] 3562 	mov	a,@r1
      001D49 12 00 00         [24] 3563 	lcall	__gptrput
                                   3564 ;	FATFS\src\ff.c:1212: dp->sect = clust2sect(dp->fs, clst);
      001D4C A8 00            [24] 3565 	mov	r0,_bp
      001D4E 08               [12] 3566 	inc	r0
      001D4F 86 82            [24] 3567 	mov	dpl,@r0
      001D51 08               [12] 3568 	inc	r0
      001D52 86 83            [24] 3569 	mov	dph,@r0
      001D54 08               [12] 3570 	inc	r0
      001D55 86 F0            [24] 3571 	mov	b,@r0
      001D57 12 00 00         [24] 3572 	lcall	__gptrget
      001D5A FD               [12] 3573 	mov	r5,a
      001D5B A3               [24] 3574 	inc	dptr
      001D5C 12 00 00         [24] 3575 	lcall	__gptrget
      001D5F FE               [12] 3576 	mov	r6,a
      001D60 A3               [24] 3577 	inc	dptr
      001D61 12 00 00         [24] 3578 	lcall	__gptrget
      001D64 FF               [12] 3579 	mov	r7,a
      001D65 E5 00            [12] 3580 	mov	a,_bp
      001D67 24 19            [12] 3581 	add	a,#0x19
      001D69 F8               [12] 3582 	mov	r0,a
      001D6A E6               [12] 3583 	mov	a,@r0
      001D6B C0 E0            [24] 3584 	push	acc
      001D6D 08               [12] 3585 	inc	r0
      001D6E E6               [12] 3586 	mov	a,@r0
      001D6F C0 E0            [24] 3587 	push	acc
      001D71 08               [12] 3588 	inc	r0
      001D72 E6               [12] 3589 	mov	a,@r0
      001D73 C0 E0            [24] 3590 	push	acc
      001D75 08               [12] 3591 	inc	r0
      001D76 E6               [12] 3592 	mov	a,@r0
      001D77 C0 E0            [24] 3593 	push	acc
      001D79 8D 82            [24] 3594 	mov	dpl,r5
      001D7B 8E 83            [24] 3595 	mov	dph,r6
      001D7D 8F F0            [24] 3596 	mov	b,r7
      001D7F 78 72            [12] 3597 	mov	r0,#_clust2sect
      001D81 79 0E            [12] 3598 	mov	r1,#(_clust2sect >> 8)
      001D83 7A 00            [12] 3599 	mov	r2,#(_clust2sect >> 16)
      001D85 12 00 00         [24] 3600 	lcall	__sdcc_banked_call
      001D88 AC 82            [24] 3601 	mov	r4,dpl
      001D8A AD 83            [24] 3602 	mov	r5,dph
      001D8C AE F0            [24] 3603 	mov	r6,b
      001D8E FF               [12] 3604 	mov	r7,a
      001D8F E5 81            [12] 3605 	mov	a,sp
      001D91 24 FC            [12] 3606 	add	a,#0xfc
      001D93 F5 81            [12] 3607 	mov	sp,a
      001D95 E5 00            [12] 3608 	mov	a,_bp
      001D97 24 04            [12] 3609 	add	a,#0x04
      001D99 F8               [12] 3610 	mov	r0,a
      001D9A 86 82            [24] 3611 	mov	dpl,@r0
      001D9C 08               [12] 3612 	inc	r0
      001D9D 86 83            [24] 3613 	mov	dph,@r0
      001D9F 08               [12] 3614 	inc	r0
      001DA0 86 F0            [24] 3615 	mov	b,@r0
      001DA2 EC               [12] 3616 	mov	a,r4
      001DA3 12 00 00         [24] 3617 	lcall	__gptrput
      001DA6 A3               [24] 3618 	inc	dptr
      001DA7 ED               [12] 3619 	mov	a,r5
      001DA8 12 00 00         [24] 3620 	lcall	__gptrput
      001DAB A3               [24] 3621 	inc	dptr
      001DAC EE               [12] 3622 	mov	a,r6
      001DAD 12 00 00         [24] 3623 	lcall	__gptrput
      001DB0 A3               [24] 3624 	inc	dptr
      001DB1 EF               [12] 3625 	mov	a,r7
      001DB2 12 00 00         [24] 3626 	lcall	__gptrput
      001DB5                       3627 00120$:
                                   3628 ;	FATFS\src\ff.c:1217: dp->index = (WORD)i;	/* Current index */
      001DB5 E5 00            [12] 3629 	mov	a,_bp
      001DB7 24 0E            [12] 3630 	add	a,#0x0e
      001DB9 F8               [12] 3631 	mov	r0,a
      001DBA 86 82            [24] 3632 	mov	dpl,@r0
      001DBC 08               [12] 3633 	inc	r0
      001DBD 86 83            [24] 3634 	mov	dph,@r0
      001DBF 08               [12] 3635 	inc	r0
      001DC0 86 F0            [24] 3636 	mov	b,@r0
      001DC2 E5 00            [12] 3637 	mov	a,_bp
      001DC4 24 17            [12] 3638 	add	a,#0x17
      001DC6 F9               [12] 3639 	mov	r1,a
      001DC7 E7               [12] 3640 	mov	a,@r1
      001DC8 12 00 00         [24] 3641 	lcall	__gptrput
      001DCB A3               [24] 3642 	inc	dptr
      001DCC 09               [12] 3643 	inc	r1
      001DCD E7               [12] 3644 	mov	a,@r1
      001DCE 12 00 00         [24] 3645 	lcall	__gptrput
                                   3646 ;	FATFS\src\ff.c:1218: dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
      001DD1 A8 00            [24] 3647 	mov	r0,_bp
      001DD3 08               [12] 3648 	inc	r0
      001DD4 74 13            [12] 3649 	mov	a,#0x13
      001DD6 26               [12] 3650 	add	a,@r0
      001DD7 FD               [12] 3651 	mov	r5,a
      001DD8 E4               [12] 3652 	clr	a
      001DD9 08               [12] 3653 	inc	r0
      001DDA 36               [12] 3654 	addc	a,@r0
      001DDB FE               [12] 3655 	mov	r6,a
      001DDC 08               [12] 3656 	inc	r0
      001DDD 86 07            [24] 3657 	mov	ar7,@r0
      001DDF A8 00            [24] 3658 	mov	r0,_bp
      001DE1 08               [12] 3659 	inc	r0
      001DE2 86 82            [24] 3660 	mov	dpl,@r0
      001DE4 08               [12] 3661 	inc	r0
      001DE5 86 83            [24] 3662 	mov	dph,@r0
      001DE7 08               [12] 3663 	inc	r0
      001DE8 86 F0            [24] 3664 	mov	b,@r0
      001DEA 12 00 00         [24] 3665 	lcall	__gptrget
      001DED FA               [12] 3666 	mov	r2,a
      001DEE A3               [24] 3667 	inc	dptr
      001DEF 12 00 00         [24] 3668 	lcall	__gptrget
      001DF2 FB               [12] 3669 	mov	r3,a
      001DF3 A3               [24] 3670 	inc	dptr
      001DF4 12 00 00         [24] 3671 	lcall	__gptrget
      001DF7 FC               [12] 3672 	mov	r4,a
      001DF8 E5 00            [12] 3673 	mov	a,_bp
      001DFA 24 0E            [12] 3674 	add	a,#0x0e
      001DFC F8               [12] 3675 	mov	r0,a
      001DFD 74 26            [12] 3676 	mov	a,#0x26
      001DFF 2A               [12] 3677 	add	a,r2
      001E00 F6               [12] 3678 	mov	@r0,a
      001E01 E4               [12] 3679 	clr	a
      001E02 3B               [12] 3680 	addc	a,r3
      001E03 08               [12] 3681 	inc	r0
      001E04 F6               [12] 3682 	mov	@r0,a
      001E05 08               [12] 3683 	inc	r0
      001E06 A6 04            [24] 3684 	mov	@r0,ar4
      001E08 E5 00            [12] 3685 	mov	a,_bp
      001E0A 24 11            [12] 3686 	add	a,#0x11
      001E0C F8               [12] 3687 	mov	r0,a
      001E0D 86 03            [24] 3688 	mov	ar3,@r0
      001E0F 08               [12] 3689 	inc	r0
      001E10 E6               [12] 3690 	mov	a,@r0
      001E11 C4               [12] 3691 	swap	a
      001E12 23               [12] 3692 	rl	a
      001E13 54 E0            [12] 3693 	anl	a,#0xe0
      001E15 CB               [12] 3694 	xch	a,r3
      001E16 C4               [12] 3695 	swap	a
      001E17 23               [12] 3696 	rl	a
      001E18 CB               [12] 3697 	xch	a,r3
      001E19 6B               [12] 3698 	xrl	a,r3
      001E1A CB               [12] 3699 	xch	a,r3
      001E1B 54 E0            [12] 3700 	anl	a,#0xe0
      001E1D CB               [12] 3701 	xch	a,r3
      001E1E 6B               [12] 3702 	xrl	a,r3
      001E1F FC               [12] 3703 	mov	r4,a
      001E20 E5 00            [12] 3704 	mov	a,_bp
      001E22 24 0E            [12] 3705 	add	a,#0x0e
      001E24 F8               [12] 3706 	mov	r0,a
      001E25 EB               [12] 3707 	mov	a,r3
      001E26 26               [12] 3708 	add	a,@r0
      001E27 FB               [12] 3709 	mov	r3,a
      001E28 EC               [12] 3710 	mov	a,r4
      001E29 08               [12] 3711 	inc	r0
      001E2A 36               [12] 3712 	addc	a,@r0
      001E2B FC               [12] 3713 	mov	r4,a
      001E2C 08               [12] 3714 	inc	r0
      001E2D 86 02            [24] 3715 	mov	ar2,@r0
      001E2F 8D 82            [24] 3716 	mov	dpl,r5
      001E31 8E 83            [24] 3717 	mov	dph,r6
      001E33 8F F0            [24] 3718 	mov	b,r7
      001E35 EB               [12] 3719 	mov	a,r3
      001E36 12 00 00         [24] 3720 	lcall	__gptrput
      001E39 A3               [24] 3721 	inc	dptr
      001E3A EC               [12] 3722 	mov	a,r4
      001E3B 12 00 00         [24] 3723 	lcall	__gptrput
      001E3E A3               [24] 3724 	inc	dptr
      001E3F EA               [12] 3725 	mov	a,r2
      001E40 12 00 00         [24] 3726 	lcall	__gptrput
                                   3727 ;	FATFS\src\ff.c:1220: return FR_OK;
      001E43 75 82 00         [24] 3728 	mov	dpl,#0x00
      001E46                       3729 00121$:
                                   3730 ;	FATFS\src\ff.c:1221: }
      001E46 85 00 81         [24] 3731 	mov	sp,_bp
      001E49 D0 00            [24] 3732 	pop	_bp
      001E4B 02 00 00         [24] 3733 	ljmp	__sdcc_banked_ret
                                   3734 ;------------------------------------------------------------
                                   3735 ;Allocation info for local variables in function 'ld_clust'
                                   3736 ;------------------------------------------------------------
                                   3737 ;dir                       Allocated to stack - _bp -6
                                   3738 ;fs                        Allocated to stack - _bp +1
                                   3739 ;cl                        Allocated to stack - _bp +4
                                   3740 ;------------------------------------------------------------
                                   3741 ;	FATFS\src\ff.c:1268: DWORD ld_clust (
                                   3742 ;	-----------------------------------------
                                   3743 ;	 function ld_clust
                                   3744 ;	-----------------------------------------
      001E4E                       3745 _ld_clust:
      001E4E C0 00            [24] 3746 	push	_bp
      001E50 85 81 00         [24] 3747 	mov	_bp,sp
      001E53 C0 82            [24] 3748 	push	dpl
      001E55 C0 83            [24] 3749 	push	dph
      001E57 C0 F0            [24] 3750 	push	b
      001E59 E5 81            [12] 3751 	mov	a,sp
      001E5B 24 04            [12] 3752 	add	a,#0x04
      001E5D F5 81            [12] 3753 	mov	sp,a
                                   3754 ;	FATFS\src\ff.c:1275: cl = LD_WORD(dir+DIR_FstClusLO);
      001E5F E5 00            [12] 3755 	mov	a,_bp
      001E61 24 FA            [12] 3756 	add	a,#0xfa
      001E63 F8               [12] 3757 	mov	r0,a
      001E64 74 1A            [12] 3758 	mov	a,#0x1a
      001E66 26               [12] 3759 	add	a,@r0
      001E67 FA               [12] 3760 	mov	r2,a
      001E68 E4               [12] 3761 	clr	a
      001E69 08               [12] 3762 	inc	r0
      001E6A 36               [12] 3763 	addc	a,@r0
      001E6B FB               [12] 3764 	mov	r3,a
      001E6C 08               [12] 3765 	inc	r0
      001E6D 86 04            [24] 3766 	mov	ar4,@r0
      001E6F 74 01            [12] 3767 	mov	a,#0x01
      001E71 2A               [12] 3768 	add	a,r2
      001E72 FD               [12] 3769 	mov	r5,a
      001E73 E4               [12] 3770 	clr	a
      001E74 3B               [12] 3771 	addc	a,r3
      001E75 FE               [12] 3772 	mov	r6,a
      001E76 8C 07            [24] 3773 	mov	ar7,r4
      001E78 8D 82            [24] 3774 	mov	dpl,r5
      001E7A 8E 83            [24] 3775 	mov	dph,r6
      001E7C 8F F0            [24] 3776 	mov	b,r7
      001E7E 12 00 00         [24] 3777 	lcall	__gptrget
      001E81 FF               [12] 3778 	mov	r7,a
      001E82 7D 00            [12] 3779 	mov	r5,#0x00
      001E84 8A 82            [24] 3780 	mov	dpl,r2
      001E86 8B 83            [24] 3781 	mov	dph,r3
      001E88 8C F0            [24] 3782 	mov	b,r4
      001E8A 12 00 00         [24] 3783 	lcall	__gptrget
      001E8D FA               [12] 3784 	mov	r2,a
      001E8E 7E 00            [12] 3785 	mov	r6,#0x00
      001E90 42 05            [12] 3786 	orl	ar5,a
      001E92 EE               [12] 3787 	mov	a,r6
      001E93 42 07            [12] 3788 	orl	ar7,a
      001E95 E5 00            [12] 3789 	mov	a,_bp
      001E97 24 04            [12] 3790 	add	a,#0x04
      001E99 F8               [12] 3791 	mov	r0,a
      001E9A A6 05            [24] 3792 	mov	@r0,ar5
      001E9C 08               [12] 3793 	inc	r0
      001E9D A6 07            [24] 3794 	mov	@r0,ar7
      001E9F 08               [12] 3795 	inc	r0
      001EA0 76 00            [12] 3796 	mov	@r0,#0x00
      001EA2 08               [12] 3797 	inc	r0
      001EA3 76 00            [12] 3798 	mov	@r0,#0x00
                                   3799 ;	FATFS\src\ff.c:1276: if (fs->fs_type == FS_FAT32)
      001EA5 A8 00            [24] 3800 	mov	r0,_bp
      001EA7 08               [12] 3801 	inc	r0
      001EA8 86 82            [24] 3802 	mov	dpl,@r0
      001EAA 08               [12] 3803 	inc	r0
      001EAB 86 83            [24] 3804 	mov	dph,@r0
      001EAD 08               [12] 3805 	inc	r0
      001EAE 86 F0            [24] 3806 	mov	b,@r0
      001EB0 12 00 00         [24] 3807 	lcall	__gptrget
      001EB3 FB               [12] 3808 	mov	r3,a
      001EB4 BB 03 53         [24] 3809 	cjne	r3,#0x03,00102$
                                   3810 ;	FATFS\src\ff.c:1277: cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
      001EB7 E5 00            [12] 3811 	mov	a,_bp
      001EB9 24 FA            [12] 3812 	add	a,#0xfa
      001EBB F8               [12] 3813 	mov	r0,a
      001EBC 74 14            [12] 3814 	mov	a,#0x14
      001EBE 26               [12] 3815 	add	a,@r0
      001EBF FA               [12] 3816 	mov	r2,a
      001EC0 E4               [12] 3817 	clr	a
      001EC1 08               [12] 3818 	inc	r0
      001EC2 36               [12] 3819 	addc	a,@r0
      001EC3 FB               [12] 3820 	mov	r3,a
      001EC4 08               [12] 3821 	inc	r0
      001EC5 86 07            [24] 3822 	mov	ar7,@r0
      001EC7 74 01            [12] 3823 	mov	a,#0x01
      001EC9 2A               [12] 3824 	add	a,r2
      001ECA FC               [12] 3825 	mov	r4,a
      001ECB E4               [12] 3826 	clr	a
      001ECC 3B               [12] 3827 	addc	a,r3
      001ECD FD               [12] 3828 	mov	r5,a
      001ECE 8F 06            [24] 3829 	mov	ar6,r7
      001ED0 8C 82            [24] 3830 	mov	dpl,r4
      001ED2 8D 83            [24] 3831 	mov	dph,r5
      001ED4 8E F0            [24] 3832 	mov	b,r6
      001ED6 12 00 00         [24] 3833 	lcall	__gptrget
      001ED9 FC               [12] 3834 	mov	r4,a
      001EDA 7E 00            [12] 3835 	mov	r6,#0x00
      001EDC 8A 82            [24] 3836 	mov	dpl,r2
      001EDE 8B 83            [24] 3837 	mov	dph,r3
      001EE0 8F F0            [24] 3838 	mov	b,r7
      001EE2 12 00 00         [24] 3839 	lcall	__gptrget
      001EE5 FA               [12] 3840 	mov	r2,a
      001EE6 7F 00            [12] 3841 	mov	r7,#0x00
      001EE8 42 06            [12] 3842 	orl	ar6,a
      001EEA EF               [12] 3843 	mov	a,r7
      001EEB 42 04            [12] 3844 	orl	ar4,a
      001EED 8E 05            [24] 3845 	mov	ar5,r6
      001EEF 8C 07            [24] 3846 	mov	ar7,r4
      001EF1 8D 06            [24] 3847 	mov	ar6,r5
      001EF3 E4               [12] 3848 	clr	a
      001EF4 FD               [12] 3849 	mov	r5,a
      001EF5 FC               [12] 3850 	mov	r4,a
      001EF6 E5 00            [12] 3851 	mov	a,_bp
      001EF8 24 04            [12] 3852 	add	a,#0x04
      001EFA F8               [12] 3853 	mov	r0,a
      001EFB ED               [12] 3854 	mov	a,r5
      001EFC 46               [12] 3855 	orl	a,@r0
      001EFD F6               [12] 3856 	mov	@r0,a
      001EFE EC               [12] 3857 	mov	a,r4
      001EFF 08               [12] 3858 	inc	r0
      001F00 46               [12] 3859 	orl	a,@r0
      001F01 F6               [12] 3860 	mov	@r0,a
      001F02 EE               [12] 3861 	mov	a,r6
      001F03 08               [12] 3862 	inc	r0
      001F04 46               [12] 3863 	orl	a,@r0
      001F05 F6               [12] 3864 	mov	@r0,a
      001F06 EF               [12] 3865 	mov	a,r7
      001F07 08               [12] 3866 	inc	r0
      001F08 46               [12] 3867 	orl	a,@r0
      001F09 F6               [12] 3868 	mov	@r0,a
      001F0A                       3869 00102$:
                                   3870 ;	FATFS\src\ff.c:1279: return cl;
      001F0A E5 00            [12] 3871 	mov	a,_bp
      001F0C 24 04            [12] 3872 	add	a,#0x04
      001F0E F8               [12] 3873 	mov	r0,a
      001F0F 86 82            [24] 3874 	mov	dpl,@r0
      001F11 08               [12] 3875 	inc	r0
      001F12 86 83            [24] 3876 	mov	dph,@r0
      001F14 08               [12] 3877 	inc	r0
      001F15 86 F0            [24] 3878 	mov	b,@r0
      001F17 08               [12] 3879 	inc	r0
      001F18 E6               [12] 3880 	mov	a,@r0
                                   3881 ;	FATFS\src\ff.c:1280: }
      001F19 85 00 81         [24] 3882 	mov	sp,_bp
      001F1C D0 00            [24] 3883 	pop	_bp
      001F1E 02 00 00         [24] 3884 	ljmp	__sdcc_banked_ret
                                   3885 ;------------------------------------------------------------
                                   3886 ;Allocation info for local variables in function 'cmp_lfn'
                                   3887 ;------------------------------------------------------------
                                   3888 ;dir                       Allocated to stack - _bp -6
                                   3889 ;lfnbuf                    Allocated to stack - _bp +1
                                   3890 ;i                         Allocated to stack - _bp +9
                                   3891 ;s                         Allocated to registers r6 r7 
                                   3892 ;wc                        Allocated to stack - _bp +11
                                   3893 ;uc                        Allocated to registers r5 r4 
                                   3894 ;sloc0                     Allocated to stack - _bp +7
                                   3895 ;sloc1                     Allocated to stack - _bp +4
                                   3896 ;------------------------------------------------------------
                                   3897 ;	FATFS\src\ff.c:1307: int cmp_lfn (			/* 1:Matched, 0:Not matched */
                                   3898 ;	-----------------------------------------
                                   3899 ;	 function cmp_lfn
                                   3900 ;	-----------------------------------------
      001F21                       3901 _cmp_lfn:
      001F21 C0 00            [24] 3902 	push	_bp
      001F23 85 81 00         [24] 3903 	mov	_bp,sp
      001F26 C0 82            [24] 3904 	push	dpl
      001F28 C0 83            [24] 3905 	push	dph
      001F2A C0 F0            [24] 3906 	push	b
      001F2C E5 81            [12] 3907 	mov	a,sp
      001F2E 24 09            [12] 3908 	add	a,#0x09
      001F30 F5 81            [12] 3909 	mov	sp,a
                                   3910 ;	FATFS\src\ff.c:1316: i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
      001F32 E5 00            [12] 3911 	mov	a,_bp
      001F34 24 FA            [12] 3912 	add	a,#0xfa
      001F36 F8               [12] 3913 	mov	r0,a
      001F37 E5 00            [12] 3914 	mov	a,_bp
      001F39 24 04            [12] 3915 	add	a,#0x04
      001F3B F9               [12] 3916 	mov	r1,a
      001F3C E6               [12] 3917 	mov	a,@r0
      001F3D F7               [12] 3918 	mov	@r1,a
      001F3E 08               [12] 3919 	inc	r0
      001F3F 09               [12] 3920 	inc	r1
      001F40 E6               [12] 3921 	mov	a,@r0
      001F41 F7               [12] 3922 	mov	@r1,a
      001F42 08               [12] 3923 	inc	r0
      001F43 09               [12] 3924 	inc	r1
      001F44 E6               [12] 3925 	mov	a,@r0
      001F45 F7               [12] 3926 	mov	@r1,a
      001F46 E5 00            [12] 3927 	mov	a,_bp
      001F48 24 04            [12] 3928 	add	a,#0x04
      001F4A F8               [12] 3929 	mov	r0,a
      001F4B 86 82            [24] 3930 	mov	dpl,@r0
      001F4D 08               [12] 3931 	inc	r0
      001F4E 86 83            [24] 3932 	mov	dph,@r0
      001F50 08               [12] 3933 	inc	r0
      001F51 86 F0            [24] 3934 	mov	b,@r0
      001F53 12 00 00         [24] 3935 	lcall	__gptrget
      001F56 FF               [12] 3936 	mov	r7,a
      001F57 7E 00            [12] 3937 	mov	r6,#0x00
      001F59 53 07 BF         [24] 3938 	anl	ar7,#0xbf
      001F5C 1F               [12] 3939 	dec	r7
      001F5D BF FF 01         [24] 3940 	cjne	r7,#0xff,00150$
      001F60 1E               [12] 3941 	dec	r6
      001F61                       3942 00150$:
      001F61 C0 07            [24] 3943 	push	ar7
      001F63 C0 06            [24] 3944 	push	ar6
      001F65 90 00 0D         [24] 3945 	mov	dptr,#0x000d
      001F68 12 01 0E         [24] 3946 	lcall	__mulint
      001F6B AE 82            [24] 3947 	mov	r6,dpl
      001F6D AF 83            [24] 3948 	mov	r7,dph
      001F6F 15 81            [12] 3949 	dec	sp
      001F71 15 81            [12] 3950 	dec	sp
      001F73 E5 00            [12] 3951 	mov	a,_bp
      001F75 24 09            [12] 3952 	add	a,#0x09
      001F77 F8               [12] 3953 	mov	r0,a
      001F78 A6 06            [24] 3954 	mov	@r0,ar6
      001F7A 08               [12] 3955 	inc	r0
      001F7B A6 07            [24] 3956 	mov	@r0,ar7
                                   3957 ;	FATFS\src\ff.c:1317: s = 0; wc = 1;
      001F7D E5 00            [12] 3958 	mov	a,_bp
      001F7F 24 0B            [12] 3959 	add	a,#0x0b
      001F81 F8               [12] 3960 	mov	r0,a
      001F82 76 01            [12] 3961 	mov	@r0,#0x01
      001F84 08               [12] 3962 	inc	r0
      001F85 76 00            [12] 3963 	mov	@r0,#0x00
                                   3964 ;	FATFS\src\ff.c:1318: do {
      001F87 E5 00            [12] 3965 	mov	a,_bp
      001F89 24 09            [12] 3966 	add	a,#0x09
      001F8B F8               [12] 3967 	mov	r0,a
      001F8C E5 00            [12] 3968 	mov	a,_bp
      001F8E 24 07            [12] 3969 	add	a,#0x07
      001F90 F9               [12] 3970 	mov	r1,a
      001F91 E6               [12] 3971 	mov	a,@r0
      001F92 F7               [12] 3972 	mov	@r1,a
      001F93 08               [12] 3973 	inc	r0
      001F94 09               [12] 3974 	inc	r1
      001F95 E6               [12] 3975 	mov	a,@r0
      001F96 F7               [12] 3976 	mov	@r1,a
      001F97 7E 00            [12] 3977 	mov	r6,#0x00
      001F99 7F 00            [12] 3978 	mov	r7,#0x00
      001F9B                       3979 00109$:
                                   3980 ;	FATFS\src\ff.c:1319: uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
      001F9B EE               [12] 3981 	mov	a,r6
      001F9C 24 0A            [12] 3982 	add	a,#_LfnOfs
      001F9E F5 82            [12] 3983 	mov	dpl,a
      001FA0 EF               [12] 3984 	mov	a,r7
      001FA1 34 85            [12] 3985 	addc	a,#(_LfnOfs >> 8)
      001FA3 F5 83            [12] 3986 	mov	dph,a
      001FA5 E4               [12] 3987 	clr	a
      001FA6 93               [24] 3988 	movc	a,@a+dptr
      001FA7 FD               [12] 3989 	mov	r5,a
      001FA8 C0 06            [24] 3990 	push	ar6
      001FAA C0 07            [24] 3991 	push	ar7
      001FAC E5 00            [12] 3992 	mov	a,_bp
      001FAE 24 04            [12] 3993 	add	a,#0x04
      001FB0 F8               [12] 3994 	mov	r0,a
      001FB1 ED               [12] 3995 	mov	a,r5
      001FB2 26               [12] 3996 	add	a,@r0
      001FB3 FD               [12] 3997 	mov	r5,a
      001FB4 E4               [12] 3998 	clr	a
      001FB5 08               [12] 3999 	inc	r0
      001FB6 36               [12] 4000 	addc	a,@r0
      001FB7 FE               [12] 4001 	mov	r6,a
      001FB8 08               [12] 4002 	inc	r0
      001FB9 86 07            [24] 4003 	mov	ar7,@r0
      001FBB 74 01            [12] 4004 	mov	a,#0x01
      001FBD 2D               [12] 4005 	add	a,r5
      001FBE FA               [12] 4006 	mov	r2,a
      001FBF E4               [12] 4007 	clr	a
      001FC0 3E               [12] 4008 	addc	a,r6
      001FC1 FB               [12] 4009 	mov	r3,a
      001FC2 8F 04            [24] 4010 	mov	ar4,r7
      001FC4 8A 82            [24] 4011 	mov	dpl,r2
      001FC6 8B 83            [24] 4012 	mov	dph,r3
      001FC8 8C F0            [24] 4013 	mov	b,r4
      001FCA 12 00 00         [24] 4014 	lcall	__gptrget
      001FCD FC               [12] 4015 	mov	r4,a
      001FCE 7A 00            [12] 4016 	mov	r2,#0x00
      001FD0 8D 82            [24] 4017 	mov	dpl,r5
      001FD2 8E 83            [24] 4018 	mov	dph,r6
      001FD4 8F F0            [24] 4019 	mov	b,r7
      001FD6 12 00 00         [24] 4020 	lcall	__gptrget
      001FD9 7F 00            [12] 4021 	mov	r7,#0x00
      001FDB 42 02            [12] 4022 	orl	ar2,a
      001FDD EF               [12] 4023 	mov	a,r7
      001FDE 42 04            [12] 4024 	orl	ar4,a
      001FE0 8A 05            [24] 4025 	mov	ar5,r2
                                   4026 ;	FATFS\src\ff.c:1320: if (wc) {	/* Last character has not been processed */
      001FE2 E5 00            [12] 4027 	mov	a,_bp
      001FE4 24 0B            [12] 4028 	add	a,#0x0b
      001FE6 F8               [12] 4029 	mov	r0,a
      001FE7 E6               [12] 4030 	mov	a,@r0
      001FE8 08               [12] 4031 	inc	r0
      001FE9 46               [12] 4032 	orl	a,@r0
      001FEA D0 07            [24] 4033 	pop	ar7
      001FEC D0 06            [24] 4034 	pop	ar6
      001FEE 70 03            [24] 4035 	jnz	00151$
      001FF0 02 20 9A         [24] 4036 	ljmp	00107$
      001FF3                       4037 00151$:
                                   4038 ;	FATFS\src\ff.c:1321: wc = ff_wtoupper(uc);		/* Convert it to upper case */
      001FF3 8D 82            [24] 4039 	mov	dpl,r5
      001FF5 8C 83            [24] 4040 	mov	dph,r4
      001FF7 C0 07            [24] 4041 	push	ar7
      001FF9 C0 06            [24] 4042 	push	ar6
      001FFB 78 88            [12] 4043 	mov	r0,#_ff_wtoupper
      001FFD 79 06            [12] 4044 	mov	r1,#(_ff_wtoupper >> 8)
      001FFF 7A 00            [12] 4045 	mov	r2,#(_ff_wtoupper >> 16)
      002001 12 00 00         [24] 4046 	lcall	__sdcc_banked_call
      002004 AD 82            [24] 4047 	mov	r5,dpl
      002006 AC 83            [24] 4048 	mov	r4,dph
      002008 D0 06            [24] 4049 	pop	ar6
      00200A D0 07            [24] 4050 	pop	ar7
      00200C E5 00            [12] 4051 	mov	a,_bp
      00200E 24 0B            [12] 4052 	add	a,#0x0b
      002010 F8               [12] 4053 	mov	r0,a
      002011 A6 05            [24] 4054 	mov	@r0,ar5
      002013 08               [12] 4055 	inc	r0
      002014 A6 04            [24] 4056 	mov	@r0,ar4
                                   4057 ;	FATFS\src\ff.c:1322: if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
      002016 E5 00            [12] 4058 	mov	a,_bp
      002018 24 07            [12] 4059 	add	a,#0x07
      00201A F8               [12] 4060 	mov	r0,a
      00201B C3               [12] 4061 	clr	c
      00201C E6               [12] 4062 	mov	a,@r0
      00201D 94 FF            [12] 4063 	subb	a,#0xff
      00201F 08               [12] 4064 	inc	r0
      002020 E6               [12] 4065 	mov	a,@r0
      002021 94 00            [12] 4066 	subb	a,#0x00
      002023 50 70            [24] 4067 	jnc	00101$
      002025 E5 00            [12] 4068 	mov	a,_bp
      002027 24 07            [12] 4069 	add	a,#0x07
      002029 F8               [12] 4070 	mov	r0,a
      00202A 86 04            [24] 4071 	mov	ar4,@r0
      00202C 08               [12] 4072 	inc	r0
      00202D 86 05            [24] 4073 	mov	ar5,@r0
      00202F E5 00            [12] 4074 	mov	a,_bp
      002031 24 07            [12] 4075 	add	a,#0x07
      002033 F8               [12] 4076 	mov	r0,a
      002034 06               [12] 4077 	inc	@r0
      002035 B6 00 02         [24] 4078 	cjne	@r0,#0x00,00153$
      002038 08               [12] 4079 	inc	r0
      002039 06               [12] 4080 	inc	@r0
      00203A                       4081 00153$:
      00203A E5 00            [12] 4082 	mov	a,_bp
      00203C 24 07            [12] 4083 	add	a,#0x07
      00203E F8               [12] 4084 	mov	r0,a
      00203F E5 00            [12] 4085 	mov	a,_bp
      002041 24 09            [12] 4086 	add	a,#0x09
      002043 F9               [12] 4087 	mov	r1,a
      002044 E6               [12] 4088 	mov	a,@r0
      002045 F7               [12] 4089 	mov	@r1,a
      002046 08               [12] 4090 	inc	r0
      002047 09               [12] 4091 	inc	r1
      002048 E6               [12] 4092 	mov	a,@r0
      002049 F7               [12] 4093 	mov	@r1,a
      00204A EC               [12] 4094 	mov	a,r4
      00204B 2C               [12] 4095 	add	a,r4
      00204C FC               [12] 4096 	mov	r4,a
      00204D ED               [12] 4097 	mov	a,r5
      00204E 33               [12] 4098 	rlc	a
      00204F FD               [12] 4099 	mov	r5,a
      002050 A8 00            [24] 4100 	mov	r0,_bp
      002052 08               [12] 4101 	inc	r0
      002053 EC               [12] 4102 	mov	a,r4
      002054 26               [12] 4103 	add	a,@r0
      002055 FC               [12] 4104 	mov	r4,a
      002056 ED               [12] 4105 	mov	a,r5
      002057 08               [12] 4106 	inc	r0
      002058 36               [12] 4107 	addc	a,@r0
      002059 FD               [12] 4108 	mov	r5,a
      00205A 08               [12] 4109 	inc	r0
      00205B 86 03            [24] 4110 	mov	ar3,@r0
      00205D 8C 82            [24] 4111 	mov	dpl,r4
      00205F 8D 83            [24] 4112 	mov	dph,r5
      002061 8B F0            [24] 4113 	mov	b,r3
      002063 12 00 00         [24] 4114 	lcall	__gptrget
      002066 FC               [12] 4115 	mov	r4,a
      002067 A3               [24] 4116 	inc	dptr
      002068 12 00 00         [24] 4117 	lcall	__gptrget
      00206B FD               [12] 4118 	mov	r5,a
      00206C 8C 82            [24] 4119 	mov	dpl,r4
      00206E 8D 83            [24] 4120 	mov	dph,r5
      002070 C0 07            [24] 4121 	push	ar7
      002072 C0 06            [24] 4122 	push	ar6
      002074 78 88            [12] 4123 	mov	r0,#_ff_wtoupper
      002076 79 06            [12] 4124 	mov	r1,#(_ff_wtoupper >> 8)
      002078 7A 00            [12] 4125 	mov	r2,#(_ff_wtoupper >> 16)
      00207A 12 00 00         [24] 4126 	lcall	__sdcc_banked_call
      00207D AC 82            [24] 4127 	mov	r4,dpl
      00207F AD 83            [24] 4128 	mov	r5,dph
      002081 D0 06            [24] 4129 	pop	ar6
      002083 D0 07            [24] 4130 	pop	ar7
      002085 E5 00            [12] 4131 	mov	a,_bp
      002087 24 0B            [12] 4132 	add	a,#0x0b
      002089 F8               [12] 4133 	mov	r0,a
      00208A E6               [12] 4134 	mov	a,@r0
      00208B B5 04 07         [24] 4135 	cjne	a,ar4,00154$
      00208E 08               [12] 4136 	inc	r0
      00208F E6               [12] 4137 	mov	a,@r0
      002090 B5 05 02         [24] 4138 	cjne	a,ar5,00154$
      002093 80 12            [24] 4139 	sjmp	00110$
      002095                       4140 00154$:
      002095                       4141 00101$:
                                   4142 ;	FATFS\src\ff.c:1323: return 0;				/* Not matched */
      002095 90 00 00         [24] 4143 	mov	dptr,#0x0000
      002098 80 70            [24] 4144 	sjmp	00116$
      00209A                       4145 00107$:
                                   4146 ;	FATFS\src\ff.c:1325: if (uc != 0xFFFF) return 0;	/* Check filler */
      00209A BD FF 05         [24] 4147 	cjne	r5,#0xff,00155$
      00209D BC FF 02         [24] 4148 	cjne	r4,#0xff,00155$
      0020A0 80 05            [24] 4149 	sjmp	00110$
      0020A2                       4150 00155$:
      0020A2 90 00 00         [24] 4151 	mov	dptr,#0x0000
      0020A5 80 63            [24] 4152 	sjmp	00116$
      0020A7                       4153 00110$:
                                   4154 ;	FATFS\src\ff.c:1327: } while (++s < 13);				/* Repeat until all characters in the entry are checked */
      0020A7 0E               [12] 4155 	inc	r6
      0020A8 BE 00 01         [24] 4156 	cjne	r6,#0x00,00156$
      0020AB 0F               [12] 4157 	inc	r7
      0020AC                       4158 00156$:
      0020AC C3               [12] 4159 	clr	c
      0020AD EE               [12] 4160 	mov	a,r6
      0020AE 94 0D            [12] 4161 	subb	a,#0x0d
      0020B0 EF               [12] 4162 	mov	a,r7
      0020B1 94 00            [12] 4163 	subb	a,#0x00
      0020B3 50 03            [24] 4164 	jnc	00157$
      0020B5 02 1F 9B         [24] 4165 	ljmp	00109$
      0020B8                       4166 00157$:
                                   4167 ;	FATFS\src\ff.c:1329: if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
      0020B8 E5 00            [12] 4168 	mov	a,_bp
      0020BA 24 04            [12] 4169 	add	a,#0x04
      0020BC F8               [12] 4170 	mov	r0,a
      0020BD 86 82            [24] 4171 	mov	dpl,@r0
      0020BF 08               [12] 4172 	inc	r0
      0020C0 86 83            [24] 4173 	mov	dph,@r0
      0020C2 08               [12] 4174 	inc	r0
      0020C3 86 F0            [24] 4175 	mov	b,@r0
      0020C5 12 00 00         [24] 4176 	lcall	__gptrget
      0020C8 FF               [12] 4177 	mov	r7,a
      0020C9 30 E6 3B         [24] 4178 	jnb	acc.6,00113$
      0020CC E5 00            [12] 4179 	mov	a,_bp
      0020CE 24 0B            [12] 4180 	add	a,#0x0b
      0020D0 F8               [12] 4181 	mov	r0,a
      0020D1 E6               [12] 4182 	mov	a,@r0
      0020D2 08               [12] 4183 	inc	r0
      0020D3 46               [12] 4184 	orl	a,@r0
      0020D4 60 31            [24] 4185 	jz	00113$
      0020D6 E5 00            [12] 4186 	mov	a,_bp
      0020D8 24 09            [12] 4187 	add	a,#0x09
      0020DA F8               [12] 4188 	mov	r0,a
      0020DB E6               [12] 4189 	mov	a,@r0
      0020DC 25 E0            [12] 4190 	add	a,acc
      0020DE FE               [12] 4191 	mov	r6,a
      0020DF 08               [12] 4192 	inc	r0
      0020E0 E6               [12] 4193 	mov	a,@r0
      0020E1 33               [12] 4194 	rlc	a
      0020E2 FF               [12] 4195 	mov	r7,a
      0020E3 A8 00            [24] 4196 	mov	r0,_bp
      0020E5 08               [12] 4197 	inc	r0
      0020E6 EE               [12] 4198 	mov	a,r6
      0020E7 26               [12] 4199 	add	a,@r0
      0020E8 FE               [12] 4200 	mov	r6,a
      0020E9 EF               [12] 4201 	mov	a,r7
      0020EA 08               [12] 4202 	inc	r0
      0020EB 36               [12] 4203 	addc	a,@r0
      0020EC FF               [12] 4204 	mov	r7,a
      0020ED 08               [12] 4205 	inc	r0
      0020EE 86 05            [24] 4206 	mov	ar5,@r0
      0020F0 8E 82            [24] 4207 	mov	dpl,r6
      0020F2 8F 83            [24] 4208 	mov	dph,r7
      0020F4 8D F0            [24] 4209 	mov	b,r5
      0020F6 12 00 00         [24] 4210 	lcall	__gptrget
      0020F9 FE               [12] 4211 	mov	r6,a
      0020FA A3               [24] 4212 	inc	dptr
      0020FB 12 00 00         [24] 4213 	lcall	__gptrget
      0020FE FF               [12] 4214 	mov	r7,a
      0020FF 4E               [12] 4215 	orl	a,r6
      002100 60 05            [24] 4216 	jz	00113$
                                   4217 ;	FATFS\src\ff.c:1330: return 0;
      002102 90 00 00         [24] 4218 	mov	dptr,#0x0000
      002105 80 03            [24] 4219 	sjmp	00116$
      002107                       4220 00113$:
                                   4221 ;	FATFS\src\ff.c:1332: return 1;						/* The part of LFN matched */
      002107 90 00 01         [24] 4222 	mov	dptr,#0x0001
      00210A                       4223 00116$:
                                   4224 ;	FATFS\src\ff.c:1333: }
      00210A 85 00 81         [24] 4225 	mov	sp,_bp
      00210D D0 00            [24] 4226 	pop	_bp
      00210F 02 00 00         [24] 4227 	ljmp	__sdcc_banked_ret
                                   4228 ;------------------------------------------------------------
                                   4229 ;Allocation info for local variables in function 'pick_lfn'
                                   4230 ;------------------------------------------------------------
                                   4231 ;dir                       Allocated to stack - _bp -6
                                   4232 ;lfnbuf                    Allocated to stack - _bp +6
                                   4233 ;i                         Allocated to stack - _bp +11
                                   4234 ;s                         Allocated to registers r6 r7 
                                   4235 ;wc                        Allocated to stack - _bp +13
                                   4236 ;uc                        Allocated to stack - _bp +9
                                   4237 ;sloc0                     Allocated to stack - _bp +4
                                   4238 ;sloc1                     Allocated to stack - _bp +1
                                   4239 ;------------------------------------------------------------
                                   4240 ;	FATFS\src\ff.c:1338: int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
                                   4241 ;	-----------------------------------------
                                   4242 ;	 function pick_lfn
                                   4243 ;	-----------------------------------------
      002112                       4244 _pick_lfn:
      002112 C0 00            [24] 4245 	push	_bp
      002114 E5 81            [12] 4246 	mov	a,sp
      002116 F5 00            [12] 4247 	mov	_bp,a
      002118 24 0E            [12] 4248 	add	a,#0x0e
      00211A F5 81            [12] 4249 	mov	sp,a
      00211C C8               [12] 4250 	xch	a,r0
      00211D E5 00            [12] 4251 	mov	a,_bp
      00211F 24 06            [12] 4252 	add	a,#0x06
      002121 C8               [12] 4253 	xch	a,r0
      002122 A6 82            [24] 4254 	mov	@r0,dpl
      002124 08               [12] 4255 	inc	r0
      002125 A6 83            [24] 4256 	mov	@r0,dph
      002127 08               [12] 4257 	inc	r0
      002128 A6 F0            [24] 4258 	mov	@r0,b
                                   4259 ;	FATFS\src\ff.c:1347: i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
      00212A E5 00            [12] 4260 	mov	a,_bp
      00212C 24 FA            [12] 4261 	add	a,#0xfa
      00212E F8               [12] 4262 	mov	r0,a
      00212F A9 00            [24] 4263 	mov	r1,_bp
      002131 09               [12] 4264 	inc	r1
      002132 E6               [12] 4265 	mov	a,@r0
      002133 F7               [12] 4266 	mov	@r1,a
      002134 08               [12] 4267 	inc	r0
      002135 09               [12] 4268 	inc	r1
      002136 E6               [12] 4269 	mov	a,@r0
      002137 F7               [12] 4270 	mov	@r1,a
      002138 08               [12] 4271 	inc	r0
      002139 09               [12] 4272 	inc	r1
      00213A E6               [12] 4273 	mov	a,@r0
      00213B F7               [12] 4274 	mov	@r1,a
      00213C A8 00            [24] 4275 	mov	r0,_bp
      00213E 08               [12] 4276 	inc	r0
      00213F 86 82            [24] 4277 	mov	dpl,@r0
      002141 08               [12] 4278 	inc	r0
      002142 86 83            [24] 4279 	mov	dph,@r0
      002144 08               [12] 4280 	inc	r0
      002145 86 F0            [24] 4281 	mov	b,@r0
      002147 12 00 00         [24] 4282 	lcall	__gptrget
      00214A FF               [12] 4283 	mov	r7,a
      00214B 53 07 3F         [24] 4284 	anl	ar7,#0x3f
      00214E 7E 00            [12] 4285 	mov	r6,#0x00
      002150 1F               [12] 4286 	dec	r7
      002151 BF FF 01         [24] 4287 	cjne	r7,#0xff,00145$
      002154 1E               [12] 4288 	dec	r6
      002155                       4289 00145$:
      002155 C0 07            [24] 4290 	push	ar7
      002157 C0 06            [24] 4291 	push	ar6
      002159 90 00 0D         [24] 4292 	mov	dptr,#0x000d
      00215C 12 01 0E         [24] 4293 	lcall	__mulint
      00215F AE 82            [24] 4294 	mov	r6,dpl
      002161 AF 83            [24] 4295 	mov	r7,dph
      002163 15 81            [12] 4296 	dec	sp
      002165 15 81            [12] 4297 	dec	sp
      002167 E5 00            [12] 4298 	mov	a,_bp
      002169 24 0B            [12] 4299 	add	a,#0x0b
      00216B F8               [12] 4300 	mov	r0,a
      00216C A6 06            [24] 4301 	mov	@r0,ar6
      00216E 08               [12] 4302 	inc	r0
      00216F A6 07            [24] 4303 	mov	@r0,ar7
                                   4304 ;	FATFS\src\ff.c:1349: s = 0; wc = 1;
      002171 E5 00            [12] 4305 	mov	a,_bp
      002173 24 0D            [12] 4306 	add	a,#0x0d
      002175 F8               [12] 4307 	mov	r0,a
      002176 76 01            [12] 4308 	mov	@r0,#0x01
      002178 08               [12] 4309 	inc	r0
      002179 76 00            [12] 4310 	mov	@r0,#0x00
                                   4311 ;	FATFS\src\ff.c:1350: do {
      00217B E5 00            [12] 4312 	mov	a,_bp
      00217D 24 0B            [12] 4313 	add	a,#0x0b
      00217F F8               [12] 4314 	mov	r0,a
      002180 E5 00            [12] 4315 	mov	a,_bp
      002182 24 04            [12] 4316 	add	a,#0x04
      002184 F9               [12] 4317 	mov	r1,a
      002185 E6               [12] 4318 	mov	a,@r0
      002186 F7               [12] 4319 	mov	@r1,a
      002187 08               [12] 4320 	inc	r0
      002188 09               [12] 4321 	inc	r1
      002189 E6               [12] 4322 	mov	a,@r0
      00218A F7               [12] 4323 	mov	@r1,a
      00218B 7E 00            [12] 4324 	mov	r6,#0x00
      00218D 7F 00            [12] 4325 	mov	r7,#0x00
      00218F                       4326 00108$:
                                   4327 ;	FATFS\src\ff.c:1351: uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
      00218F EE               [12] 4328 	mov	a,r6
      002190 24 0A            [12] 4329 	add	a,#_LfnOfs
      002192 F5 82            [12] 4330 	mov	dpl,a
      002194 EF               [12] 4331 	mov	a,r7
      002195 34 85            [12] 4332 	addc	a,#(_LfnOfs >> 8)
      002197 F5 83            [12] 4333 	mov	dph,a
      002199 E4               [12] 4334 	clr	a
      00219A 93               [24] 4335 	movc	a,@a+dptr
      00219B FD               [12] 4336 	mov	r5,a
      00219C C0 06            [24] 4337 	push	ar6
      00219E C0 07            [24] 4338 	push	ar7
      0021A0 A8 00            [24] 4339 	mov	r0,_bp
      0021A2 08               [12] 4340 	inc	r0
      0021A3 ED               [12] 4341 	mov	a,r5
      0021A4 26               [12] 4342 	add	a,@r0
      0021A5 FD               [12] 4343 	mov	r5,a
      0021A6 E4               [12] 4344 	clr	a
      0021A7 08               [12] 4345 	inc	r0
      0021A8 36               [12] 4346 	addc	a,@r0
      0021A9 FE               [12] 4347 	mov	r6,a
      0021AA 08               [12] 4348 	inc	r0
      0021AB 86 07            [24] 4349 	mov	ar7,@r0
      0021AD 74 01            [12] 4350 	mov	a,#0x01
      0021AF 2D               [12] 4351 	add	a,r5
      0021B0 FA               [12] 4352 	mov	r2,a
      0021B1 E4               [12] 4353 	clr	a
      0021B2 3E               [12] 4354 	addc	a,r6
      0021B3 FB               [12] 4355 	mov	r3,a
      0021B4 8F 04            [24] 4356 	mov	ar4,r7
      0021B6 8A 82            [24] 4357 	mov	dpl,r2
      0021B8 8B 83            [24] 4358 	mov	dph,r3
      0021BA 8C F0            [24] 4359 	mov	b,r4
      0021BC 12 00 00         [24] 4360 	lcall	__gptrget
      0021BF FC               [12] 4361 	mov	r4,a
      0021C0 7A 00            [12] 4362 	mov	r2,#0x00
      0021C2 8D 82            [24] 4363 	mov	dpl,r5
      0021C4 8E 83            [24] 4364 	mov	dph,r6
      0021C6 8F F0            [24] 4365 	mov	b,r7
      0021C8 12 00 00         [24] 4366 	lcall	__gptrget
      0021CB FD               [12] 4367 	mov	r5,a
      0021CC 7F 00            [12] 4368 	mov	r7,#0x00
      0021CE 42 02            [12] 4369 	orl	ar2,a
      0021D0 EF               [12] 4370 	mov	a,r7
      0021D1 42 04            [12] 4371 	orl	ar4,a
      0021D3 E5 00            [12] 4372 	mov	a,_bp
      0021D5 24 09            [12] 4373 	add	a,#0x09
      0021D7 F8               [12] 4374 	mov	r0,a
      0021D8 A6 02            [24] 4375 	mov	@r0,ar2
      0021DA 08               [12] 4376 	inc	r0
      0021DB A6 04            [24] 4377 	mov	@r0,ar4
                                   4378 ;	FATFS\src\ff.c:1352: if (wc) {	/* Last character has not been processed */
      0021DD E5 00            [12] 4379 	mov	a,_bp
      0021DF 24 0D            [12] 4380 	add	a,#0x0d
      0021E1 F8               [12] 4381 	mov	r0,a
      0021E2 E6               [12] 4382 	mov	a,@r0
      0021E3 08               [12] 4383 	inc	r0
      0021E4 46               [12] 4384 	orl	a,@r0
      0021E5 D0 07            [24] 4385 	pop	ar7
      0021E7 D0 06            [24] 4386 	pop	ar6
      0021E9 60 76            [24] 4387 	jz	00106$
                                   4388 ;	FATFS\src\ff.c:1353: if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
      0021EB E5 00            [12] 4389 	mov	a,_bp
      0021ED 24 04            [12] 4390 	add	a,#0x04
      0021EF F8               [12] 4391 	mov	r0,a
      0021F0 C3               [12] 4392 	clr	c
      0021F1 E6               [12] 4393 	mov	a,@r0
      0021F2 94 FF            [12] 4394 	subb	a,#0xff
      0021F4 08               [12] 4395 	inc	r0
      0021F5 E6               [12] 4396 	mov	a,@r0
      0021F6 94 00            [12] 4397 	subb	a,#0x00
      0021F8 40 06            [24] 4398 	jc	00102$
      0021FA 90 00 00         [24] 4399 	mov	dptr,#0x0000
      0021FD 02 22 D8         [24] 4400 	ljmp	00115$
      002200                       4401 00102$:
                                   4402 ;	FATFS\src\ff.c:1354: lfnbuf[i++] = wc = uc;			/* Store it */
      002200 E5 00            [12] 4403 	mov	a,_bp
      002202 24 04            [12] 4404 	add	a,#0x04
      002204 F8               [12] 4405 	mov	r0,a
      002205 86 04            [24] 4406 	mov	ar4,@r0
      002207 08               [12] 4407 	inc	r0
      002208 86 05            [24] 4408 	mov	ar5,@r0
      00220A E5 00            [12] 4409 	mov	a,_bp
      00220C 24 04            [12] 4410 	add	a,#0x04
      00220E F8               [12] 4411 	mov	r0,a
      00220F 06               [12] 4412 	inc	@r0
      002210 B6 00 02         [24] 4413 	cjne	@r0,#0x00,00148$
      002213 08               [12] 4414 	inc	r0
      002214 06               [12] 4415 	inc	@r0
      002215                       4416 00148$:
      002215 E5 00            [12] 4417 	mov	a,_bp
      002217 24 04            [12] 4418 	add	a,#0x04
      002219 F8               [12] 4419 	mov	r0,a
      00221A E5 00            [12] 4420 	mov	a,_bp
      00221C 24 0B            [12] 4421 	add	a,#0x0b
      00221E F9               [12] 4422 	mov	r1,a
      00221F E6               [12] 4423 	mov	a,@r0
      002220 F7               [12] 4424 	mov	@r1,a
      002221 08               [12] 4425 	inc	r0
      002222 09               [12] 4426 	inc	r1
      002223 E6               [12] 4427 	mov	a,@r0
      002224 F7               [12] 4428 	mov	@r1,a
      002225 EC               [12] 4429 	mov	a,r4
      002226 2C               [12] 4430 	add	a,r4
      002227 FC               [12] 4431 	mov	r4,a
      002228 ED               [12] 4432 	mov	a,r5
      002229 33               [12] 4433 	rlc	a
      00222A FD               [12] 4434 	mov	r5,a
      00222B E5 00            [12] 4435 	mov	a,_bp
      00222D 24 06            [12] 4436 	add	a,#0x06
      00222F F8               [12] 4437 	mov	r0,a
      002230 EC               [12] 4438 	mov	a,r4
      002231 26               [12] 4439 	add	a,@r0
      002232 FC               [12] 4440 	mov	r4,a
      002233 ED               [12] 4441 	mov	a,r5
      002234 08               [12] 4442 	inc	r0
      002235 36               [12] 4443 	addc	a,@r0
      002236 FD               [12] 4444 	mov	r5,a
      002237 08               [12] 4445 	inc	r0
      002238 86 03            [24] 4446 	mov	ar3,@r0
      00223A E5 00            [12] 4447 	mov	a,_bp
      00223C 24 09            [12] 4448 	add	a,#0x09
      00223E F8               [12] 4449 	mov	r0,a
      00223F E5 00            [12] 4450 	mov	a,_bp
      002241 24 0D            [12] 4451 	add	a,#0x0d
      002243 F9               [12] 4452 	mov	r1,a
      002244 E6               [12] 4453 	mov	a,@r0
      002245 F7               [12] 4454 	mov	@r1,a
      002246 08               [12] 4455 	inc	r0
      002247 09               [12] 4456 	inc	r1
      002248 E6               [12] 4457 	mov	a,@r0
      002249 F7               [12] 4458 	mov	@r1,a
      00224A 8C 82            [24] 4459 	mov	dpl,r4
      00224C 8D 83            [24] 4460 	mov	dph,r5
      00224E 8B F0            [24] 4461 	mov	b,r3
      002250 E5 00            [12] 4462 	mov	a,_bp
      002252 24 09            [12] 4463 	add	a,#0x09
      002254 F8               [12] 4464 	mov	r0,a
      002255 E6               [12] 4465 	mov	a,@r0
      002256 12 00 00         [24] 4466 	lcall	__gptrput
      002259 A3               [24] 4467 	inc	dptr
      00225A 08               [12] 4468 	inc	r0
      00225B E6               [12] 4469 	mov	a,@r0
      00225C 12 00 00         [24] 4470 	lcall	__gptrput
      00225F 80 13            [24] 4471 	sjmp	00109$
      002261                       4472 00106$:
                                   4473 ;	FATFS\src\ff.c:1356: if (uc != 0xFFFF) return 0;		/* Check filler */
      002261 E5 00            [12] 4474 	mov	a,_bp
      002263 24 09            [12] 4475 	add	a,#0x09
      002265 F8               [12] 4476 	mov	r0,a
      002266 B6 FF 06         [24] 4477 	cjne	@r0,#0xff,00149$
      002269 08               [12] 4478 	inc	r0
      00226A B6 FF 02         [24] 4479 	cjne	@r0,#0xff,00149$
      00226D 80 05            [24] 4480 	sjmp	00109$
      00226F                       4481 00149$:
      00226F 90 00 00         [24] 4482 	mov	dptr,#0x0000
      002272 80 64            [24] 4483 	sjmp	00115$
      002274                       4484 00109$:
                                   4485 ;	FATFS\src\ff.c:1358: } while (++s < 13);						/* Read all character in the entry */
      002274 0E               [12] 4486 	inc	r6
      002275 BE 00 01         [24] 4487 	cjne	r6,#0x00,00150$
      002278 0F               [12] 4488 	inc	r7
      002279                       4489 00150$:
      002279 C3               [12] 4490 	clr	c
      00227A EE               [12] 4491 	mov	a,r6
      00227B 94 0D            [12] 4492 	subb	a,#0x0d
      00227D EF               [12] 4493 	mov	a,r7
      00227E 94 00            [12] 4494 	subb	a,#0x00
      002280 50 03            [24] 4495 	jnc	00151$
      002282 02 21 8F         [24] 4496 	ljmp	00108$
      002285                       4497 00151$:
                                   4498 ;	FATFS\src\ff.c:1360: if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
      002285 A8 00            [24] 4499 	mov	r0,_bp
      002287 08               [12] 4500 	inc	r0
      002288 86 82            [24] 4501 	mov	dpl,@r0
      00228A 08               [12] 4502 	inc	r0
      00228B 86 83            [24] 4503 	mov	dph,@r0
      00228D 08               [12] 4504 	inc	r0
      00228E 86 F0            [24] 4505 	mov	b,@r0
      002290 12 00 00         [24] 4506 	lcall	__gptrget
      002293 FF               [12] 4507 	mov	r7,a
      002294 30 E6 3E         [24] 4508 	jnb	acc.6,00114$
                                   4509 ;	FATFS\src\ff.c:1361: if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
      002297 E5 00            [12] 4510 	mov	a,_bp
      002299 24 0B            [12] 4511 	add	a,#0x0b
      00229B F8               [12] 4512 	mov	r0,a
      00229C C3               [12] 4513 	clr	c
      00229D E6               [12] 4514 	mov	a,@r0
      00229E 94 FF            [12] 4515 	subb	a,#0xff
      0022A0 08               [12] 4516 	inc	r0
      0022A1 E6               [12] 4517 	mov	a,@r0
      0022A2 94 00            [12] 4518 	subb	a,#0x00
      0022A4 40 05            [24] 4519 	jc	00112$
      0022A6 90 00 00         [24] 4520 	mov	dptr,#0x0000
      0022A9 80 2D            [24] 4521 	sjmp	00115$
      0022AB                       4522 00112$:
                                   4523 ;	FATFS\src\ff.c:1362: lfnbuf[i] = 0;
      0022AB E5 00            [12] 4524 	mov	a,_bp
      0022AD 24 0B            [12] 4525 	add	a,#0x0b
      0022AF F8               [12] 4526 	mov	r0,a
      0022B0 E6               [12] 4527 	mov	a,@r0
      0022B1 25 E0            [12] 4528 	add	a,acc
      0022B3 FE               [12] 4529 	mov	r6,a
      0022B4 08               [12] 4530 	inc	r0
      0022B5 E6               [12] 4531 	mov	a,@r0
      0022B6 33               [12] 4532 	rlc	a
      0022B7 FF               [12] 4533 	mov	r7,a
      0022B8 E5 00            [12] 4534 	mov	a,_bp
      0022BA 24 06            [12] 4535 	add	a,#0x06
      0022BC F8               [12] 4536 	mov	r0,a
      0022BD EE               [12] 4537 	mov	a,r6
      0022BE 26               [12] 4538 	add	a,@r0
      0022BF FE               [12] 4539 	mov	r6,a
      0022C0 EF               [12] 4540 	mov	a,r7
      0022C1 08               [12] 4541 	inc	r0
      0022C2 36               [12] 4542 	addc	a,@r0
      0022C3 FF               [12] 4543 	mov	r7,a
      0022C4 08               [12] 4544 	inc	r0
      0022C5 86 05            [24] 4545 	mov	ar5,@r0
      0022C7 8E 82            [24] 4546 	mov	dpl,r6
      0022C9 8F 83            [24] 4547 	mov	dph,r7
      0022CB 8D F0            [24] 4548 	mov	b,r5
      0022CD E4               [12] 4549 	clr	a
      0022CE 12 00 00         [24] 4550 	lcall	__gptrput
      0022D1 A3               [24] 4551 	inc	dptr
      0022D2 12 00 00         [24] 4552 	lcall	__gptrput
      0022D5                       4553 00114$:
                                   4554 ;	FATFS\src\ff.c:1365: return 1;
      0022D5 90 00 01         [24] 4555 	mov	dptr,#0x0001
      0022D8                       4556 00115$:
                                   4557 ;	FATFS\src\ff.c:1366: }
      0022D8 85 00 81         [24] 4558 	mov	sp,_bp
      0022DB D0 00            [24] 4559 	pop	_bp
      0022DD 02 00 00         [24] 4560 	ljmp	__sdcc_banked_ret
                                   4561 ;------------------------------------------------------------
                                   4562 ;Allocation info for local variables in function 'gen_numname'
                                   4563 ;------------------------------------------------------------
                                   4564 ;src                       Allocated to stack - _bp -6
                                   4565 ;lfn                       Allocated to stack - _bp -9
                                   4566 ;seq                       Allocated to stack - _bp -11
                                   4567 ;dst                       Allocated to stack - _bp +1
                                   4568 ;ns                        Allocated to stack - _bp +12
                                   4569 ;c                         Allocated to registers r4 
                                   4570 ;i                         Allocated to stack - _bp +10
                                   4571 ;j                         Allocated to registers r5 r6 
                                   4572 ;wc                        Allocated to stack - _bp +20
                                   4573 ;sr                        Allocated to stack - _bp +22
                                   4574 ;sloc0                     Allocated to stack - _bp +4
                                   4575 ;sloc1                     Allocated to stack - _bp +8
                                   4576 ;------------------------------------------------------------
                                   4577 ;	FATFS\src\ff.c:1409: void gen_numname (
                                   4578 ;	-----------------------------------------
                                   4579 ;	 function gen_numname
                                   4580 ;	-----------------------------------------
      0022E0                       4581 _gen_numname:
      0022E0 C0 00            [24] 4582 	push	_bp
      0022E2 85 81 00         [24] 4583 	mov	_bp,sp
      0022E5 C0 82            [24] 4584 	push	dpl
      0022E7 C0 83            [24] 4585 	push	dph
      0022E9 C0 F0            [24] 4586 	push	b
      0022EB E5 81            [12] 4587 	mov	a,sp
      0022ED 24 16            [12] 4588 	add	a,#0x16
      0022EF F5 81            [12] 4589 	mov	sp,a
                                   4590 ;	FATFS\src\ff.c:1420: mem_cpy(dst, src, 11);
      0022F1 E5 00            [12] 4591 	mov	a,_bp
      0022F3 24 FA            [12] 4592 	add	a,#0xfa
      0022F5 F8               [12] 4593 	mov	r0,a
      0022F6 86 02            [24] 4594 	mov	ar2,@r0
      0022F8 08               [12] 4595 	inc	r0
      0022F9 86 03            [24] 4596 	mov	ar3,@r0
      0022FB 08               [12] 4597 	inc	r0
      0022FC 86 04            [24] 4598 	mov	ar4,@r0
      0022FE A8 00            [24] 4599 	mov	r0,_bp
      002300 08               [12] 4600 	inc	r0
      002301 86 05            [24] 4601 	mov	ar5,@r0
      002303 08               [12] 4602 	inc	r0
      002304 86 06            [24] 4603 	mov	ar6,@r0
      002306 08               [12] 4604 	inc	r0
      002307 86 07            [24] 4605 	mov	ar7,@r0
      002309 74 0B            [12] 4606 	mov	a,#0x0b
      00230B C0 E0            [24] 4607 	push	acc
      00230D E4               [12] 4608 	clr	a
      00230E C0 E0            [24] 4609 	push	acc
      002310 C0 02            [24] 4610 	push	ar2
      002312 C0 03            [24] 4611 	push	ar3
      002314 C0 04            [24] 4612 	push	ar4
      002316 8D 82            [24] 4613 	mov	dpl,r5
      002318 8E 83            [24] 4614 	mov	dph,r6
      00231A 8F F0            [24] 4615 	mov	b,r7
      00231C 78 B9            [12] 4616 	mov	r0,#_mem_cpy
      00231E 79 0B            [12] 4617 	mov	r1,#(_mem_cpy >> 8)
      002320 7A 00            [12] 4618 	mov	r2,#(_mem_cpy >> 16)
      002322 12 00 00         [24] 4619 	lcall	__sdcc_banked_call
      002325 E5 81            [12] 4620 	mov	a,sp
      002327 24 FB            [12] 4621 	add	a,#0xfb
      002329 F5 81            [12] 4622 	mov	sp,a
                                   4623 ;	FATFS\src\ff.c:1422: if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
      00232B E5 00            [12] 4624 	mov	a,_bp
      00232D 24 F5            [12] 4625 	add	a,#0xf5
      00232F F8               [12] 4626 	mov	r0,a
      002330 C3               [12] 4627 	clr	c
      002331 74 05            [12] 4628 	mov	a,#0x05
      002333 96               [12] 4629 	subb	a,@r0
      002334 E4               [12] 4630 	clr	a
      002335 08               [12] 4631 	inc	r0
      002336 96               [12] 4632 	subb	a,@r0
      002337 40 03            [24] 4633 	jc	00194$
      002339 02 24 44         [24] 4634 	ljmp	00140$
      00233C                       4635 00194$:
                                   4636 ;	FATFS\src\ff.c:1424: DWORD sr = seq;
      00233C E5 00            [12] 4637 	mov	a,_bp
      00233E 24 F5            [12] 4638 	add	a,#0xf5
      002340 F8               [12] 4639 	mov	r0,a
      002341 E5 00            [12] 4640 	mov	a,_bp
      002343 24 16            [12] 4641 	add	a,#0x16
      002345 F9               [12] 4642 	mov	r1,a
      002346 E6               [12] 4643 	mov	a,@r0
      002347 F7               [12] 4644 	mov	@r1,a
      002348 08               [12] 4645 	inc	r0
      002349 09               [12] 4646 	inc	r1
      00234A E6               [12] 4647 	mov	a,@r0
      00234B F7               [12] 4648 	mov	@r1,a
      00234C 09               [12] 4649 	inc	r1
      00234D 77 00            [12] 4650 	mov	@r1,#0x00
      00234F 09               [12] 4651 	inc	r1
      002350 77 00            [12] 4652 	mov	@r1,#0x00
                                   4653 ;	FATFS\src\ff.c:1426: while (*lfn) {	/* Create a CRC */
      002352 E5 00            [12] 4654 	mov	a,_bp
      002354 24 F7            [12] 4655 	add	a,#0xf7
      002356 F8               [12] 4656 	mov	r0,a
      002357 86 02            [24] 4657 	mov	ar2,@r0
      002359 08               [12] 4658 	inc	r0
      00235A 86 03            [24] 4659 	mov	ar3,@r0
      00235C 08               [12] 4660 	inc	r0
      00235D 86 07            [24] 4661 	mov	ar7,@r0
      00235F                       4662 00104$:
      00235F 8A 82            [24] 4663 	mov	dpl,r2
      002361 8B 83            [24] 4664 	mov	dph,r3
      002363 8F F0            [24] 4665 	mov	b,r7
      002365 12 00 00         [24] 4666 	lcall	__gptrget
      002368 FD               [12] 4667 	mov	r5,a
      002369 A3               [24] 4668 	inc	dptr
      00236A 12 00 00         [24] 4669 	lcall	__gptrget
      00236D FE               [12] 4670 	mov	r6,a
      00236E 4D               [12] 4671 	orl	a,r5
      00236F 70 03            [24] 4672 	jnz	00195$
      002371 02 24 34         [24] 4673 	ljmp	00106$
      002374                       4674 00195$:
                                   4675 ;	FATFS\src\ff.c:1427: wc = *lfn++;
      002374 74 02            [12] 4676 	mov	a,#0x02
      002376 2A               [12] 4677 	add	a,r2
      002377 FA               [12] 4678 	mov	r2,a
      002378 E4               [12] 4679 	clr	a
      002379 3B               [12] 4680 	addc	a,r3
      00237A FB               [12] 4681 	mov	r3,a
      00237B E5 00            [12] 4682 	mov	a,_bp
      00237D 24 14            [12] 4683 	add	a,#0x14
      00237F F8               [12] 4684 	mov	r0,a
      002380 A6 05            [24] 4685 	mov	@r0,ar5
      002382 08               [12] 4686 	inc	r0
      002383 A6 06            [24] 4687 	mov	@r0,ar6
                                   4688 ;	FATFS\src\ff.c:1428: for (i = 0; i < 16; i++) {
      002385 E5 00            [12] 4689 	mov	a,_bp
      002387 24 0A            [12] 4690 	add	a,#0x0a
      002389 F8               [12] 4691 	mov	r0,a
      00238A 76 10            [12] 4692 	mov	@r0,#0x10
      00238C 08               [12] 4693 	inc	r0
      00238D 76 00            [12] 4694 	mov	@r0,#0x00
      00238F                       4695 00124$:
                                   4696 ;	FATFS\src\ff.c:1429: sr = (sr << 1) + (wc & 1);
      00238F C0 02            [24] 4697 	push	ar2
      002391 C0 03            [24] 4698 	push	ar3
      002393 C0 07            [24] 4699 	push	ar7
      002395 E5 00            [12] 4700 	mov	a,_bp
      002397 24 16            [12] 4701 	add	a,#0x16
      002399 F8               [12] 4702 	mov	r0,a
      00239A E5 00            [12] 4703 	mov	a,_bp
      00239C 24 04            [12] 4704 	add	a,#0x04
      00239E F9               [12] 4705 	mov	r1,a
      00239F E6               [12] 4706 	mov	a,@r0
      0023A0 25 E0            [12] 4707 	add	a,acc
      0023A2 F7               [12] 4708 	mov	@r1,a
      0023A3 08               [12] 4709 	inc	r0
      0023A4 E6               [12] 4710 	mov	a,@r0
      0023A5 33               [12] 4711 	rlc	a
      0023A6 09               [12] 4712 	inc	r1
      0023A7 F7               [12] 4713 	mov	@r1,a
      0023A8 08               [12] 4714 	inc	r0
      0023A9 E6               [12] 4715 	mov	a,@r0
      0023AA 33               [12] 4716 	rlc	a
      0023AB 09               [12] 4717 	inc	r1
      0023AC F7               [12] 4718 	mov	@r1,a
      0023AD 08               [12] 4719 	inc	r0
      0023AE E6               [12] 4720 	mov	a,@r0
      0023AF 33               [12] 4721 	rlc	a
      0023B0 09               [12] 4722 	inc	r1
      0023B1 F7               [12] 4723 	mov	@r1,a
      0023B2 E5 00            [12] 4724 	mov	a,_bp
      0023B4 24 14            [12] 4725 	add	a,#0x14
      0023B6 F8               [12] 4726 	mov	r0,a
      0023B7 74 01            [12] 4727 	mov	a,#0x01
      0023B9 56               [12] 4728 	anl	a,@r0
      0023BA FC               [12] 4729 	mov	r4,a
      0023BB 7E 00            [12] 4730 	mov	r6,#0x00
      0023BD 8E 05            [24] 4731 	mov	ar5,r6
      0023BF E4               [12] 4732 	clr	a
      0023C0 FE               [12] 4733 	mov	r6,a
      0023C1 FF               [12] 4734 	mov	r7,a
      0023C2 E5 00            [12] 4735 	mov	a,_bp
      0023C4 24 04            [12] 4736 	add	a,#0x04
      0023C6 F8               [12] 4737 	mov	r0,a
      0023C7 EC               [12] 4738 	mov	a,r4
      0023C8 26               [12] 4739 	add	a,@r0
      0023C9 FC               [12] 4740 	mov	r4,a
      0023CA ED               [12] 4741 	mov	a,r5
      0023CB 08               [12] 4742 	inc	r0
      0023CC 36               [12] 4743 	addc	a,@r0
      0023CD FD               [12] 4744 	mov	r5,a
      0023CE EE               [12] 4745 	mov	a,r6
      0023CF 08               [12] 4746 	inc	r0
      0023D0 36               [12] 4747 	addc	a,@r0
      0023D1 FE               [12] 4748 	mov	r6,a
      0023D2 EF               [12] 4749 	mov	a,r7
      0023D3 08               [12] 4750 	inc	r0
      0023D4 36               [12] 4751 	addc	a,@r0
      0023D5 FF               [12] 4752 	mov	r7,a
      0023D6 E5 00            [12] 4753 	mov	a,_bp
      0023D8 24 16            [12] 4754 	add	a,#0x16
      0023DA F8               [12] 4755 	mov	r0,a
      0023DB A6 04            [24] 4756 	mov	@r0,ar4
      0023DD 08               [12] 4757 	inc	r0
      0023DE A6 05            [24] 4758 	mov	@r0,ar5
      0023E0 08               [12] 4759 	inc	r0
      0023E1 A6 06            [24] 4760 	mov	@r0,ar6
      0023E3 08               [12] 4761 	inc	r0
      0023E4 A6 07            [24] 4762 	mov	@r0,ar7
                                   4763 ;	FATFS\src\ff.c:1430: wc >>= 1;
      0023E6 E5 00            [12] 4764 	mov	a,_bp
      0023E8 24 14            [12] 4765 	add	a,#0x14
      0023EA F8               [12] 4766 	mov	r0,a
      0023EB 08               [12] 4767 	inc	r0
      0023EC E6               [12] 4768 	mov	a,@r0
      0023ED 18               [12] 4769 	dec	r0
      0023EE C3               [12] 4770 	clr	c
      0023EF 13               [12] 4771 	rrc	a
      0023F0 C6               [12] 4772 	xch	a,@r0
      0023F1 13               [12] 4773 	rrc	a
      0023F2 C6               [12] 4774 	xch	a,@r0
      0023F3 08               [12] 4775 	inc	r0
      0023F4 F6               [12] 4776 	mov	@r0,a
                                   4777 ;	FATFS\src\ff.c:1431: if (sr & 0x10000) sr ^= 0x11021;
      0023F5 E5 00            [12] 4778 	mov	a,_bp
      0023F7 24 16            [12] 4779 	add	a,#0x16
      0023F9 F8               [12] 4780 	mov	r0,a
      0023FA 08               [12] 4781 	inc	r0
      0023FB 08               [12] 4782 	inc	r0
      0023FC E6               [12] 4783 	mov	a,@r0
      0023FD D0 07            [24] 4784 	pop	ar7
      0023FF D0 03            [24] 4785 	pop	ar3
      002401 D0 02            [24] 4786 	pop	ar2
      002403 30 E0 13         [24] 4787 	jnb	acc.0,00102$
      002406 E5 00            [12] 4788 	mov	a,_bp
      002408 24 16            [12] 4789 	add	a,#0x16
      00240A F8               [12] 4790 	mov	r0,a
      00240B E6               [12] 4791 	mov	a,@r0
      00240C 64 21            [12] 4792 	xrl	a,#0x21
      00240E F6               [12] 4793 	mov	@r0,a
      00240F 08               [12] 4794 	inc	r0
      002410 E6               [12] 4795 	mov	a,@r0
      002411 64 10            [12] 4796 	xrl	a,#0x10
      002413 F6               [12] 4797 	mov	@r0,a
      002414 08               [12] 4798 	inc	r0
      002415 E6               [12] 4799 	mov	a,@r0
      002416 64 01            [12] 4800 	xrl	a,#0x01
      002418 F6               [12] 4801 	mov	@r0,a
      002419                       4802 00102$:
      002419 E5 00            [12] 4803 	mov	a,_bp
      00241B 24 0A            [12] 4804 	add	a,#0x0a
      00241D F8               [12] 4805 	mov	r0,a
      00241E 16               [12] 4806 	dec	@r0
      00241F B6 FF 02         [24] 4807 	cjne	@r0,#0xff,00197$
      002422 08               [12] 4808 	inc	r0
      002423 16               [12] 4809 	dec	@r0
      002424                       4810 00197$:
                                   4811 ;	FATFS\src\ff.c:1428: for (i = 0; i < 16; i++) {
      002424 E5 00            [12] 4812 	mov	a,_bp
      002426 24 0A            [12] 4813 	add	a,#0x0a
      002428 F8               [12] 4814 	mov	r0,a
      002429 E6               [12] 4815 	mov	a,@r0
      00242A 08               [12] 4816 	inc	r0
      00242B 46               [12] 4817 	orl	a,@r0
      00242C 60 03            [24] 4818 	jz	00198$
      00242E 02 23 8F         [24] 4819 	ljmp	00124$
      002431                       4820 00198$:
      002431 02 23 5F         [24] 4821 	ljmp	00104$
      002434                       4822 00106$:
                                   4823 ;	FATFS\src\ff.c:1434: seq = (UINT)sr;
      002434 E5 00            [12] 4824 	mov	a,_bp
      002436 24 16            [12] 4825 	add	a,#0x16
      002438 F8               [12] 4826 	mov	r0,a
      002439 E5 00            [12] 4827 	mov	a,_bp
      00243B 24 F5            [12] 4828 	add	a,#0xf5
      00243D F9               [12] 4829 	mov	r1,a
      00243E E6               [12] 4830 	mov	a,@r0
      00243F F7               [12] 4831 	mov	@r1,a
      002440 08               [12] 4832 	inc	r0
      002441 09               [12] 4833 	inc	r1
      002442 E6               [12] 4834 	mov	a,@r0
      002443 F7               [12] 4835 	mov	@r1,a
                                   4836 ;	FATFS\src\ff.c:1439: do {
      002444                       4837 00140$:
      002444 E5 00            [12] 4838 	mov	a,_bp
      002446 24 0C            [12] 4839 	add	a,#0x0c
      002448 FF               [12] 4840 	mov	r7,a
      002449 7D 07            [12] 4841 	mov	r5,#0x07
      00244B 7E 00            [12] 4842 	mov	r6,#0x00
      00244D                       4843 00111$:
                                   4844 ;	FATFS\src\ff.c:1440: c = (seq % 16) + '0';
      00244D E5 00            [12] 4845 	mov	a,_bp
      00244F 24 F5            [12] 4846 	add	a,#0xf5
      002451 F8               [12] 4847 	mov	r0,a
      002452 74 0F            [12] 4848 	mov	a,#0x0f
      002454 56               [12] 4849 	anl	a,@r0
      002455 FB               [12] 4850 	mov	r3,a
      002456 7C 00            [12] 4851 	mov	r4,#0x00
      002458 74 30            [12] 4852 	mov	a,#0x30
      00245A 2B               [12] 4853 	add	a,r3
                                   4854 ;	FATFS\src\ff.c:1441: if (c > '9') c += 7;
      00245B FC               [12] 4855 	mov  r4,a
      00245C 24 C6            [12] 4856 	add	a,#0xff - 0x39
      00245E 50 06            [24] 4857 	jnc	00110$
      002460 8C 03            [24] 4858 	mov	ar3,r4
      002462 74 07            [12] 4859 	mov	a,#0x07
      002464 2B               [12] 4860 	add	a,r3
      002465 FC               [12] 4861 	mov	r4,a
      002466                       4862 00110$:
                                   4863 ;	FATFS\src\ff.c:1442: ns[i--] = c;
      002466 8D 02            [24] 4864 	mov	ar2,r5
      002468 8E 03            [24] 4865 	mov	ar3,r6
      00246A 1D               [12] 4866 	dec	r5
      00246B BD FF 01         [24] 4867 	cjne	r5,#0xff,00200$
      00246E 1E               [12] 4868 	dec	r6
      00246F                       4869 00200$:
      00246F EA               [12] 4870 	mov	a,r2
      002470 2F               [12] 4871 	add	a,r7
      002471 F8               [12] 4872 	mov	r0,a
      002472 A6 04            [24] 4873 	mov	@r0,ar4
                                   4874 ;	FATFS\src\ff.c:1443: seq /= 16;
      002474 E5 00            [12] 4875 	mov	a,_bp
      002476 24 F5            [12] 4876 	add	a,#0xf5
      002478 F8               [12] 4877 	mov	r0,a
      002479 08               [12] 4878 	inc	r0
      00247A E6               [12] 4879 	mov	a,@r0
      00247B 18               [12] 4880 	dec	r0
      00247C C4               [12] 4881 	swap	a
      00247D C6               [12] 4882 	xch	a,@r0
      00247E C4               [12] 4883 	swap	a
      00247F 54 0F            [12] 4884 	anl	a,#0x0f
      002481 66               [12] 4885 	xrl	a,@r0
      002482 C6               [12] 4886 	xch	a,@r0
      002483 54 0F            [12] 4887 	anl	a,#0x0f
      002485 C6               [12] 4888 	xch	a,@r0
      002486 66               [12] 4889 	xrl	a,@r0
      002487 C6               [12] 4890 	xch	a,@r0
      002488 08               [12] 4891 	inc	r0
      002489 F6               [12] 4892 	mov	@r0,a
                                   4893 ;	FATFS\src\ff.c:1444: } while (seq);
      00248A E5 00            [12] 4894 	mov	a,_bp
      00248C 24 F5            [12] 4895 	add	a,#0xf5
      00248E F8               [12] 4896 	mov	r0,a
      00248F E6               [12] 4897 	mov	a,@r0
      002490 08               [12] 4898 	inc	r0
      002491 46               [12] 4899 	orl	a,@r0
      002492 70 B9            [24] 4900 	jnz	00111$
                                   4901 ;	FATFS\src\ff.c:1445: ns[i] = '~';
      002494 8D 03            [24] 4902 	mov	ar3,r5
      002496 8E 04            [24] 4903 	mov	ar4,r6
      002498 ED               [12] 4904 	mov	a,r5
      002499 2F               [12] 4905 	add	a,r7
      00249A F8               [12] 4906 	mov	r0,a
      00249B 76 7E            [12] 4907 	mov	@r0,#0x7e
                                   4908 ;	FATFS\src\ff.c:1448: for (j = 0; j < i && dst[j] != ' '; j++) {
      00249D 7D 00            [12] 4909 	mov	r5,#0x00
      00249F 7E 00            [12] 4910 	mov	r6,#0x00
      0024A1                       4911 00127$:
      0024A1 C3               [12] 4912 	clr	c
      0024A2 ED               [12] 4913 	mov	a,r5
      0024A3 9B               [12] 4914 	subb	a,r3
      0024A4 EE               [12] 4915 	mov	a,r6
      0024A5 9C               [12] 4916 	subb	a,r4
      0024A6 50 2F            [24] 4917 	jnc	00146$
      0024A8 C0 03            [24] 4918 	push	ar3
      0024AA C0 04            [24] 4919 	push	ar4
      0024AC A8 00            [24] 4920 	mov	r0,_bp
      0024AE 08               [12] 4921 	inc	r0
      0024AF ED               [12] 4922 	mov	a,r5
      0024B0 26               [12] 4923 	add	a,@r0
      0024B1 FA               [12] 4924 	mov	r2,a
      0024B2 EE               [12] 4925 	mov	a,r6
      0024B3 08               [12] 4926 	inc	r0
      0024B4 36               [12] 4927 	addc	a,@r0
      0024B5 FB               [12] 4928 	mov	r3,a
      0024B6 08               [12] 4929 	inc	r0
      0024B7 86 04            [24] 4930 	mov	ar4,@r0
      0024B9 8A 82            [24] 4931 	mov	dpl,r2
      0024BB 8B 83            [24] 4932 	mov	dph,r3
      0024BD 8C F0            [24] 4933 	mov	b,r4
      0024BF 12 00 00         [24] 4934 	lcall	__gptrget
      0024C2 FA               [12] 4935 	mov	r2,a
      0024C3 BA 20 06         [24] 4936 	cjne	r2,#0x20,00203$
      0024C6 D0 04            [24] 4937 	pop	ar4
      0024C8 D0 03            [24] 4938 	pop	ar3
      0024CA 80 0B            [24] 4939 	sjmp	00146$
      0024CC                       4940 00203$:
      0024CC D0 04            [24] 4941 	pop	ar4
      0024CE D0 03            [24] 4942 	pop	ar3
      0024D0 0D               [12] 4943 	inc	r5
                                   4944 ;	FATFS\src\ff.c:1454: do {
      0024D1 BD 00 CD         [24] 4945 	cjne	r5,#0x00,00127$
      0024D4 0E               [12] 4946 	inc	r6
      0024D5 80 CA            [24] 4947 	sjmp	00127$
      0024D7                       4948 00146$:
      0024D7                       4949 00119$:
                                   4950 ;	FATFS\src\ff.c:1455: dst[j++] = (i < 8) ? ns[i++] : ' ';
      0024D7 C0 07            [24] 4951 	push	ar7
      0024D9 8D 02            [24] 4952 	mov	ar2,r5
      0024DB 8E 07            [24] 4953 	mov	ar7,r6
      0024DD 0D               [12] 4954 	inc	r5
      0024DE BD 00 01         [24] 4955 	cjne	r5,#0x00,00205$
      0024E1 0E               [12] 4956 	inc	r6
      0024E2                       4957 00205$:
      0024E2 A8 00            [24] 4958 	mov	r0,_bp
      0024E4 08               [12] 4959 	inc	r0
      0024E5 E5 00            [12] 4960 	mov	a,_bp
      0024E7 24 04            [12] 4961 	add	a,#0x04
      0024E9 F9               [12] 4962 	mov	r1,a
      0024EA EA               [12] 4963 	mov	a,r2
      0024EB 26               [12] 4964 	add	a,@r0
      0024EC F7               [12] 4965 	mov	@r1,a
      0024ED EF               [12] 4966 	mov	a,r7
      0024EE 08               [12] 4967 	inc	r0
      0024EF 36               [12] 4968 	addc	a,@r0
      0024F0 09               [12] 4969 	inc	r1
      0024F1 F7               [12] 4970 	mov	@r1,a
      0024F2 08               [12] 4971 	inc	r0
      0024F3 09               [12] 4972 	inc	r1
      0024F4 E6               [12] 4973 	mov	a,@r0
      0024F5 F7               [12] 4974 	mov	@r1,a
      0024F6 C3               [12] 4975 	clr	c
      0024F7 EB               [12] 4976 	mov	a,r3
      0024F8 94 08            [12] 4977 	subb	a,#0x08
      0024FA EC               [12] 4978 	mov	a,r4
      0024FB 94 00            [12] 4979 	subb	a,#0x00
      0024FD D0 07            [24] 4980 	pop	ar7
      0024FF 50 22            [24] 4981 	jnc	00131$
      002501 C0 05            [24] 4982 	push	ar5
      002503 C0 06            [24] 4983 	push	ar6
      002505 8B 02            [24] 4984 	mov	ar2,r3
      002507 8C 06            [24] 4985 	mov	ar6,r4
      002509 0B               [12] 4986 	inc	r3
      00250A BB 00 01         [24] 4987 	cjne	r3,#0x00,00207$
      00250D 0C               [12] 4988 	inc	r4
      00250E                       4989 00207$:
      00250E EA               [12] 4990 	mov	a,r2
      00250F 2F               [12] 4991 	add	a,r7
      002510 F9               [12] 4992 	mov	r1,a
      002511 87 06            [24] 4993 	mov	ar6,@r1
      002513 E5 00            [12] 4994 	mov	a,_bp
      002515 24 08            [12] 4995 	add	a,#0x08
      002517 F8               [12] 4996 	mov	r0,a
      002518 A6 06            [24] 4997 	mov	@r0,ar6
      00251A 08               [12] 4998 	inc	r0
      00251B 76 00            [12] 4999 	mov	@r0,#0x00
      00251D D0 06            [24] 5000 	pop	ar6
      00251F D0 05            [24] 5001 	pop	ar5
      002521 80 0A            [24] 5002 	sjmp	00132$
      002523                       5003 00131$:
      002523 E5 00            [12] 5004 	mov	a,_bp
      002525 24 08            [12] 5005 	add	a,#0x08
      002527 F8               [12] 5006 	mov	r0,a
      002528 76 20            [12] 5007 	mov	@r0,#0x20
      00252A 08               [12] 5008 	inc	r0
      00252B 76 00            [12] 5009 	mov	@r0,#0x00
      00252D                       5010 00132$:
      00252D E5 00            [12] 5011 	mov	a,_bp
      00252F 24 08            [12] 5012 	add	a,#0x08
      002531 F8               [12] 5013 	mov	r0,a
      002532 86 02            [24] 5014 	mov	ar2,@r0
      002534 E5 00            [12] 5015 	mov	a,_bp
      002536 24 04            [12] 5016 	add	a,#0x04
      002538 F8               [12] 5017 	mov	r0,a
      002539 86 82            [24] 5018 	mov	dpl,@r0
      00253B 08               [12] 5019 	inc	r0
      00253C 86 83            [24] 5020 	mov	dph,@r0
      00253E 08               [12] 5021 	inc	r0
      00253F 86 F0            [24] 5022 	mov	b,@r0
      002541 EA               [12] 5023 	mov	a,r2
      002542 12 00 00         [24] 5024 	lcall	__gptrput
                                   5025 ;	FATFS\src\ff.c:1456: } while (j < 8);
      002545 C3               [12] 5026 	clr	c
      002546 ED               [12] 5027 	mov	a,r5
      002547 94 08            [12] 5028 	subb	a,#0x08
      002549 EE               [12] 5029 	mov	a,r6
      00254A 94 00            [12] 5030 	subb	a,#0x00
      00254C 40 89            [24] 5031 	jc	00119$
                                   5032 ;	FATFS\src\ff.c:1457: }
      00254E 85 00 81         [24] 5033 	mov	sp,_bp
      002551 D0 00            [24] 5034 	pop	_bp
      002553 02 00 00         [24] 5035 	ljmp	__sdcc_banked_ret
                                   5036 ;------------------------------------------------------------
                                   5037 ;Allocation info for local variables in function 'sum_sfn'
                                   5038 ;------------------------------------------------------------
                                   5039 ;dir                       Allocated to registers 
                                   5040 ;sum                       Allocated to registers r4 
                                   5041 ;n                         Allocated to stack - _bp +1
                                   5042 ;------------------------------------------------------------
                                   5043 ;	FATFS\src\ff.c:1468: BYTE sum_sfn (
                                   5044 ;	-----------------------------------------
                                   5045 ;	 function sum_sfn
                                   5046 ;	-----------------------------------------
      002556                       5047 _sum_sfn:
      002556 C0 00            [24] 5048 	push	_bp
      002558 85 81 00         [24] 5049 	mov	_bp,sp
      00255B 05 81            [12] 5050 	inc	sp
      00255D 05 81            [12] 5051 	inc	sp
      00255F AD 82            [24] 5052 	mov	r5,dpl
      002561 AE 83            [24] 5053 	mov	r6,dph
      002563 AF F0            [24] 5054 	mov	r7,b
                                   5055 ;	FATFS\src\ff.c:1472: BYTE sum = 0;
      002565 7C 00            [12] 5056 	mov	r4,#0x00
                                   5057 ;	FATFS\src\ff.c:1473: UINT n = 11;
      002567 A8 00            [24] 5058 	mov	r0,_bp
      002569 08               [12] 5059 	inc	r0
      00256A 76 0B            [12] 5060 	mov	@r0,#0x0b
      00256C 08               [12] 5061 	inc	r0
      00256D 76 00            [12] 5062 	mov	@r0,#0x00
                                   5063 ;	FATFS\src\ff.c:1475: do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
      00256F                       5064 00101$:
      00256F EC               [12] 5065 	mov	a,r4
      002570 C3               [12] 5066 	clr	c
      002571 13               [12] 5067 	rrc	a
      002572 FB               [12] 5068 	mov	r3,a
      002573 8C 02            [24] 5069 	mov	ar2,r4
      002575 EA               [12] 5070 	mov	a,r2
      002576 03               [12] 5071 	rr	a
      002577 54 80            [12] 5072 	anl	a,#0x80
      002579 2B               [12] 5073 	add	a,r3
      00257A FA               [12] 5074 	mov	r2,a
      00257B 8D 82            [24] 5075 	mov	dpl,r5
      00257D 8E 83            [24] 5076 	mov	dph,r6
      00257F 8F F0            [24] 5077 	mov	b,r7
      002581 12 00 00         [24] 5078 	lcall	__gptrget
      002584 FB               [12] 5079 	mov	r3,a
      002585 A3               [24] 5080 	inc	dptr
      002586 AD 82            [24] 5081 	mov	r5,dpl
      002588 AE 83            [24] 5082 	mov	r6,dph
      00258A EB               [12] 5083 	mov	a,r3
      00258B 2A               [12] 5084 	add	a,r2
      00258C FC               [12] 5085 	mov	r4,a
      00258D A8 00            [24] 5086 	mov	r0,_bp
      00258F 08               [12] 5087 	inc	r0
      002590 E6               [12] 5088 	mov	a,@r0
      002591 24 FF            [12] 5089 	add	a,#0xff
      002593 FA               [12] 5090 	mov	r2,a
      002594 08               [12] 5091 	inc	r0
      002595 E6               [12] 5092 	mov	a,@r0
      002596 34 FF            [12] 5093 	addc	a,#0xff
      002598 FB               [12] 5094 	mov	r3,a
      002599 A8 00            [24] 5095 	mov	r0,_bp
      00259B 08               [12] 5096 	inc	r0
      00259C A6 02            [24] 5097 	mov	@r0,ar2
      00259E 08               [12] 5098 	inc	r0
      00259F A6 03            [24] 5099 	mov	@r0,ar3
      0025A1 EA               [12] 5100 	mov	a,r2
      0025A2 4B               [12] 5101 	orl	a,r3
      0025A3 70 CA            [24] 5102 	jnz	00101$
                                   5103 ;	FATFS\src\ff.c:1476: return sum;
      0025A5 8C 82            [24] 5104 	mov	dpl,r4
                                   5105 ;	FATFS\src\ff.c:1477: }
      0025A7 85 00 81         [24] 5106 	mov	sp,_bp
      0025AA D0 00            [24] 5107 	pop	_bp
      0025AC 02 00 00         [24] 5108 	ljmp	__sdcc_banked_ret
                                   5109 ;------------------------------------------------------------
                                   5110 ;Allocation info for local variables in function 'dir_find'
                                   5111 ;------------------------------------------------------------
                                   5112 ;dp                        Allocated to stack - _bp +1
                                   5113 ;res                       Allocated to stack - _bp +23
                                   5114 ;c                         Allocated to registers r2 
                                   5115 ;dir                       Allocated to stack - _bp +24
                                   5116 ;a                         Allocated to registers r7 
                                   5117 ;ord                       Allocated to stack - _bp +27
                                   5118 ;sum                       Allocated to stack - _bp +28
                                   5119 ;sloc0                     Allocated to stack - _bp +7
                                   5120 ;sloc1                     Allocated to stack - _bp +20
                                   5121 ;sloc2                     Allocated to stack - _bp +4
                                   5122 ;sloc3                     Allocated to stack - _bp +17
                                   5123 ;sloc4                     Allocated to stack - _bp +10
                                   5124 ;sloc5                     Allocated to stack - _bp +14
                                   5125 ;------------------------------------------------------------
                                   5126 ;	FATFS\src\ff.c:1488: FRESULT dir_find (
                                   5127 ;	-----------------------------------------
                                   5128 ;	 function dir_find
                                   5129 ;	-----------------------------------------
      0025AF                       5130 _dir_find:
      0025AF C0 00            [24] 5131 	push	_bp
      0025B1 85 81 00         [24] 5132 	mov	_bp,sp
      0025B4 C0 82            [24] 5133 	push	dpl
      0025B6 C0 83            [24] 5134 	push	dph
      0025B8 C0 F0            [24] 5135 	push	b
      0025BA E5 81            [12] 5136 	mov	a,sp
      0025BC 24 19            [12] 5137 	add	a,#0x19
      0025BE F5 81            [12] 5138 	mov	sp,a
                                   5139 ;	FATFS\src\ff.c:1498: res = dir_sdi(dp, 0);			/* Rewind directory object */
      0025C0 E4               [12] 5140 	clr	a
      0025C1 C0 E0            [24] 5141 	push	acc
      0025C3 C0 E0            [24] 5142 	push	acc
      0025C5 A8 00            [24] 5143 	mov	r0,_bp
      0025C7 08               [12] 5144 	inc	r0
      0025C8 86 82            [24] 5145 	mov	dpl,@r0
      0025CA 08               [12] 5146 	inc	r0
      0025CB 86 83            [24] 5147 	mov	dph,@r0
      0025CD 08               [12] 5148 	inc	r0
      0025CE 86 F0            [24] 5149 	mov	b,@r0
      0025D0 78 16            [12] 5150 	mov	r0,#_dir_sdi
      0025D2 79 16            [12] 5151 	mov	r1,#(_dir_sdi >> 8)
      0025D4 7A 00            [12] 5152 	mov	r2,#(_dir_sdi >> 16)
      0025D6 12 00 00         [24] 5153 	lcall	__sdcc_banked_call
      0025D9 AC 82            [24] 5154 	mov	r4,dpl
      0025DB 15 81            [12] 5155 	dec	sp
      0025DD 15 81            [12] 5156 	dec	sp
                                   5157 ;	FATFS\src\ff.c:1499: if (res != FR_OK) return res;
      0025DF EC               [12] 5158 	mov	a,r4
      0025E0 60 05            [24] 5159 	jz	00102$
      0025E2 8C 82            [24] 5160 	mov	dpl,r4
      0025E4 02 29 61         [24] 5161 	ljmp	00128$
      0025E7                       5162 00102$:
                                   5163 ;	FATFS\src\ff.c:1502: ord = sum = 0xFF;
      0025E7 E5 00            [12] 5164 	mov	a,_bp
      0025E9 24 1C            [12] 5165 	add	a,#0x1c
      0025EB F8               [12] 5166 	mov	r0,a
      0025EC 76 FF            [12] 5167 	mov	@r0,#0xff
      0025EE E5 00            [12] 5168 	mov	a,_bp
      0025F0 24 1B            [12] 5169 	add	a,#0x1b
      0025F2 F8               [12] 5170 	mov	r0,a
      0025F3 76 FF            [12] 5171 	mov	@r0,#0xff
                                   5172 ;	FATFS\src\ff.c:1504: do {
      0025F5 A8 00            [24] 5173 	mov	r0,_bp
      0025F7 08               [12] 5174 	inc	r0
      0025F8 E5 00            [12] 5175 	mov	a,_bp
      0025FA 24 0E            [12] 5176 	add	a,#0x0e
      0025FC F9               [12] 5177 	mov	r1,a
      0025FD 74 05            [12] 5178 	mov	a,#0x05
      0025FF 26               [12] 5179 	add	a,@r0
      002600 F7               [12] 5180 	mov	@r1,a
      002601 E4               [12] 5181 	clr	a
      002602 08               [12] 5182 	inc	r0
      002603 36               [12] 5183 	addc	a,@r0
      002604 09               [12] 5184 	inc	r1
      002605 F7               [12] 5185 	mov	@r1,a
      002606 08               [12] 5186 	inc	r0
      002607 09               [12] 5187 	inc	r1
      002608 E6               [12] 5188 	mov	a,@r0
      002609 F7               [12] 5189 	mov	@r1,a
      00260A A8 00            [24] 5190 	mov	r0,_bp
      00260C 08               [12] 5191 	inc	r0
      00260D E5 00            [12] 5192 	mov	a,_bp
      00260F 24 07            [12] 5193 	add	a,#0x07
      002611 F9               [12] 5194 	mov	r1,a
      002612 74 13            [12] 5195 	mov	a,#0x13
      002614 26               [12] 5196 	add	a,@r0
      002615 F7               [12] 5197 	mov	@r1,a
      002616 E4               [12] 5198 	clr	a
      002617 08               [12] 5199 	inc	r0
      002618 36               [12] 5200 	addc	a,@r0
      002619 09               [12] 5201 	inc	r1
      00261A F7               [12] 5202 	mov	@r1,a
      00261B 08               [12] 5203 	inc	r0
      00261C 09               [12] 5204 	inc	r1
      00261D E6               [12] 5205 	mov	a,@r0
      00261E F7               [12] 5206 	mov	@r1,a
      00261F A8 00            [24] 5207 	mov	r0,_bp
      002621 08               [12] 5208 	inc	r0
      002622 E5 00            [12] 5209 	mov	a,_bp
      002624 24 14            [12] 5210 	add	a,#0x14
      002626 F9               [12] 5211 	mov	r1,a
      002627 74 16            [12] 5212 	mov	a,#0x16
      002629 26               [12] 5213 	add	a,@r0
      00262A F7               [12] 5214 	mov	@r1,a
      00262B E4               [12] 5215 	clr	a
      00262C 08               [12] 5216 	inc	r0
      00262D 36               [12] 5217 	addc	a,@r0
      00262E 09               [12] 5218 	inc	r1
      00262F F7               [12] 5219 	mov	@r1,a
      002630 08               [12] 5220 	inc	r0
      002631 09               [12] 5221 	inc	r1
      002632 E6               [12] 5222 	mov	a,@r0
      002633 F7               [12] 5223 	mov	@r1,a
      002634 A8 00            [24] 5224 	mov	r0,_bp
      002636 08               [12] 5225 	inc	r0
      002637 E5 00            [12] 5226 	mov	a,_bp
      002639 24 04            [12] 5227 	add	a,#0x04
      00263B F9               [12] 5228 	mov	r1,a
      00263C 74 19            [12] 5229 	mov	a,#0x19
      00263E 26               [12] 5230 	add	a,@r0
      00263F F7               [12] 5231 	mov	@r1,a
      002640 E4               [12] 5232 	clr	a
      002641 08               [12] 5233 	inc	r0
      002642 36               [12] 5234 	addc	a,@r0
      002643 09               [12] 5235 	inc	r1
      002644 F7               [12] 5236 	mov	@r1,a
      002645 08               [12] 5237 	inc	r0
      002646 09               [12] 5238 	inc	r1
      002647 E6               [12] 5239 	mov	a,@r0
      002648 F7               [12] 5240 	mov	@r1,a
      002649 A8 00            [24] 5241 	mov	r0,_bp
      00264B 08               [12] 5242 	inc	r0
      00264C E5 00            [12] 5243 	mov	a,_bp
      00264E 24 11            [12] 5244 	add	a,#0x11
      002650 F9               [12] 5245 	mov	r1,a
      002651 74 0F            [12] 5246 	mov	a,#0x0f
      002653 26               [12] 5247 	add	a,@r0
      002654 F7               [12] 5248 	mov	@r1,a
      002655 E4               [12] 5249 	clr	a
      002656 08               [12] 5250 	inc	r0
      002657 36               [12] 5251 	addc	a,@r0
      002658 09               [12] 5252 	inc	r1
      002659 F7               [12] 5253 	mov	@r1,a
      00265A 08               [12] 5254 	inc	r0
      00265B 09               [12] 5255 	inc	r1
      00265C E6               [12] 5256 	mov	a,@r0
      00265D F7               [12] 5257 	mov	@r1,a
      00265E                       5258 00125$:
                                   5259 ;	FATFS\src\ff.c:1505: res = move_window(dp->fs, dp->sect);
      00265E E5 00            [12] 5260 	mov	a,_bp
      002660 24 11            [12] 5261 	add	a,#0x11
      002662 F8               [12] 5262 	mov	r0,a
      002663 86 82            [24] 5263 	mov	dpl,@r0
      002665 08               [12] 5264 	inc	r0
      002666 86 83            [24] 5265 	mov	dph,@r0
      002668 08               [12] 5266 	inc	r0
      002669 86 F0            [24] 5267 	mov	b,@r0
      00266B E5 00            [12] 5268 	mov	a,_bp
      00266D 24 0A            [12] 5269 	add	a,#0x0a
      00266F F9               [12] 5270 	mov	r1,a
      002670 12 00 00         [24] 5271 	lcall	__gptrget
      002673 F7               [12] 5272 	mov	@r1,a
      002674 A3               [24] 5273 	inc	dptr
      002675 12 00 00         [24] 5274 	lcall	__gptrget
      002678 09               [12] 5275 	inc	r1
      002679 F7               [12] 5276 	mov	@r1,a
      00267A A3               [24] 5277 	inc	dptr
      00267B 12 00 00         [24] 5278 	lcall	__gptrget
      00267E 09               [12] 5279 	inc	r1
      00267F F7               [12] 5280 	mov	@r1,a
      002680 A3               [24] 5281 	inc	dptr
      002681 12 00 00         [24] 5282 	lcall	__gptrget
      002684 09               [12] 5283 	inc	r1
      002685 F7               [12] 5284 	mov	@r1,a
      002686 A8 00            [24] 5285 	mov	r0,_bp
      002688 08               [12] 5286 	inc	r0
      002689 86 82            [24] 5287 	mov	dpl,@r0
      00268B 08               [12] 5288 	inc	r0
      00268C 86 83            [24] 5289 	mov	dph,@r0
      00268E 08               [12] 5290 	inc	r0
      00268F 86 F0            [24] 5291 	mov	b,@r0
      002691 12 00 00         [24] 5292 	lcall	__gptrget
      002694 FD               [12] 5293 	mov	r5,a
      002695 A3               [24] 5294 	inc	dptr
      002696 12 00 00         [24] 5295 	lcall	__gptrget
      002699 FE               [12] 5296 	mov	r6,a
      00269A A3               [24] 5297 	inc	dptr
      00269B 12 00 00         [24] 5298 	lcall	__gptrget
      00269E FF               [12] 5299 	mov	r7,a
      00269F E5 00            [12] 5300 	mov	a,_bp
      0026A1 24 0A            [12] 5301 	add	a,#0x0a
      0026A3 F8               [12] 5302 	mov	r0,a
      0026A4 E6               [12] 5303 	mov	a,@r0
      0026A5 C0 E0            [24] 5304 	push	acc
      0026A7 08               [12] 5305 	inc	r0
      0026A8 E6               [12] 5306 	mov	a,@r0
      0026A9 C0 E0            [24] 5307 	push	acc
      0026AB 08               [12] 5308 	inc	r0
      0026AC E6               [12] 5309 	mov	a,@r0
      0026AD C0 E0            [24] 5310 	push	acc
      0026AF 08               [12] 5311 	inc	r0
      0026B0 E6               [12] 5312 	mov	a,@r0
      0026B1 C0 E0            [24] 5313 	push	acc
      0026B3 8D 82            [24] 5314 	mov	dpl,r5
      0026B5 8E 83            [24] 5315 	mov	dph,r6
      0026B7 8F F0            [24] 5316 	mov	b,r7
      0026B9 78 7C            [12] 5317 	mov	r0,#_move_window
      0026BB 79 0D            [12] 5318 	mov	r1,#(_move_window >> 8)
      0026BD 7A 00            [12] 5319 	mov	r2,#(_move_window >> 16)
      0026BF 12 00 00         [24] 5320 	lcall	__sdcc_banked_call
      0026C2 AF 82            [24] 5321 	mov	r7,dpl
      0026C4 E5 81            [12] 5322 	mov	a,sp
      0026C6 24 FC            [12] 5323 	add	a,#0xfc
      0026C8 F5 81            [12] 5324 	mov	sp,a
      0026CA E5 00            [12] 5325 	mov	a,_bp
      0026CC 24 17            [12] 5326 	add	a,#0x17
      0026CE F8               [12] 5327 	mov	r0,a
      0026CF A6 07            [24] 5328 	mov	@r0,ar7
                                   5329 ;	FATFS\src\ff.c:1506: if (res != FR_OK) break;
      0026D1 E5 00            [12] 5330 	mov	a,_bp
      0026D3 24 17            [12] 5331 	add	a,#0x17
      0026D5 F8               [12] 5332 	mov	r0,a
      0026D6 E6               [12] 5333 	mov	a,@r0
      0026D7 60 03            [24] 5334 	jz	00207$
      0026D9 02 29 5A         [24] 5335 	ljmp	00127$
      0026DC                       5336 00207$:
                                   5337 ;	FATFS\src\ff.c:1507: dir = dp->dir;					/* Ptr to the directory entry of current index */
      0026DC E5 00            [12] 5338 	mov	a,_bp
      0026DE 24 07            [12] 5339 	add	a,#0x07
      0026E0 F8               [12] 5340 	mov	r0,a
      0026E1 86 82            [24] 5341 	mov	dpl,@r0
      0026E3 08               [12] 5342 	inc	r0
      0026E4 86 83            [24] 5343 	mov	dph,@r0
      0026E6 08               [12] 5344 	inc	r0
      0026E7 86 F0            [24] 5345 	mov	b,@r0
      0026E9 E5 00            [12] 5346 	mov	a,_bp
      0026EB 24 18            [12] 5347 	add	a,#0x18
      0026ED F9               [12] 5348 	mov	r1,a
      0026EE 12 00 00         [24] 5349 	lcall	__gptrget
      0026F1 F7               [12] 5350 	mov	@r1,a
      0026F2 A3               [24] 5351 	inc	dptr
      0026F3 12 00 00         [24] 5352 	lcall	__gptrget
      0026F6 09               [12] 5353 	inc	r1
      0026F7 F7               [12] 5354 	mov	@r1,a
      0026F8 A3               [24] 5355 	inc	dptr
      0026F9 12 00 00         [24] 5356 	lcall	__gptrget
      0026FC 09               [12] 5357 	inc	r1
      0026FD F7               [12] 5358 	mov	@r1,a
                                   5359 ;	FATFS\src\ff.c:1508: c = dir[DIR_Name];
      0026FE E5 00            [12] 5360 	mov	a,_bp
      002700 24 18            [12] 5361 	add	a,#0x18
      002702 F8               [12] 5362 	mov	r0,a
      002703 86 82            [24] 5363 	mov	dpl,@r0
      002705 08               [12] 5364 	inc	r0
      002706 86 83            [24] 5365 	mov	dph,@r0
      002708 08               [12] 5366 	inc	r0
      002709 86 F0            [24] 5367 	mov	b,@r0
      00270B 12 00 00         [24] 5368 	lcall	__gptrget
                                   5369 ;	FATFS\src\ff.c:1509: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
      00270E FA               [12] 5370 	mov	r2,a
      00270F 70 0A            [24] 5371 	jnz	00106$
      002711 E5 00            [12] 5372 	mov	a,_bp
      002713 24 17            [12] 5373 	add	a,#0x17
      002715 F8               [12] 5374 	mov	r0,a
      002716 76 04            [12] 5375 	mov	@r0,#0x04
      002718 02 29 5A         [24] 5376 	ljmp	00127$
      00271B                       5377 00106$:
                                   5378 ;	FATFS\src\ff.c:1511: a = dir[DIR_Attr] & AM_MASK;
      00271B E5 00            [12] 5379 	mov	a,_bp
      00271D 24 18            [12] 5380 	add	a,#0x18
      00271F F8               [12] 5381 	mov	r0,a
      002720 74 0B            [12] 5382 	mov	a,#0x0b
      002722 26               [12] 5383 	add	a,@r0
      002723 FC               [12] 5384 	mov	r4,a
      002724 E4               [12] 5385 	clr	a
      002725 08               [12] 5386 	inc	r0
      002726 36               [12] 5387 	addc	a,@r0
      002727 FD               [12] 5388 	mov	r5,a
      002728 08               [12] 5389 	inc	r0
      002729 86 06            [24] 5390 	mov	ar6,@r0
      00272B 8C 82            [24] 5391 	mov	dpl,r4
      00272D 8D 83            [24] 5392 	mov	dph,r5
      00272F 8E F0            [24] 5393 	mov	b,r6
      002731 12 00 00         [24] 5394 	lcall	__gptrget
      002734 FC               [12] 5395 	mov	r4,a
      002735 74 3F            [12] 5396 	mov	a,#0x3f
      002737 5C               [12] 5397 	anl	a,r4
      002738 FF               [12] 5398 	mov	r7,a
                                   5399 ;	FATFS\src\ff.c:1512: if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
      002739 BA E5 02         [24] 5400 	cjne	r2,#0xe5,00209$
      00273C 80 09            [24] 5401 	sjmp	00120$
      00273E                       5402 00209$:
      00273E EF               [12] 5403 	mov	a,r7
      00273F 30 E3 0F         [24] 5404 	jnb	acc.3,00121$
      002742 BF 0F 02         [24] 5405 	cjne	r7,#0x0f,00211$
      002745 80 0A            [24] 5406 	sjmp	00121$
      002747                       5407 00211$:
      002747                       5408 00120$:
                                   5409 ;	FATFS\src\ff.c:1513: ord = 0xFF;
      002747 E5 00            [12] 5410 	mov	a,_bp
      002749 24 1B            [12] 5411 	add	a,#0x1b
      00274B F8               [12] 5412 	mov	r0,a
      00274C 76 FF            [12] 5413 	mov	@r0,#0xff
      00274E 02 29 29         [24] 5414 	ljmp	00122$
      002751                       5415 00121$:
                                   5416 ;	FATFS\src\ff.c:1515: if (a == AM_LFN) {			/* An LFN entry is found */
      002751 BF 0F 02         [24] 5417 	cjne	r7,#0x0f,00212$
      002754 80 03            [24] 5418 	sjmp	00213$
      002756                       5419 00212$:
      002756 02 28 71         [24] 5420 	ljmp	00118$
      002759                       5421 00213$:
                                   5422 ;	FATFS\src\ff.c:1516: if (dp->lfn) {
      002759 E5 00            [12] 5423 	mov	a,_bp
      00275B 24 04            [12] 5424 	add	a,#0x04
      00275D F8               [12] 5425 	mov	r0,a
      00275E 86 82            [24] 5426 	mov	dpl,@r0
      002760 08               [12] 5427 	inc	r0
      002761 86 83            [24] 5428 	mov	dph,@r0
      002763 08               [12] 5429 	inc	r0
      002764 86 F0            [24] 5430 	mov	b,@r0
      002766 12 00 00         [24] 5431 	lcall	__gptrget
      002769 FD               [12] 5432 	mov	r5,a
      00276A A3               [24] 5433 	inc	dptr
      00276B 12 00 00         [24] 5434 	lcall	__gptrget
      00276E FE               [12] 5435 	mov	r6,a
      00276F A3               [24] 5436 	inc	dptr
      002770 12 00 00         [24] 5437 	lcall	__gptrget
      002773 FF               [12] 5438 	mov	r7,a
      002774 ED               [12] 5439 	mov	a,r5
      002775 4E               [12] 5440 	orl	a,r6
      002776 70 03            [24] 5441 	jnz	00214$
      002778 02 29 29         [24] 5442 	ljmp	00122$
      00277B                       5443 00214$:
                                   5444 ;	FATFS\src\ff.c:1517: if (c & LLE) {		/* Is it start of LFN sequence? */
      00277B EA               [12] 5445 	mov	a,r2
      00277C 30 E6 5C         [24] 5446 	jnb	acc.6,00108$
                                   5447 ;	FATFS\src\ff.c:1518: sum = dir[LDIR_Chksum];
      00277F E5 00            [12] 5448 	mov	a,_bp
      002781 24 18            [12] 5449 	add	a,#0x18
      002783 F8               [12] 5450 	mov	r0,a
      002784 74 0D            [12] 5451 	mov	a,#0x0d
      002786 26               [12] 5452 	add	a,@r0
      002787 FD               [12] 5453 	mov	r5,a
      002788 E4               [12] 5454 	clr	a
      002789 08               [12] 5455 	inc	r0
      00278A 36               [12] 5456 	addc	a,@r0
      00278B FE               [12] 5457 	mov	r6,a
      00278C 08               [12] 5458 	inc	r0
      00278D 86 07            [24] 5459 	mov	ar7,@r0
      00278F 8D 82            [24] 5460 	mov	dpl,r5
      002791 8E 83            [24] 5461 	mov	dph,r6
      002793 8F F0            [24] 5462 	mov	b,r7
      002795 E5 00            [12] 5463 	mov	a,_bp
      002797 24 1C            [12] 5464 	add	a,#0x1c
      002799 F8               [12] 5465 	mov	r0,a
      00279A 12 00 00         [24] 5466 	lcall	__gptrget
      00279D F6               [12] 5467 	mov	@r0,a
                                   5468 ;	FATFS\src\ff.c:1519: c &= ~LLE; ord = c;	/* LFN start order */
      00279E 53 02 BF         [24] 5469 	anl	ar2,#0xbf
      0027A1 E5 00            [12] 5470 	mov	a,_bp
      0027A3 24 1B            [12] 5471 	add	a,#0x1b
      0027A5 F8               [12] 5472 	mov	r0,a
      0027A6 A6 02            [24] 5473 	mov	@r0,ar2
                                   5474 ;	FATFS\src\ff.c:1520: dp->lfn_idx = dp->index;
      0027A8 A8 00            [24] 5475 	mov	r0,_bp
      0027AA 08               [12] 5476 	inc	r0
      0027AB 74 1C            [12] 5477 	mov	a,#0x1c
      0027AD 26               [12] 5478 	add	a,@r0
      0027AE FD               [12] 5479 	mov	r5,a
      0027AF E4               [12] 5480 	clr	a
      0027B0 08               [12] 5481 	inc	r0
      0027B1 36               [12] 5482 	addc	a,@r0
      0027B2 FE               [12] 5483 	mov	r6,a
      0027B3 08               [12] 5484 	inc	r0
      0027B4 86 07            [24] 5485 	mov	ar7,@r0
      0027B6 E5 00            [12] 5486 	mov	a,_bp
      0027B8 24 0E            [12] 5487 	add	a,#0x0e
      0027BA F8               [12] 5488 	mov	r0,a
      0027BB 86 82            [24] 5489 	mov	dpl,@r0
      0027BD 08               [12] 5490 	inc	r0
      0027BE 86 83            [24] 5491 	mov	dph,@r0
      0027C0 08               [12] 5492 	inc	r0
      0027C1 86 F0            [24] 5493 	mov	b,@r0
      0027C3 12 00 00         [24] 5494 	lcall	__gptrget
      0027C6 FB               [12] 5495 	mov	r3,a
      0027C7 A3               [24] 5496 	inc	dptr
      0027C8 12 00 00         [24] 5497 	lcall	__gptrget
      0027CB FC               [12] 5498 	mov	r4,a
      0027CC 8D 82            [24] 5499 	mov	dpl,r5
      0027CE 8E 83            [24] 5500 	mov	dph,r6
      0027D0 8F F0            [24] 5501 	mov	b,r7
      0027D2 EB               [12] 5502 	mov	a,r3
      0027D3 12 00 00         [24] 5503 	lcall	__gptrput
      0027D6 A3               [24] 5504 	inc	dptr
      0027D7 EC               [12] 5505 	mov	a,r4
      0027D8 12 00 00         [24] 5506 	lcall	__gptrput
      0027DB                       5507 00108$:
                                   5508 ;	FATFS\src\ff.c:1523: ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
      0027DB E5 00            [12] 5509 	mov	a,_bp
      0027DD 24 1B            [12] 5510 	add	a,#0x1b
      0027DF F8               [12] 5511 	mov	r0,a
      0027E0 E6               [12] 5512 	mov	a,@r0
      0027E1 B5 02 02         [24] 5513 	cjne	a,ar2,00216$
      0027E4 80 03            [24] 5514 	sjmp	00217$
      0027E6                       5515 00216$:
      0027E6 02 28 63         [24] 5516 	ljmp	00130$
      0027E9                       5517 00217$:
      0027E9 E5 00            [12] 5518 	mov	a,_bp
      0027EB 24 18            [12] 5519 	add	a,#0x18
      0027ED F8               [12] 5520 	mov	r0,a
      0027EE 74 0D            [12] 5521 	mov	a,#0x0d
      0027F0 26               [12] 5522 	add	a,@r0
      0027F1 FD               [12] 5523 	mov	r5,a
      0027F2 E4               [12] 5524 	clr	a
      0027F3 08               [12] 5525 	inc	r0
      0027F4 36               [12] 5526 	addc	a,@r0
      0027F5 FE               [12] 5527 	mov	r6,a
      0027F6 08               [12] 5528 	inc	r0
      0027F7 86 07            [24] 5529 	mov	ar7,@r0
      0027F9 8D 82            [24] 5530 	mov	dpl,r5
      0027FB 8E 83            [24] 5531 	mov	dph,r6
      0027FD 8F F0            [24] 5532 	mov	b,r7
      0027FF 12 00 00         [24] 5533 	lcall	__gptrget
      002802 FD               [12] 5534 	mov	r5,a
      002803 E5 00            [12] 5535 	mov	a,_bp
      002805 24 1C            [12] 5536 	add	a,#0x1c
      002807 F8               [12] 5537 	mov	r0,a
      002808 E6               [12] 5538 	mov	a,@r0
      002809 B5 05 57         [24] 5539 	cjne	a,ar5,00130$
      00280C E5 00            [12] 5540 	mov	a,_bp
      00280E 24 04            [12] 5541 	add	a,#0x04
      002810 F8               [12] 5542 	mov	r0,a
      002811 86 82            [24] 5543 	mov	dpl,@r0
      002813 08               [12] 5544 	inc	r0
      002814 86 83            [24] 5545 	mov	dph,@r0
      002816 08               [12] 5546 	inc	r0
      002817 86 F0            [24] 5547 	mov	b,@r0
      002819 12 00 00         [24] 5548 	lcall	__gptrget
      00281C FD               [12] 5549 	mov	r5,a
      00281D A3               [24] 5550 	inc	dptr
      00281E 12 00 00         [24] 5551 	lcall	__gptrget
      002821 FE               [12] 5552 	mov	r6,a
      002822 A3               [24] 5553 	inc	dptr
      002823 12 00 00         [24] 5554 	lcall	__gptrget
      002826 FF               [12] 5555 	mov	r7,a
      002827 E5 00            [12] 5556 	mov	a,_bp
      002829 24 18            [12] 5557 	add	a,#0x18
      00282B F8               [12] 5558 	mov	r0,a
      00282C E6               [12] 5559 	mov	a,@r0
      00282D C0 E0            [24] 5560 	push	acc
      00282F 08               [12] 5561 	inc	r0
      002830 E6               [12] 5562 	mov	a,@r0
      002831 C0 E0            [24] 5563 	push	acc
      002833 08               [12] 5564 	inc	r0
      002834 E6               [12] 5565 	mov	a,@r0
      002835 C0 E0            [24] 5566 	push	acc
      002837 8D 82            [24] 5567 	mov	dpl,r5
      002839 8E 83            [24] 5568 	mov	dph,r6
      00283B 8F F0            [24] 5569 	mov	b,r7
      00283D 78 21            [12] 5570 	mov	r0,#_cmp_lfn
      00283F 79 1F            [12] 5571 	mov	r1,#(_cmp_lfn >> 8)
      002841 7A 00            [12] 5572 	mov	r2,#(_cmp_lfn >> 16)
      002843 12 00 00         [24] 5573 	lcall	__sdcc_banked_call
      002846 AE 82            [24] 5574 	mov	r6,dpl
      002848 AF 83            [24] 5575 	mov	r7,dph
      00284A 15 81            [12] 5576 	dec	sp
      00284C 15 81            [12] 5577 	dec	sp
      00284E 15 81            [12] 5578 	dec	sp
      002850 EE               [12] 5579 	mov	a,r6
      002851 4F               [12] 5580 	orl	a,r7
      002852 60 0F            [24] 5581 	jz	00130$
      002854 E5 00            [12] 5582 	mov	a,_bp
      002856 24 1B            [12] 5583 	add	a,#0x1b
      002858 F8               [12] 5584 	mov	r0,a
      002859 86 03            [24] 5585 	mov	ar3,@r0
      00285B 1B               [12] 5586 	dec	r3
      00285C EB               [12] 5587 	mov	a,r3
      00285D 33               [12] 5588 	rlc	a
      00285E 95 E0            [12] 5589 	subb	a,acc
      002860 FF               [12] 5590 	mov	r7,a
      002861 80 04            [24] 5591 	sjmp	00131$
      002863                       5592 00130$:
      002863 7B FF            [12] 5593 	mov	r3,#0xff
      002865 7F 00            [12] 5594 	mov	r7,#0x00
      002867                       5595 00131$:
      002867 E5 00            [12] 5596 	mov	a,_bp
      002869 24 1B            [12] 5597 	add	a,#0x1b
      00286B F8               [12] 5598 	mov	r0,a
      00286C A6 03            [24] 5599 	mov	@r0,ar3
      00286E 02 29 29         [24] 5600 	ljmp	00122$
      002871                       5601 00118$:
                                   5602 ;	FATFS\src\ff.c:1526: if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
      002871 E5 00            [12] 5603 	mov	a,_bp
      002873 24 1B            [12] 5604 	add	a,#0x1b
      002875 F8               [12] 5605 	mov	r0,a
      002876 E6               [12] 5606 	mov	a,@r0
      002877 70 24            [24] 5607 	jnz	00112$
      002879 E5 00            [12] 5608 	mov	a,_bp
      00287B 24 18            [12] 5609 	add	a,#0x18
      00287D F8               [12] 5610 	mov	r0,a
      00287E 86 82            [24] 5611 	mov	dpl,@r0
      002880 08               [12] 5612 	inc	r0
      002881 86 83            [24] 5613 	mov	dph,@r0
      002883 08               [12] 5614 	inc	r0
      002884 86 F0            [24] 5615 	mov	b,@r0
      002886 78 56            [12] 5616 	mov	r0,#_sum_sfn
      002888 79 25            [12] 5617 	mov	r1,#(_sum_sfn >> 8)
      00288A 7A 00            [12] 5618 	mov	r2,#(_sum_sfn >> 16)
      00288C 12 00 00         [24] 5619 	lcall	__sdcc_banked_call
      00288F AF 82            [24] 5620 	mov	r7,dpl
      002891 E5 00            [12] 5621 	mov	a,_bp
      002893 24 1C            [12] 5622 	add	a,#0x1c
      002895 F8               [12] 5623 	mov	r0,a
      002896 E6               [12] 5624 	mov	a,@r0
      002897 B5 07 03         [24] 5625 	cjne	a,ar7,00222$
      00289A 02 29 5A         [24] 5626 	ljmp	00127$
      00289D                       5627 00222$:
      00289D                       5628 00112$:
                                   5629 ;	FATFS\src\ff.c:1527: ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
      00289D E5 00            [12] 5630 	mov	a,_bp
      00289F 24 1B            [12] 5631 	add	a,#0x1b
      0028A1 F8               [12] 5632 	mov	r0,a
      0028A2 76 FF            [12] 5633 	mov	@r0,#0xff
      0028A4 A8 00            [24] 5634 	mov	r0,_bp
      0028A6 08               [12] 5635 	inc	r0
      0028A7 74 1C            [12] 5636 	mov	a,#0x1c
      0028A9 26               [12] 5637 	add	a,@r0
      0028AA FD               [12] 5638 	mov	r5,a
      0028AB E4               [12] 5639 	clr	a
      0028AC 08               [12] 5640 	inc	r0
      0028AD 36               [12] 5641 	addc	a,@r0
      0028AE FE               [12] 5642 	mov	r6,a
      0028AF 08               [12] 5643 	inc	r0
      0028B0 86 07            [24] 5644 	mov	ar7,@r0
      0028B2 8D 82            [24] 5645 	mov	dpl,r5
      0028B4 8E 83            [24] 5646 	mov	dph,r6
      0028B6 8F F0            [24] 5647 	mov	b,r7
      0028B8 74 FF            [12] 5648 	mov	a,#0xff
      0028BA 12 00 00         [24] 5649 	lcall	__gptrput
      0028BD A3               [24] 5650 	inc	dptr
      0028BE 12 00 00         [24] 5651 	lcall	__gptrput
                                   5652 ;	FATFS\src\ff.c:1528: if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
      0028C1 E5 00            [12] 5653 	mov	a,_bp
      0028C3 24 14            [12] 5654 	add	a,#0x14
      0028C5 F8               [12] 5655 	mov	r0,a
      0028C6 86 82            [24] 5656 	mov	dpl,@r0
      0028C8 08               [12] 5657 	inc	r0
      0028C9 86 83            [24] 5658 	mov	dph,@r0
      0028CB 08               [12] 5659 	inc	r0
      0028CC 86 F0            [24] 5660 	mov	b,@r0
      0028CE 12 00 00         [24] 5661 	lcall	__gptrget
      0028D1 FD               [12] 5662 	mov	r5,a
      0028D2 A3               [24] 5663 	inc	dptr
      0028D3 12 00 00         [24] 5664 	lcall	__gptrget
      0028D6 FE               [12] 5665 	mov	r6,a
      0028D7 A3               [24] 5666 	inc	dptr
      0028D8 12 00 00         [24] 5667 	lcall	__gptrget
      0028DB FF               [12] 5668 	mov	r7,a
      0028DC 74 0B            [12] 5669 	mov	a,#0x0b
      0028DE 2D               [12] 5670 	add	a,r5
      0028DF FA               [12] 5671 	mov	r2,a
      0028E0 E4               [12] 5672 	clr	a
      0028E1 3E               [12] 5673 	addc	a,r6
      0028E2 FB               [12] 5674 	mov	r3,a
      0028E3 8F 04            [24] 5675 	mov	ar4,r7
      0028E5 8A 82            [24] 5676 	mov	dpl,r2
      0028E7 8B 83            [24] 5677 	mov	dph,r3
      0028E9 8C F0            [24] 5678 	mov	b,r4
      0028EB 12 00 00         [24] 5679 	lcall	__gptrget
      0028EE FA               [12] 5680 	mov	r2,a
      0028EF 20 E0 37         [24] 5681 	jb	acc.0,00122$
      0028F2 E5 00            [12] 5682 	mov	a,_bp
      0028F4 24 18            [12] 5683 	add	a,#0x18
      0028F6 F8               [12] 5684 	mov	r0,a
      0028F7 86 02            [24] 5685 	mov	ar2,@r0
      0028F9 08               [12] 5686 	inc	r0
      0028FA 86 03            [24] 5687 	mov	ar3,@r0
      0028FC 08               [12] 5688 	inc	r0
      0028FD 86 04            [24] 5689 	mov	ar4,@r0
      0028FF 74 0B            [12] 5690 	mov	a,#0x0b
      002901 C0 E0            [24] 5691 	push	acc
      002903 E4               [12] 5692 	clr	a
      002904 C0 E0            [24] 5693 	push	acc
      002906 C0 05            [24] 5694 	push	ar5
      002908 C0 06            [24] 5695 	push	ar6
      00290A C0 07            [24] 5696 	push	ar7
      00290C 8A 82            [24] 5697 	mov	dpl,r2
      00290E 8B 83            [24] 5698 	mov	dph,r3
      002910 8C F0            [24] 5699 	mov	b,r4
      002912 78 84            [12] 5700 	mov	r0,#_mem_cmp
      002914 79 0C            [12] 5701 	mov	r1,#(_mem_cmp >> 8)
      002916 7A 00            [12] 5702 	mov	r2,#(_mem_cmp >> 16)
      002918 12 00 00         [24] 5703 	lcall	__sdcc_banked_call
      00291B AE 82            [24] 5704 	mov	r6,dpl
      00291D AF 83            [24] 5705 	mov	r7,dph
      00291F E5 81            [12] 5706 	mov	a,sp
      002921 24 FB            [12] 5707 	add	a,#0xfb
      002923 F5 81            [12] 5708 	mov	sp,a
      002925 EE               [12] 5709 	mov	a,r6
      002926 4F               [12] 5710 	orl	a,r7
      002927 60 31            [24] 5711 	jz	00127$
      002929                       5712 00122$:
                                   5713 ;	FATFS\src\ff.c:1535: res = dir_next(dp, 0);		/* Next entry */
      002929 E4               [12] 5714 	clr	a
      00292A C0 E0            [24] 5715 	push	acc
      00292C C0 E0            [24] 5716 	push	acc
      00292E A8 00            [24] 5717 	mov	r0,_bp
      002930 08               [12] 5718 	inc	r0
      002931 86 82            [24] 5719 	mov	dpl,@r0
      002933 08               [12] 5720 	inc	r0
      002934 86 83            [24] 5721 	mov	dph,@r0
      002936 08               [12] 5722 	inc	r0
      002937 86 F0            [24] 5723 	mov	b,@r0
      002939 78 74            [12] 5724 	mov	r0,#_dir_next
      00293B 79 1A            [12] 5725 	mov	r1,#(_dir_next >> 8)
      00293D 7A 00            [12] 5726 	mov	r2,#(_dir_next >> 16)
      00293F 12 00 00         [24] 5727 	lcall	__sdcc_banked_call
      002942 AF 82            [24] 5728 	mov	r7,dpl
      002944 15 81            [12] 5729 	dec	sp
      002946 15 81            [12] 5730 	dec	sp
      002948 E5 00            [12] 5731 	mov	a,_bp
      00294A 24 17            [12] 5732 	add	a,#0x17
      00294C F8               [12] 5733 	mov	r0,a
      00294D A6 07            [24] 5734 	mov	@r0,ar7
                                   5735 ;	FATFS\src\ff.c:1536: } while (res == FR_OK);
      00294F E5 00            [12] 5736 	mov	a,_bp
      002951 24 17            [12] 5737 	add	a,#0x17
      002953 F8               [12] 5738 	mov	r0,a
      002954 E6               [12] 5739 	mov	a,@r0
      002955 70 03            [24] 5740 	jnz	00225$
      002957 02 26 5E         [24] 5741 	ljmp	00125$
      00295A                       5742 00225$:
      00295A                       5743 00127$:
                                   5744 ;	FATFS\src\ff.c:1538: return res;
      00295A E5 00            [12] 5745 	mov	a,_bp
      00295C 24 17            [12] 5746 	add	a,#0x17
      00295E F8               [12] 5747 	mov	r0,a
      00295F 86 82            [24] 5748 	mov	dpl,@r0
      002961                       5749 00128$:
                                   5750 ;	FATFS\src\ff.c:1539: }
      002961 85 00 81         [24] 5751 	mov	sp,_bp
      002964 D0 00            [24] 5752 	pop	_bp
      002966 02 00 00         [24] 5753 	ljmp	__sdcc_banked_ret
                                   5754 ;------------------------------------------------------------
                                   5755 ;Allocation info for local variables in function 'dir_read'
                                   5756 ;------------------------------------------------------------
                                   5757 ;vol                       Allocated to stack - _bp -5
                                   5758 ;dp                        Allocated to stack - _bp +1
                                   5759 ;res                       Allocated to stack - _bp +18
                                   5760 ;a                         Allocated to stack - _bp +19
                                   5761 ;c                         Allocated to registers r7 
                                   5762 ;dir                       Allocated to stack - _bp +20
                                   5763 ;ord                       Allocated to stack - _bp +17
                                   5764 ;sum                       Allocated to stack - _bp +23
                                   5765 ;sloc0                     Allocated to stack - _bp +4
                                   5766 ;sloc1                     Allocated to stack - _bp +14
                                   5767 ;sloc2                     Allocated to stack - _bp +7
                                   5768 ;sloc3                     Allocated to stack - _bp +10
                                   5769 ;------------------------------------------------------------
                                   5770 ;	FATFS\src\ff.c:1549: FRESULT dir_read (
                                   5771 ;	-----------------------------------------
                                   5772 ;	 function dir_read
                                   5773 ;	-----------------------------------------
      002969                       5774 _dir_read:
      002969 C0 00            [24] 5775 	push	_bp
      00296B 85 81 00         [24] 5776 	mov	_bp,sp
      00296E C0 82            [24] 5777 	push	dpl
      002970 C0 83            [24] 5778 	push	dph
      002972 C0 F0            [24] 5779 	push	b
      002974 E5 81            [12] 5780 	mov	a,sp
      002976 24 14            [12] 5781 	add	a,#0x14
      002978 F5 81            [12] 5782 	mov	sp,a
                                   5783 ;	FATFS\src\ff.c:1557: BYTE ord = 0xFF, sum = 0xFF;
      00297A E5 00            [12] 5784 	mov	a,_bp
      00297C 24 11            [12] 5785 	add	a,#0x11
      00297E F8               [12] 5786 	mov	r0,a
      00297F 76 FF            [12] 5787 	mov	@r0,#0xff
      002981 E5 00            [12] 5788 	mov	a,_bp
      002983 24 17            [12] 5789 	add	a,#0x17
      002985 F8               [12] 5790 	mov	r0,a
      002986 76 FF            [12] 5791 	mov	@r0,#0xff
                                   5792 ;	FATFS\src\ff.c:1560: res = FR_NO_FILE;
      002988 E5 00            [12] 5793 	mov	a,_bp
      00298A 24 12            [12] 5794 	add	a,#0x12
      00298C F8               [12] 5795 	mov	r0,a
      00298D 76 04            [12] 5796 	mov	@r0,#0x04
                                   5797 ;	FATFS\src\ff.c:1561: while (dp->sect) {
      00298F A8 00            [24] 5798 	mov	r0,_bp
      002991 08               [12] 5799 	inc	r0
      002992 74 13            [12] 5800 	mov	a,#0x13
      002994 26               [12] 5801 	add	a,@r0
      002995 FA               [12] 5802 	mov	r2,a
      002996 E4               [12] 5803 	clr	a
      002997 08               [12] 5804 	inc	r0
      002998 36               [12] 5805 	addc	a,@r0
      002999 FB               [12] 5806 	mov	r3,a
      00299A 08               [12] 5807 	inc	r0
      00299B 86 04            [24] 5808 	mov	ar4,@r0
      00299D A8 00            [24] 5809 	mov	r0,_bp
      00299F 08               [12] 5810 	inc	r0
      0029A0 E5 00            [12] 5811 	mov	a,_bp
      0029A2 24 04            [12] 5812 	add	a,#0x04
      0029A4 F9               [12] 5813 	mov	r1,a
      0029A5 74 05            [12] 5814 	mov	a,#0x05
      0029A7 26               [12] 5815 	add	a,@r0
      0029A8 F7               [12] 5816 	mov	@r1,a
      0029A9 E4               [12] 5817 	clr	a
      0029AA 08               [12] 5818 	inc	r0
      0029AB 36               [12] 5819 	addc	a,@r0
      0029AC 09               [12] 5820 	inc	r1
      0029AD F7               [12] 5821 	mov	@r1,a
      0029AE 08               [12] 5822 	inc	r0
      0029AF 09               [12] 5823 	inc	r1
      0029B0 E6               [12] 5824 	mov	a,@r0
      0029B1 F7               [12] 5825 	mov	@r1,a
      0029B2 A8 00            [24] 5826 	mov	r0,_bp
      0029B4 08               [12] 5827 	inc	r0
      0029B5 E5 00            [12] 5828 	mov	a,_bp
      0029B7 24 0E            [12] 5829 	add	a,#0x0e
      0029B9 F9               [12] 5830 	mov	r1,a
      0029BA 74 19            [12] 5831 	mov	a,#0x19
      0029BC 26               [12] 5832 	add	a,@r0
      0029BD F7               [12] 5833 	mov	@r1,a
      0029BE E4               [12] 5834 	clr	a
      0029BF 08               [12] 5835 	inc	r0
      0029C0 36               [12] 5836 	addc	a,@r0
      0029C1 09               [12] 5837 	inc	r1
      0029C2 F7               [12] 5838 	mov	@r1,a
      0029C3 08               [12] 5839 	inc	r0
      0029C4 09               [12] 5840 	inc	r1
      0029C5 E6               [12] 5841 	mov	a,@r0
      0029C6 F7               [12] 5842 	mov	@r1,a
      0029C7 A8 00            [24] 5843 	mov	r0,_bp
      0029C9 08               [12] 5844 	inc	r0
      0029CA E5 00            [12] 5845 	mov	a,_bp
      0029CC 24 07            [12] 5846 	add	a,#0x07
      0029CE F9               [12] 5847 	mov	r1,a
      0029CF 74 0F            [12] 5848 	mov	a,#0x0f
      0029D1 26               [12] 5849 	add	a,@r0
      0029D2 F7               [12] 5850 	mov	@r1,a
      0029D3 E4               [12] 5851 	clr	a
      0029D4 08               [12] 5852 	inc	r0
      0029D5 36               [12] 5853 	addc	a,@r0
      0029D6 09               [12] 5854 	inc	r1
      0029D7 F7               [12] 5855 	mov	@r1,a
      0029D8 08               [12] 5856 	inc	r0
      0029D9 09               [12] 5857 	inc	r1
      0029DA E6               [12] 5858 	mov	a,@r0
      0029DB F7               [12] 5859 	mov	@r1,a
      0029DC                       5860 00121$:
      0029DC E5 00            [12] 5861 	mov	a,_bp
      0029DE 24 07            [12] 5862 	add	a,#0x07
      0029E0 F8               [12] 5863 	mov	r0,a
      0029E1 86 82            [24] 5864 	mov	dpl,@r0
      0029E3 08               [12] 5865 	inc	r0
      0029E4 86 83            [24] 5866 	mov	dph,@r0
      0029E6 08               [12] 5867 	inc	r0
      0029E7 86 F0            [24] 5868 	mov	b,@r0
      0029E9 E5 00            [12] 5869 	mov	a,_bp
      0029EB 24 0A            [12] 5870 	add	a,#0x0a
      0029ED F9               [12] 5871 	mov	r1,a
      0029EE 12 00 00         [24] 5872 	lcall	__gptrget
      0029F1 F7               [12] 5873 	mov	@r1,a
      0029F2 A3               [24] 5874 	inc	dptr
      0029F3 12 00 00         [24] 5875 	lcall	__gptrget
      0029F6 09               [12] 5876 	inc	r1
      0029F7 F7               [12] 5877 	mov	@r1,a
      0029F8 A3               [24] 5878 	inc	dptr
      0029F9 12 00 00         [24] 5879 	lcall	__gptrget
      0029FC 09               [12] 5880 	inc	r1
      0029FD F7               [12] 5881 	mov	@r1,a
      0029FE A3               [24] 5882 	inc	dptr
      0029FF 12 00 00         [24] 5883 	lcall	__gptrget
      002A02 09               [12] 5884 	inc	r1
      002A03 F7               [12] 5885 	mov	@r1,a
      002A04 E5 00            [12] 5886 	mov	a,_bp
      002A06 24 0A            [12] 5887 	add	a,#0x0a
      002A08 F8               [12] 5888 	mov	r0,a
      002A09 E6               [12] 5889 	mov	a,@r0
      002A0A 08               [12] 5890 	inc	r0
      002A0B 46               [12] 5891 	orl	a,@r0
      002A0C 08               [12] 5892 	inc	r0
      002A0D 46               [12] 5893 	orl	a,@r0
      002A0E 08               [12] 5894 	inc	r0
      002A0F 46               [12] 5895 	orl	a,@r0
      002A10 70 03            [24] 5896 	jnz	00186$
      002A12 02 2C BF         [24] 5897 	ljmp	00123$
      002A15                       5898 00186$:
                                   5899 ;	FATFS\src\ff.c:1562: res = move_window(dp->fs, dp->sect);
      002A15 C0 02            [24] 5900 	push	ar2
      002A17 C0 03            [24] 5901 	push	ar3
      002A19 C0 04            [24] 5902 	push	ar4
      002A1B A8 00            [24] 5903 	mov	r0,_bp
      002A1D 08               [12] 5904 	inc	r0
      002A1E 86 82            [24] 5905 	mov	dpl,@r0
      002A20 08               [12] 5906 	inc	r0
      002A21 86 83            [24] 5907 	mov	dph,@r0
      002A23 08               [12] 5908 	inc	r0
      002A24 86 F0            [24] 5909 	mov	b,@r0
      002A26 12 00 00         [24] 5910 	lcall	__gptrget
      002A29 FA               [12] 5911 	mov	r2,a
      002A2A A3               [24] 5912 	inc	dptr
      002A2B 12 00 00         [24] 5913 	lcall	__gptrget
      002A2E FB               [12] 5914 	mov	r3,a
      002A2F A3               [24] 5915 	inc	dptr
      002A30 12 00 00         [24] 5916 	lcall	__gptrget
      002A33 FC               [12] 5917 	mov	r4,a
      002A34 C0 03            [24] 5918 	push	ar3
      002A36 C0 02            [24] 5919 	push	ar2
      002A38 E5 00            [12] 5920 	mov	a,_bp
      002A3A 24 0A            [12] 5921 	add	a,#0x0a
      002A3C F8               [12] 5922 	mov	r0,a
      002A3D E6               [12] 5923 	mov	a,@r0
      002A3E C0 E0            [24] 5924 	push	acc
      002A40 08               [12] 5925 	inc	r0
      002A41 E6               [12] 5926 	mov	a,@r0
      002A42 C0 E0            [24] 5927 	push	acc
      002A44 08               [12] 5928 	inc	r0
      002A45 E6               [12] 5929 	mov	a,@r0
      002A46 C0 E0            [24] 5930 	push	acc
      002A48 08               [12] 5931 	inc	r0
      002A49 E6               [12] 5932 	mov	a,@r0
      002A4A C0 E0            [24] 5933 	push	acc
      002A4C 8A 82            [24] 5934 	mov	dpl,r2
      002A4E 8B 83            [24] 5935 	mov	dph,r3
      002A50 8C F0            [24] 5936 	mov	b,r4
      002A52 78 7C            [12] 5937 	mov	r0,#_move_window
      002A54 79 0D            [12] 5938 	mov	r1,#(_move_window >> 8)
      002A56 7A 00            [12] 5939 	mov	r2,#(_move_window >> 16)
      002A58 12 00 00         [24] 5940 	lcall	__sdcc_banked_call
      002A5B AC 82            [24] 5941 	mov	r4,dpl
      002A5D E5 81            [12] 5942 	mov	a,sp
      002A5F 24 FC            [12] 5943 	add	a,#0xfc
      002A61 F5 81            [12] 5944 	mov	sp,a
      002A63 D0 02            [24] 5945 	pop	ar2
      002A65 D0 03            [24] 5946 	pop	ar3
      002A67 E5 00            [12] 5947 	mov	a,_bp
      002A69 24 12            [12] 5948 	add	a,#0x12
      002A6B F8               [12] 5949 	mov	r0,a
      002A6C A6 04            [24] 5950 	mov	@r0,ar4
                                   5951 ;	FATFS\src\ff.c:1563: if (res != FR_OK) break;
      002A6E E5 00            [12] 5952 	mov	a,_bp
      002A70 24 12            [12] 5953 	add	a,#0x12
      002A72 F8               [12] 5954 	mov	r0,a
      002A73 E6               [12] 5955 	mov	a,@r0
      002A74 D0 04            [24] 5956 	pop	ar4
      002A76 D0 03            [24] 5957 	pop	ar3
      002A78 D0 02            [24] 5958 	pop	ar2
      002A7A 60 03            [24] 5959 	jz	00187$
      002A7C 02 2C BF         [24] 5960 	ljmp	00123$
      002A7F                       5961 00187$:
                                   5962 ;	FATFS\src\ff.c:1564: dir = dp->dir;					/* Ptr to the directory entry of current index */
      002A7F 8A 82            [24] 5963 	mov	dpl,r2
      002A81 8B 83            [24] 5964 	mov	dph,r3
      002A83 8C F0            [24] 5965 	mov	b,r4
      002A85 E5 00            [12] 5966 	mov	a,_bp
      002A87 24 14            [12] 5967 	add	a,#0x14
      002A89 F8               [12] 5968 	mov	r0,a
      002A8A 12 00 00         [24] 5969 	lcall	__gptrget
      002A8D F6               [12] 5970 	mov	@r0,a
      002A8E A3               [24] 5971 	inc	dptr
      002A8F 12 00 00         [24] 5972 	lcall	__gptrget
      002A92 08               [12] 5973 	inc	r0
      002A93 F6               [12] 5974 	mov	@r0,a
      002A94 A3               [24] 5975 	inc	dptr
      002A95 12 00 00         [24] 5976 	lcall	__gptrget
      002A98 08               [12] 5977 	inc	r0
      002A99 F6               [12] 5978 	mov	@r0,a
                                   5979 ;	FATFS\src\ff.c:1565: c = dir[DIR_Name];
      002A9A E5 00            [12] 5980 	mov	a,_bp
      002A9C 24 14            [12] 5981 	add	a,#0x14
      002A9E F8               [12] 5982 	mov	r0,a
      002A9F 86 82            [24] 5983 	mov	dpl,@r0
      002AA1 08               [12] 5984 	inc	r0
      002AA2 86 83            [24] 5985 	mov	dph,@r0
      002AA4 08               [12] 5986 	inc	r0
      002AA5 86 F0            [24] 5987 	mov	b,@r0
      002AA7 12 00 00         [24] 5988 	lcall	__gptrget
                                   5989 ;	FATFS\src\ff.c:1566: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
      002AAA FF               [12] 5990 	mov	r7,a
      002AAB 70 0A            [24] 5991 	jnz	00104$
      002AAD E5 00            [12] 5992 	mov	a,_bp
      002AAF 24 12            [12] 5993 	add	a,#0x12
      002AB1 F8               [12] 5994 	mov	r0,a
      002AB2 76 04            [12] 5995 	mov	@r0,#0x04
      002AB4 02 2C BF         [24] 5996 	ljmp	00123$
      002AB7                       5997 00104$:
                                   5998 ;	FATFS\src\ff.c:1567: a = dir[DIR_Attr] & AM_MASK;
      002AB7 C0 02            [24] 5999 	push	ar2
      002AB9 C0 03            [24] 6000 	push	ar3
      002ABB C0 04            [24] 6001 	push	ar4
      002ABD E5 00            [12] 6002 	mov	a,_bp
      002ABF 24 14            [12] 6003 	add	a,#0x14
      002AC1 F8               [12] 6004 	mov	r0,a
      002AC2 74 0B            [12] 6005 	mov	a,#0x0b
      002AC4 26               [12] 6006 	add	a,@r0
      002AC5 FC               [12] 6007 	mov	r4,a
      002AC6 E4               [12] 6008 	clr	a
      002AC7 08               [12] 6009 	inc	r0
      002AC8 36               [12] 6010 	addc	a,@r0
      002AC9 FD               [12] 6011 	mov	r5,a
      002ACA 08               [12] 6012 	inc	r0
      002ACB 86 06            [24] 6013 	mov	ar6,@r0
      002ACD 8C 82            [24] 6014 	mov	dpl,r4
      002ACF 8D 83            [24] 6015 	mov	dph,r5
      002AD1 8E F0            [24] 6016 	mov	b,r6
      002AD3 12 00 00         [24] 6017 	lcall	__gptrget
      002AD6 FC               [12] 6018 	mov	r4,a
      002AD7 E5 00            [12] 6019 	mov	a,_bp
      002AD9 24 13            [12] 6020 	add	a,#0x13
      002ADB F8               [12] 6021 	mov	r0,a
      002ADC 74 3F            [12] 6022 	mov	a,#0x3f
      002ADE 5C               [12] 6023 	anl	a,r4
      002ADF F6               [12] 6024 	mov	@r0,a
                                   6025 ;	FATFS\src\ff.c:1569: if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
      002AE0 BF E5 08         [24] 6026 	cjne	r7,#0xe5,00189$
      002AE3 D0 04            [24] 6027 	pop	ar4
      002AE5 D0 03            [24] 6028 	pop	ar3
      002AE7 D0 02            [24] 6029 	pop	ar2
      002AE9 80 28            [24] 6030 	sjmp	00113$
      002AEB                       6031 00189$:
      002AEB D0 04            [24] 6032 	pop	ar4
      002AED D0 03            [24] 6033 	pop	ar3
      002AEF D0 02            [24] 6034 	pop	ar2
      002AF1 BF 2E 02         [24] 6035 	cjne	r7,#0x2e,00190$
      002AF4 80 1D            [24] 6036 	sjmp	00113$
      002AF6                       6037 00190$:
      002AF6 E5 00            [12] 6038 	mov	a,_bp
      002AF8 24 13            [12] 6039 	add	a,#0x13
      002AFA F8               [12] 6040 	mov	r0,a
      002AFB E4               [12] 6041 	clr	a
      002AFC B6 08 01         [24] 6042 	cjne	@r0,#0x08,00191$
      002AFF 04               [12] 6043 	inc	a
      002B00                       6044 00191$:
      002B00 FE               [12] 6045 	mov	r6,a
      002B01 7D 00            [12] 6046 	mov	r5,#0x00
      002B03 E5 00            [12] 6047 	mov	a,_bp
      002B05 24 FB            [12] 6048 	add	a,#0xfb
      002B07 F8               [12] 6049 	mov	r0,a
      002B08 E6               [12] 6050 	mov	a,@r0
      002B09 B5 06 07         [24] 6051 	cjne	a,ar6,00193$
      002B0C 08               [12] 6052 	inc	r0
      002B0D E6               [12] 6053 	mov	a,@r0
      002B0E B5 05 02         [24] 6054 	cjne	a,ar5,00193$
      002B11 80 0A            [24] 6055 	sjmp	00114$
      002B13                       6056 00193$:
      002B13                       6057 00113$:
                                   6058 ;	FATFS\src\ff.c:1570: ord = 0xFF;
      002B13 E5 00            [12] 6059 	mov	a,_bp
      002B15 24 11            [12] 6060 	add	a,#0x11
      002B17 F8               [12] 6061 	mov	r0,a
      002B18 76 FF            [12] 6062 	mov	@r0,#0xff
      002B1A 02 2C 82         [24] 6063 	ljmp	00115$
      002B1D                       6064 00114$:
                                   6065 ;	FATFS\src\ff.c:1572: if (a == AM_LFN) {			/* An LFN entry is found */
      002B1D E5 00            [12] 6066 	mov	a,_bp
      002B1F 24 13            [12] 6067 	add	a,#0x13
      002B21 F8               [12] 6068 	mov	r0,a
      002B22 B6 0F 02         [24] 6069 	cjne	@r0,#0x0f,00194$
      002B25 80 03            [24] 6070 	sjmp	00195$
      002B27                       6071 00194$:
      002B27 02 2C 38         [24] 6072 	ljmp	00111$
      002B2A                       6073 00195$:
                                   6074 ;	FATFS\src\ff.c:1573: if (c & LLE) {			/* Is it start of LFN sequence? */
      002B2A EF               [12] 6075 	mov	a,r7
      002B2B 30 E6 68         [24] 6076 	jnb	acc.6,00106$
                                   6077 ;	FATFS\src\ff.c:1574: sum = dir[LDIR_Chksum];
      002B2E C0 02            [24] 6078 	push	ar2
      002B30 C0 03            [24] 6079 	push	ar3
      002B32 C0 04            [24] 6080 	push	ar4
      002B34 E5 00            [12] 6081 	mov	a,_bp
      002B36 24 14            [12] 6082 	add	a,#0x14
      002B38 F8               [12] 6083 	mov	r0,a
      002B39 74 0D            [12] 6084 	mov	a,#0x0d
      002B3B 26               [12] 6085 	add	a,@r0
      002B3C FC               [12] 6086 	mov	r4,a
      002B3D E4               [12] 6087 	clr	a
      002B3E 08               [12] 6088 	inc	r0
      002B3F 36               [12] 6089 	addc	a,@r0
      002B40 FD               [12] 6090 	mov	r5,a
      002B41 08               [12] 6091 	inc	r0
      002B42 86 06            [24] 6092 	mov	ar6,@r0
      002B44 8C 82            [24] 6093 	mov	dpl,r4
      002B46 8D 83            [24] 6094 	mov	dph,r5
      002B48 8E F0            [24] 6095 	mov	b,r6
      002B4A E5 00            [12] 6096 	mov	a,_bp
      002B4C 24 17            [12] 6097 	add	a,#0x17
      002B4E F8               [12] 6098 	mov	r0,a
      002B4F 12 00 00         [24] 6099 	lcall	__gptrget
      002B52 F6               [12] 6100 	mov	@r0,a
                                   6101 ;	FATFS\src\ff.c:1575: c &= ~LLE; ord = c;
      002B53 53 07 BF         [24] 6102 	anl	ar7,#0xbf
      002B56 E5 00            [12] 6103 	mov	a,_bp
      002B58 24 11            [12] 6104 	add	a,#0x11
      002B5A F8               [12] 6105 	mov	r0,a
      002B5B A6 07            [24] 6106 	mov	@r0,ar7
                                   6107 ;	FATFS\src\ff.c:1576: dp->lfn_idx = dp->index;
      002B5D A8 00            [24] 6108 	mov	r0,_bp
      002B5F 08               [12] 6109 	inc	r0
      002B60 74 1C            [12] 6110 	mov	a,#0x1c
      002B62 26               [12] 6111 	add	a,@r0
      002B63 FC               [12] 6112 	mov	r4,a
      002B64 E4               [12] 6113 	clr	a
      002B65 08               [12] 6114 	inc	r0
      002B66 36               [12] 6115 	addc	a,@r0
      002B67 FD               [12] 6116 	mov	r5,a
      002B68 08               [12] 6117 	inc	r0
      002B69 86 06            [24] 6118 	mov	ar6,@r0
      002B6B E5 00            [12] 6119 	mov	a,_bp
      002B6D 24 04            [12] 6120 	add	a,#0x04
      002B6F F8               [12] 6121 	mov	r0,a
      002B70 86 82            [24] 6122 	mov	dpl,@r0
      002B72 08               [12] 6123 	inc	r0
      002B73 86 83            [24] 6124 	mov	dph,@r0
      002B75 08               [12] 6125 	inc	r0
      002B76 86 F0            [24] 6126 	mov	b,@r0
      002B78 12 00 00         [24] 6127 	lcall	__gptrget
      002B7B FA               [12] 6128 	mov	r2,a
      002B7C A3               [24] 6129 	inc	dptr
      002B7D 12 00 00         [24] 6130 	lcall	__gptrget
      002B80 FB               [12] 6131 	mov	r3,a
      002B81 8C 82            [24] 6132 	mov	dpl,r4
      002B83 8D 83            [24] 6133 	mov	dph,r5
      002B85 8E F0            [24] 6134 	mov	b,r6
      002B87 EA               [12] 6135 	mov	a,r2
      002B88 12 00 00         [24] 6136 	lcall	__gptrput
      002B8B A3               [24] 6137 	inc	dptr
      002B8C EB               [12] 6138 	mov	a,r3
      002B8D 12 00 00         [24] 6139 	lcall	__gptrput
                                   6140 ;	FATFS\src\ff.c:1596: return res;
      002B90 D0 04            [24] 6141 	pop	ar4
      002B92 D0 03            [24] 6142 	pop	ar3
      002B94 D0 02            [24] 6143 	pop	ar2
                                   6144 ;	FATFS\src\ff.c:1576: dp->lfn_idx = dp->index;
      002B96                       6145 00106$:
                                   6146 ;	FATFS\src\ff.c:1579: ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
      002B96 E5 00            [12] 6147 	mov	a,_bp
      002B98 24 11            [12] 6148 	add	a,#0x11
      002B9A F8               [12] 6149 	mov	r0,a
      002B9B E6               [12] 6150 	mov	a,@r0
      002B9C B5 07 02         [24] 6151 	cjne	a,ar7,00197$
      002B9F 80 03            [24] 6152 	sjmp	00198$
      002BA1                       6153 00197$:
      002BA1 02 2C 2B         [24] 6154 	ljmp	00128$
      002BA4                       6155 00198$:
      002BA4 E5 00            [12] 6156 	mov	a,_bp
      002BA6 24 14            [12] 6157 	add	a,#0x14
      002BA8 F8               [12] 6158 	mov	r0,a
      002BA9 74 0D            [12] 6159 	mov	a,#0x0d
      002BAB 26               [12] 6160 	add	a,@r0
      002BAC FD               [12] 6161 	mov	r5,a
      002BAD E4               [12] 6162 	clr	a
      002BAE 08               [12] 6163 	inc	r0
      002BAF 36               [12] 6164 	addc	a,@r0
      002BB0 FE               [12] 6165 	mov	r6,a
      002BB1 08               [12] 6166 	inc	r0
      002BB2 86 07            [24] 6167 	mov	ar7,@r0
      002BB4 8D 82            [24] 6168 	mov	dpl,r5
      002BB6 8E 83            [24] 6169 	mov	dph,r6
      002BB8 8F F0            [24] 6170 	mov	b,r7
      002BBA 12 00 00         [24] 6171 	lcall	__gptrget
      002BBD FD               [12] 6172 	mov	r5,a
      002BBE E5 00            [12] 6173 	mov	a,_bp
      002BC0 24 17            [12] 6174 	add	a,#0x17
      002BC2 F8               [12] 6175 	mov	r0,a
      002BC3 E6               [12] 6176 	mov	a,@r0
      002BC4 B5 05 64         [24] 6177 	cjne	a,ar5,00128$
      002BC7 E5 00            [12] 6178 	mov	a,_bp
      002BC9 24 0E            [12] 6179 	add	a,#0x0e
      002BCB F8               [12] 6180 	mov	r0,a
      002BCC 86 82            [24] 6181 	mov	dpl,@r0
      002BCE 08               [12] 6182 	inc	r0
      002BCF 86 83            [24] 6183 	mov	dph,@r0
      002BD1 08               [12] 6184 	inc	r0
      002BD2 86 F0            [24] 6185 	mov	b,@r0
      002BD4 12 00 00         [24] 6186 	lcall	__gptrget
      002BD7 FD               [12] 6187 	mov	r5,a
      002BD8 A3               [24] 6188 	inc	dptr
      002BD9 12 00 00         [24] 6189 	lcall	__gptrget
      002BDC FE               [12] 6190 	mov	r6,a
      002BDD A3               [24] 6191 	inc	dptr
      002BDE 12 00 00         [24] 6192 	lcall	__gptrget
      002BE1 FF               [12] 6193 	mov	r7,a
      002BE2 C0 04            [24] 6194 	push	ar4
      002BE4 C0 03            [24] 6195 	push	ar3
      002BE6 C0 02            [24] 6196 	push	ar2
      002BE8 E5 00            [12] 6197 	mov	a,_bp
      002BEA 24 14            [12] 6198 	add	a,#0x14
      002BEC F8               [12] 6199 	mov	r0,a
      002BED E6               [12] 6200 	mov	a,@r0
      002BEE C0 E0            [24] 6201 	push	acc
      002BF0 08               [12] 6202 	inc	r0
      002BF1 E6               [12] 6203 	mov	a,@r0
      002BF2 C0 E0            [24] 6204 	push	acc
      002BF4 08               [12] 6205 	inc	r0
      002BF5 E6               [12] 6206 	mov	a,@r0
      002BF6 C0 E0            [24] 6207 	push	acc
      002BF8 8D 82            [24] 6208 	mov	dpl,r5
      002BFA 8E 83            [24] 6209 	mov	dph,r6
      002BFC 8F F0            [24] 6210 	mov	b,r7
      002BFE 78 12            [12] 6211 	mov	r0,#_pick_lfn
      002C00 79 21            [12] 6212 	mov	r1,#(_pick_lfn >> 8)
      002C02 7A 00            [12] 6213 	mov	r2,#(_pick_lfn >> 16)
      002C04 12 00 00         [24] 6214 	lcall	__sdcc_banked_call
      002C07 AE 82            [24] 6215 	mov	r6,dpl
      002C09 AF 83            [24] 6216 	mov	r7,dph
      002C0B 15 81            [12] 6217 	dec	sp
      002C0D 15 81            [12] 6218 	dec	sp
      002C0F 15 81            [12] 6219 	dec	sp
      002C11 D0 02            [24] 6220 	pop	ar2
      002C13 D0 03            [24] 6221 	pop	ar3
      002C15 D0 04            [24] 6222 	pop	ar4
      002C17 EE               [12] 6223 	mov	a,r6
      002C18 4F               [12] 6224 	orl	a,r7
      002C19 60 10            [24] 6225 	jz	00128$
      002C1B E5 00            [12] 6226 	mov	a,_bp
      002C1D 24 11            [12] 6227 	add	a,#0x11
      002C1F F8               [12] 6228 	mov	r0,a
      002C20 86 07            [24] 6229 	mov	ar7,@r0
      002C22 1F               [12] 6230 	dec	r7
      002C23 EF               [12] 6231 	mov	a,r7
      002C24 FE               [12] 6232 	mov	r6,a
      002C25 33               [12] 6233 	rlc	a
      002C26 95 E0            [12] 6234 	subb	a,acc
      002C28 FF               [12] 6235 	mov	r7,a
      002C29 80 04            [24] 6236 	sjmp	00129$
      002C2B                       6237 00128$:
      002C2B 7E FF            [12] 6238 	mov	r6,#0xff
      002C2D 7F 00            [12] 6239 	mov	r7,#0x00
      002C2F                       6240 00129$:
      002C2F E5 00            [12] 6241 	mov	a,_bp
      002C31 24 11            [12] 6242 	add	a,#0x11
      002C33 F8               [12] 6243 	mov	r0,a
      002C34 A6 06            [24] 6244 	mov	@r0,ar6
      002C36 80 4A            [24] 6245 	sjmp	00115$
      002C38                       6246 00111$:
                                   6247 ;	FATFS\src\ff.c:1581: if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
      002C38 E5 00            [12] 6248 	mov	a,_bp
      002C3A 24 11            [12] 6249 	add	a,#0x11
      002C3C F8               [12] 6250 	mov	r0,a
      002C3D E6               [12] 6251 	mov	a,@r0
      002C3E 70 23            [24] 6252 	jnz	00107$
      002C40 E5 00            [12] 6253 	mov	a,_bp
      002C42 24 14            [12] 6254 	add	a,#0x14
      002C44 F8               [12] 6255 	mov	r0,a
      002C45 86 82            [24] 6256 	mov	dpl,@r0
      002C47 08               [12] 6257 	inc	r0
      002C48 86 83            [24] 6258 	mov	dph,@r0
      002C4A 08               [12] 6259 	inc	r0
      002C4B 86 F0            [24] 6260 	mov	b,@r0
      002C4D 78 56            [12] 6261 	mov	r0,#_sum_sfn
      002C4F 79 25            [12] 6262 	mov	r1,#(_sum_sfn >> 8)
      002C51 7A 00            [12] 6263 	mov	r2,#(_sum_sfn >> 16)
      002C53 12 00 00         [24] 6264 	lcall	__sdcc_banked_call
      002C56 AF 82            [24] 6265 	mov	r7,dpl
      002C58 E5 00            [12] 6266 	mov	a,_bp
      002C5A 24 17            [12] 6267 	add	a,#0x17
      002C5C F8               [12] 6268 	mov	r0,a
      002C5D E6               [12] 6269 	mov	a,@r0
      002C5E B5 07 02         [24] 6270 	cjne	a,ar7,00203$
      002C61 80 5C            [24] 6271 	sjmp	00123$
      002C63                       6272 00203$:
      002C63                       6273 00107$:
                                   6274 ;	FATFS\src\ff.c:1582: dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
      002C63 A8 00            [24] 6275 	mov	r0,_bp
      002C65 08               [12] 6276 	inc	r0
      002C66 74 1C            [12] 6277 	mov	a,#0x1c
      002C68 26               [12] 6278 	add	a,@r0
      002C69 FD               [12] 6279 	mov	r5,a
      002C6A E4               [12] 6280 	clr	a
      002C6B 08               [12] 6281 	inc	r0
      002C6C 36               [12] 6282 	addc	a,@r0
      002C6D FE               [12] 6283 	mov	r6,a
      002C6E 08               [12] 6284 	inc	r0
      002C6F 86 07            [24] 6285 	mov	ar7,@r0
      002C71 8D 82            [24] 6286 	mov	dpl,r5
      002C73 8E 83            [24] 6287 	mov	dph,r6
      002C75 8F F0            [24] 6288 	mov	b,r7
      002C77 74 FF            [12] 6289 	mov	a,#0xff
      002C79 12 00 00         [24] 6290 	lcall	__gptrput
      002C7C A3               [24] 6291 	inc	dptr
      002C7D 12 00 00         [24] 6292 	lcall	__gptrput
                                   6293 ;	FATFS\src\ff.c:1583: break;
      002C80 80 3D            [24] 6294 	sjmp	00123$
      002C82                       6295 00115$:
                                   6296 ;	FATFS\src\ff.c:1590: res = dir_next(dp, 0);				/* Next entry */
      002C82 C0 04            [24] 6297 	push	ar4
      002C84 C0 03            [24] 6298 	push	ar3
      002C86 C0 02            [24] 6299 	push	ar2
      002C88 E4               [12] 6300 	clr	a
      002C89 C0 E0            [24] 6301 	push	acc
      002C8B C0 E0            [24] 6302 	push	acc
      002C8D A8 00            [24] 6303 	mov	r0,_bp
      002C8F 08               [12] 6304 	inc	r0
      002C90 86 82            [24] 6305 	mov	dpl,@r0
      002C92 08               [12] 6306 	inc	r0
      002C93 86 83            [24] 6307 	mov	dph,@r0
      002C95 08               [12] 6308 	inc	r0
      002C96 86 F0            [24] 6309 	mov	b,@r0
      002C98 78 74            [12] 6310 	mov	r0,#_dir_next
      002C9A 79 1A            [12] 6311 	mov	r1,#(_dir_next >> 8)
      002C9C 7A 00            [12] 6312 	mov	r2,#(_dir_next >> 16)
      002C9E 12 00 00         [24] 6313 	lcall	__sdcc_banked_call
      002CA1 AF 82            [24] 6314 	mov	r7,dpl
      002CA3 15 81            [12] 6315 	dec	sp
      002CA5 15 81            [12] 6316 	dec	sp
      002CA7 D0 02            [24] 6317 	pop	ar2
      002CA9 D0 03            [24] 6318 	pop	ar3
      002CAB D0 04            [24] 6319 	pop	ar4
      002CAD E5 00            [12] 6320 	mov	a,_bp
      002CAF 24 12            [12] 6321 	add	a,#0x12
      002CB1 F8               [12] 6322 	mov	r0,a
      002CB2 A6 07            [24] 6323 	mov	@r0,ar7
                                   6324 ;	FATFS\src\ff.c:1591: if (res != FR_OK) break;
      002CB4 E5 00            [12] 6325 	mov	a,_bp
      002CB6 24 12            [12] 6326 	add	a,#0x12
      002CB8 F8               [12] 6327 	mov	r0,a
      002CB9 E6               [12] 6328 	mov	a,@r0
      002CBA 70 03            [24] 6329 	jnz	00204$
      002CBC 02 29 DC         [24] 6330 	ljmp	00121$
      002CBF                       6331 00204$:
      002CBF                       6332 00123$:
                                   6333 ;	FATFS\src\ff.c:1594: if (res != FR_OK) dp->sect = 0;
      002CBF E5 00            [12] 6334 	mov	a,_bp
      002CC1 24 12            [12] 6335 	add	a,#0x12
      002CC3 F8               [12] 6336 	mov	r0,a
      002CC4 E6               [12] 6337 	mov	a,@r0
      002CC5 60 24            [24] 6338 	jz	00125$
      002CC7 A8 00            [24] 6339 	mov	r0,_bp
      002CC9 08               [12] 6340 	inc	r0
      002CCA 74 0F            [12] 6341 	mov	a,#0x0f
      002CCC 26               [12] 6342 	add	a,@r0
      002CCD FD               [12] 6343 	mov	r5,a
      002CCE E4               [12] 6344 	clr	a
      002CCF 08               [12] 6345 	inc	r0
      002CD0 36               [12] 6346 	addc	a,@r0
      002CD1 FE               [12] 6347 	mov	r6,a
      002CD2 08               [12] 6348 	inc	r0
      002CD3 86 07            [24] 6349 	mov	ar7,@r0
      002CD5 8D 82            [24] 6350 	mov	dpl,r5
      002CD7 8E 83            [24] 6351 	mov	dph,r6
      002CD9 8F F0            [24] 6352 	mov	b,r7
      002CDB E4               [12] 6353 	clr	a
      002CDC 12 00 00         [24] 6354 	lcall	__gptrput
      002CDF A3               [24] 6355 	inc	dptr
      002CE0 12 00 00         [24] 6356 	lcall	__gptrput
      002CE3 A3               [24] 6357 	inc	dptr
      002CE4 12 00 00         [24] 6358 	lcall	__gptrput
      002CE7 A3               [24] 6359 	inc	dptr
      002CE8 12 00 00         [24] 6360 	lcall	__gptrput
      002CEB                       6361 00125$:
                                   6362 ;	FATFS\src\ff.c:1596: return res;
      002CEB E5 00            [12] 6363 	mov	a,_bp
      002CED 24 12            [12] 6364 	add	a,#0x12
      002CEF F8               [12] 6365 	mov	r0,a
      002CF0 86 82            [24] 6366 	mov	dpl,@r0
                                   6367 ;	FATFS\src\ff.c:1597: }
      002CF2 85 00 81         [24] 6368 	mov	sp,_bp
      002CF5 D0 00            [24] 6369 	pop	_bp
      002CF7 02 00 00         [24] 6370 	ljmp	__sdcc_banked_ret
                                   6371 ;------------------------------------------------------------
                                   6372 ;Allocation info for local variables in function 'get_fileinfo'
                                   6373 ;------------------------------------------------------------
                                   6374 ;fno                       Allocated to stack - _bp -6
                                   6375 ;dp                        Allocated to stack - _bp +14
                                   6376 ;i                         Allocated to stack - _bp +17
                                   6377 ;p                         Allocated to stack - _bp +19
                                   6378 ;c                         Allocated to stack - _bp +22
                                   6379 ;dir                       Allocated to stack - _bp +23
                                   6380 ;w                         Allocated to registers r6 r7 
                                   6381 ;lfn                       Allocated to registers 
                                   6382 ;sloc0                     Allocated to stack - _bp +1
                                   6383 ;sloc1                     Allocated to stack - _bp +4
                                   6384 ;sloc2                     Allocated to stack - _bp +11
                                   6385 ;sloc3                     Allocated to stack - _bp +7
                                   6386 ;------------------------------------------------------------
                                   6387 ;	FATFS\src\ff.c:1733: void get_fileinfo (		/* No return code */
                                   6388 ;	-----------------------------------------
                                   6389 ;	 function get_fileinfo
                                   6390 ;	-----------------------------------------
      002CFA                       6391 _get_fileinfo:
      002CFA C0 00            [24] 6392 	push	_bp
      002CFC E5 81            [12] 6393 	mov	a,sp
      002CFE F5 00            [12] 6394 	mov	_bp,a
      002D00 24 19            [12] 6395 	add	a,#0x19
      002D02 F5 81            [12] 6396 	mov	sp,a
      002D04 C8               [12] 6397 	xch	a,r0
      002D05 E5 00            [12] 6398 	mov	a,_bp
      002D07 24 0E            [12] 6399 	add	a,#0x0e
      002D09 C8               [12] 6400 	xch	a,r0
      002D0A A6 82            [24] 6401 	mov	@r0,dpl
      002D0C 08               [12] 6402 	inc	r0
      002D0D A6 83            [24] 6403 	mov	@r0,dph
      002D0F 08               [12] 6404 	inc	r0
      002D10 A6 F0            [24] 6405 	mov	@r0,b
                                   6406 ;	FATFS\src\ff.c:1742: p = fno->fname;
      002D12 E5 00            [12] 6407 	mov	a,_bp
      002D14 24 FA            [12] 6408 	add	a,#0xfa
      002D16 F8               [12] 6409 	mov	r0,a
      002D17 E5 00            [12] 6410 	mov	a,_bp
      002D19 24 0B            [12] 6411 	add	a,#0x0b
      002D1B F9               [12] 6412 	mov	r1,a
      002D1C E6               [12] 6413 	mov	a,@r0
      002D1D F7               [12] 6414 	mov	@r1,a
      002D1E 08               [12] 6415 	inc	r0
      002D1F 09               [12] 6416 	inc	r1
      002D20 E6               [12] 6417 	mov	a,@r0
      002D21 F7               [12] 6418 	mov	@r1,a
      002D22 08               [12] 6419 	inc	r0
      002D23 09               [12] 6420 	inc	r1
      002D24 E6               [12] 6421 	mov	a,@r0
      002D25 F7               [12] 6422 	mov	@r1,a
      002D26 E5 00            [12] 6423 	mov	a,_bp
      002D28 24 0B            [12] 6424 	add	a,#0x0b
      002D2A F8               [12] 6425 	mov	r0,a
      002D2B A9 00            [24] 6426 	mov	r1,_bp
      002D2D 09               [12] 6427 	inc	r1
      002D2E 74 09            [12] 6428 	mov	a,#0x09
      002D30 26               [12] 6429 	add	a,@r0
      002D31 F7               [12] 6430 	mov	@r1,a
      002D32 E4               [12] 6431 	clr	a
      002D33 08               [12] 6432 	inc	r0
      002D34 36               [12] 6433 	addc	a,@r0
      002D35 09               [12] 6434 	inc	r1
      002D36 F7               [12] 6435 	mov	@r1,a
      002D37 08               [12] 6436 	inc	r0
      002D38 09               [12] 6437 	inc	r1
      002D39 E6               [12] 6438 	mov	a,@r0
      002D3A F7               [12] 6439 	mov	@r1,a
                                   6440 ;	FATFS\src\ff.c:1743: if (dp->sect) {		/* Get SFN */
      002D3B E5 00            [12] 6441 	mov	a,_bp
      002D3D 24 0E            [12] 6442 	add	a,#0x0e
      002D3F F8               [12] 6443 	mov	r0,a
      002D40 E5 00            [12] 6444 	mov	a,_bp
      002D42 24 04            [12] 6445 	add	a,#0x04
      002D44 F9               [12] 6446 	mov	r1,a
      002D45 74 0F            [12] 6447 	mov	a,#0x0f
      002D47 26               [12] 6448 	add	a,@r0
      002D48 F7               [12] 6449 	mov	@r1,a
      002D49 E4               [12] 6450 	clr	a
      002D4A 08               [12] 6451 	inc	r0
      002D4B 36               [12] 6452 	addc	a,@r0
      002D4C 09               [12] 6453 	inc	r1
      002D4D F7               [12] 6454 	mov	@r1,a
      002D4E 08               [12] 6455 	inc	r0
      002D4F 09               [12] 6456 	inc	r1
      002D50 E6               [12] 6457 	mov	a,@r0
      002D51 F7               [12] 6458 	mov	@r1,a
      002D52 E5 00            [12] 6459 	mov	a,_bp
      002D54 24 04            [12] 6460 	add	a,#0x04
      002D56 F8               [12] 6461 	mov	r0,a
      002D57 86 82            [24] 6462 	mov	dpl,@r0
      002D59 08               [12] 6463 	inc	r0
      002D5A 86 83            [24] 6464 	mov	dph,@r0
      002D5C 08               [12] 6465 	inc	r0
      002D5D 86 F0            [24] 6466 	mov	b,@r0
      002D5F 12 00 00         [24] 6467 	lcall	__gptrget
      002D62 FC               [12] 6468 	mov	r4,a
      002D63 A3               [24] 6469 	inc	dptr
      002D64 12 00 00         [24] 6470 	lcall	__gptrget
      002D67 FD               [12] 6471 	mov	r5,a
      002D68 A3               [24] 6472 	inc	dptr
      002D69 12 00 00         [24] 6473 	lcall	__gptrget
      002D6C FE               [12] 6474 	mov	r6,a
      002D6D A3               [24] 6475 	inc	dptr
      002D6E 12 00 00         [24] 6476 	lcall	__gptrget
      002D71 FF               [12] 6477 	mov	r7,a
      002D72 EC               [12] 6478 	mov	a,r4
      002D73 4D               [12] 6479 	orl	a,r5
      002D74 4E               [12] 6480 	orl	a,r6
      002D75 4F               [12] 6481 	orl	a,r7
      002D76 70 03            [24] 6482 	jnz	00220$
      002D78 02 30 7B         [24] 6483 	ljmp	00115$
      002D7B                       6484 00220$:
                                   6485 ;	FATFS\src\ff.c:1744: BYTE *dir = dp->dir;
      002D7B E5 00            [12] 6486 	mov	a,_bp
      002D7D 24 0E            [12] 6487 	add	a,#0x0e
      002D7F F8               [12] 6488 	mov	r0,a
      002D80 74 13            [12] 6489 	mov	a,#0x13
      002D82 26               [12] 6490 	add	a,@r0
      002D83 FD               [12] 6491 	mov	r5,a
      002D84 E4               [12] 6492 	clr	a
      002D85 08               [12] 6493 	inc	r0
      002D86 36               [12] 6494 	addc	a,@r0
      002D87 FE               [12] 6495 	mov	r6,a
      002D88 08               [12] 6496 	inc	r0
      002D89 86 07            [24] 6497 	mov	ar7,@r0
      002D8B 8D 82            [24] 6498 	mov	dpl,r5
      002D8D 8E 83            [24] 6499 	mov	dph,r6
      002D8F 8F F0            [24] 6500 	mov	b,r7
      002D91 E5 00            [12] 6501 	mov	a,_bp
      002D93 24 17            [12] 6502 	add	a,#0x17
      002D95 F8               [12] 6503 	mov	r0,a
      002D96 12 00 00         [24] 6504 	lcall	__gptrget
      002D99 F6               [12] 6505 	mov	@r0,a
      002D9A A3               [24] 6506 	inc	dptr
      002D9B 12 00 00         [24] 6507 	lcall	__gptrget
      002D9E 08               [12] 6508 	inc	r0
      002D9F F6               [12] 6509 	mov	@r0,a
      002DA0 A3               [24] 6510 	inc	dptr
      002DA1 12 00 00         [24] 6511 	lcall	__gptrget
      002DA4 08               [12] 6512 	inc	r0
      002DA5 F6               [12] 6513 	mov	@r0,a
                                   6514 ;	FATFS\src\ff.c:1747: while (i < 11) {		/* Copy name body and extension */
      002DA6 E5 00            [12] 6515 	mov	a,_bp
      002DA8 24 17            [12] 6516 	add	a,#0x17
      002DAA F8               [12] 6517 	mov	r0,a
      002DAB 74 0C            [12] 6518 	mov	a,#0x0c
      002DAD 26               [12] 6519 	add	a,@r0
      002DAE FA               [12] 6520 	mov	r2,a
      002DAF E4               [12] 6521 	clr	a
      002DB0 08               [12] 6522 	inc	r0
      002DB1 36               [12] 6523 	addc	a,@r0
      002DB2 FB               [12] 6524 	mov	r3,a
      002DB3 08               [12] 6525 	inc	r0
      002DB4 86 04            [24] 6526 	mov	ar4,@r0
      002DB6 7E 00            [12] 6527 	mov	r6,#0x00
      002DB8 7F 00            [12] 6528 	mov	r7,#0x00
      002DBA                       6529 00111$:
      002DBA C3               [12] 6530 	clr	c
      002DBB EE               [12] 6531 	mov	a,r6
      002DBC 94 0B            [12] 6532 	subb	a,#0x0b
      002DBE EF               [12] 6533 	mov	a,r7
      002DBF 94 00            [12] 6534 	subb	a,#0x00
      002DC1 40 03            [24] 6535 	jc	00221$
      002DC3 02 2E 86         [24] 6536 	ljmp	00113$
      002DC6                       6537 00221$:
                                   6538 ;	FATFS\src\ff.c:1748: c = (TCHAR)dir[i++];
      002DC6 C0 02            [24] 6539 	push	ar2
      002DC8 C0 03            [24] 6540 	push	ar3
      002DCA C0 04            [24] 6541 	push	ar4
      002DCC 8E 04            [24] 6542 	mov	ar4,r6
      002DCE 8F 05            [24] 6543 	mov	ar5,r7
      002DD0 0E               [12] 6544 	inc	r6
      002DD1 BE 00 01         [24] 6545 	cjne	r6,#0x00,00222$
      002DD4 0F               [12] 6546 	inc	r7
      002DD5                       6547 00222$:
      002DD5 E5 00            [12] 6548 	mov	a,_bp
      002DD7 24 17            [12] 6549 	add	a,#0x17
      002DD9 F8               [12] 6550 	mov	r0,a
      002DDA EC               [12] 6551 	mov	a,r4
      002DDB 26               [12] 6552 	add	a,@r0
      002DDC FC               [12] 6553 	mov	r4,a
      002DDD ED               [12] 6554 	mov	a,r5
      002DDE 08               [12] 6555 	inc	r0
      002DDF 36               [12] 6556 	addc	a,@r0
      002DE0 FD               [12] 6557 	mov	r5,a
      002DE1 08               [12] 6558 	inc	r0
      002DE2 86 03            [24] 6559 	mov	ar3,@r0
      002DE4 8C 82            [24] 6560 	mov	dpl,r4
      002DE6 8D 83            [24] 6561 	mov	dph,r5
      002DE8 8B F0            [24] 6562 	mov	b,r3
      002DEA E5 00            [12] 6563 	mov	a,_bp
      002DEC 24 16            [12] 6564 	add	a,#0x16
      002DEE F8               [12] 6565 	mov	r0,a
      002DEF 12 00 00         [24] 6566 	lcall	__gptrget
      002DF2 F6               [12] 6567 	mov	@r0,a
                                   6568 ;	FATFS\src\ff.c:1749: if (c == ' ') continue;			/* Skip padding spaces */
      002DF3 E5 00            [12] 6569 	mov	a,_bp
      002DF5 24 16            [12] 6570 	add	a,#0x16
      002DF7 F8               [12] 6571 	mov	r0,a
      002DF8 B6 20 08         [24] 6572 	cjne	@r0,#0x20,00223$
      002DFB D0 04            [24] 6573 	pop	ar4
      002DFD D0 03            [24] 6574 	pop	ar3
      002DFF D0 02            [24] 6575 	pop	ar2
      002E01 80 B7            [24] 6576 	sjmp	00111$
      002E03                       6577 00223$:
      002E03 D0 04            [24] 6578 	pop	ar4
      002E05 D0 03            [24] 6579 	pop	ar3
      002E07 D0 02            [24] 6580 	pop	ar2
                                   6581 ;	FATFS\src\ff.c:1750: if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
      002E09 E5 00            [12] 6582 	mov	a,_bp
      002E0B 24 16            [12] 6583 	add	a,#0x16
      002E0D F8               [12] 6584 	mov	r0,a
      002E0E B6 05 07         [24] 6585 	cjne	@r0,#0x05,00104$
      002E11 E5 00            [12] 6586 	mov	a,_bp
      002E13 24 16            [12] 6587 	add	a,#0x16
      002E15 F8               [12] 6588 	mov	r0,a
      002E16 76 E5            [12] 6589 	mov	@r0,#0xe5
      002E18                       6590 00104$:
                                   6591 ;	FATFS\src\ff.c:1751: if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
      002E18 BE 09 1B         [24] 6592 	cjne	r6,#0x09,00106$
      002E1B BF 00 18         [24] 6593 	cjne	r7,#0x00,00106$
      002E1E A8 00            [24] 6594 	mov	r0,_bp
      002E20 08               [12] 6595 	inc	r0
      002E21 86 82            [24] 6596 	mov	dpl,@r0
      002E23 08               [12] 6597 	inc	r0
      002E24 86 83            [24] 6598 	mov	dph,@r0
      002E26 08               [12] 6599 	inc	r0
      002E27 86 F0            [24] 6600 	mov	b,@r0
      002E29 74 2E            [12] 6601 	mov	a,#0x2e
      002E2B 12 00 00         [24] 6602 	lcall	__gptrput
      002E2E A3               [24] 6603 	inc	dptr
      002E2F 18               [12] 6604 	dec	r0
      002E30 18               [12] 6605 	dec	r0
      002E31 A6 82            [24] 6606 	mov	@r0,dpl
      002E33 08               [12] 6607 	inc	r0
      002E34 A6 83            [24] 6608 	mov	@r0,dph
      002E36                       6609 00106$:
                                   6610 ;	FATFS\src\ff.c:1753: if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
      002E36 E5 00            [12] 6611 	mov	a,_bp
      002E38 24 16            [12] 6612 	add	a,#0x16
      002E3A F8               [12] 6613 	mov	r0,a
      002E3B B6 41 00         [24] 6614 	cjne	@r0,#0x41,00228$
      002E3E                       6615 00228$:
      002E3E 40 27            [24] 6616 	jc	00108$
      002E40 E5 00            [12] 6617 	mov	a,_bp
      002E42 24 16            [12] 6618 	add	a,#0x16
      002E44 F8               [12] 6619 	mov	r0,a
      002E45 E6               [12] 6620 	mov	a,@r0
      002E46 24 A5            [12] 6621 	add	a,#0xff - 0x5a
      002E48 40 1D            [24] 6622 	jc	00108$
      002E4A 8A 82            [24] 6623 	mov	dpl,r2
      002E4C 8B 83            [24] 6624 	mov	dph,r3
      002E4E 8C F0            [24] 6625 	mov	b,r4
      002E50 12 00 00         [24] 6626 	lcall	__gptrget
      002E53 FD               [12] 6627 	mov	r5,a
      002E54 30 E3 10         [24] 6628 	jnb	acc.3,00108$
                                   6629 ;	FATFS\src\ff.c:1754: c += 0x20;			/* To lower */
      002E57 E5 00            [12] 6630 	mov	a,_bp
      002E59 24 16            [12] 6631 	add	a,#0x16
      002E5B F8               [12] 6632 	mov	r0,a
      002E5C 86 05            [24] 6633 	mov	ar5,@r0
      002E5E E5 00            [12] 6634 	mov	a,_bp
      002E60 24 16            [12] 6635 	add	a,#0x16
      002E62 F8               [12] 6636 	mov	r0,a
      002E63 74 20            [12] 6637 	mov	a,#0x20
      002E65 2D               [12] 6638 	add	a,r5
      002E66 F6               [12] 6639 	mov	@r0,a
      002E67                       6640 00108$:
                                   6641 ;	FATFS\src\ff.c:1762: *p++ = c;
      002E67 A8 00            [24] 6642 	mov	r0,_bp
      002E69 08               [12] 6643 	inc	r0
      002E6A 86 82            [24] 6644 	mov	dpl,@r0
      002E6C 08               [12] 6645 	inc	r0
      002E6D 86 83            [24] 6646 	mov	dph,@r0
      002E6F 08               [12] 6647 	inc	r0
      002E70 86 F0            [24] 6648 	mov	b,@r0
      002E72 E5 00            [12] 6649 	mov	a,_bp
      002E74 24 16            [12] 6650 	add	a,#0x16
      002E76 F9               [12] 6651 	mov	r1,a
      002E77 E7               [12] 6652 	mov	a,@r1
      002E78 12 00 00         [24] 6653 	lcall	__gptrput
      002E7B A3               [24] 6654 	inc	dptr
      002E7C 18               [12] 6655 	dec	r0
      002E7D 18               [12] 6656 	dec	r0
      002E7E A6 82            [24] 6657 	mov	@r0,dpl
      002E80 08               [12] 6658 	inc	r0
      002E81 A6 83            [24] 6659 	mov	@r0,dph
      002E83 02 2D BA         [24] 6660 	ljmp	00111$
      002E86                       6661 00113$:
                                   6662 ;	FATFS\src\ff.c:1764: fno->fattrib = dir[DIR_Attr];				/* Attribute */
      002E86 E5 00            [12] 6663 	mov	a,_bp
      002E88 24 0B            [12] 6664 	add	a,#0x0b
      002E8A F8               [12] 6665 	mov	r0,a
      002E8B 74 08            [12] 6666 	mov	a,#0x08
      002E8D 26               [12] 6667 	add	a,@r0
      002E8E FD               [12] 6668 	mov	r5,a
      002E8F E4               [12] 6669 	clr	a
      002E90 08               [12] 6670 	inc	r0
      002E91 36               [12] 6671 	addc	a,@r0
      002E92 FE               [12] 6672 	mov	r6,a
      002E93 08               [12] 6673 	inc	r0
      002E94 86 07            [24] 6674 	mov	ar7,@r0
      002E96 E5 00            [12] 6675 	mov	a,_bp
      002E98 24 17            [12] 6676 	add	a,#0x17
      002E9A F8               [12] 6677 	mov	r0,a
      002E9B 74 0B            [12] 6678 	mov	a,#0x0b
      002E9D 26               [12] 6679 	add	a,@r0
      002E9E FA               [12] 6680 	mov	r2,a
      002E9F E4               [12] 6681 	clr	a
      002EA0 08               [12] 6682 	inc	r0
      002EA1 36               [12] 6683 	addc	a,@r0
      002EA2 FB               [12] 6684 	mov	r3,a
      002EA3 08               [12] 6685 	inc	r0
      002EA4 86 04            [24] 6686 	mov	ar4,@r0
      002EA6 8A 82            [24] 6687 	mov	dpl,r2
      002EA8 8B 83            [24] 6688 	mov	dph,r3
      002EAA 8C F0            [24] 6689 	mov	b,r4
      002EAC 12 00 00         [24] 6690 	lcall	__gptrget
      002EAF 8D 82            [24] 6691 	mov	dpl,r5
      002EB1 8E 83            [24] 6692 	mov	dph,r6
      002EB3 8F F0            [24] 6693 	mov	b,r7
      002EB5 12 00 00         [24] 6694 	lcall	__gptrput
                                   6695 ;	FATFS\src\ff.c:1765: fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
      002EB8 E5 00            [12] 6696 	mov	a,_bp
      002EBA 24 17            [12] 6697 	add	a,#0x17
      002EBC F8               [12] 6698 	mov	r0,a
      002EBD 74 1F            [12] 6699 	mov	a,#0x1f
      002EBF 26               [12] 6700 	add	a,@r0
      002EC0 FD               [12] 6701 	mov	r5,a
      002EC1 E4               [12] 6702 	clr	a
      002EC2 08               [12] 6703 	inc	r0
      002EC3 36               [12] 6704 	addc	a,@r0
      002EC4 FE               [12] 6705 	mov	r6,a
      002EC5 08               [12] 6706 	inc	r0
      002EC6 86 07            [24] 6707 	mov	ar7,@r0
      002EC8 8D 82            [24] 6708 	mov	dpl,r5
      002ECA 8E 83            [24] 6709 	mov	dph,r6
      002ECC 8F F0            [24] 6710 	mov	b,r7
      002ECE 12 00 00         [24] 6711 	lcall	__gptrget
      002ED1 FD               [12] 6712 	mov	r5,a
      002ED2 E4               [12] 6713 	clr	a
      002ED3 E5 00            [12] 6714 	mov	a,_bp
      002ED5 24 07            [12] 6715 	add	a,#0x07
      002ED7 F8               [12] 6716 	mov	r0,a
      002ED8 08               [12] 6717 	inc	r0
      002ED9 08               [12] 6718 	inc	r0
      002EDA 08               [12] 6719 	inc	r0
      002EDB A6 05            [24] 6720 	mov	@r0,ar5
      002EDD 18               [12] 6721 	dec	r0
      002EDE 18               [12] 6722 	dec	r0
      002EDF 18               [12] 6723 	dec	r0
      002EE0 76 00            [12] 6724 	mov	@r0,#0x00
      002EE2 08               [12] 6725 	inc	r0
      002EE3 76 00            [12] 6726 	mov	@r0,#0x00
      002EE5 08               [12] 6727 	inc	r0
      002EE6 76 00            [12] 6728 	mov	@r0,#0x00
      002EE8 E5 00            [12] 6729 	mov	a,_bp
      002EEA 24 17            [12] 6730 	add	a,#0x17
      002EEC F8               [12] 6731 	mov	r0,a
      002EED 74 1E            [12] 6732 	mov	a,#0x1e
      002EEF 26               [12] 6733 	add	a,@r0
      002EF0 FA               [12] 6734 	mov	r2,a
      002EF1 E4               [12] 6735 	clr	a
      002EF2 08               [12] 6736 	inc	r0
      002EF3 36               [12] 6737 	addc	a,@r0
      002EF4 FB               [12] 6738 	mov	r3,a
      002EF5 08               [12] 6739 	inc	r0
      002EF6 86 07            [24] 6740 	mov	ar7,@r0
      002EF8 8A 82            [24] 6741 	mov	dpl,r2
      002EFA 8B 83            [24] 6742 	mov	dph,r3
      002EFC 8F F0            [24] 6743 	mov	b,r7
      002EFE 12 00 00         [24] 6744 	lcall	__gptrget
      002F01 FA               [12] 6745 	mov	r2,a
      002F02 7F 00            [12] 6746 	mov	r7,#0x00
      002F04 8F 05            [24] 6747 	mov	ar5,r7
      002F06 8A 06            [24] 6748 	mov	ar6,r2
      002F08 E4               [12] 6749 	clr	a
      002F09 FA               [12] 6750 	mov	r2,a
      002F0A FF               [12] 6751 	mov	r7,a
      002F0B E5 00            [12] 6752 	mov	a,_bp
      002F0D 24 07            [12] 6753 	add	a,#0x07
      002F0F F8               [12] 6754 	mov	r0,a
      002F10 EA               [12] 6755 	mov	a,r2
      002F11 46               [12] 6756 	orl	a,@r0
      002F12 F6               [12] 6757 	mov	@r0,a
      002F13 EF               [12] 6758 	mov	a,r7
      002F14 08               [12] 6759 	inc	r0
      002F15 46               [12] 6760 	orl	a,@r0
      002F16 F6               [12] 6761 	mov	@r0,a
      002F17 EE               [12] 6762 	mov	a,r6
      002F18 08               [12] 6763 	inc	r0
      002F19 46               [12] 6764 	orl	a,@r0
      002F1A F6               [12] 6765 	mov	@r0,a
      002F1B ED               [12] 6766 	mov	a,r5
      002F1C 08               [12] 6767 	inc	r0
      002F1D 46               [12] 6768 	orl	a,@r0
      002F1E F6               [12] 6769 	mov	@r0,a
      002F1F E5 00            [12] 6770 	mov	a,_bp
      002F21 24 17            [12] 6771 	add	a,#0x17
      002F23 F8               [12] 6772 	mov	r0,a
      002F24 74 1D            [12] 6773 	mov	a,#0x1d
      002F26 26               [12] 6774 	add	a,@r0
      002F27 FB               [12] 6775 	mov	r3,a
      002F28 E4               [12] 6776 	clr	a
      002F29 08               [12] 6777 	inc	r0
      002F2A 36               [12] 6778 	addc	a,@r0
      002F2B FC               [12] 6779 	mov	r4,a
      002F2C 08               [12] 6780 	inc	r0
      002F2D 86 07            [24] 6781 	mov	ar7,@r0
      002F2F 8B 82            [24] 6782 	mov	dpl,r3
      002F31 8C 83            [24] 6783 	mov	dph,r4
      002F33 8F F0            [24] 6784 	mov	b,r7
      002F35 12 00 00         [24] 6785 	lcall	__gptrget
      002F38 FF               [12] 6786 	mov	r7,a
      002F39 E4               [12] 6787 	clr	a
      002F3A FB               [12] 6788 	mov	r3,a
      002F3B FE               [12] 6789 	mov	r6,a
      002F3C FD               [12] 6790 	mov	r5,a
      002F3D E5 00            [12] 6791 	mov	a,_bp
      002F3F 24 07            [12] 6792 	add	a,#0x07
      002F41 F8               [12] 6793 	mov	r0,a
      002F42 EB               [12] 6794 	mov	a,r3
      002F43 46               [12] 6795 	orl	a,@r0
      002F44 F6               [12] 6796 	mov	@r0,a
      002F45 EF               [12] 6797 	mov	a,r7
      002F46 08               [12] 6798 	inc	r0
      002F47 46               [12] 6799 	orl	a,@r0
      002F48 F6               [12] 6800 	mov	@r0,a
      002F49 EE               [12] 6801 	mov	a,r6
      002F4A 08               [12] 6802 	inc	r0
      002F4B 46               [12] 6803 	orl	a,@r0
      002F4C F6               [12] 6804 	mov	@r0,a
      002F4D ED               [12] 6805 	mov	a,r5
      002F4E 08               [12] 6806 	inc	r0
      002F4F 46               [12] 6807 	orl	a,@r0
      002F50 F6               [12] 6808 	mov	@r0,a
      002F51 E5 00            [12] 6809 	mov	a,_bp
      002F53 24 17            [12] 6810 	add	a,#0x17
      002F55 F8               [12] 6811 	mov	r0,a
      002F56 74 1C            [12] 6812 	mov	a,#0x1c
      002F58 26               [12] 6813 	add	a,@r0
      002F59 FA               [12] 6814 	mov	r2,a
      002F5A E4               [12] 6815 	clr	a
      002F5B 08               [12] 6816 	inc	r0
      002F5C 36               [12] 6817 	addc	a,@r0
      002F5D FC               [12] 6818 	mov	r4,a
      002F5E 08               [12] 6819 	inc	r0
      002F5F 86 07            [24] 6820 	mov	ar7,@r0
      002F61 8A 82            [24] 6821 	mov	dpl,r2
      002F63 8C 83            [24] 6822 	mov	dph,r4
      002F65 8F F0            [24] 6823 	mov	b,r7
      002F67 12 00 00         [24] 6824 	lcall	__gptrget
      002F6A FA               [12] 6825 	mov	r2,a
      002F6B E4               [12] 6826 	clr	a
      002F6C FF               [12] 6827 	mov	r7,a
      002F6D FE               [12] 6828 	mov	r6,a
      002F6E FD               [12] 6829 	mov	r5,a
      002F6F E5 00            [12] 6830 	mov	a,_bp
      002F71 24 07            [12] 6831 	add	a,#0x07
      002F73 F8               [12] 6832 	mov	r0,a
      002F74 E6               [12] 6833 	mov	a,@r0
      002F75 42 02            [12] 6834 	orl	ar2,a
      002F77 08               [12] 6835 	inc	r0
      002F78 E6               [12] 6836 	mov	a,@r0
      002F79 42 07            [12] 6837 	orl	ar7,a
      002F7B 08               [12] 6838 	inc	r0
      002F7C E6               [12] 6839 	mov	a,@r0
      002F7D 42 06            [12] 6840 	orl	ar6,a
      002F7F 08               [12] 6841 	inc	r0
      002F80 E6               [12] 6842 	mov	a,@r0
      002F81 42 05            [12] 6843 	orl	ar5,a
      002F83 E5 00            [12] 6844 	mov	a,_bp
      002F85 24 0B            [12] 6845 	add	a,#0x0b
      002F87 F8               [12] 6846 	mov	r0,a
      002F88 86 82            [24] 6847 	mov	dpl,@r0
      002F8A 08               [12] 6848 	inc	r0
      002F8B 86 83            [24] 6849 	mov	dph,@r0
      002F8D 08               [12] 6850 	inc	r0
      002F8E 86 F0            [24] 6851 	mov	b,@r0
      002F90 EA               [12] 6852 	mov	a,r2
      002F91 12 00 00         [24] 6853 	lcall	__gptrput
      002F94 A3               [24] 6854 	inc	dptr
      002F95 EF               [12] 6855 	mov	a,r7
      002F96 12 00 00         [24] 6856 	lcall	__gptrput
      002F99 A3               [24] 6857 	inc	dptr
      002F9A EE               [12] 6858 	mov	a,r6
      002F9B 12 00 00         [24] 6859 	lcall	__gptrput
      002F9E A3               [24] 6860 	inc	dptr
      002F9F ED               [12] 6861 	mov	a,r5
      002FA0 12 00 00         [24] 6862 	lcall	__gptrput
                                   6863 ;	FATFS\src\ff.c:1766: fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
      002FA3 E5 00            [12] 6864 	mov	a,_bp
      002FA5 24 0B            [12] 6865 	add	a,#0x0b
      002FA7 F8               [12] 6866 	mov	r0,a
      002FA8 74 04            [12] 6867 	mov	a,#0x04
      002FAA 26               [12] 6868 	add	a,@r0
      002FAB FD               [12] 6869 	mov	r5,a
      002FAC E4               [12] 6870 	clr	a
      002FAD 08               [12] 6871 	inc	r0
      002FAE 36               [12] 6872 	addc	a,@r0
      002FAF FE               [12] 6873 	mov	r6,a
      002FB0 08               [12] 6874 	inc	r0
      002FB1 86 07            [24] 6875 	mov	ar7,@r0
      002FB3 E5 00            [12] 6876 	mov	a,_bp
      002FB5 24 17            [12] 6877 	add	a,#0x17
      002FB7 F8               [12] 6878 	mov	r0,a
      002FB8 74 19            [12] 6879 	mov	a,#0x19
      002FBA 26               [12] 6880 	add	a,@r0
      002FBB FA               [12] 6881 	mov	r2,a
      002FBC E4               [12] 6882 	clr	a
      002FBD 08               [12] 6883 	inc	r0
      002FBE 36               [12] 6884 	addc	a,@r0
      002FBF FB               [12] 6885 	mov	r3,a
      002FC0 08               [12] 6886 	inc	r0
      002FC1 86 04            [24] 6887 	mov	ar4,@r0
      002FC3 8A 82            [24] 6888 	mov	dpl,r2
      002FC5 8B 83            [24] 6889 	mov	dph,r3
      002FC7 8C F0            [24] 6890 	mov	b,r4
      002FC9 12 00 00         [24] 6891 	lcall	__gptrget
      002FCC FA               [12] 6892 	mov	r2,a
      002FCD E5 00            [12] 6893 	mov	a,_bp
      002FCF 24 07            [12] 6894 	add	a,#0x07
      002FD1 F8               [12] 6895 	mov	r0,a
      002FD2 08               [12] 6896 	inc	r0
      002FD3 A6 02            [24] 6897 	mov	@r0,ar2
      002FD5 18               [12] 6898 	dec	r0
      002FD6 76 00            [12] 6899 	mov	@r0,#0x00
      002FD8 E5 00            [12] 6900 	mov	a,_bp
      002FDA 24 17            [12] 6901 	add	a,#0x17
      002FDC F8               [12] 6902 	mov	r0,a
      002FDD 74 18            [12] 6903 	mov	a,#0x18
      002FDF 26               [12] 6904 	add	a,@r0
      002FE0 FA               [12] 6905 	mov	r2,a
      002FE1 E4               [12] 6906 	clr	a
      002FE2 08               [12] 6907 	inc	r0
      002FE3 36               [12] 6908 	addc	a,@r0
      002FE4 FB               [12] 6909 	mov	r3,a
      002FE5 08               [12] 6910 	inc	r0
      002FE6 86 04            [24] 6911 	mov	ar4,@r0
      002FE8 8A 82            [24] 6912 	mov	dpl,r2
      002FEA 8B 83            [24] 6913 	mov	dph,r3
      002FEC 8C F0            [24] 6914 	mov	b,r4
      002FEE 12 00 00         [24] 6915 	lcall	__gptrget
      002FF1 FA               [12] 6916 	mov	r2,a
      002FF2 7C 00            [12] 6917 	mov	r4,#0x00
      002FF4 E5 00            [12] 6918 	mov	a,_bp
      002FF6 24 07            [12] 6919 	add	a,#0x07
      002FF8 F8               [12] 6920 	mov	r0,a
      002FF9 E6               [12] 6921 	mov	a,@r0
      002FFA 42 02            [12] 6922 	orl	ar2,a
      002FFC 08               [12] 6923 	inc	r0
      002FFD E6               [12] 6924 	mov	a,@r0
      002FFE 42 04            [12] 6925 	orl	ar4,a
      003000 8D 82            [24] 6926 	mov	dpl,r5
      003002 8E 83            [24] 6927 	mov	dph,r6
      003004 8F F0            [24] 6928 	mov	b,r7
      003006 EA               [12] 6929 	mov	a,r2
      003007 12 00 00         [24] 6930 	lcall	__gptrput
      00300A A3               [24] 6931 	inc	dptr
      00300B EC               [12] 6932 	mov	a,r4
      00300C 12 00 00         [24] 6933 	lcall	__gptrput
                                   6934 ;	FATFS\src\ff.c:1767: fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
      00300F E5 00            [12] 6935 	mov	a,_bp
      003011 24 0B            [12] 6936 	add	a,#0x0b
      003013 F8               [12] 6937 	mov	r0,a
      003014 74 06            [12] 6938 	mov	a,#0x06
      003016 26               [12] 6939 	add	a,@r0
      003017 FD               [12] 6940 	mov	r5,a
      003018 E4               [12] 6941 	clr	a
      003019 08               [12] 6942 	inc	r0
      00301A 36               [12] 6943 	addc	a,@r0
      00301B FE               [12] 6944 	mov	r6,a
      00301C 08               [12] 6945 	inc	r0
      00301D 86 07            [24] 6946 	mov	ar7,@r0
      00301F E5 00            [12] 6947 	mov	a,_bp
      003021 24 17            [12] 6948 	add	a,#0x17
      003023 F8               [12] 6949 	mov	r0,a
      003024 74 17            [12] 6950 	mov	a,#0x17
      003026 26               [12] 6951 	add	a,@r0
      003027 FA               [12] 6952 	mov	r2,a
      003028 E4               [12] 6953 	clr	a
      003029 08               [12] 6954 	inc	r0
      00302A 36               [12] 6955 	addc	a,@r0
      00302B FB               [12] 6956 	mov	r3,a
      00302C 08               [12] 6957 	inc	r0
      00302D 86 04            [24] 6958 	mov	ar4,@r0
      00302F 8A 82            [24] 6959 	mov	dpl,r2
      003031 8B 83            [24] 6960 	mov	dph,r3
      003033 8C F0            [24] 6961 	mov	b,r4
      003035 12 00 00         [24] 6962 	lcall	__gptrget
      003038 FA               [12] 6963 	mov	r2,a
      003039 E5 00            [12] 6964 	mov	a,_bp
      00303B 24 07            [12] 6965 	add	a,#0x07
      00303D F8               [12] 6966 	mov	r0,a
      00303E 08               [12] 6967 	inc	r0
      00303F A6 02            [24] 6968 	mov	@r0,ar2
      003041 18               [12] 6969 	dec	r0
      003042 76 00            [12] 6970 	mov	@r0,#0x00
      003044 E5 00            [12] 6971 	mov	a,_bp
      003046 24 17            [12] 6972 	add	a,#0x17
      003048 F8               [12] 6973 	mov	r0,a
      003049 74 16            [12] 6974 	mov	a,#0x16
      00304B 26               [12] 6975 	add	a,@r0
      00304C FA               [12] 6976 	mov	r2,a
      00304D E4               [12] 6977 	clr	a
      00304E 08               [12] 6978 	inc	r0
      00304F 36               [12] 6979 	addc	a,@r0
      003050 FB               [12] 6980 	mov	r3,a
      003051 08               [12] 6981 	inc	r0
      003052 86 04            [24] 6982 	mov	ar4,@r0
      003054 8A 82            [24] 6983 	mov	dpl,r2
      003056 8B 83            [24] 6984 	mov	dph,r3
      003058 8C F0            [24] 6985 	mov	b,r4
      00305A 12 00 00         [24] 6986 	lcall	__gptrget
      00305D FA               [12] 6987 	mov	r2,a
      00305E 7C 00            [12] 6988 	mov	r4,#0x00
      003060 E5 00            [12] 6989 	mov	a,_bp
      003062 24 07            [12] 6990 	add	a,#0x07
      003064 F8               [12] 6991 	mov	r0,a
      003065 E6               [12] 6992 	mov	a,@r0
      003066 42 02            [12] 6993 	orl	ar2,a
      003068 08               [12] 6994 	inc	r0
      003069 E6               [12] 6995 	mov	a,@r0
      00306A 42 04            [12] 6996 	orl	ar4,a
      00306C 8D 82            [24] 6997 	mov	dpl,r5
      00306E 8E 83            [24] 6998 	mov	dph,r6
      003070 8F F0            [24] 6999 	mov	b,r7
      003072 EA               [12] 7000 	mov	a,r2
      003073 12 00 00         [24] 7001 	lcall	__gptrput
      003076 A3               [24] 7002 	inc	dptr
      003077 EC               [12] 7003 	mov	a,r4
      003078 12 00 00         [24] 7004 	lcall	__gptrput
      00307B                       7005 00115$:
                                   7006 ;	FATFS\src\ff.c:1769: *p = 0;		/* Terminate SFN string by a \0 */
      00307B A8 00            [24] 7007 	mov	r0,_bp
      00307D 08               [12] 7008 	inc	r0
      00307E 86 82            [24] 7009 	mov	dpl,@r0
      003080 08               [12] 7010 	inc	r0
      003081 86 83            [24] 7011 	mov	dph,@r0
      003083 08               [12] 7012 	inc	r0
      003084 86 F0            [24] 7013 	mov	b,@r0
      003086 E4               [12] 7014 	clr	a
      003087 12 00 00         [24] 7015 	lcall	__gptrput
                                   7016 ;	FATFS\src\ff.c:1772: if (fno->lfname) {
      00308A E5 00            [12] 7017 	mov	a,_bp
      00308C 24 0B            [12] 7018 	add	a,#0x0b
      00308E F8               [12] 7019 	mov	r0,a
      00308F 74 16            [12] 7020 	mov	a,#0x16
      003091 26               [12] 7021 	add	a,@r0
      003092 FD               [12] 7022 	mov	r5,a
      003093 E4               [12] 7023 	clr	a
      003094 08               [12] 7024 	inc	r0
      003095 36               [12] 7025 	addc	a,@r0
      003096 FE               [12] 7026 	mov	r6,a
      003097 08               [12] 7027 	inc	r0
      003098 86 07            [24] 7028 	mov	ar7,@r0
      00309A 8D 82            [24] 7029 	mov	dpl,r5
      00309C 8E 83            [24] 7030 	mov	dph,r6
      00309E 8F F0            [24] 7031 	mov	b,r7
      0030A0 12 00 00         [24] 7032 	lcall	__gptrget
      0030A3 FD               [12] 7033 	mov	r5,a
      0030A4 A3               [24] 7034 	inc	dptr
      0030A5 12 00 00         [24] 7035 	lcall	__gptrget
      0030A8 FE               [12] 7036 	mov	r6,a
      0030A9 A3               [24] 7037 	inc	dptr
      0030AA 12 00 00         [24] 7038 	lcall	__gptrget
      0030AD FF               [12] 7039 	mov	r7,a
      0030AE ED               [12] 7040 	mov	a,r5
      0030AF 4E               [12] 7041 	orl	a,r6
      0030B0 70 03            [24] 7042 	jnz	00232$
      0030B2 02 32 7A         [24] 7043 	ljmp	00132$
      0030B5                       7044 00232$:
                                   7045 ;	FATFS\src\ff.c:1775: i = 0; p = fno->lfname;
      0030B5 E5 00            [12] 7046 	mov	a,_bp
      0030B7 24 07            [12] 7047 	add	a,#0x07
      0030B9 F8               [12] 7048 	mov	r0,a
      0030BA E4               [12] 7049 	clr	a
      0030BB F6               [12] 7050 	mov	@r0,a
      0030BC 08               [12] 7051 	inc	r0
      0030BD F6               [12] 7052 	mov	@r0,a
      0030BE E5 00            [12] 7053 	mov	a,_bp
      0030C0 24 13            [12] 7054 	add	a,#0x13
      0030C2 F8               [12] 7055 	mov	r0,a
      0030C3 A6 05            [24] 7056 	mov	@r0,ar5
      0030C5 08               [12] 7057 	inc	r0
      0030C6 A6 06            [24] 7058 	mov	@r0,ar6
      0030C8 08               [12] 7059 	inc	r0
      0030C9 A6 07            [24] 7060 	mov	@r0,ar7
                                   7061 ;	FATFS\src\ff.c:1776: if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
      0030CB E5 00            [12] 7062 	mov	a,_bp
      0030CD 24 04            [12] 7063 	add	a,#0x04
      0030CF F8               [12] 7064 	mov	r0,a
      0030D0 86 82            [24] 7065 	mov	dpl,@r0
      0030D2 08               [12] 7066 	inc	r0
      0030D3 86 83            [24] 7067 	mov	dph,@r0
      0030D5 08               [12] 7068 	inc	r0
      0030D6 86 F0            [24] 7069 	mov	b,@r0
      0030D8 12 00 00         [24] 7070 	lcall	__gptrget
      0030DB FA               [12] 7071 	mov	r2,a
      0030DC A3               [24] 7072 	inc	dptr
      0030DD 12 00 00         [24] 7073 	lcall	__gptrget
      0030E0 FD               [12] 7074 	mov	r5,a
      0030E1 A3               [24] 7075 	inc	dptr
      0030E2 12 00 00         [24] 7076 	lcall	__gptrget
      0030E5 FE               [12] 7077 	mov	r6,a
      0030E6 A3               [24] 7078 	inc	dptr
      0030E7 12 00 00         [24] 7079 	lcall	__gptrget
      0030EA FF               [12] 7080 	mov	r7,a
      0030EB EA               [12] 7081 	mov	a,r2
      0030EC 4D               [12] 7082 	orl	a,r5
      0030ED 4E               [12] 7083 	orl	a,r6
      0030EE 4F               [12] 7084 	orl	a,r7
      0030EF 70 03            [24] 7085 	jnz	00233$
      0030F1 02 32 5B         [24] 7086 	ljmp	00127$
      0030F4                       7087 00233$:
      0030F4 E5 00            [12] 7088 	mov	a,_bp
      0030F6 24 0B            [12] 7089 	add	a,#0x0b
      0030F8 F8               [12] 7090 	mov	r0,a
      0030F9 74 19            [12] 7091 	mov	a,#0x19
      0030FB 26               [12] 7092 	add	a,@r0
      0030FC F6               [12] 7093 	mov	@r0,a
      0030FD E4               [12] 7094 	clr	a
      0030FE 08               [12] 7095 	inc	r0
      0030FF 36               [12] 7096 	addc	a,@r0
      003100 F6               [12] 7097 	mov	@r0,a
      003101 E5 00            [12] 7098 	mov	a,_bp
      003103 24 0B            [12] 7099 	add	a,#0x0b
      003105 F8               [12] 7100 	mov	r0,a
      003106 86 82            [24] 7101 	mov	dpl,@r0
      003108 08               [12] 7102 	inc	r0
      003109 86 83            [24] 7103 	mov	dph,@r0
      00310B 08               [12] 7104 	inc	r0
      00310C 86 F0            [24] 7105 	mov	b,@r0
      00310E 12 00 00         [24] 7106 	lcall	__gptrget
      003111 FA               [12] 7107 	mov	r2,a
      003112 A3               [24] 7108 	inc	dptr
      003113 12 00 00         [24] 7109 	lcall	__gptrget
      003116 FC               [12] 7110 	mov	r4,a
      003117 4A               [12] 7111 	orl	a,r2
      003118 70 03            [24] 7112 	jnz	00234$
      00311A 02 32 5B         [24] 7113 	ljmp	00127$
      00311D                       7114 00234$:
      00311D E5 00            [12] 7115 	mov	a,_bp
      00311F 24 0E            [12] 7116 	add	a,#0x0e
      003121 F8               [12] 7117 	mov	r0,a
      003122 74 1C            [12] 7118 	mov	a,#0x1c
      003124 26               [12] 7119 	add	a,@r0
      003125 FA               [12] 7120 	mov	r2,a
      003126 E4               [12] 7121 	clr	a
      003127 08               [12] 7122 	inc	r0
      003128 36               [12] 7123 	addc	a,@r0
      003129 FB               [12] 7124 	mov	r3,a
      00312A 08               [12] 7125 	inc	r0
      00312B 86 04            [24] 7126 	mov	ar4,@r0
      00312D 8A 82            [24] 7127 	mov	dpl,r2
      00312F 8B 83            [24] 7128 	mov	dph,r3
      003131 8C F0            [24] 7129 	mov	b,r4
      003133 12 00 00         [24] 7130 	lcall	__gptrget
      003136 FA               [12] 7131 	mov	r2,a
      003137 A3               [24] 7132 	inc	dptr
      003138 12 00 00         [24] 7133 	lcall	__gptrget
      00313B FB               [12] 7134 	mov	r3,a
      00313C BA FF 06         [24] 7135 	cjne	r2,#0xff,00235$
      00313F BB FF 03         [24] 7136 	cjne	r3,#0xff,00235$
      003142 02 32 5B         [24] 7137 	ljmp	00127$
      003145                       7138 00235$:
                                   7139 ;	FATFS\src\ff.c:1777: lfn = dp->lfn;
      003145 E5 00            [12] 7140 	mov	a,_bp
      003147 24 0E            [12] 7141 	add	a,#0x0e
      003149 F8               [12] 7142 	mov	r0,a
      00314A 74 19            [12] 7143 	mov	a,#0x19
      00314C 26               [12] 7144 	add	a,@r0
      00314D FA               [12] 7145 	mov	r2,a
      00314E E4               [12] 7146 	clr	a
      00314F 08               [12] 7147 	inc	r0
      003150 36               [12] 7148 	addc	a,@r0
      003151 FB               [12] 7149 	mov	r3,a
      003152 08               [12] 7150 	inc	r0
      003153 86 04            [24] 7151 	mov	ar4,@r0
      003155 8A 82            [24] 7152 	mov	dpl,r2
      003157 8B 83            [24] 7153 	mov	dph,r3
      003159 8C F0            [24] 7154 	mov	b,r4
      00315B 12 00 00         [24] 7155 	lcall	__gptrget
      00315E FA               [12] 7156 	mov	r2,a
      00315F A3               [24] 7157 	inc	dptr
      003160 12 00 00         [24] 7158 	lcall	__gptrget
      003163 FB               [12] 7159 	mov	r3,a
      003164 A3               [24] 7160 	inc	dptr
      003165 12 00 00         [24] 7161 	lcall	__gptrget
      003168 FC               [12] 7162 	mov	r4,a
                                   7163 ;	FATFS\src\ff.c:1778: while ((w = *lfn++) != 0) {		/* Get an LFN character */
      003169 E5 00            [12] 7164 	mov	a,_bp
      00316B 24 11            [12] 7165 	add	a,#0x11
      00316D F8               [12] 7166 	mov	r0,a
      00316E E4               [12] 7167 	clr	a
      00316F F6               [12] 7168 	mov	@r0,a
      003170 08               [12] 7169 	inc	r0
      003171 F6               [12] 7170 	mov	@r0,a
      003172                       7171 00123$:
      003172 8A 82            [24] 7172 	mov	dpl,r2
      003174 8B 83            [24] 7173 	mov	dph,r3
      003176 8C F0            [24] 7174 	mov	b,r4
      003178 12 00 00         [24] 7175 	lcall	__gptrget
      00317B FD               [12] 7176 	mov	r5,a
      00317C A3               [24] 7177 	inc	dptr
      00317D 12 00 00         [24] 7178 	lcall	__gptrget
      003180 FF               [12] 7179 	mov	r7,a
      003181 A3               [24] 7180 	inc	dptr
      003182 AA 82            [24] 7181 	mov	r2,dpl
      003184 AB 83            [24] 7182 	mov	r3,dph
      003186 E5 00            [12] 7183 	mov	a,_bp
      003188 24 04            [12] 7184 	add	a,#0x04
      00318A F8               [12] 7185 	mov	r0,a
      00318B A6 05            [24] 7186 	mov	@r0,ar5
      00318D 08               [12] 7187 	inc	r0
      00318E A6 07            [24] 7188 	mov	@r0,ar7
      003190 ED               [12] 7189 	mov	a,r5
      003191 4F               [12] 7190 	orl	a,r7
      003192 70 03            [24] 7191 	jnz	00236$
      003194 02 32 5B         [24] 7192 	ljmp	00127$
      003197                       7193 00236$:
                                   7194 ;	FATFS\src\ff.c:1780: w = ff_convert(w, 0);		/* Unicode -> OEM */
      003197 C0 04            [24] 7195 	push	ar4
      003199 C0 03            [24] 7196 	push	ar3
      00319B C0 02            [24] 7197 	push	ar2
      00319D E4               [12] 7198 	clr	a
      00319E C0 E0            [24] 7199 	push	acc
      0031A0 C0 E0            [24] 7200 	push	acc
      0031A2 E5 00            [12] 7201 	mov	a,_bp
      0031A4 24 04            [12] 7202 	add	a,#0x04
      0031A6 F8               [12] 7203 	mov	r0,a
      0031A7 86 82            [24] 7204 	mov	dpl,@r0
      0031A9 08               [12] 7205 	inc	r0
      0031AA 86 83            [24] 7206 	mov	dph,@r0
      0031AC 78 D4            [12] 7207 	mov	r0,#_ff_convert
      0031AE 79 05            [12] 7208 	mov	r1,#(_ff_convert >> 8)
      0031B0 7A 00            [12] 7209 	mov	r2,#(_ff_convert >> 16)
      0031B2 12 00 00         [24] 7210 	lcall	__sdcc_banked_call
      0031B5 AE 82            [24] 7211 	mov	r6,dpl
      0031B7 AF 83            [24] 7212 	mov	r7,dph
      0031B9 15 81            [12] 7213 	dec	sp
      0031BB 15 81            [12] 7214 	dec	sp
      0031BD D0 02            [24] 7215 	pop	ar2
      0031BF D0 03            [24] 7216 	pop	ar3
      0031C1 D0 04            [24] 7217 	pop	ar4
                                   7218 ;	FATFS\src\ff.c:1781: if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
      0031C3 EE               [12] 7219 	mov	a,r6
      0031C4 4F               [12] 7220 	orl	a,r7
      0031C5 70 0C            [24] 7221 	jnz	00119$
      0031C7 E5 00            [12] 7222 	mov	a,_bp
      0031C9 24 07            [12] 7223 	add	a,#0x07
      0031CB F8               [12] 7224 	mov	r0,a
      0031CC E4               [12] 7225 	clr	a
      0031CD F6               [12] 7226 	mov	@r0,a
      0031CE 08               [12] 7227 	inc	r0
      0031CF F6               [12] 7228 	mov	@r0,a
      0031D0 02 32 5B         [24] 7229 	ljmp	00127$
                                   7230 ;	FATFS\src\ff.c:1783: p[i++] = (TCHAR)(w >> 8);
      0031D3                       7231 00119$:
                                   7232 ;	FATFS\src\ff.c:1785: if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
      0031D3 C0 06            [24] 7233 	push	ar6
      0031D5 C0 07            [24] 7234 	push	ar7
      0031D7 E5 00            [12] 7235 	mov	a,_bp
      0031D9 24 0B            [12] 7236 	add	a,#0x0b
      0031DB F8               [12] 7237 	mov	r0,a
      0031DC 86 82            [24] 7238 	mov	dpl,@r0
      0031DE 08               [12] 7239 	inc	r0
      0031DF 86 83            [24] 7240 	mov	dph,@r0
      0031E1 08               [12] 7241 	inc	r0
      0031E2 86 F0            [24] 7242 	mov	b,@r0
      0031E4 12 00 00         [24] 7243 	lcall	__gptrget
      0031E7 FD               [12] 7244 	mov	r5,a
      0031E8 A3               [24] 7245 	inc	dptr
      0031E9 12 00 00         [24] 7246 	lcall	__gptrget
      0031EC FF               [12] 7247 	mov	r7,a
      0031ED 1D               [12] 7248 	dec	r5
      0031EE BD FF 01         [24] 7249 	cjne	r5,#0xff,00238$
      0031F1 1F               [12] 7250 	dec	r7
      0031F2                       7251 00238$:
      0031F2 E5 00            [12] 7252 	mov	a,_bp
      0031F4 24 11            [12] 7253 	add	a,#0x11
      0031F6 F8               [12] 7254 	mov	r0,a
      0031F7 C3               [12] 7255 	clr	c
      0031F8 E6               [12] 7256 	mov	a,@r0
      0031F9 9D               [12] 7257 	subb	a,r5
      0031FA 08               [12] 7258 	inc	r0
      0031FB E6               [12] 7259 	mov	a,@r0
      0031FC 9F               [12] 7260 	subb	a,r7
      0031FD D0 07            [24] 7261 	pop	ar7
      0031FF D0 06            [24] 7262 	pop	ar6
      003201 40 0B            [24] 7263 	jc	00122$
      003203 E5 00            [12] 7264 	mov	a,_bp
      003205 24 07            [12] 7265 	add	a,#0x07
      003207 F8               [12] 7266 	mov	r0,a
      003208 E4               [12] 7267 	clr	a
      003209 F6               [12] 7268 	mov	@r0,a
      00320A 08               [12] 7269 	inc	r0
      00320B F6               [12] 7270 	mov	@r0,a
      00320C 80 4D            [24] 7271 	sjmp	00127$
      00320E                       7272 00122$:
                                   7273 ;	FATFS\src\ff.c:1786: p[i++] = (TCHAR)w;
      00320E C0 02            [24] 7274 	push	ar2
      003210 C0 03            [24] 7275 	push	ar3
      003212 C0 04            [24] 7276 	push	ar4
      003214 E5 00            [12] 7277 	mov	a,_bp
      003216 24 11            [12] 7278 	add	a,#0x11
      003218 F8               [12] 7279 	mov	r0,a
      003219 86 04            [24] 7280 	mov	ar4,@r0
      00321B 08               [12] 7281 	inc	r0
      00321C 86 05            [24] 7282 	mov	ar5,@r0
      00321E E5 00            [12] 7283 	mov	a,_bp
      003220 24 11            [12] 7284 	add	a,#0x11
      003222 F8               [12] 7285 	mov	r0,a
      003223 06               [12] 7286 	inc	@r0
      003224 B6 00 02         [24] 7287 	cjne	@r0,#0x00,00240$
      003227 08               [12] 7288 	inc	r0
      003228 06               [12] 7289 	inc	@r0
      003229                       7290 00240$:
      003229 E5 00            [12] 7291 	mov	a,_bp
      00322B 24 11            [12] 7292 	add	a,#0x11
      00322D F8               [12] 7293 	mov	r0,a
      00322E E5 00            [12] 7294 	mov	a,_bp
      003230 24 07            [12] 7295 	add	a,#0x07
      003232 F9               [12] 7296 	mov	r1,a
      003233 E6               [12] 7297 	mov	a,@r0
      003234 F7               [12] 7298 	mov	@r1,a
      003235 08               [12] 7299 	inc	r0
      003236 09               [12] 7300 	inc	r1
      003237 E6               [12] 7301 	mov	a,@r0
      003238 F7               [12] 7302 	mov	@r1,a
      003239 E5 00            [12] 7303 	mov	a,_bp
      00323B 24 13            [12] 7304 	add	a,#0x13
      00323D F8               [12] 7305 	mov	r0,a
      00323E EC               [12] 7306 	mov	a,r4
      00323F 26               [12] 7307 	add	a,@r0
      003240 FC               [12] 7308 	mov	r4,a
      003241 ED               [12] 7309 	mov	a,r5
      003242 08               [12] 7310 	inc	r0
      003243 36               [12] 7311 	addc	a,@r0
      003244 FD               [12] 7312 	mov	r5,a
      003245 08               [12] 7313 	inc	r0
      003246 86 03            [24] 7314 	mov	ar3,@r0
      003248 8C 82            [24] 7315 	mov	dpl,r4
      00324A 8D 83            [24] 7316 	mov	dph,r5
      00324C 8B F0            [24] 7317 	mov	b,r3
      00324E EE               [12] 7318 	mov	a,r6
      00324F 12 00 00         [24] 7319 	lcall	__gptrput
      003252 D0 04            [24] 7320 	pop	ar4
      003254 D0 03            [24] 7321 	pop	ar3
      003256 D0 02            [24] 7322 	pop	ar2
      003258 02 31 72         [24] 7323 	ljmp	00123$
      00325B                       7324 00127$:
                                   7325 ;	FATFS\src\ff.c:1789: p[i] = 0;	/* Terminate LFN string by a \0 */
      00325B E5 00            [12] 7326 	mov	a,_bp
      00325D 24 13            [12] 7327 	add	a,#0x13
      00325F F8               [12] 7328 	mov	r0,a
      003260 E5 00            [12] 7329 	mov	a,_bp
      003262 24 07            [12] 7330 	add	a,#0x07
      003264 F9               [12] 7331 	mov	r1,a
      003265 E7               [12] 7332 	mov	a,@r1
      003266 26               [12] 7333 	add	a,@r0
      003267 FD               [12] 7334 	mov	r5,a
      003268 09               [12] 7335 	inc	r1
      003269 E7               [12] 7336 	mov	a,@r1
      00326A 08               [12] 7337 	inc	r0
      00326B 36               [12] 7338 	addc	a,@r0
      00326C FE               [12] 7339 	mov	r6,a
      00326D 08               [12] 7340 	inc	r0
      00326E 86 07            [24] 7341 	mov	ar7,@r0
      003270 8D 82            [24] 7342 	mov	dpl,r5
      003272 8E 83            [24] 7343 	mov	dph,r6
      003274 8F F0            [24] 7344 	mov	b,r7
      003276 E4               [12] 7345 	clr	a
      003277 12 00 00         [24] 7346 	lcall	__gptrput
      00327A                       7347 00132$:
                                   7348 ;	FATFS\src\ff.c:1792: }
      00327A 85 00 81         [24] 7349 	mov	sp,_bp
      00327D D0 00            [24] 7350 	pop	_bp
      00327F 02 00 00         [24] 7351 	ljmp	__sdcc_banked_ret
                                   7352 ;------------------------------------------------------------
                                   7353 ;Allocation info for local variables in function 'create_name'
                                   7354 ;------------------------------------------------------------
                                   7355 ;path                      Allocated to stack - _bp -6
                                   7356 ;dp                        Allocated to stack - _bp +1
                                   7357 ;b                         Allocated to registers r4 
                                   7358 ;cf                        Allocated to stack - _bp +15
                                   7359 ;w                         Allocated to stack - _bp +16
                                   7360 ;lfn                       Allocated to stack - _bp +27
                                   7361 ;i                         Allocated to stack - _bp +21
                                   7362 ;ni                        Allocated to stack - _bp +30
                                   7363 ;si                        Allocated to stack - _bp +25
                                   7364 ;di                        Allocated to stack - _bp +23
                                   7365 ;p                         Allocated to stack - _bp +18
                                   7366 ;sloc0                     Allocated to stack - _bp +4
                                   7367 ;sloc1                     Allocated to stack - _bp +25
                                   7368 ;sloc2                     Allocated to stack - _bp +7
                                   7369 ;sloc3                     Allocated to stack - _bp +9
                                   7370 ;sloc4                     Allocated to stack - _bp +13
                                   7371 ;sloc5                     Allocated to stack - _bp +11
                                   7372 ;------------------------------------------------------------
                                   7373 ;	FATFS\src\ff.c:1803: FRESULT create_name (
                                   7374 ;	-----------------------------------------
                                   7375 ;	 function create_name
                                   7376 ;	-----------------------------------------
      003282                       7377 _create_name:
      003282 C0 00            [24] 7378 	push	_bp
      003284 85 81 00         [24] 7379 	mov	_bp,sp
      003287 C0 82            [24] 7380 	push	dpl
      003289 C0 83            [24] 7381 	push	dph
      00328B C0 F0            [24] 7382 	push	b
      00328D E5 81            [12] 7383 	mov	a,sp
      00328F 24 1C            [12] 7384 	add	a,#0x1c
      003291 F5 81            [12] 7385 	mov	sp,a
                                   7386 ;	FATFS\src\ff.c:1815: for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
      003293 E5 00            [12] 7387 	mov	a,_bp
      003295 24 FA            [12] 7388 	add	a,#0xfa
      003297 F8               [12] 7389 	mov	r0,a
      003298 86 02            [24] 7390 	mov	ar2,@r0
      00329A 08               [12] 7391 	inc	r0
      00329B 86 03            [24] 7392 	mov	ar3,@r0
      00329D 08               [12] 7393 	inc	r0
      00329E 86 04            [24] 7394 	mov	ar4,@r0
      0032A0 8A 82            [24] 7395 	mov	dpl,r2
      0032A2 8B 83            [24] 7396 	mov	dph,r3
      0032A4 8C F0            [24] 7397 	mov	b,r4
      0032A6 E5 00            [12] 7398 	mov	a,_bp
      0032A8 24 04            [12] 7399 	add	a,#0x04
      0032AA F8               [12] 7400 	mov	r0,a
      0032AB 12 00 00         [24] 7401 	lcall	__gptrget
      0032AE F6               [12] 7402 	mov	@r0,a
      0032AF A3               [24] 7403 	inc	dptr
      0032B0 12 00 00         [24] 7404 	lcall	__gptrget
      0032B3 08               [12] 7405 	inc	r0
      0032B4 F6               [12] 7406 	mov	@r0,a
      0032B5 A3               [24] 7407 	inc	dptr
      0032B6 12 00 00         [24] 7408 	lcall	__gptrget
      0032B9 08               [12] 7409 	inc	r0
      0032BA F6               [12] 7410 	mov	@r0,a
      0032BB                       7411 00186$:
      0032BB E5 00            [12] 7412 	mov	a,_bp
      0032BD 24 04            [12] 7413 	add	a,#0x04
      0032BF F8               [12] 7414 	mov	r0,a
      0032C0 86 82            [24] 7415 	mov	dpl,@r0
      0032C2 08               [12] 7416 	inc	r0
      0032C3 86 83            [24] 7417 	mov	dph,@r0
      0032C5 08               [12] 7418 	inc	r0
      0032C6 86 F0            [24] 7419 	mov	b,@r0
      0032C8 12 00 00         [24] 7420 	lcall	__gptrget
      0032CB FF               [12] 7421 	mov	r7,a
      0032CC BF 2F 02         [24] 7422 	cjne	r7,#0x2f,00413$
      0032CF 80 03            [24] 7423 	sjmp	00187$
      0032D1                       7424 00413$:
      0032D1 BF 5C 0D         [24] 7425 	cjne	r7,#0x5c,00241$
      0032D4                       7426 00187$:
      0032D4 E5 00            [12] 7427 	mov	a,_bp
      0032D6 24 04            [12] 7428 	add	a,#0x04
      0032D8 F8               [12] 7429 	mov	r0,a
      0032D9 06               [12] 7430 	inc	@r0
      0032DA B6 00 02         [24] 7431 	cjne	@r0,#0x00,00416$
      0032DD 08               [12] 7432 	inc	r0
      0032DE 06               [12] 7433 	inc	@r0
      0032DF                       7434 00416$:
      0032DF 80 DA            [24] 7435 	sjmp	00186$
      0032E1                       7436 00241$:
      0032E1 C0 02            [24] 7437 	push	ar2
      0032E3 C0 03            [24] 7438 	push	ar3
      0032E5 C0 04            [24] 7439 	push	ar4
      0032E7 E5 00            [12] 7440 	mov	a,_bp
      0032E9 24 04            [12] 7441 	add	a,#0x04
      0032EB F8               [12] 7442 	mov	r0,a
      0032EC E5 00            [12] 7443 	mov	a,_bp
      0032EE 24 12            [12] 7444 	add	a,#0x12
      0032F0 F9               [12] 7445 	mov	r1,a
      0032F1 E6               [12] 7446 	mov	a,@r0
      0032F2 F7               [12] 7447 	mov	@r1,a
      0032F3 08               [12] 7448 	inc	r0
      0032F4 09               [12] 7449 	inc	r1
      0032F5 E6               [12] 7450 	mov	a,@r0
      0032F6 F7               [12] 7451 	mov	@r1,a
      0032F7 08               [12] 7452 	inc	r0
      0032F8 09               [12] 7453 	inc	r1
      0032F9 E6               [12] 7454 	mov	a,@r0
      0032FA F7               [12] 7455 	mov	@r1,a
                                   7456 ;	FATFS\src\ff.c:1816: lfn = dp->lfn;
      0032FB A8 00            [24] 7457 	mov	r0,_bp
      0032FD 08               [12] 7458 	inc	r0
      0032FE 74 19            [12] 7459 	mov	a,#0x19
      003300 26               [12] 7460 	add	a,@r0
      003301 FA               [12] 7461 	mov	r2,a
      003302 E4               [12] 7462 	clr	a
      003303 08               [12] 7463 	inc	r0
      003304 36               [12] 7464 	addc	a,@r0
      003305 FB               [12] 7465 	mov	r3,a
      003306 08               [12] 7466 	inc	r0
      003307 86 04            [24] 7467 	mov	ar4,@r0
      003309 8A 82            [24] 7468 	mov	dpl,r2
      00330B 8B 83            [24] 7469 	mov	dph,r3
      00330D 8C F0            [24] 7470 	mov	b,r4
      00330F E5 00            [12] 7471 	mov	a,_bp
      003311 24 1B            [12] 7472 	add	a,#0x1b
      003313 F8               [12] 7473 	mov	r0,a
      003314 12 00 00         [24] 7474 	lcall	__gptrget
      003317 F6               [12] 7475 	mov	@r0,a
      003318 A3               [24] 7476 	inc	dptr
      003319 12 00 00         [24] 7477 	lcall	__gptrget
      00331C 08               [12] 7478 	inc	r0
      00331D F6               [12] 7479 	mov	@r0,a
      00331E A3               [24] 7480 	inc	dptr
      00331F 12 00 00         [24] 7481 	lcall	__gptrget
      003322 08               [12] 7482 	inc	r0
      003323 F6               [12] 7483 	mov	@r0,a
                                   7484 ;	FATFS\src\ff.c:1817: si = di = 0;
      003324 E5 00            [12] 7485 	mov	a,_bp
      003326 24 04            [12] 7486 	add	a,#0x04
      003328 F8               [12] 7487 	mov	r0,a
      003329 E4               [12] 7488 	clr	a
      00332A F6               [12] 7489 	mov	@r0,a
      00332B 08               [12] 7490 	inc	r0
      00332C F6               [12] 7491 	mov	@r0,a
      00332D E5 00            [12] 7492 	mov	a,_bp
      00332F 24 07            [12] 7493 	add	a,#0x07
      003331 F8               [12] 7494 	mov	r0,a
      003332 E4               [12] 7495 	clr	a
      003333 F6               [12] 7496 	mov	@r0,a
      003334 08               [12] 7497 	inc	r0
      003335 F6               [12] 7498 	mov	@r0,a
      003336 E5 00            [12] 7499 	mov	a,_bp
      003338 24 09            [12] 7500 	add	a,#0x09
      00333A F8               [12] 7501 	mov	r0,a
      00333B E4               [12] 7502 	clr	a
      00333C F6               [12] 7503 	mov	@r0,a
      00333D 08               [12] 7504 	inc	r0
      00333E F6               [12] 7505 	mov	@r0,a
                                   7506 ;	FATFS\src\ff.c:1926: return FR_OK;
      00333F D0 04            [24] 7507 	pop	ar4
      003341 D0 03            [24] 7508 	pop	ar3
      003343 D0 02            [24] 7509 	pop	ar2
                                   7510 ;	FATFS\src\ff.c:1817: si = di = 0;
      003345                       7511 00188$:
                                   7512 ;	FATFS\src\ff.c:1819: w = p[si++];					/* Get a character */
      003345 C0 02            [24] 7513 	push	ar2
      003347 C0 03            [24] 7514 	push	ar3
      003349 C0 04            [24] 7515 	push	ar4
      00334B E5 00            [12] 7516 	mov	a,_bp
      00334D 24 09            [12] 7517 	add	a,#0x09
      00334F F8               [12] 7518 	mov	r0,a
      003350 86 03            [24] 7519 	mov	ar3,@r0
      003352 08               [12] 7520 	inc	r0
      003353 86 04            [24] 7521 	mov	ar4,@r0
      003355 E5 00            [12] 7522 	mov	a,_bp
      003357 24 09            [12] 7523 	add	a,#0x09
      003359 F8               [12] 7524 	mov	r0,a
      00335A 06               [12] 7525 	inc	@r0
      00335B B6 00 02         [24] 7526 	cjne	@r0,#0x00,00417$
      00335E 08               [12] 7527 	inc	r0
      00335F 06               [12] 7528 	inc	@r0
      003360                       7529 00417$:
      003360 E5 00            [12] 7530 	mov	a,_bp
      003362 24 09            [12] 7531 	add	a,#0x09
      003364 F8               [12] 7532 	mov	r0,a
      003365 86 07            [24] 7533 	mov	ar7,@r0
      003367 08               [12] 7534 	inc	r0
      003368 86 06            [24] 7535 	mov	ar6,@r0
      00336A E5 00            [12] 7536 	mov	a,_bp
      00336C 24 12            [12] 7537 	add	a,#0x12
      00336E F8               [12] 7538 	mov	r0,a
      00336F EB               [12] 7539 	mov	a,r3
      003370 26               [12] 7540 	add	a,@r0
      003371 FB               [12] 7541 	mov	r3,a
      003372 EC               [12] 7542 	mov	a,r4
      003373 08               [12] 7543 	inc	r0
      003374 36               [12] 7544 	addc	a,@r0
      003375 FC               [12] 7545 	mov	r4,a
      003376 08               [12] 7546 	inc	r0
      003377 86 02            [24] 7547 	mov	ar2,@r0
      003379 8B 82            [24] 7548 	mov	dpl,r3
      00337B 8C 83            [24] 7549 	mov	dph,r4
      00337D 8A F0            [24] 7550 	mov	b,r2
      00337F 12 00 00         [24] 7551 	lcall	__gptrget
      003382 FB               [12] 7552 	mov	r3,a
      003383 E5 00            [12] 7553 	mov	a,_bp
      003385 24 0B            [12] 7554 	add	a,#0x0b
      003387 F8               [12] 7555 	mov	r0,a
      003388 A6 03            [24] 7556 	mov	@r0,ar3
      00338A 08               [12] 7557 	inc	r0
      00338B 76 00            [12] 7558 	mov	@r0,#0x00
                                   7559 ;	FATFS\src\ff.c:1820: if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
      00338D E5 00            [12] 7560 	mov	a,_bp
      00338F 24 0B            [12] 7561 	add	a,#0x0b
      003391 F8               [12] 7562 	mov	r0,a
      003392 C3               [12] 7563 	clr	c
      003393 E6               [12] 7564 	mov	a,@r0
      003394 94 20            [12] 7565 	subb	a,#0x20
      003396 08               [12] 7566 	inc	r0
      003397 E6               [12] 7567 	mov	a,@r0
      003398 94 00            [12] 7568 	subb	a,#0x00
      00339A D0 04            [24] 7569 	pop	ar4
      00339C D0 03            [24] 7570 	pop	ar3
      00339E D0 02            [24] 7571 	pop	ar2
      0033A0 50 03            [24] 7572 	jnc	00418$
      0033A2 02 34 C1         [24] 7573 	ljmp	00117$
      0033A5                       7574 00418$:
      0033A5 E5 00            [12] 7575 	mov	a,_bp
      0033A7 24 0B            [12] 7576 	add	a,#0x0b
      0033A9 F8               [12] 7577 	mov	r0,a
      0033AA B6 2F 07         [24] 7578 	cjne	@r0,#0x2f,00419$
      0033AD 08               [12] 7579 	inc	r0
      0033AE B6 00 03         [24] 7580 	cjne	@r0,#0x00,00419$
      0033B1 02 34 C1         [24] 7581 	ljmp	00117$
      0033B4                       7582 00419$:
      0033B4 E5 00            [12] 7583 	mov	a,_bp
      0033B6 24 0B            [12] 7584 	add	a,#0x0b
      0033B8 F8               [12] 7585 	mov	r0,a
      0033B9 B6 5C 07         [24] 7586 	cjne	@r0,#0x5c,00420$
      0033BC 08               [12] 7587 	inc	r0
      0033BD B6 00 03         [24] 7588 	cjne	@r0,#0x00,00420$
      0033C0 02 34 C1         [24] 7589 	ljmp	00117$
      0033C3                       7590 00420$:
                                   7591 ;	FATFS\src\ff.c:1821: if (di >= _MAX_LFN)				/* Reject too long name */
      0033C3 E5 00            [12] 7592 	mov	a,_bp
      0033C5 24 07            [12] 7593 	add	a,#0x07
      0033C7 F8               [12] 7594 	mov	r0,a
      0033C8 C3               [12] 7595 	clr	c
      0033C9 E6               [12] 7596 	mov	a,@r0
      0033CA 94 FF            [12] 7597 	subb	a,#0xff
      0033CC 08               [12] 7598 	inc	r0
      0033CD E6               [12] 7599 	mov	a,@r0
      0033CE 94 00            [12] 7600 	subb	a,#0x00
      0033D0 40 06            [24] 7601 	jc	00107$
                                   7602 ;	FATFS\src\ff.c:1822: return FR_INVALID_NAME;
      0033D2 75 82 06         [24] 7603 	mov	dpl,#0x06
      0033D5 02 3B 08         [24] 7604 	ljmp	00195$
      0033D8                       7605 00107$:
                                   7606 ;	FATFS\src\ff.c:1824: w &= 0xFF;
      0033D8 C0 02            [24] 7607 	push	ar2
      0033DA C0 03            [24] 7608 	push	ar3
      0033DC C0 04            [24] 7609 	push	ar4
      0033DE E5 00            [12] 7610 	mov	a,_bp
      0033E0 24 0B            [12] 7611 	add	a,#0x0b
      0033E2 F8               [12] 7612 	mov	r0,a
      0033E3 86 03            [24] 7613 	mov	ar3,@r0
      0033E5 7C 00            [12] 7614 	mov	r4,#0x00
                                   7615 ;	FATFS\src\ff.c:1831: w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
      0033E7 C0 02            [24] 7616 	push	ar2
      0033E9 74 01            [12] 7617 	mov	a,#0x01
      0033EB C0 E0            [24] 7618 	push	acc
      0033ED E4               [12] 7619 	clr	a
      0033EE C0 E0            [24] 7620 	push	acc
      0033F0 8B 82            [24] 7621 	mov	dpl,r3
      0033F2 8C 83            [24] 7622 	mov	dph,r4
      0033F4 78 D4            [12] 7623 	mov	r0,#_ff_convert
      0033F6 79 05            [12] 7624 	mov	r1,#(_ff_convert >> 8)
      0033F8 7A 00            [12] 7625 	mov	r2,#(_ff_convert >> 16)
      0033FA 12 00 00         [24] 7626 	lcall	__sdcc_banked_call
      0033FD AB 82            [24] 7627 	mov	r3,dpl
      0033FF AC 83            [24] 7628 	mov	r4,dph
      003401 15 81            [12] 7629 	dec	sp
      003403 15 81            [12] 7630 	dec	sp
      003405 D0 02            [24] 7631 	pop	ar2
      003407 E5 00            [12] 7632 	mov	a,_bp
      003409 24 10            [12] 7633 	add	a,#0x10
      00340B F8               [12] 7634 	mov	r0,a
      00340C A6 03            [24] 7635 	mov	@r0,ar3
      00340E 08               [12] 7636 	inc	r0
      00340F A6 04            [24] 7637 	mov	@r0,ar4
                                   7638 ;	FATFS\src\ff.c:1832: if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
      003411 D0 04            [24] 7639 	pop	ar4
      003413 D0 03            [24] 7640 	pop	ar3
      003415 D0 02            [24] 7641 	pop	ar2
      003417 E5 00            [12] 7642 	mov	a,_bp
      003419 24 10            [12] 7643 	add	a,#0x10
      00341B F8               [12] 7644 	mov	r0,a
      00341C E6               [12] 7645 	mov	a,@r0
      00341D 08               [12] 7646 	inc	r0
      00341E 46               [12] 7647 	orl	a,@r0
      00341F 70 06            [24] 7648 	jnz	00113$
      003421 75 82 06         [24] 7649 	mov	dpl,#0x06
      003424 02 3B 08         [24] 7650 	ljmp	00195$
      003427                       7651 00113$:
                                   7652 ;	FATFS\src\ff.c:1834: if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
      003427 E5 00            [12] 7653 	mov	a,_bp
      003429 24 10            [12] 7654 	add	a,#0x10
      00342B F8               [12] 7655 	mov	r0,a
      00342C C3               [12] 7656 	clr	c
      00342D E6               [12] 7657 	mov	a,@r0
      00342E 94 80            [12] 7658 	subb	a,#0x80
      003430 08               [12] 7659 	inc	r0
      003431 E6               [12] 7660 	mov	a,@r0
      003432 94 00            [12] 7661 	subb	a,#0x00
      003434 50 39            [24] 7662 	jnc	00115$
      003436 C0 04            [24] 7663 	push	ar4
      003438 C0 03            [24] 7664 	push	ar3
      00343A C0 02            [24] 7665 	push	ar2
      00343C E5 00            [12] 7666 	mov	a,_bp
      00343E 24 10            [12] 7667 	add	a,#0x10
      003440 F8               [12] 7668 	mov	r0,a
      003441 E6               [12] 7669 	mov	a,@r0
      003442 C0 E0            [24] 7670 	push	acc
      003444 08               [12] 7671 	inc	r0
      003445 E6               [12] 7672 	mov	a,@r0
      003446 C0 E0            [24] 7673 	push	acc
      003448 90 85 17         [24] 7674 	mov	dptr,#___str_0
      00344B 75 F0 80         [24] 7675 	mov	b,#0x80
      00344E 78 37            [12] 7676 	mov	r0,#_chk_chr
      003450 79 0D            [12] 7677 	mov	r1,#(_chk_chr >> 8)
      003452 7A 00            [12] 7678 	mov	r2,#(_chk_chr >> 16)
      003454 12 00 00         [24] 7679 	lcall	__sdcc_banked_call
      003457 AE 82            [24] 7680 	mov	r6,dpl
      003459 AF 83            [24] 7681 	mov	r7,dph
      00345B 15 81            [12] 7682 	dec	sp
      00345D 15 81            [12] 7683 	dec	sp
      00345F D0 02            [24] 7684 	pop	ar2
      003461 D0 03            [24] 7685 	pop	ar3
      003463 D0 04            [24] 7686 	pop	ar4
      003465 EE               [12] 7687 	mov	a,r6
      003466 4F               [12] 7688 	orl	a,r7
      003467 60 06            [24] 7689 	jz	00115$
                                   7690 ;	FATFS\src\ff.c:1835: return FR_INVALID_NAME;
      003469 75 82 06         [24] 7691 	mov	dpl,#0x06
      00346C 02 3B 08         [24] 7692 	ljmp	00195$
      00346F                       7693 00115$:
                                   7694 ;	FATFS\src\ff.c:1836: lfn[di++] = w;					/* Store the Unicode character */
      00346F E5 00            [12] 7695 	mov	a,_bp
      003471 24 07            [12] 7696 	add	a,#0x07
      003473 F8               [12] 7697 	mov	r0,a
      003474 86 06            [24] 7698 	mov	ar6,@r0
      003476 08               [12] 7699 	inc	r0
      003477 86 07            [24] 7700 	mov	ar7,@r0
      003479 E5 00            [12] 7701 	mov	a,_bp
      00347B 24 07            [12] 7702 	add	a,#0x07
      00347D F8               [12] 7703 	mov	r0,a
      00347E 06               [12] 7704 	inc	@r0
      00347F B6 00 02         [24] 7705 	cjne	@r0,#0x00,00425$
      003482 08               [12] 7706 	inc	r0
      003483 06               [12] 7707 	inc	@r0
      003484                       7708 00425$:
      003484 E5 00            [12] 7709 	mov	a,_bp
      003486 24 07            [12] 7710 	add	a,#0x07
      003488 F8               [12] 7711 	mov	r0,a
      003489 E5 00            [12] 7712 	mov	a,_bp
      00348B 24 04            [12] 7713 	add	a,#0x04
      00348D F9               [12] 7714 	mov	r1,a
      00348E E6               [12] 7715 	mov	a,@r0
      00348F F7               [12] 7716 	mov	@r1,a
      003490 08               [12] 7717 	inc	r0
      003491 09               [12] 7718 	inc	r1
      003492 E6               [12] 7719 	mov	a,@r0
      003493 F7               [12] 7720 	mov	@r1,a
      003494 EE               [12] 7721 	mov	a,r6
      003495 2E               [12] 7722 	add	a,r6
      003496 FE               [12] 7723 	mov	r6,a
      003497 EF               [12] 7724 	mov	a,r7
      003498 33               [12] 7725 	rlc	a
      003499 FF               [12] 7726 	mov	r7,a
      00349A E5 00            [12] 7727 	mov	a,_bp
      00349C 24 1B            [12] 7728 	add	a,#0x1b
      00349E F8               [12] 7729 	mov	r0,a
      00349F EE               [12] 7730 	mov	a,r6
      0034A0 26               [12] 7731 	add	a,@r0
      0034A1 FE               [12] 7732 	mov	r6,a
      0034A2 EF               [12] 7733 	mov	a,r7
      0034A3 08               [12] 7734 	inc	r0
      0034A4 36               [12] 7735 	addc	a,@r0
      0034A5 FF               [12] 7736 	mov	r7,a
      0034A6 08               [12] 7737 	inc	r0
      0034A7 86 05            [24] 7738 	mov	ar5,@r0
      0034A9 8E 82            [24] 7739 	mov	dpl,r6
      0034AB 8F 83            [24] 7740 	mov	dph,r7
      0034AD 8D F0            [24] 7741 	mov	b,r5
      0034AF E5 00            [12] 7742 	mov	a,_bp
      0034B1 24 10            [12] 7743 	add	a,#0x10
      0034B3 F8               [12] 7744 	mov	r0,a
      0034B4 E6               [12] 7745 	mov	a,@r0
      0034B5 12 00 00         [24] 7746 	lcall	__gptrput
      0034B8 A3               [24] 7747 	inc	dptr
      0034B9 08               [12] 7748 	inc	r0
      0034BA E6               [12] 7749 	mov	a,@r0
      0034BB 12 00 00         [24] 7750 	lcall	__gptrput
      0034BE 02 33 45         [24] 7751 	ljmp	00188$
      0034C1                       7752 00117$:
                                   7753 ;	FATFS\src\ff.c:1838: *path = &p[si];						/* Return pointer to the next segment */
      0034C1 E5 00            [12] 7754 	mov	a,_bp
      0034C3 24 12            [12] 7755 	add	a,#0x12
      0034C5 F8               [12] 7756 	mov	r0,a
      0034C6 EF               [12] 7757 	mov	a,r7
      0034C7 26               [12] 7758 	add	a,@r0
      0034C8 FD               [12] 7759 	mov	r5,a
      0034C9 EE               [12] 7760 	mov	a,r6
      0034CA 08               [12] 7761 	inc	r0
      0034CB 36               [12] 7762 	addc	a,@r0
      0034CC FE               [12] 7763 	mov	r6,a
      0034CD 08               [12] 7764 	inc	r0
      0034CE 86 07            [24] 7765 	mov	ar7,@r0
      0034D0 8A 82            [24] 7766 	mov	dpl,r2
      0034D2 8B 83            [24] 7767 	mov	dph,r3
      0034D4 8C F0            [24] 7768 	mov	b,r4
      0034D6 ED               [12] 7769 	mov	a,r5
      0034D7 12 00 00         [24] 7770 	lcall	__gptrput
      0034DA A3               [24] 7771 	inc	dptr
      0034DB EE               [12] 7772 	mov	a,r6
      0034DC 12 00 00         [24] 7773 	lcall	__gptrput
      0034DF A3               [24] 7774 	inc	dptr
      0034E0 EF               [12] 7775 	mov	a,r7
      0034E1 12 00 00         [24] 7776 	lcall	__gptrput
                                   7777 ;	FATFS\src\ff.c:1839: cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
      0034E4 E5 00            [12] 7778 	mov	a,_bp
      0034E6 24 0B            [12] 7779 	add	a,#0x0b
      0034E8 F8               [12] 7780 	mov	r0,a
      0034E9 C3               [12] 7781 	clr	c
      0034EA E6               [12] 7782 	mov	a,@r0
      0034EB 94 20            [12] 7783 	subb	a,#0x20
      0034ED 08               [12] 7784 	inc	r0
      0034EE E6               [12] 7785 	mov	a,@r0
      0034EF 94 00            [12] 7786 	subb	a,#0x00
      0034F1 50 06            [24] 7787 	jnc	00197$
      0034F3 7E 04            [12] 7788 	mov	r6,#0x04
      0034F5 7F 00            [12] 7789 	mov	r7,#0x00
      0034F7 80 04            [24] 7790 	sjmp	00198$
      0034F9                       7791 00197$:
      0034F9 7E 00            [12] 7792 	mov	r6,#0x00
      0034FB 7F 00            [12] 7793 	mov	r7,#0x00
      0034FD                       7794 00198$:
      0034FD E5 00            [12] 7795 	mov	a,_bp
      0034FF 24 0F            [12] 7796 	add	a,#0x0f
      003501 F8               [12] 7797 	mov	r0,a
      003502 A6 06            [24] 7798 	mov	@r0,ar6
                                   7799 ;	FATFS\src\ff.c:1850: while (di) {						/* Strip trailing spaces and dots */
      003504 E5 00            [12] 7800 	mov	a,_bp
      003506 24 04            [12] 7801 	add	a,#0x04
      003508 F8               [12] 7802 	mov	r0,a
      003509 86 05            [24] 7803 	mov	ar5,@r0
      00350B 08               [12] 7804 	inc	r0
      00350C 86 07            [24] 7805 	mov	ar7,@r0
      00350E                       7806 00121$:
      00350E ED               [12] 7807 	mov	a,r5
      00350F 4F               [12] 7808 	orl	a,r7
      003510 60 41            [24] 7809 	jz	00242$
                                   7810 ;	FATFS\src\ff.c:1851: w = lfn[di-1];
      003512 ED               [12] 7811 	mov	a,r5
      003513 24 FF            [12] 7812 	add	a,#0xff
      003515 FB               [12] 7813 	mov	r3,a
      003516 EF               [12] 7814 	mov	a,r7
      003517 34 FF            [12] 7815 	addc	a,#0xff
      003519 FC               [12] 7816 	mov	r4,a
      00351A EB               [12] 7817 	mov	a,r3
      00351B 2B               [12] 7818 	add	a,r3
      00351C FB               [12] 7819 	mov	r3,a
      00351D EC               [12] 7820 	mov	a,r4
      00351E 33               [12] 7821 	rlc	a
      00351F FC               [12] 7822 	mov	r4,a
      003520 E5 00            [12] 7823 	mov	a,_bp
      003522 24 1B            [12] 7824 	add	a,#0x1b
      003524 F8               [12] 7825 	mov	r0,a
      003525 EB               [12] 7826 	mov	a,r3
      003526 26               [12] 7827 	add	a,@r0
      003527 FB               [12] 7828 	mov	r3,a
      003528 EC               [12] 7829 	mov	a,r4
      003529 08               [12] 7830 	inc	r0
      00352A 36               [12] 7831 	addc	a,@r0
      00352B FC               [12] 7832 	mov	r4,a
      00352C 08               [12] 7833 	inc	r0
      00352D 86 02            [24] 7834 	mov	ar2,@r0
      00352F 8B 82            [24] 7835 	mov	dpl,r3
      003531 8C 83            [24] 7836 	mov	dph,r4
      003533 8A F0            [24] 7837 	mov	b,r2
      003535 12 00 00         [24] 7838 	lcall	__gptrget
      003538 FB               [12] 7839 	mov	r3,a
      003539 A3               [24] 7840 	inc	dptr
      00353A 12 00 00         [24] 7841 	lcall	__gptrget
      00353D FC               [12] 7842 	mov	r4,a
                                   7843 ;	FATFS\src\ff.c:1852: if (w != ' ' && w != '.') break;
      00353E BB 20 05         [24] 7844 	cjne	r3,#0x20,00428$
      003541 BC 00 02         [24] 7845 	cjne	r4,#0x00,00428$
      003544 80 06            [24] 7846 	sjmp	00119$
      003546                       7847 00428$:
      003546 BB 2E 0A         [24] 7848 	cjne	r3,#0x2e,00242$
      003549 BC 00 07         [24] 7849 	cjne	r4,#0x00,00242$
      00354C                       7850 00119$:
                                   7851 ;	FATFS\src\ff.c:1853: di--;
      00354C 1D               [12] 7852 	dec	r5
      00354D BD FF 01         [24] 7853 	cjne	r5,#0xff,00431$
      003550 1F               [12] 7854 	dec	r7
      003551                       7855 00431$:
      003551 80 BB            [24] 7856 	sjmp	00121$
      003553                       7857 00242$:
      003553 E5 00            [12] 7858 	mov	a,_bp
      003555 24 17            [12] 7859 	add	a,#0x17
      003557 F8               [12] 7860 	mov	r0,a
      003558 A6 05            [24] 7861 	mov	@r0,ar5
      00355A 08               [12] 7862 	inc	r0
      00355B A6 07            [24] 7863 	mov	@r0,ar7
                                   7864 ;	FATFS\src\ff.c:1855: if (!di) return FR_INVALID_NAME;	/* Reject nul string */
      00355D ED               [12] 7865 	mov	a,r5
      00355E 4F               [12] 7866 	orl	a,r7
      00355F 70 06            [24] 7867 	jnz	00125$
      003561 75 82 06         [24] 7868 	mov	dpl,#0x06
      003564 02 3B 08         [24] 7869 	ljmp	00195$
      003567                       7870 00125$:
                                   7871 ;	FATFS\src\ff.c:1857: lfn[di] = 0;						/* LFN is created */
      003567 ED               [12] 7872 	mov	a,r5
      003568 2D               [12] 7873 	add	a,r5
      003569 FD               [12] 7874 	mov	r5,a
      00356A EF               [12] 7875 	mov	a,r7
      00356B 33               [12] 7876 	rlc	a
      00356C FF               [12] 7877 	mov	r7,a
      00356D E5 00            [12] 7878 	mov	a,_bp
      00356F 24 1B            [12] 7879 	add	a,#0x1b
      003571 F8               [12] 7880 	mov	r0,a
      003572 ED               [12] 7881 	mov	a,r5
      003573 26               [12] 7882 	add	a,@r0
      003574 FD               [12] 7883 	mov	r5,a
      003575 EF               [12] 7884 	mov	a,r7
      003576 08               [12] 7885 	inc	r0
      003577 36               [12] 7886 	addc	a,@r0
      003578 FF               [12] 7887 	mov	r7,a
      003579 08               [12] 7888 	inc	r0
      00357A 86 02            [24] 7889 	mov	ar2,@r0
      00357C 8D 82            [24] 7890 	mov	dpl,r5
      00357E 8F 83            [24] 7891 	mov	dph,r7
      003580 8A F0            [24] 7892 	mov	b,r2
      003582 E4               [12] 7893 	clr	a
      003583 12 00 00         [24] 7894 	lcall	__gptrput
      003586 A3               [24] 7895 	inc	dptr
      003587 12 00 00         [24] 7896 	lcall	__gptrput
                                   7897 ;	FATFS\src\ff.c:1860: mem_set(dp->fn, ' ', 11);
      00358A A8 00            [24] 7898 	mov	r0,_bp
      00358C 08               [12] 7899 	inc	r0
      00358D 74 16            [12] 7900 	mov	a,#0x16
      00358F 26               [12] 7901 	add	a,@r0
      003590 FA               [12] 7902 	mov	r2,a
      003591 E4               [12] 7903 	clr	a
      003592 08               [12] 7904 	inc	r0
      003593 36               [12] 7905 	addc	a,@r0
      003594 FD               [12] 7906 	mov	r5,a
      003595 08               [12] 7907 	inc	r0
      003596 86 07            [24] 7908 	mov	ar7,@r0
      003598 8A 82            [24] 7909 	mov	dpl,r2
      00359A 8D 83            [24] 7910 	mov	dph,r5
      00359C 8F F0            [24] 7911 	mov	b,r7
      00359E 12 00 00         [24] 7912 	lcall	__gptrget
      0035A1 FB               [12] 7913 	mov	r3,a
      0035A2 A3               [24] 7914 	inc	dptr
      0035A3 12 00 00         [24] 7915 	lcall	__gptrget
      0035A6 FC               [12] 7916 	mov	r4,a
      0035A7 A3               [24] 7917 	inc	dptr
      0035A8 12 00 00         [24] 7918 	lcall	__gptrget
      0035AB FE               [12] 7919 	mov	r6,a
      0035AC C0 07            [24] 7920 	push	ar7
      0035AE C0 05            [24] 7921 	push	ar5
      0035B0 C0 02            [24] 7922 	push	ar2
      0035B2 74 0B            [12] 7923 	mov	a,#0x0b
      0035B4 C0 E0            [24] 7924 	push	acc
      0035B6 E4               [12] 7925 	clr	a
      0035B7 C0 E0            [24] 7926 	push	acc
      0035B9 74 20            [12] 7927 	mov	a,#0x20
      0035BB C0 E0            [24] 7928 	push	acc
      0035BD E4               [12] 7929 	clr	a
      0035BE C0 E0            [24] 7930 	push	acc
      0035C0 8B 82            [24] 7931 	mov	dpl,r3
      0035C2 8C 83            [24] 7932 	mov	dph,r4
      0035C4 8E F0            [24] 7933 	mov	b,r6
      0035C6 78 32            [12] 7934 	mov	r0,#_mem_set
      0035C8 79 0C            [12] 7935 	mov	r1,#(_mem_set >> 8)
      0035CA 7A 00            [12] 7936 	mov	r2,#(_mem_set >> 16)
      0035CC 12 00 00         [24] 7937 	lcall	__sdcc_banked_call
      0035CF E5 81            [12] 7938 	mov	a,sp
      0035D1 24 FC            [12] 7939 	add	a,#0xfc
      0035D3 F5 81            [12] 7940 	mov	sp,a
      0035D5 D0 02            [24] 7941 	pop	ar2
      0035D7 D0 05            [24] 7942 	pop	ar5
      0035D9 D0 07            [24] 7943 	pop	ar7
                                   7944 ;	FATFS\src\ff.c:1861: for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
      0035DB E5 00            [12] 7945 	mov	a,_bp
      0035DD 24 0B            [12] 7946 	add	a,#0x0b
      0035DF F8               [12] 7947 	mov	r0,a
      0035E0 E4               [12] 7948 	clr	a
      0035E1 F6               [12] 7949 	mov	@r0,a
      0035E2 08               [12] 7950 	inc	r0
      0035E3 F6               [12] 7951 	mov	@r0,a
                                   7952 ;	FATFS\src\ff.c:1926: return FR_OK;
                                   7953 ;	FATFS\src\ff.c:1861: for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
      0035E4                       7954 00192$:
      0035E4 E5 00            [12] 7955 	mov	a,_bp
      0035E6 24 0B            [12] 7956 	add	a,#0x0b
      0035E8 F8               [12] 7957 	mov	r0,a
      0035E9 E6               [12] 7958 	mov	a,@r0
      0035EA 25 E0            [12] 7959 	add	a,acc
      0035EC FC               [12] 7960 	mov	r4,a
      0035ED 08               [12] 7961 	inc	r0
      0035EE E6               [12] 7962 	mov	a,@r0
      0035EF 33               [12] 7963 	rlc	a
      0035F0 FE               [12] 7964 	mov	r6,a
      0035F1 E5 00            [12] 7965 	mov	a,_bp
      0035F3 24 1B            [12] 7966 	add	a,#0x1b
      0035F5 F8               [12] 7967 	mov	r0,a
      0035F6 EC               [12] 7968 	mov	a,r4
      0035F7 26               [12] 7969 	add	a,@r0
      0035F8 FC               [12] 7970 	mov	r4,a
      0035F9 EE               [12] 7971 	mov	a,r6
      0035FA 08               [12] 7972 	inc	r0
      0035FB 36               [12] 7973 	addc	a,@r0
      0035FC FE               [12] 7974 	mov	r6,a
      0035FD 08               [12] 7975 	inc	r0
      0035FE 86 03            [24] 7976 	mov	ar3,@r0
      003600 8C 82            [24] 7977 	mov	dpl,r4
      003602 8E 83            [24] 7978 	mov	dph,r6
      003604 8B F0            [24] 7979 	mov	b,r3
      003606 12 00 00         [24] 7980 	lcall	__gptrget
      003609 FC               [12] 7981 	mov	r4,a
      00360A A3               [24] 7982 	inc	dptr
      00360B 12 00 00         [24] 7983 	lcall	__gptrget
      00360E FE               [12] 7984 	mov	r6,a
      00360F BC 20 05         [24] 7985 	cjne	r4,#0x20,00433$
      003612 BE 00 02         [24] 7986 	cjne	r6,#0x00,00433$
      003615 80 06            [24] 7987 	sjmp	00193$
      003617                       7988 00433$:
      003617 BC 2E 10         [24] 7989 	cjne	r4,#0x2e,00243$
      00361A BE 00 0D         [24] 7990 	cjne	r6,#0x00,00243$
      00361D                       7991 00193$:
      00361D E5 00            [12] 7992 	mov	a,_bp
      00361F 24 0B            [12] 7993 	add	a,#0x0b
      003621 F8               [12] 7994 	mov	r0,a
      003622 06               [12] 7995 	inc	@r0
      003623 B6 00 02         [24] 7996 	cjne	@r0,#0x00,00436$
      003626 08               [12] 7997 	inc	r0
      003627 06               [12] 7998 	inc	@r0
      003628                       7999 00436$:
      003628 80 BA            [24] 8000 	sjmp	00192$
      00362A                       8001 00243$:
      00362A E5 00            [12] 8002 	mov	a,_bp
      00362C 24 0B            [12] 8003 	add	a,#0x0b
      00362E F8               [12] 8004 	mov	r0,a
      00362F E5 00            [12] 8005 	mov	a,_bp
      003631 24 19            [12] 8006 	add	a,#0x19
      003633 F9               [12] 8007 	mov	r1,a
      003634 E6               [12] 8008 	mov	a,@r0
      003635 F7               [12] 8009 	mov	@r1,a
      003636 08               [12] 8010 	inc	r0
      003637 09               [12] 8011 	inc	r1
      003638 E6               [12] 8012 	mov	a,@r0
      003639 F7               [12] 8013 	mov	@r1,a
                                   8014 ;	FATFS\src\ff.c:1862: if (si) cf |= NS_LOSS | NS_LFN;
      00363A E5 00            [12] 8015 	mov	a,_bp
      00363C 24 0B            [12] 8016 	add	a,#0x0b
      00363E F8               [12] 8017 	mov	r0,a
      00363F E6               [12] 8018 	mov	a,@r0
      003640 08               [12] 8019 	inc	r0
      003641 46               [12] 8020 	orl	a,@r0
      003642 60 09            [24] 8021 	jz	00219$
      003644 E5 00            [12] 8022 	mov	a,_bp
      003646 24 0F            [12] 8023 	add	a,#0x0f
      003648 F8               [12] 8024 	mov	r0,a
      003649 E6               [12] 8025 	mov	a,@r0
      00364A 44 03            [12] 8026 	orl	a,#0x03
      00364C F6               [12] 8027 	mov	@r0,a
                                   8028 ;	FATFS\src\ff.c:1863: while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
      00364D                       8029 00219$:
      00364D E5 00            [12] 8030 	mov	a,_bp
      00364F 24 17            [12] 8031 	add	a,#0x17
      003651 F8               [12] 8032 	mov	r0,a
      003652 86 06            [24] 8033 	mov	ar6,@r0
      003654 08               [12] 8034 	inc	r0
      003655 86 04            [24] 8035 	mov	ar4,@r0
      003657                       8036 00130$:
      003657 EE               [12] 8037 	mov	a,r6
      003658 4C               [12] 8038 	orl	a,r4
      003659 60 4D            [24] 8039 	jz	00244$
      00365B C0 02            [24] 8040 	push	ar2
      00365D C0 05            [24] 8041 	push	ar5
      00365F C0 07            [24] 8042 	push	ar7
      003661 EE               [12] 8043 	mov	a,r6
      003662 24 FF            [12] 8044 	add	a,#0xff
      003664 FB               [12] 8045 	mov	r3,a
      003665 EC               [12] 8046 	mov	a,r4
      003666 34 FF            [12] 8047 	addc	a,#0xff
      003668 FF               [12] 8048 	mov	r7,a
      003669 EB               [12] 8049 	mov	a,r3
      00366A 2B               [12] 8050 	add	a,r3
      00366B FB               [12] 8051 	mov	r3,a
      00366C EF               [12] 8052 	mov	a,r7
      00366D 33               [12] 8053 	rlc	a
      00366E FF               [12] 8054 	mov	r7,a
      00366F E5 00            [12] 8055 	mov	a,_bp
      003671 24 1B            [12] 8056 	add	a,#0x1b
      003673 F8               [12] 8057 	mov	r0,a
      003674 EB               [12] 8058 	mov	a,r3
      003675 26               [12] 8059 	add	a,@r0
      003676 FB               [12] 8060 	mov	r3,a
      003677 EF               [12] 8061 	mov	a,r7
      003678 08               [12] 8062 	inc	r0
      003679 36               [12] 8063 	addc	a,@r0
      00367A FF               [12] 8064 	mov	r7,a
      00367B 08               [12] 8065 	inc	r0
      00367C 86 05            [24] 8066 	mov	ar5,@r0
      00367E 8B 82            [24] 8067 	mov	dpl,r3
      003680 8F 83            [24] 8068 	mov	dph,r7
      003682 8D F0            [24] 8069 	mov	b,r5
      003684 12 00 00         [24] 8070 	lcall	__gptrget
      003687 FB               [12] 8071 	mov	r3,a
      003688 A3               [24] 8072 	inc	dptr
      003689 12 00 00         [24] 8073 	lcall	__gptrget
      00368C FF               [12] 8074 	mov	r7,a
      00368D BB 2E 0B         [24] 8075 	cjne	r3,#0x2e,00439$
      003690 BF 00 08         [24] 8076 	cjne	r7,#0x00,00439$
      003693 D0 07            [24] 8077 	pop	ar7
      003695 D0 05            [24] 8078 	pop	ar5
      003697 D0 02            [24] 8079 	pop	ar2
      003699 80 0D            [24] 8080 	sjmp	00244$
      00369B                       8081 00439$:
      00369B D0 07            [24] 8082 	pop	ar7
      00369D D0 05            [24] 8083 	pop	ar5
      00369F D0 02            [24] 8084 	pop	ar2
      0036A1 1E               [12] 8085 	dec	r6
      0036A2 BE FF 01         [24] 8086 	cjne	r6,#0xff,00440$
      0036A5 1C               [12] 8087 	dec	r4
      0036A6                       8088 00440$:
      0036A6 80 AF            [24] 8089 	sjmp	00130$
      0036A8                       8090 00244$:
      0036A8 E5 00            [12] 8091 	mov	a,_bp
      0036AA 24 0B            [12] 8092 	add	a,#0x0b
      0036AC F8               [12] 8093 	mov	r0,a
      0036AD A6 06            [24] 8094 	mov	@r0,ar6
      0036AF 08               [12] 8095 	inc	r0
      0036B0 A6 04            [24] 8096 	mov	@r0,ar4
                                   8097 ;	FATFS\src\ff.c:1865: b = i = 0; ni = 8;
      0036B2 E5 00            [12] 8098 	mov	a,_bp
      0036B4 24 15            [12] 8099 	add	a,#0x15
      0036B6 F8               [12] 8100 	mov	r0,a
      0036B7 E4               [12] 8101 	clr	a
      0036B8 F6               [12] 8102 	mov	@r0,a
      0036B9 08               [12] 8103 	inc	r0
      0036BA F6               [12] 8104 	mov	@r0,a
      0036BB 7C 00            [12] 8105 	mov	r4,#0x00
      0036BD E5 00            [12] 8106 	mov	a,_bp
      0036BF 24 1E            [12] 8107 	add	a,#0x1e
      0036C1 F8               [12] 8108 	mov	r0,a
      0036C2 76 08            [12] 8109 	mov	@r0,#0x08
      0036C4 08               [12] 8110 	inc	r0
      0036C5 76 00            [12] 8111 	mov	@r0,#0x00
      0036C7                       8112 00194$:
                                   8113 ;	FATFS\src\ff.c:1867: w = lfn[si++];					/* Get an LFN character */
      0036C7 C0 02            [24] 8114 	push	ar2
      0036C9 C0 05            [24] 8115 	push	ar5
      0036CB C0 07            [24] 8116 	push	ar7
      0036CD E5 00            [12] 8117 	mov	a,_bp
      0036CF 24 19            [12] 8118 	add	a,#0x19
      0036D1 F8               [12] 8119 	mov	r0,a
      0036D2 86 05            [24] 8120 	mov	ar5,@r0
      0036D4 08               [12] 8121 	inc	r0
      0036D5 86 07            [24] 8122 	mov	ar7,@r0
      0036D7 E5 00            [12] 8123 	mov	a,_bp
      0036D9 24 19            [12] 8124 	add	a,#0x19
      0036DB F8               [12] 8125 	mov	r0,a
      0036DC 06               [12] 8126 	inc	@r0
      0036DD B6 00 02         [24] 8127 	cjne	@r0,#0x00,00441$
      0036E0 08               [12] 8128 	inc	r0
      0036E1 06               [12] 8129 	inc	@r0
      0036E2                       8130 00441$:
      0036E2 ED               [12] 8131 	mov	a,r5
      0036E3 2D               [12] 8132 	add	a,r5
      0036E4 FD               [12] 8133 	mov	r5,a
      0036E5 EF               [12] 8134 	mov	a,r7
      0036E6 33               [12] 8135 	rlc	a
      0036E7 FF               [12] 8136 	mov	r7,a
      0036E8 E5 00            [12] 8137 	mov	a,_bp
      0036EA 24 1B            [12] 8138 	add	a,#0x1b
      0036EC F8               [12] 8139 	mov	r0,a
      0036ED ED               [12] 8140 	mov	a,r5
      0036EE 26               [12] 8141 	add	a,@r0
      0036EF FD               [12] 8142 	mov	r5,a
      0036F0 EF               [12] 8143 	mov	a,r7
      0036F1 08               [12] 8144 	inc	r0
      0036F2 36               [12] 8145 	addc	a,@r0
      0036F3 FF               [12] 8146 	mov	r7,a
      0036F4 08               [12] 8147 	inc	r0
      0036F5 86 02            [24] 8148 	mov	ar2,@r0
      0036F7 8D 82            [24] 8149 	mov	dpl,r5
      0036F9 8F 83            [24] 8150 	mov	dph,r7
      0036FB 8A F0            [24] 8151 	mov	b,r2
      0036FD E5 00            [12] 8152 	mov	a,_bp
      0036FF 24 0D            [12] 8153 	add	a,#0x0d
      003701 F8               [12] 8154 	mov	r0,a
      003702 12 00 00         [24] 8155 	lcall	__gptrget
      003705 F6               [12] 8156 	mov	@r0,a
      003706 A3               [24] 8157 	inc	dptr
      003707 12 00 00         [24] 8158 	lcall	__gptrget
      00370A 08               [12] 8159 	inc	r0
      00370B F6               [12] 8160 	mov	@r0,a
                                   8161 ;	FATFS\src\ff.c:1868: if (!w) break;					/* Break on end of the LFN */
      00370C D0 07            [24] 8162 	pop	ar7
      00370E D0 05            [24] 8163 	pop	ar5
      003710 D0 02            [24] 8164 	pop	ar2
      003712 E5 00            [12] 8165 	mov	a,_bp
      003714 24 0D            [12] 8166 	add	a,#0x0d
      003716 F8               [12] 8167 	mov	r0,a
      003717 E6               [12] 8168 	mov	a,@r0
      003718 08               [12] 8169 	inc	r0
      003719 46               [12] 8170 	orl	a,@r0
      00371A 70 03            [24] 8171 	jnz	00442$
      00371C 02 39 C8         [24] 8172 	ljmp	00170$
      00371F                       8173 00442$:
                                   8174 ;	FATFS\src\ff.c:1869: if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
      00371F E5 00            [12] 8175 	mov	a,_bp
      003721 24 0D            [12] 8176 	add	a,#0x0d
      003723 F8               [12] 8177 	mov	r0,a
      003724 B6 20 06         [24] 8178 	cjne	@r0,#0x20,00443$
      003727 08               [12] 8179 	inc	r0
      003728 B6 00 02         [24] 8180 	cjne	@r0,#0x00,00443$
      00372B 80 26            [24] 8181 	sjmp	00135$
      00372D                       8182 00443$:
      00372D E5 00            [12] 8183 	mov	a,_bp
      00372F 24 0D            [12] 8184 	add	a,#0x0d
      003731 F8               [12] 8185 	mov	r0,a
      003732 B6 2E 2A         [24] 8186 	cjne	@r0,#0x2e,00136$
      003735 08               [12] 8187 	inc	r0
      003736 B6 00 26         [24] 8188 	cjne	@r0,#0x00,00136$
      003739 E5 00            [12] 8189 	mov	a,_bp
      00373B 24 19            [12] 8190 	add	a,#0x19
      00373D F8               [12] 8191 	mov	r0,a
      00373E E5 00            [12] 8192 	mov	a,_bp
      003740 24 0B            [12] 8193 	add	a,#0x0b
      003742 F9               [12] 8194 	mov	r1,a
      003743 86 F0            [24] 8195 	mov	b,@r0
      003745 E7               [12] 8196 	mov	a,@r1
      003746 B5 F0 0A         [24] 8197 	cjne	a,b,00446$
      003749 08               [12] 8198 	inc	r0
      00374A 86 F0            [24] 8199 	mov	b,@r0
      00374C 09               [12] 8200 	inc	r1
      00374D E7               [12] 8201 	mov	a,@r1
      00374E B5 F0 02         [24] 8202 	cjne	a,b,00446$
      003751 80 0C            [24] 8203 	sjmp	00136$
      003753                       8204 00446$:
      003753                       8205 00135$:
                                   8206 ;	FATFS\src\ff.c:1870: cf |= NS_LOSS | NS_LFN; continue;
      003753 E5 00            [12] 8207 	mov	a,_bp
      003755 24 0F            [12] 8208 	add	a,#0x0f
      003757 F8               [12] 8209 	mov	r0,a
      003758 E6               [12] 8210 	mov	a,@r0
      003759 44 03            [12] 8211 	orl	a,#0x03
      00375B F6               [12] 8212 	mov	@r0,a
      00375C 02 36 C7         [24] 8213 	ljmp	00194$
      00375F                       8214 00136$:
                                   8215 ;	FATFS\src\ff.c:1873: if (i >= ni || si == di) {		/* Extension or end of SFN */
      00375F E5 00            [12] 8216 	mov	a,_bp
      003761 24 15            [12] 8217 	add	a,#0x15
      003763 F8               [12] 8218 	mov	r0,a
      003764 E5 00            [12] 8219 	mov	a,_bp
      003766 24 1E            [12] 8220 	add	a,#0x1e
      003768 F9               [12] 8221 	mov	r1,a
      003769 C3               [12] 8222 	clr	c
      00376A E6               [12] 8223 	mov	a,@r0
      00376B 97               [12] 8224 	subb	a,@r1
      00376C 08               [12] 8225 	inc	r0
      00376D E6               [12] 8226 	mov	a,@r0
      00376E 09               [12] 8227 	inc	r1
      00376F 97               [12] 8228 	subb	a,@r1
      003770 50 1D            [24] 8229 	jnc	00145$
      003772 E5 00            [12] 8230 	mov	a,_bp
      003774 24 19            [12] 8231 	add	a,#0x19
      003776 F8               [12] 8232 	mov	r0,a
      003777 E5 00            [12] 8233 	mov	a,_bp
      003779 24 0B            [12] 8234 	add	a,#0x0b
      00377B F9               [12] 8235 	mov	r1,a
      00377C 86 F0            [24] 8236 	mov	b,@r0
      00377E E7               [12] 8237 	mov	a,@r1
      00377F B5 F0 0A         [24] 8238 	cjne	a,b,00448$
      003782 08               [12] 8239 	inc	r0
      003783 86 F0            [24] 8240 	mov	b,@r0
      003785 09               [12] 8241 	inc	r1
      003786 E7               [12] 8242 	mov	a,@r1
      003787 B5 F0 02         [24] 8243 	cjne	a,b,00448$
      00378A 80 03            [24] 8244 	sjmp	00449$
      00378C                       8245 00448$:
      00378C 02 38 1A         [24] 8246 	ljmp	00146$
      00378F                       8247 00449$:
      00378F                       8248 00145$:
                                   8249 ;	FATFS\src\ff.c:1874: if (ni == 11) {				/* Long extension */
      00378F E5 00            [12] 8250 	mov	a,_bp
      003791 24 1E            [12] 8251 	add	a,#0x1e
      003793 F8               [12] 8252 	mov	r0,a
      003794 B6 0B 10         [24] 8253 	cjne	@r0,#0x0b,00140$
      003797 08               [12] 8254 	inc	r0
      003798 B6 00 0C         [24] 8255 	cjne	@r0,#0x00,00140$
                                   8256 ;	FATFS\src\ff.c:1875: cf |= NS_LOSS | NS_LFN; break;
      00379B E5 00            [12] 8257 	mov	a,_bp
      00379D 24 0F            [12] 8258 	add	a,#0x0f
      00379F F8               [12] 8259 	mov	r0,a
      0037A0 E6               [12] 8260 	mov	a,@r0
      0037A1 44 03            [12] 8261 	orl	a,#0x03
      0037A3 F6               [12] 8262 	mov	@r0,a
      0037A4 02 39 C8         [24] 8263 	ljmp	00170$
      0037A7                       8264 00140$:
                                   8265 ;	FATFS\src\ff.c:1877: if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
      0037A7 E5 00            [12] 8266 	mov	a,_bp
      0037A9 24 19            [12] 8267 	add	a,#0x19
      0037AB F8               [12] 8268 	mov	r0,a
      0037AC E5 00            [12] 8269 	mov	a,_bp
      0037AE 24 0B            [12] 8270 	add	a,#0x0b
      0037B0 F9               [12] 8271 	mov	r1,a
      0037B1 86 F0            [24] 8272 	mov	b,@r0
      0037B3 E7               [12] 8273 	mov	a,@r1
      0037B4 B5 F0 0A         [24] 8274 	cjne	a,b,00452$
      0037B7 08               [12] 8275 	inc	r0
      0037B8 86 F0            [24] 8276 	mov	b,@r0
      0037BA 09               [12] 8277 	inc	r1
      0037BB E7               [12] 8278 	mov	a,@r1
      0037BC B5 F0 02         [24] 8279 	cjne	a,b,00452$
      0037BF 80 09            [24] 8280 	sjmp	00142$
      0037C1                       8281 00452$:
      0037C1 E5 00            [12] 8282 	mov	a,_bp
      0037C3 24 0F            [12] 8283 	add	a,#0x0f
      0037C5 F8               [12] 8284 	mov	r0,a
      0037C6 E6               [12] 8285 	mov	a,@r0
      0037C7 44 03            [12] 8286 	orl	a,#0x03
      0037C9 F6               [12] 8287 	mov	@r0,a
      0037CA                       8288 00142$:
                                   8289 ;	FATFS\src\ff.c:1878: if (si > di) break;			/* No extension */
      0037CA E5 00            [12] 8290 	mov	a,_bp
      0037CC 24 19            [12] 8291 	add	a,#0x19
      0037CE F8               [12] 8292 	mov	r0,a
      0037CF E5 00            [12] 8293 	mov	a,_bp
      0037D1 24 0B            [12] 8294 	add	a,#0x0b
      0037D3 F9               [12] 8295 	mov	r1,a
      0037D4 C3               [12] 8296 	clr	c
      0037D5 E7               [12] 8297 	mov	a,@r1
      0037D6 96               [12] 8298 	subb	a,@r0
      0037D7 09               [12] 8299 	inc	r1
      0037D8 E7               [12] 8300 	mov	a,@r1
      0037D9 08               [12] 8301 	inc	r0
      0037DA 96               [12] 8302 	subb	a,@r0
      0037DB 50 03            [24] 8303 	jnc	00453$
      0037DD 02 39 C8         [24] 8304 	ljmp	00170$
      0037E0                       8305 00453$:
                                   8306 ;	FATFS\src\ff.c:1879: si = di; i = 8; ni = 11;	/* Enter extension section */
      0037E0 C0 02            [24] 8307 	push	ar2
      0037E2 C0 05            [24] 8308 	push	ar5
      0037E4 C0 07            [24] 8309 	push	ar7
      0037E6 E5 00            [12] 8310 	mov	a,_bp
      0037E8 24 0B            [12] 8311 	add	a,#0x0b
      0037EA F8               [12] 8312 	mov	r0,a
      0037EB E5 00            [12] 8313 	mov	a,_bp
      0037ED 24 19            [12] 8314 	add	a,#0x19
      0037EF F9               [12] 8315 	mov	r1,a
      0037F0 E6               [12] 8316 	mov	a,@r0
      0037F1 F7               [12] 8317 	mov	@r1,a
      0037F2 08               [12] 8318 	inc	r0
      0037F3 09               [12] 8319 	inc	r1
      0037F4 E6               [12] 8320 	mov	a,@r0
      0037F5 F7               [12] 8321 	mov	@r1,a
      0037F6 E5 00            [12] 8322 	mov	a,_bp
      0037F8 24 15            [12] 8323 	add	a,#0x15
      0037FA F8               [12] 8324 	mov	r0,a
      0037FB 76 08            [12] 8325 	mov	@r0,#0x08
      0037FD 08               [12] 8326 	inc	r0
      0037FE 76 00            [12] 8327 	mov	@r0,#0x00
      003800 E5 00            [12] 8328 	mov	a,_bp
      003802 24 1E            [12] 8329 	add	a,#0x1e
      003804 F8               [12] 8330 	mov	r0,a
      003805 76 0B            [12] 8331 	mov	@r0,#0x0b
      003807 08               [12] 8332 	inc	r0
      003808 76 00            [12] 8333 	mov	@r0,#0x00
                                   8334 ;	FATFS\src\ff.c:1880: b <<= 2; continue;
      00380A 8C 07            [24] 8335 	mov	ar7,r4
      00380C EF               [12] 8336 	mov	a,r7
      00380D 2F               [12] 8337 	add	a,r7
      00380E 25 E0            [12] 8338 	add	a,acc
      003810 FC               [12] 8339 	mov	r4,a
      003811 D0 07            [24] 8340 	pop	ar7
      003813 D0 05            [24] 8341 	pop	ar5
      003815 D0 02            [24] 8342 	pop	ar2
      003817 02 36 C7         [24] 8343 	ljmp	00194$
      00381A                       8344 00146$:
                                   8345 ;	FATFS\src\ff.c:1883: if (w >= 0x80) {				/* Non ASCII character */
      00381A E5 00            [12] 8346 	mov	a,_bp
      00381C 24 0D            [12] 8347 	add	a,#0x0d
      00381E F8               [12] 8348 	mov	r0,a
      00381F C3               [12] 8349 	clr	c
      003820 E6               [12] 8350 	mov	a,@r0
      003821 94 80            [12] 8351 	subb	a,#0x80
      003823 08               [12] 8352 	inc	r0
      003824 E6               [12] 8353 	mov	a,@r0
      003825 94 00            [12] 8354 	subb	a,#0x00
      003827 50 03            [24] 8355 	jnc	00454$
      003829 02 38 BB         [24] 8356 	ljmp	00166$
      00382C                       8357 00454$:
                                   8358 ;	FATFS\src\ff.c:1885: w = ff_convert(w, 0);		/* Unicode -> OEM code */
      00382C C0 07            [24] 8359 	push	ar7
      00382E C0 05            [24] 8360 	push	ar5
      003830 C0 04            [24] 8361 	push	ar4
      003832 C0 02            [24] 8362 	push	ar2
      003834 E4               [12] 8363 	clr	a
      003835 C0 E0            [24] 8364 	push	acc
      003837 C0 E0            [24] 8365 	push	acc
      003839 E5 00            [12] 8366 	mov	a,_bp
      00383B 24 0D            [12] 8367 	add	a,#0x0d
      00383D F8               [12] 8368 	mov	r0,a
      00383E 86 82            [24] 8369 	mov	dpl,@r0
      003840 08               [12] 8370 	inc	r0
      003841 86 83            [24] 8371 	mov	dph,@r0
      003843 78 D4            [12] 8372 	mov	r0,#_ff_convert
      003845 79 05            [12] 8373 	mov	r1,#(_ff_convert >> 8)
      003847 7A 00            [12] 8374 	mov	r2,#(_ff_convert >> 16)
      003849 12 00 00         [24] 8375 	lcall	__sdcc_banked_call
      00384C C8               [12] 8376 	xch	a,r0
      00384D E5 00            [12] 8377 	mov	a,_bp
      00384F 24 0D            [12] 8378 	add	a,#0x0d
      003851 C8               [12] 8379 	xch	a,r0
      003852 A6 82            [24] 8380 	mov	@r0,dpl
      003854 08               [12] 8381 	inc	r0
      003855 A6 83            [24] 8382 	mov	@r0,dph
      003857 15 81            [12] 8383 	dec	sp
      003859 15 81            [12] 8384 	dec	sp
      00385B D0 02            [24] 8385 	pop	ar2
      00385D D0 04            [24] 8386 	pop	ar4
      00385F D0 05            [24] 8387 	pop	ar5
      003861 D0 07            [24] 8388 	pop	ar7
                                   8389 ;	FATFS\src\ff.c:1886: if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
      003863 E5 00            [12] 8390 	mov	a,_bp
      003865 24 0D            [12] 8391 	add	a,#0x0d
      003867 F8               [12] 8392 	mov	r0,a
      003868 E6               [12] 8393 	mov	a,@r0
      003869 08               [12] 8394 	inc	r0
      00386A 46               [12] 8395 	orl	a,@r0
      00386B 60 31            [24] 8396 	jz	00149$
      00386D C0 02            [24] 8397 	push	ar2
      00386F C0 05            [24] 8398 	push	ar5
      003871 C0 07            [24] 8399 	push	ar7
      003873 E5 00            [12] 8400 	mov	a,_bp
      003875 24 0D            [12] 8401 	add	a,#0x0d
      003877 F8               [12] 8402 	mov	r0,a
      003878 E6               [12] 8403 	mov	a,@r0
      003879 24 80            [12] 8404 	add	a,#0x80
      00387B FD               [12] 8405 	mov	r5,a
      00387C 08               [12] 8406 	inc	r0
      00387D E6               [12] 8407 	mov	a,@r0
      00387E 34 FF            [12] 8408 	addc	a,#0xff
      003880 FF               [12] 8409 	mov	r7,a
      003881 ED               [12] 8410 	mov	a,r5
      003882 24 8A            [12] 8411 	add	a,#_ExCvt
      003884 F5 82            [12] 8412 	mov	dpl,a
      003886 EF               [12] 8413 	mov	a,r7
      003887 34 84            [12] 8414 	addc	a,#(_ExCvt >> 8)
      003889 F5 83            [12] 8415 	mov	dph,a
      00388B E4               [12] 8416 	clr	a
      00388C 93               [24] 8417 	movc	a,@a+dptr
      00388D FF               [12] 8418 	mov	r7,a
      00388E E5 00            [12] 8419 	mov	a,_bp
      003890 24 0D            [12] 8420 	add	a,#0x0d
      003892 F8               [12] 8421 	mov	r0,a
      003893 A6 07            [24] 8422 	mov	@r0,ar7
      003895 08               [12] 8423 	inc	r0
      003896 76 00            [12] 8424 	mov	@r0,#0x00
                                   8425 ;	FATFS\src\ff.c:1926: return FR_OK;
      003898 D0 07            [24] 8426 	pop	ar7
      00389A D0 05            [24] 8427 	pop	ar5
      00389C D0 02            [24] 8428 	pop	ar2
                                   8429 ;	FATFS\src\ff.c:1886: if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
      00389E                       8430 00149$:
                                   8431 ;	FATFS\src\ff.c:1890: cf |= NS_LFN;				/* Force create LFN entry */
      00389E C0 02            [24] 8432 	push	ar2
      0038A0 C0 05            [24] 8433 	push	ar5
      0038A2 C0 07            [24] 8434 	push	ar7
      0038A4 E5 00            [12] 8435 	mov	a,_bp
      0038A6 24 0F            [12] 8436 	add	a,#0x0f
      0038A8 F8               [12] 8437 	mov	r0,a
      0038A9 86 05            [24] 8438 	mov	ar5,@r0
      0038AB 43 05 02         [24] 8439 	orl	ar5,#0x02
      0038AE E5 00            [12] 8440 	mov	a,_bp
      0038B0 24 0F            [12] 8441 	add	a,#0x0f
      0038B2 F8               [12] 8442 	mov	r0,a
      0038B3 A6 05            [24] 8443 	mov	@r0,ar5
                                   8444 ;	FATFS\src\ff.c:1926: return FR_OK;
      0038B5 D0 07            [24] 8445 	pop	ar7
      0038B7 D0 05            [24] 8446 	pop	ar5
      0038B9 D0 02            [24] 8447 	pop	ar2
                                   8448 ;	FATFS\src\ff.c:1897: dp->fn[i++] = (BYTE)(w >> 8);
      0038BB                       8449 00166$:
                                   8450 ;	FATFS\src\ff.c:1899: if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
      0038BB E5 00            [12] 8451 	mov	a,_bp
      0038BD 24 0D            [12] 8452 	add	a,#0x0d
      0038BF F8               [12] 8453 	mov	r0,a
      0038C0 E6               [12] 8454 	mov	a,@r0
      0038C1 08               [12] 8455 	inc	r0
      0038C2 46               [12] 8456 	orl	a,@r0
      0038C3 60 37            [24] 8457 	jz	00161$
      0038C5 C0 07            [24] 8458 	push	ar7
      0038C7 C0 05            [24] 8459 	push	ar5
      0038C9 C0 04            [24] 8460 	push	ar4
      0038CB C0 02            [24] 8461 	push	ar2
      0038CD E5 00            [12] 8462 	mov	a,_bp
      0038CF 24 0D            [12] 8463 	add	a,#0x0d
      0038D1 F8               [12] 8464 	mov	r0,a
      0038D2 E6               [12] 8465 	mov	a,@r0
      0038D3 C0 E0            [24] 8466 	push	acc
      0038D5 08               [12] 8467 	inc	r0
      0038D6 E6               [12] 8468 	mov	a,@r0
      0038D7 C0 E0            [24] 8469 	push	acc
      0038D9 90 85 20         [24] 8470 	mov	dptr,#___str_1
      0038DC 75 F0 80         [24] 8471 	mov	b,#0x80
      0038DF 78 37            [12] 8472 	mov	r0,#_chk_chr
      0038E1 79 0D            [12] 8473 	mov	r1,#(_chk_chr >> 8)
      0038E3 7A 00            [12] 8474 	mov	r2,#(_chk_chr >> 16)
      0038E5 12 00 00         [24] 8475 	lcall	__sdcc_banked_call
      0038E8 AB 82            [24] 8476 	mov	r3,dpl
      0038EA AE 83            [24] 8477 	mov	r6,dph
      0038EC 15 81            [12] 8478 	dec	sp
      0038EE 15 81            [12] 8479 	dec	sp
      0038F0 D0 02            [24] 8480 	pop	ar2
      0038F2 D0 04            [24] 8481 	pop	ar4
      0038F4 D0 05            [24] 8482 	pop	ar5
      0038F6 D0 07            [24] 8483 	pop	ar7
      0038F8 EB               [12] 8484 	mov	a,r3
      0038F9 4E               [12] 8485 	orl	a,r6
      0038FA 60 15            [24] 8486 	jz	00162$
      0038FC                       8487 00161$:
                                   8488 ;	FATFS\src\ff.c:1900: w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
      0038FC E5 00            [12] 8489 	mov	a,_bp
      0038FE 24 0D            [12] 8490 	add	a,#0x0d
      003900 F8               [12] 8491 	mov	r0,a
      003901 76 5F            [12] 8492 	mov	@r0,#0x5f
      003903 08               [12] 8493 	inc	r0
      003904 76 00            [12] 8494 	mov	@r0,#0x00
      003906 E5 00            [12] 8495 	mov	a,_bp
      003908 24 0F            [12] 8496 	add	a,#0x0f
      00390A F8               [12] 8497 	mov	r0,a
      00390B E6               [12] 8498 	mov	a,@r0
      00390C 44 03            [12] 8499 	orl	a,#0x03
      00390E F6               [12] 8500 	mov	@r0,a
      00390F 80 5C            [24] 8501 	sjmp	00167$
      003911                       8502 00162$:
                                   8503 ;	FATFS\src\ff.c:1902: if (IsUpper(w)) {		/* ASCII large capital */
      003911 E5 00            [12] 8504 	mov	a,_bp
      003913 24 0D            [12] 8505 	add	a,#0x0d
      003915 F8               [12] 8506 	mov	r0,a
      003916 C3               [12] 8507 	clr	c
      003917 E6               [12] 8508 	mov	a,@r0
      003918 94 41            [12] 8509 	subb	a,#0x41
      00391A 08               [12] 8510 	inc	r0
      00391B E6               [12] 8511 	mov	a,@r0
      00391C 94 00            [12] 8512 	subb	a,#0x00
      00391E 40 19            [24] 8513 	jc	00158$
      003920 E5 00            [12] 8514 	mov	a,_bp
      003922 24 0D            [12] 8515 	add	a,#0x0d
      003924 F8               [12] 8516 	mov	r0,a
      003925 C3               [12] 8517 	clr	c
      003926 74 5A            [12] 8518 	mov	a,#0x5a
      003928 96               [12] 8519 	subb	a,@r0
      003929 E4               [12] 8520 	clr	a
      00392A 08               [12] 8521 	inc	r0
      00392B 96               [12] 8522 	subb	a,@r0
      00392C 40 0B            [24] 8523 	jc	00158$
                                   8524 ;	FATFS\src\ff.c:1903: b |= 2;
      00392E 8C 03            [24] 8525 	mov	ar3,r4
      003930 7E 00            [12] 8526 	mov	r6,#0x00
      003932 43 03 02         [24] 8527 	orl	ar3,#0x02
      003935 8B 04            [24] 8528 	mov	ar4,r3
      003937 80 34            [24] 8529 	sjmp	00167$
      003939                       8530 00158$:
                                   8531 ;	FATFS\src\ff.c:1905: if (IsLower(w)) {	/* ASCII small capital */
      003939 E5 00            [12] 8532 	mov	a,_bp
      00393B 24 0D            [12] 8533 	add	a,#0x0d
      00393D F8               [12] 8534 	mov	r0,a
      00393E C3               [12] 8535 	clr	c
      00393F E6               [12] 8536 	mov	a,@r0
      003940 94 61            [12] 8537 	subb	a,#0x61
      003942 08               [12] 8538 	inc	r0
      003943 E6               [12] 8539 	mov	a,@r0
      003944 94 00            [12] 8540 	subb	a,#0x00
      003946 40 25            [24] 8541 	jc	00167$
      003948 E5 00            [12] 8542 	mov	a,_bp
      00394A 24 0D            [12] 8543 	add	a,#0x0d
      00394C F8               [12] 8544 	mov	r0,a
      00394D C3               [12] 8545 	clr	c
      00394E 74 7A            [12] 8546 	mov	a,#0x7a
      003950 96               [12] 8547 	subb	a,@r0
      003951 E4               [12] 8548 	clr	a
      003952 08               [12] 8549 	inc	r0
      003953 96               [12] 8550 	subb	a,@r0
      003954 40 17            [24] 8551 	jc	00167$
                                   8552 ;	FATFS\src\ff.c:1906: b |= 1; w -= 0x20;
      003956 8C 03            [24] 8553 	mov	ar3,r4
      003958 7E 00            [12] 8554 	mov	r6,#0x00
      00395A 43 03 01         [24] 8555 	orl	ar3,#0x01
      00395D 8B 04            [24] 8556 	mov	ar4,r3
      00395F E5 00            [12] 8557 	mov	a,_bp
      003961 24 0D            [12] 8558 	add	a,#0x0d
      003963 F8               [12] 8559 	mov	r0,a
      003964 E6               [12] 8560 	mov	a,@r0
      003965 24 E0            [12] 8561 	add	a,#0xe0
      003967 F6               [12] 8562 	mov	@r0,a
      003968 08               [12] 8563 	inc	r0
      003969 E6               [12] 8564 	mov	a,@r0
      00396A 34 FF            [12] 8565 	addc	a,#0xff
      00396C F6               [12] 8566 	mov	@r0,a
      00396D                       8567 00167$:
                                   8568 ;	FATFS\src\ff.c:1911: dp->fn[i++] = (BYTE)w;
      00396D C0 04            [24] 8569 	push	ar4
      00396F 8A 82            [24] 8570 	mov	dpl,r2
      003971 8D 83            [24] 8571 	mov	dph,r5
      003973 8F F0            [24] 8572 	mov	b,r7
      003975 E5 00            [12] 8573 	mov	a,_bp
      003977 24 04            [12] 8574 	add	a,#0x04
      003979 F8               [12] 8575 	mov	r0,a
      00397A 12 00 00         [24] 8576 	lcall	__gptrget
      00397D F6               [12] 8577 	mov	@r0,a
      00397E A3               [24] 8578 	inc	dptr
      00397F 12 00 00         [24] 8579 	lcall	__gptrget
      003982 08               [12] 8580 	inc	r0
      003983 F6               [12] 8581 	mov	@r0,a
      003984 A3               [24] 8582 	inc	dptr
      003985 12 00 00         [24] 8583 	lcall	__gptrget
      003988 08               [12] 8584 	inc	r0
      003989 F6               [12] 8585 	mov	@r0,a
      00398A E5 00            [12] 8586 	mov	a,_bp
      00398C 24 15            [12] 8587 	add	a,#0x15
      00398E F8               [12] 8588 	mov	r0,a
      00398F 86 04            [24] 8589 	mov	ar4,@r0
      003991 08               [12] 8590 	inc	r0
      003992 86 06            [24] 8591 	mov	ar6,@r0
      003994 E5 00            [12] 8592 	mov	a,_bp
      003996 24 15            [12] 8593 	add	a,#0x15
      003998 F8               [12] 8594 	mov	r0,a
      003999 06               [12] 8595 	inc	@r0
      00399A B6 00 02         [24] 8596 	cjne	@r0,#0x00,00462$
      00399D 08               [12] 8597 	inc	r0
      00399E 06               [12] 8598 	inc	@r0
      00399F                       8599 00462$:
      00399F E5 00            [12] 8600 	mov	a,_bp
      0039A1 24 04            [12] 8601 	add	a,#0x04
      0039A3 F8               [12] 8602 	mov	r0,a
      0039A4 EC               [12] 8603 	mov	a,r4
      0039A5 26               [12] 8604 	add	a,@r0
      0039A6 F6               [12] 8605 	mov	@r0,a
      0039A7 EE               [12] 8606 	mov	a,r6
      0039A8 08               [12] 8607 	inc	r0
      0039A9 36               [12] 8608 	addc	a,@r0
      0039AA F6               [12] 8609 	mov	@r0,a
      0039AB E5 00            [12] 8610 	mov	a,_bp
      0039AD 24 0D            [12] 8611 	add	a,#0x0d
      0039AF F8               [12] 8612 	mov	r0,a
      0039B0 86 06            [24] 8613 	mov	ar6,@r0
      0039B2 E5 00            [12] 8614 	mov	a,_bp
      0039B4 24 04            [12] 8615 	add	a,#0x04
      0039B6 F8               [12] 8616 	mov	r0,a
      0039B7 86 82            [24] 8617 	mov	dpl,@r0
      0039B9 08               [12] 8618 	inc	r0
      0039BA 86 83            [24] 8619 	mov	dph,@r0
      0039BC 08               [12] 8620 	inc	r0
      0039BD 86 F0            [24] 8621 	mov	b,@r0
      0039BF EE               [12] 8622 	mov	a,r6
      0039C0 12 00 00         [24] 8623 	lcall	__gptrput
      0039C3 D0 04            [24] 8624 	pop	ar4
      0039C5 02 36 C7         [24] 8625 	ljmp	00194$
      0039C8                       8626 00170$:
                                   8627 ;	FATFS\src\ff.c:1914: if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
      0039C8 8A 82            [24] 8628 	mov	dpl,r2
      0039CA 8D 83            [24] 8629 	mov	dph,r5
      0039CC 8F F0            [24] 8630 	mov	b,r7
      0039CE E5 00            [12] 8631 	mov	a,_bp
      0039D0 24 04            [12] 8632 	add	a,#0x04
      0039D2 F8               [12] 8633 	mov	r0,a
      0039D3 12 00 00         [24] 8634 	lcall	__gptrget
      0039D6 F6               [12] 8635 	mov	@r0,a
      0039D7 A3               [24] 8636 	inc	dptr
      0039D8 12 00 00         [24] 8637 	lcall	__gptrget
      0039DB 08               [12] 8638 	inc	r0
      0039DC F6               [12] 8639 	mov	@r0,a
      0039DD A3               [24] 8640 	inc	dptr
      0039DE 12 00 00         [24] 8641 	lcall	__gptrget
      0039E1 08               [12] 8642 	inc	r0
      0039E2 F6               [12] 8643 	mov	@r0,a
      0039E3 E5 00            [12] 8644 	mov	a,_bp
      0039E5 24 04            [12] 8645 	add	a,#0x04
      0039E7 F8               [12] 8646 	mov	r0,a
      0039E8 86 82            [24] 8647 	mov	dpl,@r0
      0039EA 08               [12] 8648 	inc	r0
      0039EB 86 83            [24] 8649 	mov	dph,@r0
      0039ED 08               [12] 8650 	inc	r0
      0039EE 86 F0            [24] 8651 	mov	b,@r0
      0039F0 12 00 00         [24] 8652 	lcall	__gptrget
      0039F3 FE               [12] 8653 	mov	r6,a
      0039F4 BE E5 12         [24] 8654 	cjne	r6,#0xe5,00172$
      0039F7 E5 00            [12] 8655 	mov	a,_bp
      0039F9 24 04            [12] 8656 	add	a,#0x04
      0039FB F8               [12] 8657 	mov	r0,a
      0039FC 86 82            [24] 8658 	mov	dpl,@r0
      0039FE 08               [12] 8659 	inc	r0
      0039FF 86 83            [24] 8660 	mov	dph,@r0
      003A01 08               [12] 8661 	inc	r0
      003A02 86 F0            [24] 8662 	mov	b,@r0
      003A04 74 05            [12] 8663 	mov	a,#0x05
      003A06 12 00 00         [24] 8664 	lcall	__gptrput
      003A09                       8665 00172$:
                                   8666 ;	FATFS\src\ff.c:1916: if (ni == 8) b <<= 2;
      003A09 E5 00            [12] 8667 	mov	a,_bp
      003A0B 24 1E            [12] 8668 	add	a,#0x1e
      003A0D F8               [12] 8669 	mov	r0,a
      003A0E B6 08 0B         [24] 8670 	cjne	@r0,#0x08,00174$
      003A11 08               [12] 8671 	inc	r0
      003A12 B6 00 07         [24] 8672 	cjne	@r0,#0x00,00174$
      003A15 8C 06            [24] 8673 	mov	ar6,r4
      003A17 EE               [12] 8674 	mov	a,r6
      003A18 2E               [12] 8675 	add	a,r6
      003A19 25 E0            [12] 8676 	add	a,acc
      003A1B FC               [12] 8677 	mov	r4,a
      003A1C                       8678 00174$:
                                   8679 ;	FATFS\src\ff.c:1917: if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
      003A1C C0 02            [24] 8680 	push	ar2
      003A1E C0 05            [24] 8681 	push	ar5
      003A20 C0 07            [24] 8682 	push	ar7
      003A22 7E 00            [12] 8683 	mov	r6,#0x00
      003A24 74 0C            [12] 8684 	mov	a,#0x0c
      003A26 5C               [12] 8685 	anl	a,r4
      003A27 FB               [12] 8686 	mov	r3,a
      003A28 7F 00            [12] 8687 	mov	r7,#0x00
      003A2A BB 0C 0B         [24] 8688 	cjne	r3,#0x0c,00467$
      003A2D BF 00 08         [24] 8689 	cjne	r7,#0x00,00467$
      003A30 D0 07            [24] 8690 	pop	ar7
      003A32 D0 05            [24] 8691 	pop	ar5
      003A34 D0 02            [24] 8692 	pop	ar2
      003A36 80 28            [24] 8693 	sjmp	00175$
      003A38                       8694 00467$:
      003A38 D0 07            [24] 8695 	pop	ar7
      003A3A D0 05            [24] 8696 	pop	ar5
      003A3C D0 02            [24] 8697 	pop	ar2
      003A3E C0 02            [24] 8698 	push	ar2
      003A40 C0 05            [24] 8699 	push	ar5
      003A42 C0 07            [24] 8700 	push	ar7
      003A44 74 03            [12] 8701 	mov	a,#0x03
      003A46 5C               [12] 8702 	anl	a,r4
      003A47 FB               [12] 8703 	mov	r3,a
      003A48 7F 00            [12] 8704 	mov	r7,#0x00
      003A4A BB 03 05         [24] 8705 	cjne	r3,#0x03,00468$
      003A4D BF 00 02         [24] 8706 	cjne	r7,#0x00,00468$
      003A50 80 08            [24] 8707 	sjmp	00469$
      003A52                       8708 00468$:
      003A52 D0 07            [24] 8709 	pop	ar7
      003A54 D0 05            [24] 8710 	pop	ar5
      003A56 D0 02            [24] 8711 	pop	ar2
      003A58 80 1F            [24] 8712 	sjmp	00176$
      003A5A                       8713 00469$:
      003A5A D0 07            [24] 8714 	pop	ar7
      003A5C D0 05            [24] 8715 	pop	ar5
      003A5E D0 02            [24] 8716 	pop	ar2
      003A60                       8717 00175$:
                                   8718 ;	FATFS\src\ff.c:1918: cf |= NS_LFN;
      003A60 C0 04            [24] 8719 	push	ar4
      003A62 C0 06            [24] 8720 	push	ar6
      003A64 E5 00            [12] 8721 	mov	a,_bp
      003A66 24 0F            [12] 8722 	add	a,#0x0f
      003A68 F8               [12] 8723 	mov	r0,a
      003A69 86 03            [24] 8724 	mov	ar3,@r0
      003A6B 43 03 02         [24] 8725 	orl	ar3,#0x02
      003A6E E5 00            [12] 8726 	mov	a,_bp
      003A70 24 0F            [12] 8727 	add	a,#0x0f
      003A72 F8               [12] 8728 	mov	r0,a
      003A73 A6 03            [24] 8729 	mov	@r0,ar3
                                   8730 ;	FATFS\src\ff.c:1926: return FR_OK;
      003A75 D0 06            [24] 8731 	pop	ar6
      003A77 D0 04            [24] 8732 	pop	ar4
                                   8733 ;	FATFS\src\ff.c:1918: cf |= NS_LFN;
      003A79                       8734 00176$:
                                   8735 ;	FATFS\src\ff.c:1919: if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
      003A79 E5 00            [12] 8736 	mov	a,_bp
      003A7B 24 0F            [12] 8737 	add	a,#0x0f
      003A7D F8               [12] 8738 	mov	r0,a
      003A7E E6               [12] 8739 	mov	a,@r0
      003A7F 20 E1 59         [24] 8740 	jb	acc.1,00183$
                                   8741 ;	FATFS\src\ff.c:1920: if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
      003A82 C0 02            [24] 8742 	push	ar2
      003A84 C0 05            [24] 8743 	push	ar5
      003A86 C0 07            [24] 8744 	push	ar7
      003A88 74 03            [12] 8745 	mov	a,#0x03
      003A8A 5C               [12] 8746 	anl	a,r4
      003A8B FB               [12] 8747 	mov	r3,a
      003A8C 7F 00            [12] 8748 	mov	r7,#0x00
      003A8E BB 01 05         [24] 8749 	cjne	r3,#0x01,00471$
      003A91 BF 00 02         [24] 8750 	cjne	r7,#0x00,00471$
      003A94 80 08            [24] 8751 	sjmp	00472$
      003A96                       8752 00471$:
      003A96 D0 07            [24] 8753 	pop	ar7
      003A98 D0 05            [24] 8754 	pop	ar5
      003A9A D0 02            [24] 8755 	pop	ar2
      003A9C 80 1F            [24] 8756 	sjmp	00179$
      003A9E                       8757 00472$:
      003A9E D0 07            [24] 8758 	pop	ar7
      003AA0 D0 05            [24] 8759 	pop	ar5
      003AA2 D0 02            [24] 8760 	pop	ar2
      003AA4 C0 04            [24] 8761 	push	ar4
      003AA6 C0 06            [24] 8762 	push	ar6
      003AA8 E5 00            [12] 8763 	mov	a,_bp
      003AAA 24 0F            [12] 8764 	add	a,#0x0f
      003AAC F8               [12] 8765 	mov	r0,a
      003AAD 86 03            [24] 8766 	mov	ar3,@r0
      003AAF 43 03 10         [24] 8767 	orl	ar3,#0x10
      003AB2 E5 00            [12] 8768 	mov	a,_bp
      003AB4 24 0F            [12] 8769 	add	a,#0x0f
      003AB6 F8               [12] 8770 	mov	r0,a
      003AB7 A6 03            [24] 8771 	mov	@r0,ar3
                                   8772 ;	FATFS\src\ff.c:1926: return FR_OK;
      003AB9 D0 06            [24] 8773 	pop	ar6
      003ABB D0 04            [24] 8774 	pop	ar4
                                   8775 ;	FATFS\src\ff.c:1920: if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
      003ABD                       8776 00179$:
                                   8777 ;	FATFS\src\ff.c:1921: if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
      003ABD 53 04 0C         [24] 8778 	anl	ar4,#0x0c
      003AC0 7E 00            [12] 8779 	mov	r6,#0x00
      003AC2 BC 04 16         [24] 8780 	cjne	r4,#0x04,00183$
      003AC5 BE 00 13         [24] 8781 	cjne	r6,#0x00,00183$
      003AC8 E5 00            [12] 8782 	mov	a,_bp
      003ACA 24 0F            [12] 8783 	add	a,#0x0f
      003ACC F8               [12] 8784 	mov	r0,a
      003ACD 86 04            [24] 8785 	mov	ar4,@r0
      003ACF 7E 00            [12] 8786 	mov	r6,#0x00
      003AD1 43 04 08         [24] 8787 	orl	ar4,#0x08
      003AD4 E5 00            [12] 8788 	mov	a,_bp
      003AD6 24 0F            [12] 8789 	add	a,#0x0f
      003AD8 F8               [12] 8790 	mov	r0,a
      003AD9 A6 04            [24] 8791 	mov	@r0,ar4
      003ADB                       8792 00183$:
                                   8793 ;	FATFS\src\ff.c:1924: dp->fn[NS] = cf;	/* SFN is created */
      003ADB 8A 82            [24] 8794 	mov	dpl,r2
      003ADD 8D 83            [24] 8795 	mov	dph,r5
      003ADF 8F F0            [24] 8796 	mov	b,r7
      003AE1 12 00 00         [24] 8797 	lcall	__gptrget
      003AE4 FA               [12] 8798 	mov	r2,a
      003AE5 A3               [24] 8799 	inc	dptr
      003AE6 12 00 00         [24] 8800 	lcall	__gptrget
      003AE9 FD               [12] 8801 	mov	r5,a
      003AEA A3               [24] 8802 	inc	dptr
      003AEB 12 00 00         [24] 8803 	lcall	__gptrget
      003AEE FF               [12] 8804 	mov	r7,a
      003AEF 74 0B            [12] 8805 	mov	a,#0x0b
      003AF1 2A               [12] 8806 	add	a,r2
      003AF2 FA               [12] 8807 	mov	r2,a
      003AF3 E4               [12] 8808 	clr	a
      003AF4 3D               [12] 8809 	addc	a,r5
      003AF5 FD               [12] 8810 	mov	r5,a
      003AF6 8A 82            [24] 8811 	mov	dpl,r2
      003AF8 8D 83            [24] 8812 	mov	dph,r5
      003AFA 8F F0            [24] 8813 	mov	b,r7
      003AFC E5 00            [12] 8814 	mov	a,_bp
      003AFE 24 0F            [12] 8815 	add	a,#0x0f
      003B00 F8               [12] 8816 	mov	r0,a
      003B01 E6               [12] 8817 	mov	a,@r0
      003B02 12 00 00         [24] 8818 	lcall	__gptrput
                                   8819 ;	FATFS\src\ff.c:1926: return FR_OK;
      003B05 75 82 00         [24] 8820 	mov	dpl,#0x00
      003B08                       8821 00195$:
                                   8822 ;	FATFS\src\ff.c:2003: }
      003B08 85 00 81         [24] 8823 	mov	sp,_bp
      003B0B D0 00            [24] 8824 	pop	_bp
      003B0D 02 00 00         [24] 8825 	ljmp	__sdcc_banked_ret
                                   8826 ;------------------------------------------------------------
                                   8827 ;Allocation info for local variables in function 'follow_path'
                                   8828 ;------------------------------------------------------------
                                   8829 ;path                      Allocated to stack - _bp -6
                                   8830 ;dp                        Allocated to stack - _bp +7
                                   8831 ;res                       Allocated to stack - _bp +10
                                   8832 ;dir                       Allocated to stack - _bp +11
                                   8833 ;ns                        Allocated to registers r7 
                                   8834 ;sloc0                     Allocated to stack - _bp +9
                                   8835 ;sloc1                     Allocated to stack - _bp +1
                                   8836 ;sloc2                     Allocated to stack - _bp +4
                                   8837 ;------------------------------------------------------------
                                   8838 ;	FATFS\src\ff.c:2013: FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
                                   8839 ;	-----------------------------------------
                                   8840 ;	 function follow_path
                                   8841 ;	-----------------------------------------
      003B10                       8842 _follow_path:
      003B10 C0 00            [24] 8843 	push	_bp
      003B12 E5 81            [12] 8844 	mov	a,sp
      003B14 F5 00            [12] 8845 	mov	_bp,a
      003B16 24 0D            [12] 8846 	add	a,#0x0d
      003B18 F5 81            [12] 8847 	mov	sp,a
      003B1A C8               [12] 8848 	xch	a,r0
      003B1B E5 00            [12] 8849 	mov	a,_bp
      003B1D 24 07            [12] 8850 	add	a,#0x07
      003B1F C8               [12] 8851 	xch	a,r0
      003B20 A6 82            [24] 8852 	mov	@r0,dpl
      003B22 08               [12] 8853 	inc	r0
      003B23 A6 83            [24] 8854 	mov	@r0,dph
      003B25 08               [12] 8855 	inc	r0
      003B26 A6 F0            [24] 8856 	mov	@r0,b
                                   8857 ;	FATFS\src\ff.c:2029: if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
      003B28 E5 00            [12] 8858 	mov	a,_bp
      003B2A 24 FA            [12] 8859 	add	a,#0xfa
      003B2C F8               [12] 8860 	mov	r0,a
      003B2D 86 02            [24] 8861 	mov	ar2,@r0
      003B2F 08               [12] 8862 	inc	r0
      003B30 86 03            [24] 8863 	mov	ar3,@r0
      003B32 08               [12] 8864 	inc	r0
      003B33 86 04            [24] 8865 	mov	ar4,@r0
      003B35 8A 82            [24] 8866 	mov	dpl,r2
      003B37 8B 83            [24] 8867 	mov	dph,r3
      003B39 8C F0            [24] 8868 	mov	b,r4
      003B3B 12 00 00         [24] 8869 	lcall	__gptrget
      003B3E FF               [12] 8870 	mov	r7,a
      003B3F BF 2F 02         [24] 8871 	cjne	r7,#0x2f,00166$
      003B42 80 03            [24] 8872 	sjmp	00101$
      003B44                       8873 00166$:
      003B44 BF 5C 10         [24] 8874 	cjne	r7,#0x5c,00102$
      003B47                       8875 00101$:
                                   8876 ;	FATFS\src\ff.c:2030: path++;
      003B47 E5 00            [12] 8877 	mov	a,_bp
      003B49 24 FA            [12] 8878 	add	a,#0xfa
      003B4B F8               [12] 8879 	mov	r0,a
      003B4C 74 01            [12] 8880 	mov	a,#0x01
      003B4E 2A               [12] 8881 	add	a,r2
      003B4F F6               [12] 8882 	mov	@r0,a
      003B50 E4               [12] 8883 	clr	a
      003B51 3B               [12] 8884 	addc	a,r3
      003B52 08               [12] 8885 	inc	r0
      003B53 F6               [12] 8886 	mov	@r0,a
      003B54 08               [12] 8887 	inc	r0
      003B55 A6 04            [24] 8888 	mov	@r0,ar4
      003B57                       8889 00102$:
                                   8890 ;	FATFS\src\ff.c:2031: dp->sclust = 0;							/* Always start from the root directory */
      003B57 E5 00            [12] 8891 	mov	a,_bp
      003B59 24 07            [12] 8892 	add	a,#0x07
      003B5B F8               [12] 8893 	mov	r0,a
      003B5C 74 07            [12] 8894 	mov	a,#0x07
      003B5E 26               [12] 8895 	add	a,@r0
      003B5F FA               [12] 8896 	mov	r2,a
      003B60 E4               [12] 8897 	clr	a
      003B61 08               [12] 8898 	inc	r0
      003B62 36               [12] 8899 	addc	a,@r0
      003B63 FB               [12] 8900 	mov	r3,a
      003B64 08               [12] 8901 	inc	r0
      003B65 86 04            [24] 8902 	mov	ar4,@r0
      003B67 8A 82            [24] 8903 	mov	dpl,r2
      003B69 8B 83            [24] 8904 	mov	dph,r3
      003B6B 8C F0            [24] 8905 	mov	b,r4
      003B6D E4               [12] 8906 	clr	a
      003B6E 12 00 00         [24] 8907 	lcall	__gptrput
      003B71 A3               [24] 8908 	inc	dptr
      003B72 12 00 00         [24] 8909 	lcall	__gptrput
      003B75 A3               [24] 8910 	inc	dptr
      003B76 12 00 00         [24] 8911 	lcall	__gptrput
      003B79 A3               [24] 8912 	inc	dptr
      003B7A 12 00 00         [24] 8913 	lcall	__gptrput
                                   8914 ;	FATFS\src\ff.c:2034: if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
      003B7D E5 00            [12] 8915 	mov	a,_bp
      003B7F 24 FA            [12] 8916 	add	a,#0xfa
      003B81 F8               [12] 8917 	mov	r0,a
      003B82 86 02            [24] 8918 	mov	ar2,@r0
      003B84 08               [12] 8919 	inc	r0
      003B85 86 03            [24] 8920 	mov	ar3,@r0
      003B87 08               [12] 8921 	inc	r0
      003B88 86 04            [24] 8922 	mov	ar4,@r0
      003B8A 8A 82            [24] 8923 	mov	dpl,r2
      003B8C 8B 83            [24] 8924 	mov	dph,r3
      003B8E 8C F0            [24] 8925 	mov	b,r4
      003B90 12 00 00         [24] 8926 	lcall	__gptrget
      003B93 FA               [12] 8927 	mov	r2,a
      003B94 7C 00            [12] 8928 	mov	r4,#0x00
      003B96 C3               [12] 8929 	clr	c
      003B97 EA               [12] 8930 	mov	a,r2
      003B98 94 20            [12] 8931 	subb	a,#0x20
      003B9A EC               [12] 8932 	mov	a,r4
      003B9B 94 00            [12] 8933 	subb	a,#0x00
      003B9D 50 4D            [24] 8934 	jnc	00138$
                                   8935 ;	FATFS\src\ff.c:2035: res = dir_sdi(dp, 0);
      003B9F E4               [12] 8936 	clr	a
      003BA0 C0 E0            [24] 8937 	push	acc
      003BA2 C0 E0            [24] 8938 	push	acc
      003BA4 E5 00            [12] 8939 	mov	a,_bp
      003BA6 24 07            [12] 8940 	add	a,#0x07
      003BA8 F8               [12] 8941 	mov	r0,a
      003BA9 86 82            [24] 8942 	mov	dpl,@r0
      003BAB 08               [12] 8943 	inc	r0
      003BAC 86 83            [24] 8944 	mov	dph,@r0
      003BAE 08               [12] 8945 	inc	r0
      003BAF 86 F0            [24] 8946 	mov	b,@r0
      003BB1 78 16            [12] 8947 	mov	r0,#_dir_sdi
      003BB3 79 16            [12] 8948 	mov	r1,#(_dir_sdi >> 8)
      003BB5 7A 00            [12] 8949 	mov	r2,#(_dir_sdi >> 16)
      003BB7 12 00 00         [24] 8950 	lcall	__sdcc_banked_call
      003BBA AC 82            [24] 8951 	mov	r4,dpl
      003BBC 15 81            [12] 8952 	dec	sp
      003BBE 15 81            [12] 8953 	dec	sp
      003BC0 E5 00            [12] 8954 	mov	a,_bp
      003BC2 24 0A            [12] 8955 	add	a,#0x0a
      003BC4 F8               [12] 8956 	mov	r0,a
      003BC5 A6 04            [24] 8957 	mov	@r0,ar4
                                   8958 ;	FATFS\src\ff.c:2036: dp->dir = 0;
      003BC7 E5 00            [12] 8959 	mov	a,_bp
      003BC9 24 07            [12] 8960 	add	a,#0x07
      003BCB F8               [12] 8961 	mov	r0,a
      003BCC 74 13            [12] 8962 	mov	a,#0x13
      003BCE 26               [12] 8963 	add	a,@r0
      003BCF FA               [12] 8964 	mov	r2,a
      003BD0 E4               [12] 8965 	clr	a
      003BD1 08               [12] 8966 	inc	r0
      003BD2 36               [12] 8967 	addc	a,@r0
      003BD3 FB               [12] 8968 	mov	r3,a
      003BD4 08               [12] 8969 	inc	r0
      003BD5 86 04            [24] 8970 	mov	ar4,@r0
      003BD7 8A 82            [24] 8971 	mov	dpl,r2
      003BD9 8B 83            [24] 8972 	mov	dph,r3
      003BDB 8C F0            [24] 8973 	mov	b,r4
      003BDD E4               [12] 8974 	clr	a
      003BDE 12 00 00         [24] 8975 	lcall	__gptrput
      003BE1 A3               [24] 8976 	inc	dptr
      003BE2 12 00 00         [24] 8977 	lcall	__gptrput
      003BE5 A3               [24] 8978 	inc	dptr
      003BE6 12 00 00         [24] 8979 	lcall	__gptrput
      003BE9 02 3D C8         [24] 8980 	ljmp	00126$
      003BEC                       8981 00138$:
      003BEC E5 00            [12] 8982 	mov	a,_bp
      003BEE 24 07            [12] 8983 	add	a,#0x07
      003BF0 F8               [12] 8984 	mov	r0,a
      003BF1 74 16            [12] 8985 	mov	a,#0x16
      003BF3 26               [12] 8986 	add	a,@r0
      003BF4 FA               [12] 8987 	mov	r2,a
      003BF5 E4               [12] 8988 	clr	a
      003BF6 08               [12] 8989 	inc	r0
      003BF7 36               [12] 8990 	addc	a,@r0
      003BF8 FB               [12] 8991 	mov	r3,a
      003BF9 08               [12] 8992 	inc	r0
      003BFA 86 04            [24] 8993 	mov	ar4,@r0
      003BFC E5 00            [12] 8994 	mov	a,_bp
      003BFE 24 07            [12] 8995 	add	a,#0x07
      003C00 F8               [12] 8996 	mov	r0,a
      003C01 A9 00            [24] 8997 	mov	r1,_bp
      003C03 09               [12] 8998 	inc	r1
      003C04 74 13            [12] 8999 	mov	a,#0x13
      003C06 26               [12] 9000 	add	a,@r0
      003C07 F7               [12] 9001 	mov	@r1,a
      003C08 E4               [12] 9002 	clr	a
      003C09 08               [12] 9003 	inc	r0
      003C0A 36               [12] 9004 	addc	a,@r0
      003C0B 09               [12] 9005 	inc	r1
      003C0C F7               [12] 9006 	mov	@r1,a
      003C0D 08               [12] 9007 	inc	r0
      003C0E 09               [12] 9008 	inc	r1
      003C0F E6               [12] 9009 	mov	a,@r0
      003C10 F7               [12] 9010 	mov	@r1,a
      003C11                       9011 00127$:
                                   9012 ;	FATFS\src\ff.c:2039: res = create_name(dp, &path);	/* Get a segment name of the path */
      003C11 C0 02            [24] 9013 	push	ar2
      003C13 C0 03            [24] 9014 	push	ar3
      003C15 C0 04            [24] 9015 	push	ar4
      003C17 E5 00            [12] 9016 	mov	a,_bp
      003C19 24 FA            [12] 9017 	add	a,#0xfa
      003C1B FC               [12] 9018 	mov	r4,a
      003C1C 7B 00            [12] 9019 	mov	r3,#0x00
      003C1E 7A 40            [12] 9020 	mov	r2,#0x40
      003C20 C0 03            [24] 9021 	push	ar3
      003C22 C0 02            [24] 9022 	push	ar2
      003C24 C0 04            [24] 9023 	push	ar4
      003C26 C0 03            [24] 9024 	push	ar3
      003C28 C0 02            [24] 9025 	push	ar2
      003C2A E5 00            [12] 9026 	mov	a,_bp
      003C2C 24 07            [12] 9027 	add	a,#0x07
      003C2E F8               [12] 9028 	mov	r0,a
      003C2F 86 82            [24] 9029 	mov	dpl,@r0
      003C31 08               [12] 9030 	inc	r0
      003C32 86 83            [24] 9031 	mov	dph,@r0
      003C34 08               [12] 9032 	inc	r0
      003C35 86 F0            [24] 9033 	mov	b,@r0
      003C37 78 82            [12] 9034 	mov	r0,#_create_name
      003C39 79 32            [12] 9035 	mov	r1,#(_create_name >> 8)
      003C3B 7A 00            [12] 9036 	mov	r2,#(_create_name >> 16)
      003C3D 12 00 00         [24] 9037 	lcall	__sdcc_banked_call
      003C40 AC 82            [24] 9038 	mov	r4,dpl
      003C42 15 81            [12] 9039 	dec	sp
      003C44 15 81            [12] 9040 	dec	sp
      003C46 15 81            [12] 9041 	dec	sp
      003C48 D0 02            [24] 9042 	pop	ar2
      003C4A D0 03            [24] 9043 	pop	ar3
      003C4C E5 00            [12] 9044 	mov	a,_bp
      003C4E 24 0A            [12] 9045 	add	a,#0x0a
      003C50 F8               [12] 9046 	mov	r0,a
      003C51 A6 04            [24] 9047 	mov	@r0,ar4
                                   9048 ;	FATFS\src\ff.c:2040: if (res != FR_OK) break;
      003C53 E5 00            [12] 9049 	mov	a,_bp
      003C55 24 0A            [12] 9050 	add	a,#0x0a
      003C57 F8               [12] 9051 	mov	r0,a
      003C58 E6               [12] 9052 	mov	a,@r0
      003C59 D0 04            [24] 9053 	pop	ar4
      003C5B D0 03            [24] 9054 	pop	ar3
      003C5D D0 02            [24] 9055 	pop	ar2
      003C5F 60 03            [24] 9056 	jz	00170$
      003C61 02 3D C8         [24] 9057 	ljmp	00126$
      003C64                       9058 00170$:
                                   9059 ;	FATFS\src\ff.c:2041: res = dir_find(dp);				/* Find an object with the sagment name */
      003C64 E5 00            [12] 9060 	mov	a,_bp
      003C66 24 07            [12] 9061 	add	a,#0x07
      003C68 F8               [12] 9062 	mov	r0,a
      003C69 86 82            [24] 9063 	mov	dpl,@r0
      003C6B 08               [12] 9064 	inc	r0
      003C6C 86 83            [24] 9065 	mov	dph,@r0
      003C6E 08               [12] 9066 	inc	r0
      003C6F 86 F0            [24] 9067 	mov	b,@r0
      003C71 C0 04            [24] 9068 	push	ar4
      003C73 C0 03            [24] 9069 	push	ar3
      003C75 C0 02            [24] 9070 	push	ar2
      003C77 78 AF            [12] 9071 	mov	r0,#_dir_find
      003C79 79 25            [12] 9072 	mov	r1,#(_dir_find >> 8)
      003C7B 7A 00            [12] 9073 	mov	r2,#(_dir_find >> 16)
      003C7D 12 00 00         [24] 9074 	lcall	__sdcc_banked_call
      003C80 AF 82            [24] 9075 	mov	r7,dpl
      003C82 D0 02            [24] 9076 	pop	ar2
      003C84 D0 03            [24] 9077 	pop	ar3
      003C86 D0 04            [24] 9078 	pop	ar4
      003C88 E5 00            [12] 9079 	mov	a,_bp
      003C8A 24 0A            [12] 9080 	add	a,#0x0a
      003C8C F8               [12] 9081 	mov	r0,a
      003C8D A6 07            [24] 9082 	mov	@r0,ar7
                                   9083 ;	FATFS\src\ff.c:2042: ns = dp->fn[NS];
      003C8F 8A 82            [24] 9084 	mov	dpl,r2
      003C91 8B 83            [24] 9085 	mov	dph,r3
      003C93 8C F0            [24] 9086 	mov	b,r4
      003C95 12 00 00         [24] 9087 	lcall	__gptrget
      003C98 FD               [12] 9088 	mov	r5,a
      003C99 A3               [24] 9089 	inc	dptr
      003C9A 12 00 00         [24] 9090 	lcall	__gptrget
      003C9D FE               [12] 9091 	mov	r6,a
      003C9E A3               [24] 9092 	inc	dptr
      003C9F 12 00 00         [24] 9093 	lcall	__gptrget
      003CA2 FF               [12] 9094 	mov	r7,a
      003CA3 74 0B            [12] 9095 	mov	a,#0x0b
      003CA5 2D               [12] 9096 	add	a,r5
      003CA6 FD               [12] 9097 	mov	r5,a
      003CA7 E4               [12] 9098 	clr	a
      003CA8 3E               [12] 9099 	addc	a,r6
      003CA9 FE               [12] 9100 	mov	r6,a
      003CAA 8D 82            [24] 9101 	mov	dpl,r5
      003CAC 8E 83            [24] 9102 	mov	dph,r6
      003CAE 8F F0            [24] 9103 	mov	b,r7
      003CB0 12 00 00         [24] 9104 	lcall	__gptrget
      003CB3 FF               [12] 9105 	mov	r7,a
                                   9106 ;	FATFS\src\ff.c:2043: if (res != FR_OK) {				/* Failed to find the object */
      003CB4 E5 00            [12] 9107 	mov	a,_bp
      003CB6 24 0A            [12] 9108 	add	a,#0x0a
      003CB8 F8               [12] 9109 	mov	r0,a
      003CB9 E6               [12] 9110 	mov	a,@r0
      003CBA 60 1E            [24] 9111 	jz	00117$
                                   9112 ;	FATFS\src\ff.c:2044: if (res == FR_NO_FILE) {	/* Object is not found */
      003CBC E5 00            [12] 9113 	mov	a,_bp
      003CBE 24 0A            [12] 9114 	add	a,#0x0a
      003CC0 F8               [12] 9115 	mov	r0,a
      003CC1 B6 04 02         [24] 9116 	cjne	@r0,#0x04,00172$
      003CC4 80 03            [24] 9117 	sjmp	00173$
      003CC6                       9118 00172$:
      003CC6 02 3D C8         [24] 9119 	ljmp	00126$
      003CC9                       9120 00173$:
                                   9121 ;	FATFS\src\ff.c:2050: if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
      003CC9 EF               [12] 9122 	mov	a,r7
      003CCA 30 E2 03         [24] 9123 	jnb	acc.2,00174$
      003CCD 02 3D C8         [24] 9124 	ljmp	00126$
      003CD0                       9125 00174$:
      003CD0 E5 00            [12] 9126 	mov	a,_bp
      003CD2 24 0A            [12] 9127 	add	a,#0x0a
      003CD4 F8               [12] 9128 	mov	r0,a
      003CD5 76 05            [12] 9129 	mov	@r0,#0x05
                                   9130 ;	FATFS\src\ff.c:2053: break;
      003CD7 02 3D C8         [24] 9131 	ljmp	00126$
      003CDA                       9132 00117$:
                                   9133 ;	FATFS\src\ff.c:2055: if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
      003CDA EF               [12] 9134 	mov	a,r7
      003CDB 30 E2 03         [24] 9135 	jnb	acc.2,00175$
      003CDE 02 3D C8         [24] 9136 	ljmp	00126$
      003CE1                       9137 00175$:
                                   9138 ;	FATFS\src\ff.c:2056: dir = dp->dir;						/* Follow the sub-directory */
      003CE1 C0 02            [24] 9139 	push	ar2
      003CE3 C0 03            [24] 9140 	push	ar3
      003CE5 C0 04            [24] 9141 	push	ar4
      003CE7 A8 00            [24] 9142 	mov	r0,_bp
      003CE9 08               [12] 9143 	inc	r0
      003CEA 86 82            [24] 9144 	mov	dpl,@r0
      003CEC 08               [12] 9145 	inc	r0
      003CED 86 83            [24] 9146 	mov	dph,@r0
      003CEF 08               [12] 9147 	inc	r0
      003CF0 86 F0            [24] 9148 	mov	b,@r0
      003CF2 E5 00            [12] 9149 	mov	a,_bp
      003CF4 24 0B            [12] 9150 	add	a,#0x0b
      003CF6 F9               [12] 9151 	mov	r1,a
      003CF7 12 00 00         [24] 9152 	lcall	__gptrget
      003CFA F7               [12] 9153 	mov	@r1,a
      003CFB A3               [24] 9154 	inc	dptr
      003CFC 12 00 00         [24] 9155 	lcall	__gptrget
      003CFF 09               [12] 9156 	inc	r1
      003D00 F7               [12] 9157 	mov	@r1,a
      003D01 A3               [24] 9158 	inc	dptr
      003D02 12 00 00         [24] 9159 	lcall	__gptrget
      003D05 09               [12] 9160 	inc	r1
      003D06 F7               [12] 9161 	mov	@r1,a
                                   9162 ;	FATFS\src\ff.c:2057: if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
      003D07 E5 00            [12] 9163 	mov	a,_bp
      003D09 24 0B            [12] 9164 	add	a,#0x0b
      003D0B F8               [12] 9165 	mov	r0,a
      003D0C 74 0B            [12] 9166 	mov	a,#0x0b
      003D0E 26               [12] 9167 	add	a,@r0
      003D0F FA               [12] 9168 	mov	r2,a
      003D10 E4               [12] 9169 	clr	a
      003D11 08               [12] 9170 	inc	r0
      003D12 36               [12] 9171 	addc	a,@r0
      003D13 FB               [12] 9172 	mov	r3,a
      003D14 08               [12] 9173 	inc	r0
      003D15 86 04            [24] 9174 	mov	ar4,@r0
      003D17 8A 82            [24] 9175 	mov	dpl,r2
      003D19 8B 83            [24] 9176 	mov	dph,r3
      003D1B 8C F0            [24] 9177 	mov	b,r4
      003D1D 12 00 00         [24] 9178 	lcall	__gptrget
      003D20 D0 04            [24] 9179 	pop	ar4
      003D22 D0 03            [24] 9180 	pop	ar3
      003D24 D0 02            [24] 9181 	pop	ar2
      003D26 20 E4 0A         [24] 9182 	jb	acc.4,00121$
                                   9183 ;	FATFS\src\ff.c:2058: res = FR_NO_PATH; break;
      003D29 E5 00            [12] 9184 	mov	a,_bp
      003D2B 24 0A            [12] 9185 	add	a,#0x0a
      003D2D F8               [12] 9186 	mov	r0,a
      003D2E 76 05            [12] 9187 	mov	@r0,#0x05
      003D30 02 3D C8         [24] 9188 	ljmp	00126$
      003D33                       9189 00121$:
                                   9190 ;	FATFS\src\ff.c:2060: dp->sclust = ld_clust(dp->fs, dir);
      003D33 C0 02            [24] 9191 	push	ar2
      003D35 C0 03            [24] 9192 	push	ar3
      003D37 C0 04            [24] 9193 	push	ar4
      003D39 E5 00            [12] 9194 	mov	a,_bp
      003D3B 24 07            [12] 9195 	add	a,#0x07
      003D3D F8               [12] 9196 	mov	r0,a
      003D3E E5 00            [12] 9197 	mov	a,_bp
      003D40 24 04            [12] 9198 	add	a,#0x04
      003D42 F9               [12] 9199 	mov	r1,a
      003D43 74 07            [12] 9200 	mov	a,#0x07
      003D45 26               [12] 9201 	add	a,@r0
      003D46 F7               [12] 9202 	mov	@r1,a
      003D47 E4               [12] 9203 	clr	a
      003D48 08               [12] 9204 	inc	r0
      003D49 36               [12] 9205 	addc	a,@r0
      003D4A 09               [12] 9206 	inc	r1
      003D4B F7               [12] 9207 	mov	@r1,a
      003D4C 08               [12] 9208 	inc	r0
      003D4D 09               [12] 9209 	inc	r1
      003D4E E6               [12] 9210 	mov	a,@r0
      003D4F F7               [12] 9211 	mov	@r1,a
      003D50 E5 00            [12] 9212 	mov	a,_bp
      003D52 24 07            [12] 9213 	add	a,#0x07
      003D54 F8               [12] 9214 	mov	r0,a
      003D55 86 82            [24] 9215 	mov	dpl,@r0
      003D57 08               [12] 9216 	inc	r0
      003D58 86 83            [24] 9217 	mov	dph,@r0
      003D5A 08               [12] 9218 	inc	r0
      003D5B 86 F0            [24] 9219 	mov	b,@r0
      003D5D 12 00 00         [24] 9220 	lcall	__gptrget
      003D60 FD               [12] 9221 	mov	r5,a
      003D61 A3               [24] 9222 	inc	dptr
      003D62 12 00 00         [24] 9223 	lcall	__gptrget
      003D65 FE               [12] 9224 	mov	r6,a
      003D66 A3               [24] 9225 	inc	dptr
      003D67 12 00 00         [24] 9226 	lcall	__gptrget
      003D6A FF               [12] 9227 	mov	r7,a
      003D6B C0 03            [24] 9228 	push	ar3
      003D6D C0 02            [24] 9229 	push	ar2
      003D6F E5 00            [12] 9230 	mov	a,_bp
      003D71 24 0B            [12] 9231 	add	a,#0x0b
      003D73 F8               [12] 9232 	mov	r0,a
      003D74 E6               [12] 9233 	mov	a,@r0
      003D75 C0 E0            [24] 9234 	push	acc
      003D77 08               [12] 9235 	inc	r0
      003D78 E6               [12] 9236 	mov	a,@r0
      003D79 C0 E0            [24] 9237 	push	acc
      003D7B 08               [12] 9238 	inc	r0
      003D7C E6               [12] 9239 	mov	a,@r0
      003D7D C0 E0            [24] 9240 	push	acc
      003D7F 8D 82            [24] 9241 	mov	dpl,r5
      003D81 8E 83            [24] 9242 	mov	dph,r6
      003D83 8F F0            [24] 9243 	mov	b,r7
      003D85 78 4E            [12] 9244 	mov	r0,#_ld_clust
      003D87 79 1E            [12] 9245 	mov	r1,#(_ld_clust >> 8)
      003D89 7A 00            [12] 9246 	mov	r2,#(_ld_clust >> 16)
      003D8B 12 00 00         [24] 9247 	lcall	__sdcc_banked_call
      003D8E AE 82            [24] 9248 	mov	r6,dpl
      003D90 AD 83            [24] 9249 	mov	r5,dph
      003D92 AC F0            [24] 9250 	mov	r4,b
      003D94 FF               [12] 9251 	mov	r7,a
      003D95 15 81            [12] 9252 	dec	sp
      003D97 15 81            [12] 9253 	dec	sp
      003D99 15 81            [12] 9254 	dec	sp
      003D9B D0 02            [24] 9255 	pop	ar2
      003D9D D0 03            [24] 9256 	pop	ar3
      003D9F E5 00            [12] 9257 	mov	a,_bp
      003DA1 24 04            [12] 9258 	add	a,#0x04
      003DA3 F8               [12] 9259 	mov	r0,a
      003DA4 86 82            [24] 9260 	mov	dpl,@r0
      003DA6 08               [12] 9261 	inc	r0
      003DA7 86 83            [24] 9262 	mov	dph,@r0
      003DA9 08               [12] 9263 	inc	r0
      003DAA 86 F0            [24] 9264 	mov	b,@r0
      003DAC EE               [12] 9265 	mov	a,r6
      003DAD 12 00 00         [24] 9266 	lcall	__gptrput
      003DB0 A3               [24] 9267 	inc	dptr
      003DB1 ED               [12] 9268 	mov	a,r5
      003DB2 12 00 00         [24] 9269 	lcall	__gptrput
      003DB5 A3               [24] 9270 	inc	dptr
      003DB6 EC               [12] 9271 	mov	a,r4
      003DB7 12 00 00         [24] 9272 	lcall	__gptrput
      003DBA A3               [24] 9273 	inc	dptr
      003DBB EF               [12] 9274 	mov	a,r7
      003DBC 12 00 00         [24] 9275 	lcall	__gptrput
      003DBF D0 04            [24] 9276 	pop	ar4
      003DC1 D0 03            [24] 9277 	pop	ar3
      003DC3 D0 02            [24] 9278 	pop	ar2
      003DC5 02 3C 11         [24] 9279 	ljmp	00127$
      003DC8                       9280 00126$:
                                   9281 ;	FATFS\src\ff.c:2064: return res;
      003DC8 E5 00            [12] 9282 	mov	a,_bp
      003DCA 24 0A            [12] 9283 	add	a,#0x0a
      003DCC F8               [12] 9284 	mov	r0,a
      003DCD 86 82            [24] 9285 	mov	dpl,@r0
                                   9286 ;	FATFS\src\ff.c:2065: }
      003DCF 85 00 81         [24] 9287 	mov	sp,_bp
      003DD2 D0 00            [24] 9288 	pop	_bp
      003DD4 02 00 00         [24] 9289 	ljmp	__sdcc_banked_ret
                                   9290 ;------------------------------------------------------------
                                   9291 ;Allocation info for local variables in function 'get_ldnumber'
                                   9292 ;------------------------------------------------------------
                                   9293 ;path                      Allocated to registers r5 r6 r7 
                                   9294 ;tp                        Allocated to registers r2 r3 r4 
                                   9295 ;tt                        Allocated to registers r2 r3 r4 
                                   9296 ;i                         Allocated to stack - _bp +7
                                   9297 ;vol                       Allocated to stack - _bp +5
                                   9298 ;sloc0                     Allocated to stack - _bp +1
                                   9299 ;sloc1                     Allocated to stack - _bp +4
                                   9300 ;------------------------------------------------------------
                                   9301 ;	FATFS\src\ff.c:2075: int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
                                   9302 ;	-----------------------------------------
                                   9303 ;	 function get_ldnumber
                                   9304 ;	-----------------------------------------
      003DD7                       9305 _get_ldnumber:
      003DD7 C0 00            [24] 9306 	push	_bp
      003DD9 E5 81            [12] 9307 	mov	a,sp
      003DDB F5 00            [12] 9308 	mov	_bp,a
      003DDD 24 08            [12] 9309 	add	a,#0x08
      003DDF F5 81            [12] 9310 	mov	sp,a
      003DE1 AD 82            [24] 9311 	mov	r5,dpl
      003DE3 AE 83            [24] 9312 	mov	r6,dph
      003DE5 AF F0            [24] 9313 	mov	r7,b
                                   9314 ;	FATFS\src\ff.c:2081: int vol = -1;
      003DE7 E5 00            [12] 9315 	mov	a,_bp
      003DE9 24 05            [12] 9316 	add	a,#0x05
      003DEB F8               [12] 9317 	mov	r0,a
      003DEC 76 FF            [12] 9318 	mov	@r0,#0xff
      003DEE 08               [12] 9319 	inc	r0
      003DEF 76 FF            [12] 9320 	mov	@r0,#0xff
                                   9321 ;	FATFS\src\ff.c:2084: if (*path) {	/* If the pointer is not a null */
      003DF1 8D 82            [24] 9322 	mov	dpl,r5
      003DF3 8E 83            [24] 9323 	mov	dph,r6
      003DF5 8F F0            [24] 9324 	mov	b,r7
      003DF7 12 00 00         [24] 9325 	lcall	__gptrget
      003DFA FA               [12] 9326 	mov	r2,a
      003DFB A3               [24] 9327 	inc	dptr
      003DFC 12 00 00         [24] 9328 	lcall	__gptrget
      003DFF FB               [12] 9329 	mov	r3,a
      003E00 A3               [24] 9330 	inc	dptr
      003E01 12 00 00         [24] 9331 	lcall	__gptrget
      003E04 FC               [12] 9332 	mov	r4,a
      003E05 EA               [12] 9333 	mov	a,r2
      003E06 4B               [12] 9334 	orl	a,r3
      003E07 70 03            [24] 9335 	jnz	00158$
      003E09 02 3F 27         [24] 9336 	ljmp	00110$
      003E0C                       9337 00158$:
                                   9338 ;	FATFS\src\ff.c:2085: for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
      003E0C A8 00            [24] 9339 	mov	r0,_bp
      003E0E 08               [12] 9340 	inc	r0
      003E0F A6 02            [24] 9341 	mov	@r0,ar2
      003E11 08               [12] 9342 	inc	r0
      003E12 A6 03            [24] 9343 	mov	@r0,ar3
      003E14 08               [12] 9344 	inc	r0
      003E15 A6 04            [24] 9345 	mov	@r0,ar4
      003E17                       9346 00113$:
      003E17 C0 05            [24] 9347 	push	ar5
      003E19 C0 06            [24] 9348 	push	ar6
      003E1B C0 07            [24] 9349 	push	ar7
      003E1D A8 00            [24] 9350 	mov	r0,_bp
      003E1F 08               [12] 9351 	inc	r0
      003E20 86 82            [24] 9352 	mov	dpl,@r0
      003E22 08               [12] 9353 	inc	r0
      003E23 86 83            [24] 9354 	mov	dph,@r0
      003E25 08               [12] 9355 	inc	r0
      003E26 86 F0            [24] 9356 	mov	b,@r0
      003E28 E5 00            [12] 9357 	mov	a,_bp
      003E2A 24 04            [12] 9358 	add	a,#0x04
      003E2C F9               [12] 9359 	mov	r1,a
      003E2D 12 00 00         [24] 9360 	lcall	__gptrget
      003E30 F7               [12] 9361 	mov	@r1,a
      003E31 E5 00            [12] 9362 	mov	a,_bp
      003E33 24 04            [12] 9363 	add	a,#0x04
      003E35 F8               [12] 9364 	mov	r0,a
      003E36 86 06            [24] 9365 	mov	ar6,@r0
      003E38 7F 00            [12] 9366 	mov	r7,#0x00
      003E3A C3               [12] 9367 	clr	c
      003E3B EE               [12] 9368 	mov	a,r6
      003E3C 94 20            [12] 9369 	subb	a,#0x20
      003E3E EF               [12] 9370 	mov	a,r7
      003E3F 94 00            [12] 9371 	subb	a,#0x00
      003E41 D0 07            [24] 9372 	pop	ar7
      003E43 D0 06            [24] 9373 	pop	ar6
      003E45 D0 05            [24] 9374 	pop	ar5
      003E47 40 15            [24] 9375 	jc	00101$
      003E49 E5 00            [12] 9376 	mov	a,_bp
      003E4B 24 04            [12] 9377 	add	a,#0x04
      003E4D F8               [12] 9378 	mov	r0,a
      003E4E B6 3A 02         [24] 9379 	cjne	@r0,#0x3a,00160$
      003E51 80 0B            [24] 9380 	sjmp	00101$
      003E53                       9381 00160$:
      003E53 A8 00            [24] 9382 	mov	r0,_bp
      003E55 08               [12] 9383 	inc	r0
      003E56 06               [12] 9384 	inc	@r0
      003E57 B6 00 02         [24] 9385 	cjne	@r0,#0x00,00161$
      003E5A 08               [12] 9386 	inc	r0
      003E5B 06               [12] 9387 	inc	@r0
      003E5C                       9388 00161$:
      003E5C 80 B9            [24] 9389 	sjmp	00113$
      003E5E                       9390 00101$:
                                   9391 ;	FATFS\src\ff.c:2086: if (*tt == ':') {	/* If a ':' is exist in the path name */
      003E5E C0 05            [24] 9392 	push	ar5
      003E60 C0 06            [24] 9393 	push	ar6
      003E62 C0 07            [24] 9394 	push	ar7
      003E64 A8 00            [24] 9395 	mov	r0,_bp
      003E66 08               [12] 9396 	inc	r0
      003E67 86 82            [24] 9397 	mov	dpl,@r0
      003E69 08               [12] 9398 	inc	r0
      003E6A 86 83            [24] 9399 	mov	dph,@r0
      003E6C 08               [12] 9400 	inc	r0
      003E6D 86 F0            [24] 9401 	mov	b,@r0
      003E6F 12 00 00         [24] 9402 	lcall	__gptrget
      003E72 FF               [12] 9403 	mov	r7,a
      003E73 BF 3A 02         [24] 9404 	cjne	r7,#0x3a,00162$
      003E76 80 09            [24] 9405 	sjmp	00163$
      003E78                       9406 00162$:
      003E78 D0 07            [24] 9407 	pop	ar7
      003E7A D0 06            [24] 9408 	pop	ar6
      003E7C D0 05            [24] 9409 	pop	ar5
      003E7E 02 3F 1E         [24] 9410 	ljmp	00108$
      003E81                       9411 00163$:
                                   9412 ;	FATFS\src\ff.c:2087: tp = *path;
                                   9413 ;	FATFS\src\ff.c:2088: i = *tp++ - '0';
      003E81 8A 82            [24] 9414 	mov	dpl,r2
      003E83 8B 83            [24] 9415 	mov	dph,r3
      003E85 8C F0            [24] 9416 	mov	b,r4
      003E87 12 00 00         [24] 9417 	lcall	__gptrget
      003E8A FF               [12] 9418 	mov	r7,a
      003E8B 0A               [12] 9419 	inc	r2
      003E8C BA 00 01         [24] 9420 	cjne	r2,#0x00,00164$
      003E8F 0B               [12] 9421 	inc	r3
      003E90                       9422 00164$:
      003E90 7E 00            [12] 9423 	mov	r6,#0x00
      003E92 E5 00            [12] 9424 	mov	a,_bp
      003E94 24 07            [12] 9425 	add	a,#0x07
      003E96 F8               [12] 9426 	mov	r0,a
      003E97 EF               [12] 9427 	mov	a,r7
      003E98 24 D0            [12] 9428 	add	a,#0xd0
      003E9A F6               [12] 9429 	mov	@r0,a
      003E9B EE               [12] 9430 	mov	a,r6
      003E9C 34 FF            [12] 9431 	addc	a,#0xff
      003E9E 08               [12] 9432 	inc	r0
      003E9F F6               [12] 9433 	mov	@r0,a
                                   9434 ;	FATFS\src\ff.c:2089: if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
      003EA0 E5 00            [12] 9435 	mov	a,_bp
      003EA2 24 07            [12] 9436 	add	a,#0x07
      003EA4 F8               [12] 9437 	mov	r0,a
      003EA5 C3               [12] 9438 	clr	c
      003EA6 E6               [12] 9439 	mov	a,@r0
      003EA7 94 0A            [12] 9440 	subb	a,#0x0a
      003EA9 08               [12] 9441 	inc	r0
      003EAA E6               [12] 9442 	mov	a,@r0
      003EAB 94 00            [12] 9443 	subb	a,#0x00
      003EAD D0 07            [24] 9444 	pop	ar7
      003EAF D0 06            [24] 9445 	pop	ar6
      003EB1 D0 05            [24] 9446 	pop	ar5
      003EB3 50 5D            [24] 9447 	jnc	00105$
      003EB5 A8 00            [24] 9448 	mov	r0,_bp
      003EB7 08               [12] 9449 	inc	r0
      003EB8 C0 02            [24] 9450 	push	ar2
      003EBA C0 03            [24] 9451 	push	ar3
      003EBC C0 04            [24] 9452 	push	ar4
      003EBE 86 82            [24] 9453 	mov	dpl,@r0
      003EC0 08               [12] 9454 	inc	r0
      003EC1 86 83            [24] 9455 	mov	dph,@r0
      003EC3 08               [12] 9456 	inc	r0
      003EC4 86 F0            [24] 9457 	mov	b,@r0
      003EC6 12 00 00         [24] 9458 	lcall	___gptr_cmp
      003EC9 15 81            [12] 9459 	dec	sp
      003ECB 15 81            [12] 9460 	dec	sp
      003ECD 15 81            [12] 9461 	dec	sp
      003ECF 70 41            [24] 9462 	jnz	00105$
                                   9463 ;	FATFS\src\ff.c:2090: if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
      003ED1 E5 00            [12] 9464 	mov	a,_bp
      003ED3 24 07            [12] 9465 	add	a,#0x07
      003ED5 F8               [12] 9466 	mov	r0,a
      003ED6 C3               [12] 9467 	clr	c
      003ED7 E6               [12] 9468 	mov	a,@r0
      003ED8 94 02            [12] 9469 	subb	a,#0x02
      003EDA 08               [12] 9470 	inc	r0
      003EDB E6               [12] 9471 	mov	a,@r0
      003EDC 94 00            [12] 9472 	subb	a,#0x00
      003EDE 50 32            [24] 9473 	jnc	00105$
                                   9474 ;	FATFS\src\ff.c:2091: vol = (int)i;
      003EE0 E5 00            [12] 9475 	mov	a,_bp
      003EE2 24 07            [12] 9476 	add	a,#0x07
      003EE4 F8               [12] 9477 	mov	r0,a
      003EE5 E5 00            [12] 9478 	mov	a,_bp
      003EE7 24 05            [12] 9479 	add	a,#0x05
      003EE9 F9               [12] 9480 	mov	r1,a
      003EEA E6               [12] 9481 	mov	a,@r0
      003EEB F7               [12] 9482 	mov	@r1,a
      003EEC 08               [12] 9483 	inc	r0
      003EED 09               [12] 9484 	inc	r1
      003EEE E6               [12] 9485 	mov	a,@r0
      003EEF F7               [12] 9486 	mov	@r1,a
                                   9487 ;	FATFS\src\ff.c:2092: *path = ++tt;
      003EF0 A8 00            [24] 9488 	mov	r0,_bp
      003EF2 08               [12] 9489 	inc	r0
      003EF3 74 01            [12] 9490 	mov	a,#0x01
      003EF5 26               [12] 9491 	add	a,@r0
      003EF6 FA               [12] 9492 	mov	r2,a
      003EF7 E4               [12] 9493 	clr	a
      003EF8 08               [12] 9494 	inc	r0
      003EF9 36               [12] 9495 	addc	a,@r0
      003EFA FB               [12] 9496 	mov	r3,a
      003EFB 08               [12] 9497 	inc	r0
      003EFC 86 04            [24] 9498 	mov	ar4,@r0
      003EFE 8D 82            [24] 9499 	mov	dpl,r5
      003F00 8E 83            [24] 9500 	mov	dph,r6
      003F02 8F F0            [24] 9501 	mov	b,r7
      003F04 EA               [12] 9502 	mov	a,r2
      003F05 12 00 00         [24] 9503 	lcall	__gptrput
      003F08 A3               [24] 9504 	inc	dptr
      003F09 EB               [12] 9505 	mov	a,r3
      003F0A 12 00 00         [24] 9506 	lcall	__gptrput
      003F0D A3               [24] 9507 	inc	dptr
      003F0E EC               [12] 9508 	mov	a,r4
      003F0F 12 00 00         [24] 9509 	lcall	__gptrput
      003F12                       9510 00105$:
                                   9511 ;	FATFS\src\ff.c:2115: return vol;
      003F12 E5 00            [12] 9512 	mov	a,_bp
      003F14 24 05            [12] 9513 	add	a,#0x05
      003F16 F8               [12] 9514 	mov	r0,a
      003F17 86 82            [24] 9515 	mov	dpl,@r0
      003F19 08               [12] 9516 	inc	r0
      003F1A 86 83            [24] 9517 	mov	dph,@r0
      003F1C 80 13            [24] 9518 	sjmp	00115$
      003F1E                       9519 00108$:
                                   9520 ;	FATFS\src\ff.c:2120: vol = 0;		/* Drive 0 */
      003F1E E5 00            [12] 9521 	mov	a,_bp
      003F20 24 05            [12] 9522 	add	a,#0x05
      003F22 F8               [12] 9523 	mov	r0,a
      003F23 E4               [12] 9524 	clr	a
      003F24 F6               [12] 9525 	mov	@r0,a
      003F25 08               [12] 9526 	inc	r0
      003F26 F6               [12] 9527 	mov	@r0,a
      003F27                       9528 00110$:
                                   9529 ;	FATFS\src\ff.c:2123: return vol;
      003F27 E5 00            [12] 9530 	mov	a,_bp
      003F29 24 05            [12] 9531 	add	a,#0x05
      003F2B F8               [12] 9532 	mov	r0,a
      003F2C 86 82            [24] 9533 	mov	dpl,@r0
      003F2E 08               [12] 9534 	inc	r0
      003F2F 86 83            [24] 9535 	mov	dph,@r0
      003F31                       9536 00115$:
                                   9537 ;	FATFS\src\ff.c:2124: }
      003F31 85 00 81         [24] 9538 	mov	sp,_bp
      003F34 D0 00            [24] 9539 	pop	_bp
      003F36 02 00 00         [24] 9540 	ljmp	__sdcc_banked_ret
                                   9541 ;------------------------------------------------------------
                                   9542 ;Allocation info for local variables in function 'check_fs'
                                   9543 ;------------------------------------------------------------
                                   9544 ;sect                      Allocated to stack - _bp -7
                                   9545 ;fs                        Allocated to registers r5 r6 r7 
                                   9546 ;sloc0                     Allocated to stack - _bp +1
                                   9547 ;sloc1                     Allocated to stack - _bp +8
                                   9548 ;sloc2                     Allocated to stack - _bp +11
                                   9549 ;sloc3                     Allocated to stack - _bp +4
                                   9550 ;------------------------------------------------------------
                                   9551 ;	FATFS\src\ff.c:2134: BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
                                   9552 ;	-----------------------------------------
                                   9553 ;	 function check_fs
                                   9554 ;	-----------------------------------------
      003F39                       9555 _check_fs:
      003F39 C0 00            [24] 9556 	push	_bp
      003F3B E5 81            [12] 9557 	mov	a,sp
      003F3D F5 00            [12] 9558 	mov	_bp,a
      003F3F 24 0E            [12] 9559 	add	a,#0x0e
      003F41 F5 81            [12] 9560 	mov	sp,a
      003F43 AD 82            [24] 9561 	mov	r5,dpl
      003F45 AE 83            [24] 9562 	mov	r6,dph
      003F47 AF F0            [24] 9563 	mov	r7,b
                                   9564 ;	FATFS\src\ff.c:2139: fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
      003F49 74 04            [12] 9565 	mov	a,#0x04
      003F4B 2D               [12] 9566 	add	a,r5
      003F4C FA               [12] 9567 	mov	r2,a
      003F4D E4               [12] 9568 	clr	a
      003F4E 3E               [12] 9569 	addc	a,r6
      003F4F FB               [12] 9570 	mov	r3,a
      003F50 8F 04            [24] 9571 	mov	ar4,r7
      003F52 8A 82            [24] 9572 	mov	dpl,r2
      003F54 8B 83            [24] 9573 	mov	dph,r3
      003F56 8C F0            [24] 9574 	mov	b,r4
      003F58 E4               [12] 9575 	clr	a
      003F59 12 00 00         [24] 9576 	lcall	__gptrput
      003F5C 74 22            [12] 9577 	mov	a,#0x22
      003F5E 2D               [12] 9578 	add	a,r5
      003F5F FA               [12] 9579 	mov	r2,a
      003F60 E4               [12] 9580 	clr	a
      003F61 3E               [12] 9581 	addc	a,r6
      003F62 FB               [12] 9582 	mov	r3,a
      003F63 8F 04            [24] 9583 	mov	ar4,r7
      003F65 8A 82            [24] 9584 	mov	dpl,r2
      003F67 8B 83            [24] 9585 	mov	dph,r3
      003F69 8C F0            [24] 9586 	mov	b,r4
      003F6B 74 FF            [12] 9587 	mov	a,#0xff
      003F6D 12 00 00         [24] 9588 	lcall	__gptrput
      003F70 A3               [24] 9589 	inc	dptr
      003F71 12 00 00         [24] 9590 	lcall	__gptrput
      003F74 A3               [24] 9591 	inc	dptr
      003F75 12 00 00         [24] 9592 	lcall	__gptrput
      003F78 A3               [24] 9593 	inc	dptr
      003F79 12 00 00         [24] 9594 	lcall	__gptrput
                                   9595 ;	FATFS\src\ff.c:2140: if (move_window(fs, sect) != FR_OK)			/* Load boot record */
      003F7C C0 07            [24] 9596 	push	ar7
      003F7E C0 06            [24] 9597 	push	ar6
      003F80 C0 05            [24] 9598 	push	ar5
      003F82 E5 00            [12] 9599 	mov	a,_bp
      003F84 24 F9            [12] 9600 	add	a,#0xf9
      003F86 F8               [12] 9601 	mov	r0,a
      003F87 E6               [12] 9602 	mov	a,@r0
      003F88 C0 E0            [24] 9603 	push	acc
      003F8A 08               [12] 9604 	inc	r0
      003F8B E6               [12] 9605 	mov	a,@r0
      003F8C C0 E0            [24] 9606 	push	acc
      003F8E 08               [12] 9607 	inc	r0
      003F8F E6               [12] 9608 	mov	a,@r0
      003F90 C0 E0            [24] 9609 	push	acc
      003F92 08               [12] 9610 	inc	r0
      003F93 E6               [12] 9611 	mov	a,@r0
      003F94 C0 E0            [24] 9612 	push	acc
      003F96 8D 82            [24] 9613 	mov	dpl,r5
      003F98 8E 83            [24] 9614 	mov	dph,r6
      003F9A 8F F0            [24] 9615 	mov	b,r7
      003F9C 78 7C            [12] 9616 	mov	r0,#_move_window
      003F9E 79 0D            [12] 9617 	mov	r1,#(_move_window >> 8)
      003FA0 7A 00            [12] 9618 	mov	r2,#(_move_window >> 16)
      003FA2 12 00 00         [24] 9619 	lcall	__sdcc_banked_call
      003FA5 AC 82            [24] 9620 	mov	r4,dpl
      003FA7 E5 81            [12] 9621 	mov	a,sp
      003FA9 24 FC            [12] 9622 	add	a,#0xfc
      003FAB F5 81            [12] 9623 	mov	sp,a
      003FAD D0 05            [24] 9624 	pop	ar5
      003FAF D0 06            [24] 9625 	pop	ar6
      003FB1 D0 07            [24] 9626 	pop	ar7
      003FB3 EC               [12] 9627 	mov	a,r4
      003FB4 60 06            [24] 9628 	jz	00102$
                                   9629 ;	FATFS\src\ff.c:2141: return 3;
      003FB6 75 82 03         [24] 9630 	mov	dpl,#0x03
      003FB9 02 42 21         [24] 9631 	ljmp	00109$
      003FBC                       9632 00102$:
                                   9633 ;	FATFS\src\ff.c:2143: if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
      003FBC 74 26            [12] 9634 	mov	a,#0x26
      003FBE 2D               [12] 9635 	add	a,r5
      003FBF FA               [12] 9636 	mov	r2,a
      003FC0 E4               [12] 9637 	clr	a
      003FC1 3E               [12] 9638 	addc	a,r6
      003FC2 FB               [12] 9639 	mov	r3,a
      003FC3 8F 04            [24] 9640 	mov	ar4,r7
      003FC5 C0 05            [24] 9641 	push	ar5
      003FC7 C0 06            [24] 9642 	push	ar6
      003FC9 C0 07            [24] 9643 	push	ar7
      003FCB 74 FE            [12] 9644 	mov	a,#0xfe
      003FCD 2A               [12] 9645 	add	a,r2
      003FCE FD               [12] 9646 	mov	r5,a
      003FCF 74 01            [12] 9647 	mov	a,#0x01
      003FD1 3B               [12] 9648 	addc	a,r3
      003FD2 FE               [12] 9649 	mov	r6,a
      003FD3 8C 07            [24] 9650 	mov	ar7,r4
      003FD5 74 FF            [12] 9651 	mov	a,#0xff
      003FD7 2A               [12] 9652 	add	a,r2
      003FD8 FA               [12] 9653 	mov	r2,a
      003FD9 74 01            [12] 9654 	mov	a,#0x01
      003FDB 3B               [12] 9655 	addc	a,r3
      003FDC FB               [12] 9656 	mov	r3,a
      003FDD 8A 82            [24] 9657 	mov	dpl,r2
      003FDF 8B 83            [24] 9658 	mov	dph,r3
      003FE1 8C F0            [24] 9659 	mov	b,r4
      003FE3 12 00 00         [24] 9660 	lcall	__gptrget
      003FE6 FC               [12] 9661 	mov	r4,a
      003FE7 7A 00            [12] 9662 	mov	r2,#0x00
      003FE9 8D 82            [24] 9663 	mov	dpl,r5
      003FEB 8E 83            [24] 9664 	mov	dph,r6
      003FED 8F F0            [24] 9665 	mov	b,r7
      003FEF 12 00 00         [24] 9666 	lcall	__gptrget
      003FF2 7F 00            [12] 9667 	mov	r7,#0x00
      003FF4 42 02            [12] 9668 	orl	ar2,a
      003FF6 EF               [12] 9669 	mov	a,r7
      003FF7 42 04            [12] 9670 	orl	ar4,a
      003FF9 BA 55 0B         [24] 9671 	cjne	r2,#0x55,00128$
      003FFC BC AA 08         [24] 9672 	cjne	r4,#0xaa,00128$
      003FFF D0 07            [24] 9673 	pop	ar7
      004001 D0 06            [24] 9674 	pop	ar6
      004003 D0 05            [24] 9675 	pop	ar5
      004005 80 0C            [24] 9676 	sjmp	00104$
      004007                       9677 00128$:
      004007 D0 07            [24] 9678 	pop	ar7
      004009 D0 06            [24] 9679 	pop	ar6
      00400B D0 05            [24] 9680 	pop	ar5
                                   9681 ;	FATFS\src\ff.c:2144: return 2;
      00400D 75 82 02         [24] 9682 	mov	dpl,#0x02
      004010 02 42 21         [24] 9683 	ljmp	00109$
      004013                       9684 00104$:
                                   9685 ;	FATFS\src\ff.c:2146: if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
      004013 E5 00            [12] 9686 	mov	a,_bp
      004015 24 08            [12] 9687 	add	a,#0x08
      004017 F8               [12] 9688 	mov	r0,a
      004018 74 26            [12] 9689 	mov	a,#0x26
      00401A 2D               [12] 9690 	add	a,r5
      00401B F6               [12] 9691 	mov	@r0,a
      00401C E4               [12] 9692 	clr	a
      00401D 3E               [12] 9693 	addc	a,r6
      00401E 08               [12] 9694 	inc	r0
      00401F F6               [12] 9695 	mov	@r0,a
      004020 08               [12] 9696 	inc	r0
      004021 A6 07            [24] 9697 	mov	@r0,ar7
      004023 C0 05            [24] 9698 	push	ar5
      004025 C0 06            [24] 9699 	push	ar6
      004027 C0 07            [24] 9700 	push	ar7
      004029 E5 00            [12] 9701 	mov	a,_bp
      00402B 24 08            [12] 9702 	add	a,#0x08
      00402D F8               [12] 9703 	mov	r0,a
      00402E A9 00            [24] 9704 	mov	r1,_bp
      004030 09               [12] 9705 	inc	r1
      004031 74 36            [12] 9706 	mov	a,#0x36
      004033 26               [12] 9707 	add	a,@r0
      004034 F7               [12] 9708 	mov	@r1,a
      004035 E4               [12] 9709 	clr	a
      004036 08               [12] 9710 	inc	r0
      004037 36               [12] 9711 	addc	a,@r0
      004038 09               [12] 9712 	inc	r1
      004039 F7               [12] 9713 	mov	@r1,a
      00403A 08               [12] 9714 	inc	r0
      00403B 09               [12] 9715 	inc	r1
      00403C E6               [12] 9716 	mov	a,@r0
      00403D F7               [12] 9717 	mov	@r1,a
      00403E E5 00            [12] 9718 	mov	a,_bp
      004040 24 08            [12] 9719 	add	a,#0x08
      004042 F8               [12] 9720 	mov	r0,a
      004043 74 39            [12] 9721 	mov	a,#0x39
      004045 26               [12] 9722 	add	a,@r0
      004046 FD               [12] 9723 	mov	r5,a
      004047 E4               [12] 9724 	clr	a
      004048 08               [12] 9725 	inc	r0
      004049 36               [12] 9726 	addc	a,@r0
      00404A FE               [12] 9727 	mov	r6,a
      00404B 08               [12] 9728 	inc	r0
      00404C 86 07            [24] 9729 	mov	ar7,@r0
      00404E 8D 82            [24] 9730 	mov	dpl,r5
      004050 8E 83            [24] 9731 	mov	dph,r6
      004052 8F F0            [24] 9732 	mov	b,r7
      004054 12 00 00         [24] 9733 	lcall	__gptrget
      004057 FC               [12] 9734 	mov	r4,a
      004058 E4               [12] 9735 	clr	a
      004059 E5 00            [12] 9736 	mov	a,_bp
      00405B 24 0B            [12] 9737 	add	a,#0x0b
      00405D F8               [12] 9738 	mov	r0,a
      00405E 08               [12] 9739 	inc	r0
      00405F 08               [12] 9740 	inc	r0
      004060 08               [12] 9741 	inc	r0
      004061 A6 04            [24] 9742 	mov	@r0,ar4
      004063 18               [12] 9743 	dec	r0
      004064 18               [12] 9744 	dec	r0
      004065 18               [12] 9745 	dec	r0
      004066 76 00            [12] 9746 	mov	@r0,#0x00
      004068 08               [12] 9747 	inc	r0
      004069 76 00            [12] 9748 	mov	@r0,#0x00
      00406B 08               [12] 9749 	inc	r0
      00406C 76 00            [12] 9750 	mov	@r0,#0x00
      00406E E5 00            [12] 9751 	mov	a,_bp
      004070 24 08            [12] 9752 	add	a,#0x08
      004072 F8               [12] 9753 	mov	r0,a
      004073 74 38            [12] 9754 	mov	a,#0x38
      004075 26               [12] 9755 	add	a,@r0
      004076 FA               [12] 9756 	mov	r2,a
      004077 E4               [12] 9757 	clr	a
      004078 08               [12] 9758 	inc	r0
      004079 36               [12] 9759 	addc	a,@r0
      00407A FB               [12] 9760 	mov	r3,a
      00407B 08               [12] 9761 	inc	r0
      00407C 86 07            [24] 9762 	mov	ar7,@r0
      00407E 8A 82            [24] 9763 	mov	dpl,r2
      004080 8B 83            [24] 9764 	mov	dph,r3
      004082 8F F0            [24] 9765 	mov	b,r7
      004084 12 00 00         [24] 9766 	lcall	__gptrget
      004087 FA               [12] 9767 	mov	r2,a
      004088 7F 00            [12] 9768 	mov	r7,#0x00
      00408A 8F 05            [24] 9769 	mov	ar5,r7
      00408C 8A 06            [24] 9770 	mov	ar6,r2
      00408E E4               [12] 9771 	clr	a
      00408F FA               [12] 9772 	mov	r2,a
      004090 FF               [12] 9773 	mov	r7,a
      004091 E5 00            [12] 9774 	mov	a,_bp
      004093 24 0B            [12] 9775 	add	a,#0x0b
      004095 F8               [12] 9776 	mov	r0,a
      004096 EA               [12] 9777 	mov	a,r2
      004097 46               [12] 9778 	orl	a,@r0
      004098 F6               [12] 9779 	mov	@r0,a
      004099 EF               [12] 9780 	mov	a,r7
      00409A 08               [12] 9781 	inc	r0
      00409B 46               [12] 9782 	orl	a,@r0
      00409C F6               [12] 9783 	mov	@r0,a
      00409D EE               [12] 9784 	mov	a,r6
      00409E 08               [12] 9785 	inc	r0
      00409F 46               [12] 9786 	orl	a,@r0
      0040A0 F6               [12] 9787 	mov	@r0,a
      0040A1 ED               [12] 9788 	mov	a,r5
      0040A2 08               [12] 9789 	inc	r0
      0040A3 46               [12] 9790 	orl	a,@r0
      0040A4 F6               [12] 9791 	mov	@r0,a
      0040A5 E5 00            [12] 9792 	mov	a,_bp
      0040A7 24 08            [12] 9793 	add	a,#0x08
      0040A9 F8               [12] 9794 	mov	r0,a
      0040AA 74 37            [12] 9795 	mov	a,#0x37
      0040AC 26               [12] 9796 	add	a,@r0
      0040AD FB               [12] 9797 	mov	r3,a
      0040AE E4               [12] 9798 	clr	a
      0040AF 08               [12] 9799 	inc	r0
      0040B0 36               [12] 9800 	addc	a,@r0
      0040B1 FC               [12] 9801 	mov	r4,a
      0040B2 08               [12] 9802 	inc	r0
      0040B3 86 07            [24] 9803 	mov	ar7,@r0
      0040B5 8B 82            [24] 9804 	mov	dpl,r3
      0040B7 8C 83            [24] 9805 	mov	dph,r4
      0040B9 8F F0            [24] 9806 	mov	b,r7
      0040BB 12 00 00         [24] 9807 	lcall	__gptrget
      0040BE FF               [12] 9808 	mov	r7,a
      0040BF E4               [12] 9809 	clr	a
      0040C0 FB               [12] 9810 	mov	r3,a
      0040C1 FE               [12] 9811 	mov	r6,a
      0040C2 FD               [12] 9812 	mov	r5,a
      0040C3 E5 00            [12] 9813 	mov	a,_bp
      0040C5 24 0B            [12] 9814 	add	a,#0x0b
      0040C7 F8               [12] 9815 	mov	r0,a
      0040C8 EB               [12] 9816 	mov	a,r3
      0040C9 46               [12] 9817 	orl	a,@r0
      0040CA F6               [12] 9818 	mov	@r0,a
      0040CB EF               [12] 9819 	mov	a,r7
      0040CC 08               [12] 9820 	inc	r0
      0040CD 46               [12] 9821 	orl	a,@r0
      0040CE F6               [12] 9822 	mov	@r0,a
      0040CF EE               [12] 9823 	mov	a,r6
      0040D0 08               [12] 9824 	inc	r0
      0040D1 46               [12] 9825 	orl	a,@r0
      0040D2 F6               [12] 9826 	mov	@r0,a
      0040D3 ED               [12] 9827 	mov	a,r5
      0040D4 08               [12] 9828 	inc	r0
      0040D5 46               [12] 9829 	orl	a,@r0
      0040D6 F6               [12] 9830 	mov	@r0,a
      0040D7 A8 00            [24] 9831 	mov	r0,_bp
      0040D9 08               [12] 9832 	inc	r0
      0040DA 86 82            [24] 9833 	mov	dpl,@r0
      0040DC 08               [12] 9834 	inc	r0
      0040DD 86 83            [24] 9835 	mov	dph,@r0
      0040DF 08               [12] 9836 	inc	r0
      0040E0 86 F0            [24] 9837 	mov	b,@r0
      0040E2 12 00 00         [24] 9838 	lcall	__gptrget
      0040E5 FA               [12] 9839 	mov	r2,a
      0040E6 E4               [12] 9840 	clr	a
      0040E7 FC               [12] 9841 	mov	r4,a
      0040E8 FE               [12] 9842 	mov	r6,a
      0040E9 FF               [12] 9843 	mov	r7,a
      0040EA E5 00            [12] 9844 	mov	a,_bp
      0040EC 24 0B            [12] 9845 	add	a,#0x0b
      0040EE F8               [12] 9846 	mov	r0,a
      0040EF E6               [12] 9847 	mov	a,@r0
      0040F0 42 02            [12] 9848 	orl	ar2,a
      0040F2 08               [12] 9849 	inc	r0
      0040F3 E6               [12] 9850 	mov	a,@r0
      0040F4 42 04            [12] 9851 	orl	ar4,a
      0040F6 08               [12] 9852 	inc	r0
      0040F7 E6               [12] 9853 	mov	a,@r0
      0040F8 42 06            [12] 9854 	orl	ar6,a
      0040FA 08               [12] 9855 	inc	r0
      0040FB E6               [12] 9856 	mov	a,@r0
      0040FC 42 07            [12] 9857 	orl	ar7,a
      0040FE 7F 00            [12] 9858 	mov	r7,#0x00
      004100 BA 46 0B         [24] 9859 	cjne	r2,#0x46,00129$
      004103 BC 41 08         [24] 9860 	cjne	r4,#0x41,00129$
      004106 BE 54 05         [24] 9861 	cjne	r6,#0x54,00129$
      004109 BF 00 02         [24] 9862 	cjne	r7,#0x00,00129$
      00410C 80 08            [24] 9863 	sjmp	00130$
      00410E                       9864 00129$:
      00410E D0 07            [24] 9865 	pop	ar7
      004110 D0 06            [24] 9866 	pop	ar6
      004112 D0 05            [24] 9867 	pop	ar5
      004114 80 0C            [24] 9868 	sjmp	00106$
      004116                       9869 00130$:
      004116 D0 07            [24] 9870 	pop	ar7
      004118 D0 06            [24] 9871 	pop	ar6
      00411A D0 05            [24] 9872 	pop	ar5
                                   9873 ;	FATFS\src\ff.c:2147: return 0;
      00411C 75 82 00         [24] 9874 	mov	dpl,#0x00
      00411F 02 42 21         [24] 9875 	ljmp	00109$
      004122                       9876 00106$:
                                   9877 ;	FATFS\src\ff.c:2148: if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
      004122 E5 00            [12] 9878 	mov	a,_bp
      004124 24 08            [12] 9879 	add	a,#0x08
      004126 F8               [12] 9880 	mov	r0,a
      004127 74 26            [12] 9881 	mov	a,#0x26
      004129 2D               [12] 9882 	add	a,r5
      00412A F6               [12] 9883 	mov	@r0,a
      00412B E4               [12] 9884 	clr	a
      00412C 3E               [12] 9885 	addc	a,r6
      00412D 08               [12] 9886 	inc	r0
      00412E F6               [12] 9887 	mov	@r0,a
      00412F 08               [12] 9888 	inc	r0
      004130 A6 07            [24] 9889 	mov	@r0,ar7
      004132 E5 00            [12] 9890 	mov	a,_bp
      004134 24 08            [12] 9891 	add	a,#0x08
      004136 F8               [12] 9892 	mov	r0,a
      004137 E5 00            [12] 9893 	mov	a,_bp
      004139 24 0B            [12] 9894 	add	a,#0x0b
      00413B F9               [12] 9895 	mov	r1,a
      00413C 74 52            [12] 9896 	mov	a,#0x52
      00413E 26               [12] 9897 	add	a,@r0
      00413F F7               [12] 9898 	mov	@r1,a
      004140 E4               [12] 9899 	clr	a
      004141 08               [12] 9900 	inc	r0
      004142 36               [12] 9901 	addc	a,@r0
      004143 09               [12] 9902 	inc	r1
      004144 F7               [12] 9903 	mov	@r1,a
      004145 08               [12] 9904 	inc	r0
      004146 09               [12] 9905 	inc	r1
      004147 E6               [12] 9906 	mov	a,@r0
      004148 F7               [12] 9907 	mov	@r1,a
      004149 E5 00            [12] 9908 	mov	a,_bp
      00414B 24 08            [12] 9909 	add	a,#0x08
      00414D F8               [12] 9910 	mov	r0,a
      00414E 74 55            [12] 9911 	mov	a,#0x55
      004150 26               [12] 9912 	add	a,@r0
      004151 FA               [12] 9913 	mov	r2,a
      004152 E4               [12] 9914 	clr	a
      004153 08               [12] 9915 	inc	r0
      004154 36               [12] 9916 	addc	a,@r0
      004155 FB               [12] 9917 	mov	r3,a
      004156 08               [12] 9918 	inc	r0
      004157 86 04            [24] 9919 	mov	ar4,@r0
      004159 8A 82            [24] 9920 	mov	dpl,r2
      00415B 8B 83            [24] 9921 	mov	dph,r3
      00415D 8C F0            [24] 9922 	mov	b,r4
      00415F 12 00 00         [24] 9923 	lcall	__gptrget
      004162 FA               [12] 9924 	mov	r2,a
      004163 E4               [12] 9925 	clr	a
      004164 E5 00            [12] 9926 	mov	a,_bp
      004166 24 04            [12] 9927 	add	a,#0x04
      004168 F8               [12] 9928 	mov	r0,a
      004169 08               [12] 9929 	inc	r0
      00416A 08               [12] 9930 	inc	r0
      00416B 08               [12] 9931 	inc	r0
      00416C A6 02            [24] 9932 	mov	@r0,ar2
      00416E 18               [12] 9933 	dec	r0
      00416F 18               [12] 9934 	dec	r0
      004170 18               [12] 9935 	dec	r0
      004171 76 00            [12] 9936 	mov	@r0,#0x00
      004173 08               [12] 9937 	inc	r0
      004174 76 00            [12] 9938 	mov	@r0,#0x00
      004176 08               [12] 9939 	inc	r0
      004177 76 00            [12] 9940 	mov	@r0,#0x00
      004179 E5 00            [12] 9941 	mov	a,_bp
      00417B 24 08            [12] 9942 	add	a,#0x08
      00417D F8               [12] 9943 	mov	r0,a
      00417E 74 54            [12] 9944 	mov	a,#0x54
      004180 26               [12] 9945 	add	a,@r0
      004181 FD               [12] 9946 	mov	r5,a
      004182 E4               [12] 9947 	clr	a
      004183 08               [12] 9948 	inc	r0
      004184 36               [12] 9949 	addc	a,@r0
      004185 FE               [12] 9950 	mov	r6,a
      004186 08               [12] 9951 	inc	r0
      004187 86 07            [24] 9952 	mov	ar7,@r0
      004189 8D 82            [24] 9953 	mov	dpl,r5
      00418B 8E 83            [24] 9954 	mov	dph,r6
      00418D 8F F0            [24] 9955 	mov	b,r7
      00418F 12 00 00         [24] 9956 	lcall	__gptrget
      004192 FD               [12] 9957 	mov	r5,a
      004193 7F 00            [12] 9958 	mov	r7,#0x00
      004195 8F 04            [24] 9959 	mov	ar4,r7
      004197 8D 06            [24] 9960 	mov	ar6,r5
      004199 E4               [12] 9961 	clr	a
      00419A FD               [12] 9962 	mov	r5,a
      00419B FF               [12] 9963 	mov	r7,a
      00419C E5 00            [12] 9964 	mov	a,_bp
      00419E 24 04            [12] 9965 	add	a,#0x04
      0041A0 F8               [12] 9966 	mov	r0,a
      0041A1 ED               [12] 9967 	mov	a,r5
      0041A2 46               [12] 9968 	orl	a,@r0
      0041A3 F6               [12] 9969 	mov	@r0,a
      0041A4 EF               [12] 9970 	mov	a,r7
      0041A5 08               [12] 9971 	inc	r0
      0041A6 46               [12] 9972 	orl	a,@r0
      0041A7 F6               [12] 9973 	mov	@r0,a
      0041A8 EE               [12] 9974 	mov	a,r6
      0041A9 08               [12] 9975 	inc	r0
      0041AA 46               [12] 9976 	orl	a,@r0
      0041AB F6               [12] 9977 	mov	@r0,a
      0041AC EC               [12] 9978 	mov	a,r4
      0041AD 08               [12] 9979 	inc	r0
      0041AE 46               [12] 9980 	orl	a,@r0
      0041AF F6               [12] 9981 	mov	@r0,a
      0041B0 E5 00            [12] 9982 	mov	a,_bp
      0041B2 24 08            [12] 9983 	add	a,#0x08
      0041B4 F8               [12] 9984 	mov	r0,a
      0041B5 74 53            [12] 9985 	mov	a,#0x53
      0041B7 26               [12] 9986 	add	a,@r0
      0041B8 FA               [12] 9987 	mov	r2,a
      0041B9 E4               [12] 9988 	clr	a
      0041BA 08               [12] 9989 	inc	r0
      0041BB 36               [12] 9990 	addc	a,@r0
      0041BC FB               [12] 9991 	mov	r3,a
      0041BD 08               [12] 9992 	inc	r0
      0041BE 86 07            [24] 9993 	mov	ar7,@r0
      0041C0 8A 82            [24] 9994 	mov	dpl,r2
      0041C2 8B 83            [24] 9995 	mov	dph,r3
      0041C4 8F F0            [24] 9996 	mov	b,r7
      0041C6 12 00 00         [24] 9997 	lcall	__gptrget
      0041C9 FF               [12] 9998 	mov	r7,a
      0041CA E4               [12] 9999 	clr	a
      0041CB FA               [12]10000 	mov	r2,a
      0041CC FE               [12]10001 	mov	r6,a
      0041CD FD               [12]10002 	mov	r5,a
      0041CE E5 00            [12]10003 	mov	a,_bp
      0041D0 24 04            [12]10004 	add	a,#0x04
      0041D2 F8               [12]10005 	mov	r0,a
      0041D3 EA               [12]10006 	mov	a,r2
      0041D4 46               [12]10007 	orl	a,@r0
      0041D5 F6               [12]10008 	mov	@r0,a
      0041D6 EF               [12]10009 	mov	a,r7
      0041D7 08               [12]10010 	inc	r0
      0041D8 46               [12]10011 	orl	a,@r0
      0041D9 F6               [12]10012 	mov	@r0,a
      0041DA EE               [12]10013 	mov	a,r6
      0041DB 08               [12]10014 	inc	r0
      0041DC 46               [12]10015 	orl	a,@r0
      0041DD F6               [12]10016 	mov	@r0,a
      0041DE ED               [12]10017 	mov	a,r5
      0041DF 08               [12]10018 	inc	r0
      0041E0 46               [12]10019 	orl	a,@r0
      0041E1 F6               [12]10020 	mov	@r0,a
      0041E2 E5 00            [12]10021 	mov	a,_bp
      0041E4 24 0B            [12]10022 	add	a,#0x0b
      0041E6 F8               [12]10023 	mov	r0,a
      0041E7 86 82            [24]10024 	mov	dpl,@r0
      0041E9 08               [12]10025 	inc	r0
      0041EA 86 83            [24]10026 	mov	dph,@r0
      0041EC 08               [12]10027 	inc	r0
      0041ED 86 F0            [24]10028 	mov	b,@r0
      0041EF 12 00 00         [24]10029 	lcall	__gptrget
      0041F2 FB               [12]10030 	mov	r3,a
      0041F3 E4               [12]10031 	clr	a
      0041F4 FC               [12]10032 	mov	r4,a
      0041F5 FE               [12]10033 	mov	r6,a
      0041F6 FF               [12]10034 	mov	r7,a
      0041F7 E5 00            [12]10035 	mov	a,_bp
      0041F9 24 04            [12]10036 	add	a,#0x04
      0041FB F8               [12]10037 	mov	r0,a
      0041FC E6               [12]10038 	mov	a,@r0
      0041FD 42 03            [12]10039 	orl	ar3,a
      0041FF 08               [12]10040 	inc	r0
      004200 E6               [12]10041 	mov	a,@r0
      004201 42 04            [12]10042 	orl	ar4,a
      004203 08               [12]10043 	inc	r0
      004204 E6               [12]10044 	mov	a,@r0
      004205 42 06            [12]10045 	orl	ar6,a
      004207 08               [12]10046 	inc	r0
      004208 E6               [12]10047 	mov	a,@r0
      004209 42 07            [12]10048 	orl	ar7,a
      00420B 7F 00            [12]10049 	mov	r7,#0x00
      00420D BB 46 0E         [24]10050 	cjne	r3,#0x46,00108$
      004210 BC 41 0B         [24]10051 	cjne	r4,#0x41,00108$
      004213 BE 54 08         [24]10052 	cjne	r6,#0x54,00108$
      004216 BF 00 05         [24]10053 	cjne	r7,#0x00,00108$
                                  10054 ;	FATFS\src\ff.c:2149: return 0;
      004219 75 82 00         [24]10055 	mov	dpl,#0x00
      00421C 80 03            [24]10056 	sjmp	00109$
      00421E                      10057 00108$:
                                  10058 ;	FATFS\src\ff.c:2151: return 1;
      00421E 75 82 01         [24]10059 	mov	dpl,#0x01
      004221                      10060 00109$:
                                  10061 ;	FATFS\src\ff.c:2152: }
      004221 85 00 81         [24]10062 	mov	sp,_bp
      004224 D0 00            [24]10063 	pop	_bp
      004226 02 00 00         [24]10064 	ljmp	__sdcc_banked_ret
                                  10065 ;------------------------------------------------------------
                                  10066 ;Allocation info for local variables in function 'find_volume'
                                  10067 ;------------------------------------------------------------
                                  10068 ;path                      Allocated to stack - _bp -6
                                  10069 ;wmode                     Allocated to stack - _bp -7
                                  10070 ;rfs                       Allocated to registers r5 r6 r7 
                                  10071 ;fmt1                      Allocated to stack - _bp +34
                                  10072 ;vol1                      Allocated to registers r3 r4 
                                  10073 ;stat1                     Allocated to registers r7 
                                  10074 ;bsect1                    Allocated to stack - _bp +46
                                  10075 ;fasize1                   Allocated to stack - _bp +50
                                  10076 ;tsect1                    Allocated to stack - _bp +39
                                  10077 ;sysect1                   Allocated to stack - _bp +35
                                  10078 ;nclst1                    Allocated to registers r4 r5 r6 r7 
                                  10079 ;szbfat1                   Allocated to stack - _bp +30
                                  10080 ;nrsv1                     Allocated to registers r7 r5 
                                  10081 ;fs1                       Allocated to stack - _bp +43
                                  10082 ;i                         Allocated to stack - _bp +70
                                  10083 ;br                        Allocated to stack - _bp +54
                                  10084 ;pt                        Allocated to registers r7 r6 r5 
                                  10085 ;sloc0                     Allocated to stack - _bp +12
                                  10086 ;sloc1                     Allocated to stack - _bp +61
                                  10087 ;sloc2                     Allocated to stack - _bp +62
                                  10088 ;sloc3                     Allocated to stack - _bp +1
                                  10089 ;sloc4                     Allocated to stack - _bp +4
                                  10090 ;sloc5                     Allocated to stack - _bp +15
                                  10091 ;sloc6                     Allocated to stack - _bp +8
                                  10092 ;sloc7                     Allocated to stack - _bp +18
                                  10093 ;sloc8                     Allocated to stack - _bp +22
                                  10094 ;sloc9                     Allocated to stack - _bp +26
                                  10095 ;------------------------------------------------------------
                                  10096 ;	FATFS\src\ff.c:2160: FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
                                  10097 ;	-----------------------------------------
                                  10098 ;	 function find_volume
                                  10099 ;	-----------------------------------------
      004229                      10100 _find_volume:
      004229 C0 00            [24]10101 	push	_bp
      00422B E5 81            [12]10102 	mov	a,sp
      00422D F5 00            [12]10103 	mov	_bp,a
      00422F 24 47            [12]10104 	add	a,#0x47
      004231 F5 81            [12]10105 	mov	sp,a
                                  10106 ;	FATFS\src\ff.c:2173: P1 = 0xd1;
                                  10107 ;	FATFS\src\ff.c:2175: *rfs = 0;
      004233 AD 82            [24]10108 	mov	r5,dpl
      004235 AE 83            [24]10109 	mov	r6,dph
      004237 AF F0            [24]10110 	mov	r7,b
      004239 75 90 D1         [24]10111 	mov	_P1,#0xd1
      00423C E4               [12]10112 	clr	a
      00423D 12 00 00         [24]10113 	lcall	__gptrput
      004240 A3               [24]10114 	inc	dptr
      004241 12 00 00         [24]10115 	lcall	__gptrput
      004244 A3               [24]10116 	inc	dptr
      004245 12 00 00         [24]10117 	lcall	__gptrput
                                  10118 ;	FATFS\src\ff.c:2176: P1 = 0xd2;
      004248 75 90 D2         [24]10119 	mov	_P1,#0xd2
                                  10120 ;	FATFS\src\ff.c:2177: vol1 = get_ldnumber(path);
      00424B E5 00            [12]10121 	mov	a,_bp
      00424D 24 FA            [12]10122 	add	a,#0xfa
      00424F F8               [12]10123 	mov	r0,a
      004250 86 82            [24]10124 	mov	dpl,@r0
      004252 08               [12]10125 	inc	r0
      004253 86 83            [24]10126 	mov	dph,@r0
      004255 08               [12]10127 	inc	r0
      004256 86 F0            [24]10128 	mov	b,@r0
      004258 C0 07            [24]10129 	push	ar7
      00425A C0 06            [24]10130 	push	ar6
      00425C C0 05            [24]10131 	push	ar5
      00425E 78 D7            [12]10132 	mov	r0,#_get_ldnumber
      004260 79 3D            [12]10133 	mov	r1,#(_get_ldnumber >> 8)
      004262 7A 00            [12]10134 	mov	r2,#(_get_ldnumber >> 16)
      004264 12 00 00         [24]10135 	lcall	__sdcc_banked_call
      004267 AB 82            [24]10136 	mov	r3,dpl
      004269 AC 83            [24]10137 	mov	r4,dph
      00426B D0 05            [24]10138 	pop	ar5
      00426D D0 06            [24]10139 	pop	ar6
      00426F D0 07            [24]10140 	pop	ar7
                                  10141 ;	FATFS\src\ff.c:2178: P1 = 0xd3;
      004271 75 90 D3         [24]10142 	mov	_P1,#0xd3
                                  10143 ;	FATFS\src\ff.c:2179: if (vol1 < 0)
      004274 EC               [12]10144 	mov	a,r4
      004275 30 E7 09         [24]10145 	jnb	acc.7,00102$
                                  10146 ;	FATFS\src\ff.c:2181: P1 = 0xd4;
      004278 75 90 D4         [24]10147 	mov	_P1,#0xd4
                                  10148 ;	FATFS\src\ff.c:2182: return FR_INVALID_DRIVE;
      00427B 75 82 0B         [24]10149 	mov	dpl,#0x0b
      00427E 02 51 FC         [24]10150 	ljmp	00170$
      004281                      10151 00102$:
                                  10152 ;	FATFS\src\ff.c:2185: P1 = 0xd5;
      004281 C0 05            [24]10153 	push	ar5
      004283 C0 06            [24]10154 	push	ar6
      004285 C0 07            [24]10155 	push	ar7
      004287 75 90 D5         [24]10156 	mov	_P1,#0xd5
                                  10157 ;	FATFS\src\ff.c:2187: fs1 = FatFs[vol1];					/* Get pointer to the file system object */
      00428A C0 06            [24]10158 	push	ar6
      00428C C0 05            [24]10159 	push	ar5
      00428E C0 04            [24]10160 	push	ar4
      004290 C0 03            [24]10161 	push	ar3
      004292 C0 03            [24]10162 	push	ar3
      004294 C0 04            [24]10163 	push	ar4
      004296 90 00 03         [24]10164 	mov	dptr,#0x0003
      004299 12 01 0E         [24]10165 	lcall	__mulint
      00429C AA 82            [24]10166 	mov	r2,dpl
      00429E AF 83            [24]10167 	mov	r7,dph
      0042A0 15 81            [12]10168 	dec	sp
      0042A2 15 81            [12]10169 	dec	sp
      0042A4 D0 03            [24]10170 	pop	ar3
      0042A6 D0 04            [24]10171 	pop	ar4
      0042A8 D0 05            [24]10172 	pop	ar5
      0042AA D0 06            [24]10173 	pop	ar6
      0042AC EA               [12]10174 	mov	a,r2
      0042AD 24 47            [12]10175 	add	a,#_FatFs
      0042AF F5 82            [12]10176 	mov	dpl,a
      0042B1 EF               [12]10177 	mov	a,r7
      0042B2 34 A2            [12]10178 	addc	a,#(_FatFs >> 8)
      0042B4 F5 83            [12]10179 	mov	dph,a
      0042B6 E5 00            [12]10180 	mov	a,_bp
      0042B8 24 2B            [12]10181 	add	a,#0x2b
      0042BA F8               [12]10182 	mov	r0,a
      0042BB E0               [24]10183 	movx	a,@dptr
      0042BC F6               [12]10184 	mov	@r0,a
      0042BD A3               [24]10185 	inc	dptr
      0042BE E0               [24]10186 	movx	a,@dptr
      0042BF 08               [12]10187 	inc	r0
      0042C0 F6               [12]10188 	mov	@r0,a
      0042C1 A3               [24]10189 	inc	dptr
      0042C2 E0               [24]10190 	movx	a,@dptr
      0042C3 08               [12]10191 	inc	r0
      0042C4 F6               [12]10192 	mov	@r0,a
                                  10193 ;	FATFS\src\ff.c:2188: P1 = 0xd6;
      0042C5 75 90 D6         [24]10194 	mov	_P1,#0xd6
                                  10195 ;	FATFS\src\ff.c:2189: if(!fs1)
      0042C8 D0 07            [24]10196 	pop	ar7
      0042CA D0 06            [24]10197 	pop	ar6
      0042CC D0 05            [24]10198 	pop	ar5
      0042CE E5 00            [12]10199 	mov	a,_bp
      0042D0 24 2B            [12]10200 	add	a,#0x2b
      0042D2 F8               [12]10201 	mov	r0,a
      0042D3 E6               [12]10202 	mov	a,@r0
      0042D4 08               [12]10203 	inc	r0
      0042D5 46               [12]10204 	orl	a,@r0
      0042D6 70 09            [24]10205 	jnz	00104$
                                  10206 ;	FATFS\src\ff.c:2191: P1 = 0xd7;
      0042D8 75 90 D7         [24]10207 	mov	_P1,#0xd7
                                  10208 ;	FATFS\src\ff.c:2192: return FR_NOT_ENABLED;		/* Is the file system object available? */
      0042DB 75 82 0C         [24]10209 	mov	dpl,#0x0c
      0042DE 02 51 FC         [24]10210 	ljmp	00170$
      0042E1                      10211 00104$:
                                  10212 ;	FATFS\src\ff.c:2195: P1 = 0xd8;
      0042E1 75 90 D8         [24]10213 	mov	_P1,#0xd8
                                  10214 ;	FATFS\src\ff.c:2197: *rfs = fs1;							/* Return pointer to the file system object */
      0042E4 8D 82            [24]10215 	mov	dpl,r5
      0042E6 8E 83            [24]10216 	mov	dph,r6
      0042E8 8F F0            [24]10217 	mov	b,r7
      0042EA E5 00            [12]10218 	mov	a,_bp
      0042EC 24 2B            [12]10219 	add	a,#0x2b
      0042EE F8               [12]10220 	mov	r0,a
      0042EF E6               [12]10221 	mov	a,@r0
      0042F0 12 00 00         [24]10222 	lcall	__gptrput
      0042F3 A3               [24]10223 	inc	dptr
      0042F4 08               [12]10224 	inc	r0
      0042F5 E6               [12]10225 	mov	a,@r0
      0042F6 12 00 00         [24]10226 	lcall	__gptrput
      0042F9 A3               [24]10227 	inc	dptr
      0042FA 08               [12]10228 	inc	r0
      0042FB E6               [12]10229 	mov	a,@r0
      0042FC 12 00 00         [24]10230 	lcall	__gptrput
                                  10231 ;	FATFS\src\ff.c:2199: P1 = 0xd9;
      0042FF 75 90 D9         [24]10232 	mov	_P1,#0xd9
                                  10233 ;	FATFS\src\ff.c:2200: if (fs1->fs_type)
      004302 E5 00            [12]10234 	mov	a,_bp
      004304 24 2B            [12]10235 	add	a,#0x2b
      004306 F8               [12]10236 	mov	r0,a
      004307 86 82            [24]10237 	mov	dpl,@r0
      004309 08               [12]10238 	inc	r0
      00430A 86 83            [24]10239 	mov	dph,@r0
      00430C 08               [12]10240 	inc	r0
      00430D 86 F0            [24]10241 	mov	b,@r0
      00430F 12 00 00         [24]10242 	lcall	__gptrget
      004312 60 44            [24]10243 	jz	00112$
                                  10244 ;	FATFS\src\ff.c:2202: P1 = 0xda;
      004314 75 90 DA         [24]10245 	mov	_P1,#0xda
                                  10246 ;	FATFS\src\ff.c:2203: stat1 = disk_status(fs1->drv);
      004317 E5 00            [12]10247 	mov	a,_bp
      004319 24 2B            [12]10248 	add	a,#0x2b
      00431B F8               [12]10249 	mov	r0,a
      00431C 74 01            [12]10250 	mov	a,#0x01
      00431E 26               [12]10251 	add	a,@r0
      00431F FD               [12]10252 	mov	r5,a
      004320 E4               [12]10253 	clr	a
      004321 08               [12]10254 	inc	r0
      004322 36               [12]10255 	addc	a,@r0
      004323 FE               [12]10256 	mov	r6,a
      004324 08               [12]10257 	inc	r0
      004325 86 07            [24]10258 	mov	ar7,@r0
      004327 8D 82            [24]10259 	mov	dpl,r5
      004329 8E 83            [24]10260 	mov	dph,r6
      00432B 8F F0            [24]10261 	mov	b,r7
      00432D 12 00 00         [24]10262 	lcall	__gptrget
      004330 F5 82            [12]10263 	mov	dpl,a
      004332 C0 04            [24]10264 	push	ar4
      004334 C0 03            [24]10265 	push	ar3
      004336 78 30            [12]10266 	mov	r0,#_disk_status
      004338 79 07            [12]10267 	mov	r1,#(_disk_status >> 8)
      00433A 7A 00            [12]10268 	mov	r2,#(_disk_status >> 16)
      00433C 12 00 00         [24]10269 	lcall	__sdcc_banked_call
      00433F AF 82            [24]10270 	mov	r7,dpl
      004341 D0 03            [24]10271 	pop	ar3
      004343 D0 04            [24]10272 	pop	ar4
                                  10273 ;	FATFS\src\ff.c:2204: P1 = 0xdb;
      004345 75 90 DB         [24]10274 	mov	_P1,#0xdb
                                  10275 ;	FATFS\src\ff.c:2205: if (!(stat1 & STA_NOINIT))
      004348 EF               [12]10276 	mov	a,r7
      004349 20 E0 0C         [24]10277 	jb	acc.0,00112$
                                  10278 ;	FATFS\src\ff.c:2208: P1 = 0xde;
      00434C 75 90 DE         [24]10279 	mov	_P1,#0xde
                                  10280 ;	FATFS\src\ff.c:2214: P1 = 0xe1;
      00434F 75 90 E1         [24]10281 	mov	_P1,#0xe1
                                  10282 ;	FATFS\src\ff.c:2215: return FR_OK;				/* The file system object is valid */
      004352 75 82 00         [24]10283 	mov	dpl,#0x00
      004355 02 51 FC         [24]10284 	ljmp	00170$
      004358                      10285 00112$:
                                  10286 ;	FATFS\src\ff.c:2218: P1 = 0xe2;
      004358 75 90 E2         [24]10287 	mov	_P1,#0xe2
                                  10288 ;	FATFS\src\ff.c:2223: fs1->fs_type = 0;					/* Clear the file system object */
      00435B E5 00            [12]10289 	mov	a,_bp
      00435D 24 2B            [12]10290 	add	a,#0x2b
      00435F F8               [12]10291 	mov	r0,a
      004360 86 82            [24]10292 	mov	dpl,@r0
      004362 08               [12]10293 	inc	r0
      004363 86 83            [24]10294 	mov	dph,@r0
      004365 08               [12]10295 	inc	r0
      004366 86 F0            [24]10296 	mov	b,@r0
      004368 E4               [12]10297 	clr	a
      004369 12 00 00         [24]10298 	lcall	__gptrput
                                  10299 ;	FATFS\src\ff.c:2224: P1 = 0xe3;
      00436C 75 90 E3         [24]10300 	mov	_P1,#0xe3
                                  10301 ;	FATFS\src\ff.c:2225: fs1->drv = LD2PD(vol1);				/* Bind the logical drive and a physical drive */
      00436F E5 00            [12]10302 	mov	a,_bp
      004371 24 2B            [12]10303 	add	a,#0x2b
      004373 F8               [12]10304 	mov	r0,a
      004374 74 01            [12]10305 	mov	a,#0x01
      004376 26               [12]10306 	add	a,@r0
      004377 FD               [12]10307 	mov	r5,a
      004378 E4               [12]10308 	clr	a
      004379 08               [12]10309 	inc	r0
      00437A 36               [12]10310 	addc	a,@r0
      00437B FE               [12]10311 	mov	r6,a
      00437C 08               [12]10312 	inc	r0
      00437D 86 07            [24]10313 	mov	ar7,@r0
      00437F 8D 82            [24]10314 	mov	dpl,r5
      004381 8E 83            [24]10315 	mov	dph,r6
      004383 8F F0            [24]10316 	mov	b,r7
      004385 EB               [12]10317 	mov	a,r3
      004386 12 00 00         [24]10318 	lcall	__gptrput
                                  10319 ;	FATFS\src\ff.c:2226: P1 = 0xe4;
      004389 75 90 E4         [24]10320 	mov	_P1,#0xe4
                                  10321 ;	FATFS\src\ff.c:2227: stat1 = disk_initialize(fs1->drv);	/* Initialize the physical drive */
      00438C 8D 82            [24]10322 	mov	dpl,r5
      00438E 8E 83            [24]10323 	mov	dph,r6
      004390 8F F0            [24]10324 	mov	b,r7
      004392 12 00 00         [24]10325 	lcall	__gptrget
      004395 F5 82            [12]10326 	mov	dpl,a
      004397 78 F3            [12]10327 	mov	r0,#_disk_initialize
      004399 79 06            [12]10328 	mov	r1,#(_disk_initialize >> 8)
      00439B 7A 00            [12]10329 	mov	r2,#(_disk_initialize >> 16)
      00439D 12 00 00         [24]10330 	lcall	__sdcc_banked_call
      0043A0 AF 82            [24]10331 	mov	r7,dpl
                                  10332 ;	FATFS\src\ff.c:2228: P1 = 0xe5;
      0043A2 75 90 E5         [24]10333 	mov	_P1,#0xe5
                                  10334 ;	FATFS\src\ff.c:2229: if (stat1 & STA_NOINIT)				/* Check if the initialization succeeded */
      0043A5 EF               [12]10335 	mov	a,r7
      0043A6 30 E0 09         [24]10336 	jnb	acc.0,00116$
                                  10337 ;	FATFS\src\ff.c:2231: P1 = 0xe6;
      0043A9 75 90 E6         [24]10338 	mov	_P1,#0xe6
                                  10339 ;	FATFS\src\ff.c:2232: return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
      0043AC 75 82 03         [24]10340 	mov	dpl,#0x03
      0043AF 02 51 FC         [24]10341 	ljmp	00170$
                                  10342 ;	FATFS\src\ff.c:2237: return FR_WRITE_PROTECTED;
      0043B2                      10343 00116$:
                                  10344 ;	FATFS\src\ff.c:2249: P1 = 0xe9;
      0043B2 75 90 E9         [24]10345 	mov	_P1,#0xe9
                                  10346 ;	FATFS\src\ff.c:2251: bsect1 = 0;
      0043B5 E5 00            [12]10347 	mov	a,_bp
      0043B7 24 2E            [12]10348 	add	a,#0x2e
      0043B9 F8               [12]10349 	mov	r0,a
      0043BA E4               [12]10350 	clr	a
      0043BB F6               [12]10351 	mov	@r0,a
      0043BC 08               [12]10352 	inc	r0
      0043BD F6               [12]10353 	mov	@r0,a
      0043BE 08               [12]10354 	inc	r0
      0043BF F6               [12]10355 	mov	@r0,a
      0043C0 08               [12]10356 	inc	r0
      0043C1 F6               [12]10357 	mov	@r0,a
                                  10358 ;	FATFS\src\ff.c:2252: P1 = 0xea;
      0043C2 75 90 EA         [24]10359 	mov	_P1,#0xea
                                  10360 ;	FATFS\src\ff.c:2253: fmt1 = check_fs(fs1, bsect1);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
      0043C5 C0 E0            [24]10361 	push	acc
      0043C7 C0 E0            [24]10362 	push	acc
      0043C9 C0 E0            [24]10363 	push	acc
      0043CB C0 E0            [24]10364 	push	acc
      0043CD E5 00            [12]10365 	mov	a,_bp
      0043CF 24 2B            [12]10366 	add	a,#0x2b
      0043D1 F8               [12]10367 	mov	r0,a
      0043D2 86 82            [24]10368 	mov	dpl,@r0
      0043D4 08               [12]10369 	inc	r0
      0043D5 86 83            [24]10370 	mov	dph,@r0
      0043D7 08               [12]10371 	inc	r0
      0043D8 86 F0            [24]10372 	mov	b,@r0
      0043DA 78 39            [12]10373 	mov	r0,#_check_fs
      0043DC 79 3F            [12]10374 	mov	r1,#(_check_fs >> 8)
      0043DE 7A 00            [12]10375 	mov	r2,#(_check_fs >> 16)
      0043E0 12 00 00         [24]10376 	lcall	__sdcc_banked_call
      0043E3 AB 82            [24]10377 	mov	r3,dpl
      0043E5 E5 81            [12]10378 	mov	a,sp
      0043E7 24 FC            [12]10379 	add	a,#0xfc
      0043E9 F5 81            [12]10380 	mov	sp,a
                                  10381 ;	FATFS\src\ff.c:2254: P1 = 0xeb;
      0043EB 75 90 EB         [24]10382 	mov	_P1,#0xeb
                                  10383 ;	FATFS\src\ff.c:2255: if (fmt1 == 1 || (!fmt1 && (LD2PT(vol1))))
      0043EE BB 01 02         [24]10384 	cjne	r3,#0x01,00341$
      0043F1 80 03            [24]10385 	sjmp	00342$
      0043F3                      10386 00341$:
      0043F3 02 46 5D         [24]10387 	ljmp	00128$
      0043F6                      10388 00342$:
                                  10389 ;	FATFS\src\ff.c:2260: P1 = 0xec;
      0043F6 75 90 EC         [24]10390 	mov	_P1,#0xec
                                  10391 ;	FATFS\src\ff.c:2261: for (i = 0; i < 4; i++)
      0043F9 E5 00            [12]10392 	mov	a,_bp
      0043FB 24 2B            [12]10393 	add	a,#0x2b
      0043FD F8               [12]10394 	mov	r0,a
      0043FE 74 26            [12]10395 	mov	a,#0x26
      004400 26               [12]10396 	add	a,@r0
      004401 FF               [12]10397 	mov	r7,a
      004402 E4               [12]10398 	clr	a
      004403 08               [12]10399 	inc	r0
      004404 36               [12]10400 	addc	a,@r0
      004405 FE               [12]10401 	mov	r6,a
      004406 08               [12]10402 	inc	r0
      004407 86 05            [24]10403 	mov	ar5,@r0
      004409 E5 00            [12]10404 	mov	a,_bp
      00440B 24 0C            [12]10405 	add	a,#0x0c
      00440D F8               [12]10406 	mov	r0,a
      00440E 74 BE            [12]10407 	mov	a,#0xbe
      004410 2F               [12]10408 	add	a,r7
      004411 F6               [12]10409 	mov	@r0,a
      004412 74 01            [12]10410 	mov	a,#0x01
      004414 3E               [12]10411 	addc	a,r6
      004415 08               [12]10412 	inc	r0
      004416 F6               [12]10413 	mov	@r0,a
      004417 08               [12]10414 	inc	r0
      004418 A6 05            [24]10415 	mov	@r0,ar5
      00441A E5 00            [12]10416 	mov	a,_bp
      00441C 24 36            [12]10417 	add	a,#0x36
      00441E FC               [12]10418 	mov	r4,a
      00441F E5 00            [12]10419 	mov	a,_bp
      004421 24 46            [12]10420 	add	a,#0x46
      004423 F8               [12]10421 	mov	r0,a
      004424 E4               [12]10422 	clr	a
      004425 F6               [12]10423 	mov	@r0,a
      004426 08               [12]10424 	inc	r0
      004427 F6               [12]10425 	mov	@r0,a
      004428                      10426 00168$:
                                  10427 ;	FATFS\src\ff.c:2264: BYTE *pt = fs1->win+MBR_Table + i * SZ_PTE;
      004428 E5 00            [12]10428 	mov	a,_bp
      00442A 24 46            [12]10429 	add	a,#0x46
      00442C F8               [12]10430 	mov	r0,a
      00442D 86 07            [24]10431 	mov	ar7,@r0
      00442F 08               [12]10432 	inc	r0
      004430 E6               [12]10433 	mov	a,@r0
      004431 C4               [12]10434 	swap	a
      004432 54 F0            [12]10435 	anl	a,#0xf0
      004434 CF               [12]10436 	xch	a,r7
      004435 C4               [12]10437 	swap	a
      004436 CF               [12]10438 	xch	a,r7
      004437 6F               [12]10439 	xrl	a,r7
      004438 CF               [12]10440 	xch	a,r7
      004439 54 F0            [12]10441 	anl	a,#0xf0
      00443B CF               [12]10442 	xch	a,r7
      00443C 6F               [12]10443 	xrl	a,r7
      00443D FE               [12]10444 	mov	r6,a
      00443E E5 00            [12]10445 	mov	a,_bp
      004440 24 0C            [12]10446 	add	a,#0x0c
      004442 F8               [12]10447 	mov	r0,a
      004443 EF               [12]10448 	mov	a,r7
      004444 26               [12]10449 	add	a,@r0
      004445 FF               [12]10450 	mov	r7,a
      004446 EE               [12]10451 	mov	a,r6
      004447 08               [12]10452 	inc	r0
      004448 36               [12]10453 	addc	a,@r0
      004449 FE               [12]10454 	mov	r6,a
      00444A 08               [12]10455 	inc	r0
      00444B 86 05            [24]10456 	mov	ar5,@r0
                                  10457 ;	FATFS\src\ff.c:2265: br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
      00444D E5 00            [12]10458 	mov	a,_bp
      00444F 24 46            [12]10459 	add	a,#0x46
      004451 F8               [12]10460 	mov	r0,a
      004452 E6               [12]10461 	mov	a,@r0
      004453 25 E0            [12]10462 	add	a,acc
      004455 FB               [12]10463 	mov	r3,a
      004456 08               [12]10464 	inc	r0
      004457 E6               [12]10465 	mov	a,@r0
      004458 33               [12]10466 	rlc	a
      004459 FA               [12]10467 	mov	r2,a
      00445A EB               [12]10468 	mov	a,r3
      00445B 2B               [12]10469 	add	a,r3
      00445C FB               [12]10470 	mov	r3,a
      00445D EA               [12]10471 	mov	a,r2
      00445E 33               [12]10472 	rlc	a
      00445F FA               [12]10473 	mov	r2,a
      004460 EB               [12]10474 	mov	a,r3
      004461 2C               [12]10475 	add	a,r4
      004462 F8               [12]10476 	mov	r0,a
      004463 A9 00            [24]10477 	mov	r1,_bp
      004465 09               [12]10478 	inc	r1
      004466 74 04            [12]10479 	mov	a,#0x04
      004468 2F               [12]10480 	add	a,r7
      004469 F7               [12]10481 	mov	@r1,a
      00446A E4               [12]10482 	clr	a
      00446B 3E               [12]10483 	addc	a,r6
      00446C 09               [12]10484 	inc	r1
      00446D F7               [12]10485 	mov	@r1,a
      00446E 09               [12]10486 	inc	r1
      00446F A7 05            [24]10487 	mov	@r1,ar5
      004471 A9 00            [24]10488 	mov	r1,_bp
      004473 09               [12]10489 	inc	r1
      004474 87 82            [24]10490 	mov	dpl,@r1
      004476 09               [12]10491 	inc	r1
      004477 87 83            [24]10492 	mov	dph,@r1
      004479 09               [12]10493 	inc	r1
      00447A 87 F0            [24]10494 	mov	b,@r1
      00447C 12 00 00         [24]10495 	lcall	__gptrget
      00447F 70 03            [24]10496 	jnz	00343$
      004481 02 45 81         [24]10497 	ljmp	00172$
      004484                      10498 00343$:
      004484 74 08            [12]10499 	mov	a,#0x08
      004486 2F               [12]10500 	add	a,r7
      004487 FF               [12]10501 	mov	r7,a
      004488 E4               [12]10502 	clr	a
      004489 3E               [12]10503 	addc	a,r6
      00448A FE               [12]10504 	mov	r6,a
      00448B 8F 02            [24]10505 	mov	ar2,r7
      00448D 74 03            [12]10506 	mov	a,#0x03
      00448F 2A               [12]10507 	add	a,r2
      004490 F9               [12]10508 	mov	r1,a
      004491 87 02            [24]10509 	mov	ar2,@r1
      004493 E5 00            [12]10510 	mov	a,_bp
      004495 24 04            [12]10511 	add	a,#0x04
      004497 F9               [12]10512 	mov	r1,a
      004498 A7 02            [24]10513 	mov	@r1,ar2
      00449A 09               [12]10514 	inc	r1
      00449B 77 00            [12]10515 	mov	@r1,#0x00
      00449D 09               [12]10516 	inc	r1
      00449E 77 00            [12]10517 	mov	@r1,#0x00
      0044A0 09               [12]10518 	inc	r1
      0044A1 77 00            [12]10519 	mov	@r1,#0x00
      0044A3 E5 00            [12]10520 	mov	a,_bp
      0044A5 24 04            [12]10521 	add	a,#0x04
      0044A7 F9               [12]10522 	mov	r1,a
      0044A8 E7               [12]10523 	mov	a,@r1
      0044A9 09               [12]10524 	inc	r1
      0044AA 09               [12]10525 	inc	r1
      0044AB 09               [12]10526 	inc	r1
      0044AC F7               [12]10527 	mov	@r1,a
      0044AD 19               [12]10528 	dec	r1
      0044AE 19               [12]10529 	dec	r1
      0044AF 19               [12]10530 	dec	r1
      0044B0 77 00            [12]10531 	mov	@r1,#0x00
      0044B2 09               [12]10532 	inc	r1
      0044B3 77 00            [12]10533 	mov	@r1,#0x00
      0044B5 09               [12]10534 	inc	r1
      0044B6 77 00            [12]10535 	mov	@r1,#0x00
      0044B8 E5 00            [12]10536 	mov	a,_bp
      0044BA 24 0F            [12]10537 	add	a,#0x0f
      0044BC F9               [12]10538 	mov	r1,a
      0044BD A7 07            [24]10539 	mov	@r1,ar7
      0044BF 09               [12]10540 	inc	r1
      0044C0 A7 06            [24]10541 	mov	@r1,ar6
      0044C2 09               [12]10542 	inc	r1
      0044C3 A7 05            [24]10543 	mov	@r1,ar5
      0044C5 E5 00            [12]10544 	mov	a,_bp
      0044C7 24 0F            [12]10545 	add	a,#0x0f
      0044C9 F9               [12]10546 	mov	r1,a
      0044CA 87 02            [24]10547 	mov	ar2,@r1
      0044CC 74 02            [12]10548 	mov	a,#0x02
      0044CE 2A               [12]10549 	add	a,r2
      0044CF F9               [12]10550 	mov	r1,a
      0044D0 87 02            [24]10551 	mov	ar2,@r1
      0044D2 E5 00            [12]10552 	mov	a,_bp
      0044D4 24 08            [12]10553 	add	a,#0x08
      0044D6 F9               [12]10554 	mov	r1,a
      0044D7 A7 02            [24]10555 	mov	@r1,ar2
      0044D9 09               [12]10556 	inc	r1
      0044DA 77 00            [12]10557 	mov	@r1,#0x00
      0044DC 09               [12]10558 	inc	r1
      0044DD 77 00            [12]10559 	mov	@r1,#0x00
      0044DF 09               [12]10560 	inc	r1
      0044E0 77 00            [12]10561 	mov	@r1,#0x00
      0044E2 E5 00            [12]10562 	mov	a,_bp
      0044E4 24 08            [12]10563 	add	a,#0x08
      0044E6 F9               [12]10564 	mov	r1,a
      0044E7 09               [12]10565 	inc	r1
      0044E8 E7               [12]10566 	mov	a,@r1
      0044E9 09               [12]10567 	inc	r1
      0044EA 09               [12]10568 	inc	r1
      0044EB F7               [12]10569 	mov	@r1,a
      0044EC 19               [12]10570 	dec	r1
      0044ED 19               [12]10571 	dec	r1
      0044EE 19               [12]10572 	dec	r1
      0044EF E7               [12]10573 	mov	a,@r1
      0044F0 09               [12]10574 	inc	r1
      0044F1 09               [12]10575 	inc	r1
      0044F2 F7               [12]10576 	mov	@r1,a
      0044F3 19               [12]10577 	dec	r1
      0044F4 19               [12]10578 	dec	r1
      0044F5 77 00            [12]10579 	mov	@r1,#0x00
      0044F7 09               [12]10580 	inc	r1
      0044F8 77 00            [12]10581 	mov	@r1,#0x00
      0044FA E5 00            [12]10582 	mov	a,_bp
      0044FC 24 04            [12]10583 	add	a,#0x04
      0044FE F9               [12]10584 	mov	r1,a
      0044FF C0 00            [24]10585 	push	ar0
      004501 E5 00            [12]10586 	mov	a,_bp
      004503 24 08            [12]10587 	add	a,#0x08
      004505 F8               [12]10588 	mov	r0,a
      004506 E7               [12]10589 	mov	a,@r1
      004507 46               [12]10590 	orl	a,@r0
      004508 F6               [12]10591 	mov	@r0,a
      004509 09               [12]10592 	inc	r1
      00450A E7               [12]10593 	mov	a,@r1
      00450B 08               [12]10594 	inc	r0
      00450C 46               [12]10595 	orl	a,@r0
      00450D F6               [12]10596 	mov	@r0,a
      00450E 09               [12]10597 	inc	r1
      00450F E7               [12]10598 	mov	a,@r1
      004510 08               [12]10599 	inc	r0
      004511 46               [12]10600 	orl	a,@r0
      004512 F6               [12]10601 	mov	@r0,a
      004513 09               [12]10602 	inc	r1
      004514 E7               [12]10603 	mov	a,@r1
      004515 08               [12]10604 	inc	r0
      004516 46               [12]10605 	orl	a,@r0
      004517 F6               [12]10606 	mov	@r0,a
      004518 E5 00            [12]10607 	mov	a,_bp
      00451A 24 0F            [12]10608 	add	a,#0x0f
      00451C F9               [12]10609 	mov	r1,a
      00451D A7 07            [24]10610 	mov	@r1,ar7
      00451F 09               [12]10611 	inc	r1
      004520 A7 06            [24]10612 	mov	@r1,ar6
      004522 09               [12]10613 	inc	r1
      004523 A7 05            [24]10614 	mov	@r1,ar5
      004525 E5 00            [12]10615 	mov	a,_bp
      004527 24 0F            [12]10616 	add	a,#0x0f
      004529 F9               [12]10617 	mov	r1,a
      00452A E7               [12]10618 	mov	a,@r1
      00452B 04               [12]10619 	inc	a
      00452C F9               [12]10620 	mov	r1,a
      00452D 87 02            [24]10621 	mov	ar2,@r1
      00452F 8A 03            [24]10622 	mov	ar3,r2
      004531 7A 00            [12]10623 	mov	r2,#0x00
      004533 E5 00            [12]10624 	mov	a,_bp
      004535 24 04            [12]10625 	add	a,#0x04
      004537 F9               [12]10626 	mov	r1,a
      004538 A7 02            [24]10627 	mov	@r1,ar2
      00453A 09               [12]10628 	inc	r1
      00453B A7 03            [24]10629 	mov	@r1,ar3
      00453D 09               [12]10630 	inc	r1
      00453E 77 00            [12]10631 	mov	@r1,#0x00
      004540 09               [12]10632 	inc	r1
      004541 77 00            [12]10633 	mov	@r1,#0x00
      004543 E5 00            [12]10634 	mov	a,_bp
      004545 24 08            [12]10635 	add	a,#0x08
      004547 F9               [12]10636 	mov	r1,a
      004548 E5 00            [12]10637 	mov	a,_bp
      00454A 24 04            [12]10638 	add	a,#0x04
      00454C F8               [12]10639 	mov	r0,a
      00454D E6               [12]10640 	mov	a,@r0
      00454E 47               [12]10641 	orl	a,@r1
      00454F F7               [12]10642 	mov	@r1,a
      004550 08               [12]10643 	inc	r0
      004551 E6               [12]10644 	mov	a,@r0
      004552 09               [12]10645 	inc	r1
      004553 47               [12]10646 	orl	a,@r1
      004554 F7               [12]10647 	mov	@r1,a
      004555 08               [12]10648 	inc	r0
      004556 E6               [12]10649 	mov	a,@r0
      004557 09               [12]10650 	inc	r1
      004558 47               [12]10651 	orl	a,@r1
      004559 F7               [12]10652 	mov	@r1,a
      00455A 08               [12]10653 	inc	r0
      00455B E6               [12]10654 	mov	a,@r0
      00455C 09               [12]10655 	inc	r1
      00455D 47               [12]10656 	orl	a,@r1
      00455E F7               [12]10657 	mov	@r1,a
      00455F D0 00            [24]10658 	pop	ar0
      004561 8F 01            [24]10659 	mov	ar1,r7
      004563 87 02            [24]10660 	mov	ar2,@r1
      004565 8A 07            [24]10661 	mov	ar7,r2
      004567 E4               [12]10662 	clr	a
      004568 FE               [12]10663 	mov	r6,a
      004569 FD               [12]10664 	mov	r5,a
      00456A FA               [12]10665 	mov	r2,a
      00456B E5 00            [12]10666 	mov	a,_bp
      00456D 24 08            [12]10667 	add	a,#0x08
      00456F F9               [12]10668 	mov	r1,a
      004570 EF               [12]10669 	mov	a,r7
      004571 47               [12]10670 	orl	a,@r1
      004572 FF               [12]10671 	mov	r7,a
      004573 EE               [12]10672 	mov	a,r6
      004574 09               [12]10673 	inc	r1
      004575 47               [12]10674 	orl	a,@r1
      004576 FE               [12]10675 	mov	r6,a
      004577 ED               [12]10676 	mov	a,r5
      004578 09               [12]10677 	inc	r1
      004579 47               [12]10678 	orl	a,@r1
      00457A FD               [12]10679 	mov	r5,a
      00457B EA               [12]10680 	mov	a,r2
      00457C 09               [12]10681 	inc	r1
      00457D 47               [12]10682 	orl	a,@r1
      00457E FB               [12]10683 	mov	r3,a
      00457F 80 08            [24]10684 	sjmp	00173$
      004581                      10685 00172$:
      004581 7F 00            [12]10686 	mov	r7,#0x00
      004583 7E 00            [12]10687 	mov	r6,#0x00
      004585 7D 00            [12]10688 	mov	r5,#0x00
      004587 7B 00            [12]10689 	mov	r3,#0x00
      004589                      10690 00173$:
      004589 A6 07            [24]10691 	mov	@r0,ar7
      00458B 08               [12]10692 	inc	r0
      00458C A6 06            [24]10693 	mov	@r0,ar6
      00458E 08               [12]10694 	inc	r0
      00458F A6 05            [24]10695 	mov	@r0,ar5
      004591 08               [12]10696 	inc	r0
      004592 A6 03            [24]10697 	mov	@r0,ar3
      004594 18               [12]10698 	dec	r0
      004595 18               [12]10699 	dec	r0
      004596 18               [12]10700 	dec	r0
                                  10701 ;	FATFS\src\ff.c:2261: for (i = 0; i < 4; i++)
      004597 E5 00            [12]10702 	mov	a,_bp
      004599 24 46            [12]10703 	add	a,#0x46
      00459B F8               [12]10704 	mov	r0,a
      00459C 06               [12]10705 	inc	@r0
      00459D B6 00 02         [24]10706 	cjne	@r0,#0x00,00344$
      0045A0 08               [12]10707 	inc	r0
      0045A1 06               [12]10708 	inc	@r0
      0045A2                      10709 00344$:
      0045A2 E5 00            [12]10710 	mov	a,_bp
      0045A4 24 46            [12]10711 	add	a,#0x46
      0045A6 F8               [12]10712 	mov	r0,a
      0045A7 C3               [12]10713 	clr	c
      0045A8 E6               [12]10714 	mov	a,@r0
      0045A9 94 04            [12]10715 	subb	a,#0x04
      0045AB 08               [12]10716 	inc	r0
      0045AC E6               [12]10717 	mov	a,@r0
      0045AD 94 00            [12]10718 	subb	a,#0x00
      0045AF 50 03            [24]10719 	jnc	00345$
      0045B1 02 44 28         [24]10720 	ljmp	00168$
      0045B4                      10721 00345$:
                                  10722 ;	FATFS\src\ff.c:2268: P1 = 0xed;
      0045B4 75 90 ED         [24]10723 	mov	_P1,#0xed
                                  10724 ;	FATFS\src\ff.c:2271: do
      0045B7 E5 00            [12]10725 	mov	a,_bp
      0045B9 24 46            [12]10726 	add	a,#0x46
      0045BB F8               [12]10727 	mov	r0,a
      0045BC E4               [12]10728 	clr	a
      0045BD F6               [12]10729 	mov	@r0,a
      0045BE 08               [12]10730 	inc	r0
      0045BF F6               [12]10731 	mov	@r0,a
      0045C0                      10732 00124$:
                                  10733 ;	FATFS\src\ff.c:2273: bsect1 = br[i];
      0045C0 E5 00            [12]10734 	mov	a,_bp
      0045C2 24 46            [12]10735 	add	a,#0x46
      0045C4 F8               [12]10736 	mov	r0,a
      0045C5 E6               [12]10737 	mov	a,@r0
      0045C6 25 E0            [12]10738 	add	a,acc
      0045C8 FF               [12]10739 	mov	r7,a
      0045C9 08               [12]10740 	inc	r0
      0045CA E6               [12]10741 	mov	a,@r0
      0045CB 33               [12]10742 	rlc	a
      0045CC FE               [12]10743 	mov	r6,a
      0045CD EF               [12]10744 	mov	a,r7
      0045CE 2F               [12]10745 	add	a,r7
      0045CF FF               [12]10746 	mov	r7,a
      0045D0 EE               [12]10747 	mov	a,r6
      0045D1 33               [12]10748 	rlc	a
      0045D2 FE               [12]10749 	mov	r6,a
      0045D3 EF               [12]10750 	mov	a,r7
      0045D4 2C               [12]10751 	add	a,r4
      0045D5 F9               [12]10752 	mov	r1,a
      0045D6 E5 00            [12]10753 	mov	a,_bp
      0045D8 24 2E            [12]10754 	add	a,#0x2e
      0045DA F8               [12]10755 	mov	r0,a
      0045DB E7               [12]10756 	mov	a,@r1
      0045DC F6               [12]10757 	mov	@r0,a
      0045DD 09               [12]10758 	inc	r1
      0045DE E7               [12]10759 	mov	a,@r1
      0045DF 08               [12]10760 	inc	r0
      0045E0 F6               [12]10761 	mov	@r0,a
      0045E1 09               [12]10762 	inc	r1
      0045E2 E7               [12]10763 	mov	a,@r1
      0045E3 08               [12]10764 	inc	r0
      0045E4 F6               [12]10765 	mov	@r0,a
      0045E5 09               [12]10766 	inc	r1
      0045E6 E7               [12]10767 	mov	a,@r1
      0045E7 08               [12]10768 	inc	r0
      0045E8 F6               [12]10769 	mov	@r0,a
      0045E9 19               [12]10770 	dec	r1
      0045EA 19               [12]10771 	dec	r1
      0045EB 19               [12]10772 	dec	r1
                                  10773 ;	FATFS\src\ff.c:2274: fmt1 = bsect1 ? check_fs(fs1, bsect1) : 2;	/* Check the partition */
      0045EC E5 00            [12]10774 	mov	a,_bp
      0045EE 24 2E            [12]10775 	add	a,#0x2e
      0045F0 F8               [12]10776 	mov	r0,a
      0045F1 E6               [12]10777 	mov	a,@r0
      0045F2 08               [12]10778 	inc	r0
      0045F3 46               [12]10779 	orl	a,@r0
      0045F4 08               [12]10780 	inc	r0
      0045F5 46               [12]10781 	orl	a,@r0
      0045F6 08               [12]10782 	inc	r0
      0045F7 46               [12]10783 	orl	a,@r0
      0045F8 60 3A            [24]10784 	jz	00174$
      0045FA C0 04            [24]10785 	push	ar4
      0045FC E5 00            [12]10786 	mov	a,_bp
      0045FE 24 2E            [12]10787 	add	a,#0x2e
      004600 F8               [12]10788 	mov	r0,a
      004601 E6               [12]10789 	mov	a,@r0
      004602 C0 E0            [24]10790 	push	acc
      004604 08               [12]10791 	inc	r0
      004605 E6               [12]10792 	mov	a,@r0
      004606 C0 E0            [24]10793 	push	acc
      004608 08               [12]10794 	inc	r0
      004609 E6               [12]10795 	mov	a,@r0
      00460A C0 E0            [24]10796 	push	acc
      00460C 08               [12]10797 	inc	r0
      00460D E6               [12]10798 	mov	a,@r0
      00460E C0 E0            [24]10799 	push	acc
      004610 E5 00            [12]10800 	mov	a,_bp
      004612 24 2B            [12]10801 	add	a,#0x2b
      004614 F8               [12]10802 	mov	r0,a
      004615 86 82            [24]10803 	mov	dpl,@r0
      004617 08               [12]10804 	inc	r0
      004618 86 83            [24]10805 	mov	dph,@r0
      00461A 08               [12]10806 	inc	r0
      00461B 86 F0            [24]10807 	mov	b,@r0
      00461D 78 39            [12]10808 	mov	r0,#_check_fs
      00461F 79 3F            [12]10809 	mov	r1,#(_check_fs >> 8)
      004621 7A 00            [12]10810 	mov	r2,#(_check_fs >> 16)
      004623 12 00 00         [24]10811 	lcall	__sdcc_banked_call
      004626 AA 82            [24]10812 	mov	r2,dpl
      004628 E5 81            [12]10813 	mov	a,sp
      00462A 24 FC            [12]10814 	add	a,#0xfc
      00462C F5 81            [12]10815 	mov	sp,a
      00462E D0 04            [24]10816 	pop	ar4
      004630 7F 00            [12]10817 	mov	r7,#0x00
      004632 80 04            [24]10818 	sjmp	00175$
      004634                      10819 00174$:
      004634 7A 02            [12]10820 	mov	r2,#0x02
      004636 7F 00            [12]10821 	mov	r7,#0x00
      004638                      10822 00175$:
      004638 8A 03            [24]10823 	mov	ar3,r2
                                  10824 ;	FATFS\src\ff.c:2275: } while (!LD2PT(vol1) && fmt1 && ++i < 4);
      00463A EB               [12]10825 	mov	a,r3
      00463B 60 1D            [24]10826 	jz	00126$
      00463D E5 00            [12]10827 	mov	a,_bp
      00463F 24 46            [12]10828 	add	a,#0x46
      004641 F8               [12]10829 	mov	r0,a
      004642 06               [12]10830 	inc	@r0
      004643 B6 00 02         [24]10831 	cjne	@r0,#0x00,00348$
      004646 08               [12]10832 	inc	r0
      004647 06               [12]10833 	inc	@r0
      004648                      10834 00348$:
      004648 E5 00            [12]10835 	mov	a,_bp
      00464A 24 46            [12]10836 	add	a,#0x46
      00464C F8               [12]10837 	mov	r0,a
      00464D C3               [12]10838 	clr	c
      00464E E6               [12]10839 	mov	a,@r0
      00464F 94 04            [12]10840 	subb	a,#0x04
      004651 08               [12]10841 	inc	r0
      004652 E6               [12]10842 	mov	a,@r0
      004653 94 00            [12]10843 	subb	a,#0x00
      004655 50 03            [24]10844 	jnc	00349$
      004657 02 45 C0         [24]10845 	ljmp	00124$
      00465A                      10846 00349$:
      00465A                      10847 00126$:
                                  10848 ;	FATFS\src\ff.c:2276: P1 = 0xee;
      00465A 75 90 EE         [24]10849 	mov	_P1,#0xee
      00465D                      10850 00128$:
                                  10851 ;	FATFS\src\ff.c:2279: P1 = 0xef;
      00465D 75 90 EF         [24]10852 	mov	_P1,#0xef
                                  10853 ;	FATFS\src\ff.c:2280: if(fmt1 == 3)
      004660 BB 03 06         [24]10854 	cjne	r3,#0x03,00132$
                                  10855 ;	FATFS\src\ff.c:2281: return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
      004663 75 82 01         [24]10856 	mov	dpl,#0x01
      004666 02 51 FC         [24]10857 	ljmp	00170$
      004669                      10858 00132$:
                                  10859 ;	FATFS\src\ff.c:2283: P1 = 0xf1;
      004669 75 90 F1         [24]10860 	mov	_P1,#0xf1
                                  10861 ;	FATFS\src\ff.c:2284: if(fmt1)
      00466C EB               [12]10862 	mov	a,r3
      00466D 60 06            [24]10863 	jz	00134$
                                  10864 ;	FATFS\src\ff.c:2285: return FR_NO_FILESYSTEM;		/* No FAT volume is found */
      00466F 75 82 0D         [24]10865 	mov	dpl,#0x0d
      004672 02 51 FC         [24]10866 	ljmp	00170$
      004675                      10867 00134$:
                                  10868 ;	FATFS\src\ff.c:2287: P1 = 0xf2;
      004675 75 90 F2         [24]10869 	mov	_P1,#0xf2
                                  10870 ;	FATFS\src\ff.c:2289: if (LD_WORD(fs1->win+BPB_BytsPerSec) != SS(fs1))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
      004678 E5 00            [12]10871 	mov	a,_bp
      00467A 24 2B            [12]10872 	add	a,#0x2b
      00467C F8               [12]10873 	mov	r0,a
      00467D 74 26            [12]10874 	mov	a,#0x26
      00467F 26               [12]10875 	add	a,@r0
      004680 FD               [12]10876 	mov	r5,a
      004681 E4               [12]10877 	clr	a
      004682 08               [12]10878 	inc	r0
      004683 36               [12]10879 	addc	a,@r0
      004684 FE               [12]10880 	mov	r6,a
      004685 08               [12]10881 	inc	r0
      004686 86 07            [24]10882 	mov	ar7,@r0
      004688 74 0B            [12]10883 	mov	a,#0x0b
      00468A 2D               [12]10884 	add	a,r5
      00468B FA               [12]10885 	mov	r2,a
      00468C E4               [12]10886 	clr	a
      00468D 3E               [12]10887 	addc	a,r6
      00468E FB               [12]10888 	mov	r3,a
      00468F 8F 04            [24]10889 	mov	ar4,r7
      004691 74 0C            [12]10890 	mov	a,#0x0c
      004693 2D               [12]10891 	add	a,r5
      004694 FD               [12]10892 	mov	r5,a
      004695 E4               [12]10893 	clr	a
      004696 3E               [12]10894 	addc	a,r6
      004697 FE               [12]10895 	mov	r6,a
      004698 8D 82            [24]10896 	mov	dpl,r5
      00469A 8E 83            [24]10897 	mov	dph,r6
      00469C 8F F0            [24]10898 	mov	b,r7
      00469E 12 00 00         [24]10899 	lcall	__gptrget
      0046A1 FF               [12]10900 	mov	r7,a
      0046A2 7D 00            [12]10901 	mov	r5,#0x00
      0046A4 8A 82            [24]10902 	mov	dpl,r2
      0046A6 8B 83            [24]10903 	mov	dph,r3
      0046A8 8C F0            [24]10904 	mov	b,r4
      0046AA 12 00 00         [24]10905 	lcall	__gptrget
      0046AD FA               [12]10906 	mov	r2,a
      0046AE 7E 00            [12]10907 	mov	r6,#0x00
      0046B0 42 05            [12]10908 	orl	ar5,a
      0046B2 EE               [12]10909 	mov	a,r6
      0046B3 42 07            [12]10910 	orl	ar7,a
      0046B5 BD 00 05         [24]10911 	cjne	r5,#0x00,00353$
      0046B8 BF 02 02         [24]10912 	cjne	r7,#0x02,00353$
      0046BB 80 06            [24]10913 	sjmp	00136$
      0046BD                      10914 00353$:
                                  10915 ;	FATFS\src\ff.c:2290: return FR_NO_FILESYSTEM;
      0046BD 75 82 0D         [24]10916 	mov	dpl,#0x0d
      0046C0 02 51 FC         [24]10917 	ljmp	00170$
      0046C3                      10918 00136$:
                                  10919 ;	FATFS\src\ff.c:2292: P1 = 0xf3;
      0046C3 75 90 F3         [24]10920 	mov	_P1,#0xf3
                                  10921 ;	FATFS\src\ff.c:2293: fasize1 = LD_WORD(fs1->win+BPB_FATSz16);				/* Number of sectors per FAT */
      0046C6 E5 00            [12]10922 	mov	a,_bp
      0046C8 24 2B            [12]10923 	add	a,#0x2b
      0046CA F8               [12]10924 	mov	r0,a
      0046CB 74 26            [12]10925 	mov	a,#0x26
      0046CD 26               [12]10926 	add	a,@r0
      0046CE FD               [12]10927 	mov	r5,a
      0046CF E4               [12]10928 	clr	a
      0046D0 08               [12]10929 	inc	r0
      0046D1 36               [12]10930 	addc	a,@r0
      0046D2 FE               [12]10931 	mov	r6,a
      0046D3 08               [12]10932 	inc	r0
      0046D4 86 07            [24]10933 	mov	ar7,@r0
      0046D6 74 16            [12]10934 	mov	a,#0x16
      0046D8 2D               [12]10935 	add	a,r5
      0046D9 FA               [12]10936 	mov	r2,a
      0046DA E4               [12]10937 	clr	a
      0046DB 3E               [12]10938 	addc	a,r6
      0046DC FB               [12]10939 	mov	r3,a
      0046DD 8F 04            [24]10940 	mov	ar4,r7
      0046DF 74 17            [12]10941 	mov	a,#0x17
      0046E1 2D               [12]10942 	add	a,r5
      0046E2 FD               [12]10943 	mov	r5,a
      0046E3 E4               [12]10944 	clr	a
      0046E4 3E               [12]10945 	addc	a,r6
      0046E5 FE               [12]10946 	mov	r6,a
      0046E6 8D 82            [24]10947 	mov	dpl,r5
      0046E8 8E 83            [24]10948 	mov	dph,r6
      0046EA 8F F0            [24]10949 	mov	b,r7
      0046EC 12 00 00         [24]10950 	lcall	__gptrget
      0046EF FF               [12]10951 	mov	r7,a
      0046F0 7D 00            [12]10952 	mov	r5,#0x00
      0046F2 8A 82            [24]10953 	mov	dpl,r2
      0046F4 8B 83            [24]10954 	mov	dph,r3
      0046F6 8C F0            [24]10955 	mov	b,r4
      0046F8 12 00 00         [24]10956 	lcall	__gptrget
      0046FB FA               [12]10957 	mov	r2,a
      0046FC 7E 00            [12]10958 	mov	r6,#0x00
      0046FE 42 05            [12]10959 	orl	ar5,a
      004700 EE               [12]10960 	mov	a,r6
      004701 42 07            [12]10961 	orl	ar7,a
      004703 E5 00            [12]10962 	mov	a,_bp
      004705 24 04            [12]10963 	add	a,#0x04
      004707 F8               [12]10964 	mov	r0,a
      004708 A6 05            [24]10965 	mov	@r0,ar5
      00470A 08               [12]10966 	inc	r0
      00470B A6 07            [24]10967 	mov	@r0,ar7
      00470D 08               [12]10968 	inc	r0
      00470E 76 00            [12]10969 	mov	@r0,#0x00
      004710 08               [12]10970 	inc	r0
      004711 76 00            [12]10971 	mov	@r0,#0x00
                                  10972 ;	FATFS\src\ff.c:2294: if (!fasize1) fasize1 = LD_DWORD(fs1->win+BPB_FATSz32);
      004713 E5 00            [12]10973 	mov	a,_bp
      004715 24 04            [12]10974 	add	a,#0x04
      004717 F8               [12]10975 	mov	r0,a
      004718 E6               [12]10976 	mov	a,@r0
      004719 08               [12]10977 	inc	r0
      00471A 46               [12]10978 	orl	a,@r0
      00471B 08               [12]10979 	inc	r0
      00471C 46               [12]10980 	orl	a,@r0
      00471D 08               [12]10981 	inc	r0
      00471E 46               [12]10982 	orl	a,@r0
      00471F 60 03            [24]10983 	jz	00354$
      004721 02 48 39         [24]10984 	ljmp	00138$
      004724                      10985 00354$:
      004724 E5 00            [12]10986 	mov	a,_bp
      004726 24 2B            [12]10987 	add	a,#0x2b
      004728 F8               [12]10988 	mov	r0,a
      004729 74 26            [12]10989 	mov	a,#0x26
      00472B 26               [12]10990 	add	a,@r0
      00472C FF               [12]10991 	mov	r7,a
      00472D E4               [12]10992 	clr	a
      00472E 08               [12]10993 	inc	r0
      00472F 36               [12]10994 	addc	a,@r0
      004730 FE               [12]10995 	mov	r6,a
      004731 08               [12]10996 	inc	r0
      004732 86 05            [24]10997 	mov	ar5,@r0
      004734 E5 00            [12]10998 	mov	a,_bp
      004736 24 0F            [12]10999 	add	a,#0x0f
      004738 F8               [12]11000 	mov	r0,a
      004739 74 24            [12]11001 	mov	a,#0x24
      00473B 2F               [12]11002 	add	a,r7
      00473C F6               [12]11003 	mov	@r0,a
      00473D E4               [12]11004 	clr	a
      00473E 3E               [12]11005 	addc	a,r6
      00473F 08               [12]11006 	inc	r0
      004740 F6               [12]11007 	mov	@r0,a
      004741 08               [12]11008 	inc	r0
      004742 A6 05            [24]11009 	mov	@r0,ar5
      004744 74 27            [12]11010 	mov	a,#0x27
      004746 2F               [12]11011 	add	a,r7
      004747 FC               [12]11012 	mov	r4,a
      004748 E4               [12]11013 	clr	a
      004749 3E               [12]11014 	addc	a,r6
      00474A FB               [12]11015 	mov	r3,a
      00474B 8D 02            [24]11016 	mov	ar2,r5
      00474D 8C 82            [24]11017 	mov	dpl,r4
      00474F 8B 83            [24]11018 	mov	dph,r3
      004751 8A F0            [24]11019 	mov	b,r2
      004753 12 00 00         [24]11020 	lcall	__gptrget
      004756 FB               [12]11021 	mov	r3,a
      004757 E5 00            [12]11022 	mov	a,_bp
      004759 24 04            [12]11023 	add	a,#0x04
      00475B F8               [12]11024 	mov	r0,a
      00475C A6 03            [24]11025 	mov	@r0,ar3
      00475E 08               [12]11026 	inc	r0
      00475F 76 00            [12]11027 	mov	@r0,#0x00
      004761 08               [12]11028 	inc	r0
      004762 76 00            [12]11029 	mov	@r0,#0x00
      004764 08               [12]11030 	inc	r0
      004765 76 00            [12]11031 	mov	@r0,#0x00
      004767 E5 00            [12]11032 	mov	a,_bp
      004769 24 04            [12]11033 	add	a,#0x04
      00476B F8               [12]11034 	mov	r0,a
      00476C E6               [12]11035 	mov	a,@r0
      00476D 08               [12]11036 	inc	r0
      00476E 08               [12]11037 	inc	r0
      00476F 08               [12]11038 	inc	r0
      004770 F6               [12]11039 	mov	@r0,a
      004771 18               [12]11040 	dec	r0
      004772 18               [12]11041 	dec	r0
      004773 18               [12]11042 	dec	r0
      004774 76 00            [12]11043 	mov	@r0,#0x00
      004776 08               [12]11044 	inc	r0
      004777 76 00            [12]11045 	mov	@r0,#0x00
      004779 08               [12]11046 	inc	r0
      00477A 76 00            [12]11047 	mov	@r0,#0x00
      00477C 74 26            [12]11048 	mov	a,#0x26
      00477E 2F               [12]11049 	add	a,r7
      00477F FC               [12]11050 	mov	r4,a
      004780 E4               [12]11051 	clr	a
      004781 3E               [12]11052 	addc	a,r6
      004782 FB               [12]11053 	mov	r3,a
      004783 8D 02            [24]11054 	mov	ar2,r5
      004785 8C 82            [24]11055 	mov	dpl,r4
      004787 8B 83            [24]11056 	mov	dph,r3
      004789 8A F0            [24]11057 	mov	b,r2
      00478B 12 00 00         [24]11058 	lcall	__gptrget
      00478E FB               [12]11059 	mov	r3,a
      00478F E5 00            [12]11060 	mov	a,_bp
      004791 24 12            [12]11061 	add	a,#0x12
      004793 F8               [12]11062 	mov	r0,a
      004794 A6 03            [24]11063 	mov	@r0,ar3
      004796 08               [12]11064 	inc	r0
      004797 76 00            [12]11065 	mov	@r0,#0x00
      004799 08               [12]11066 	inc	r0
      00479A 76 00            [12]11067 	mov	@r0,#0x00
      00479C 08               [12]11068 	inc	r0
      00479D 76 00            [12]11069 	mov	@r0,#0x00
      00479F E5 00            [12]11070 	mov	a,_bp
      0047A1 24 12            [12]11071 	add	a,#0x12
      0047A3 F8               [12]11072 	mov	r0,a
      0047A4 08               [12]11073 	inc	r0
      0047A5 E6               [12]11074 	mov	a,@r0
      0047A6 08               [12]11075 	inc	r0
      0047A7 08               [12]11076 	inc	r0
      0047A8 F6               [12]11077 	mov	@r0,a
      0047A9 18               [12]11078 	dec	r0
      0047AA 18               [12]11079 	dec	r0
      0047AB 18               [12]11080 	dec	r0
      0047AC E6               [12]11081 	mov	a,@r0
      0047AD 08               [12]11082 	inc	r0
      0047AE 08               [12]11083 	inc	r0
      0047AF F6               [12]11084 	mov	@r0,a
      0047B0 18               [12]11085 	dec	r0
      0047B1 18               [12]11086 	dec	r0
      0047B2 76 00            [12]11087 	mov	@r0,#0x00
      0047B4 08               [12]11088 	inc	r0
      0047B5 76 00            [12]11089 	mov	@r0,#0x00
      0047B7 E5 00            [12]11090 	mov	a,_bp
      0047B9 24 04            [12]11091 	add	a,#0x04
      0047BB F8               [12]11092 	mov	r0,a
      0047BC E5 00            [12]11093 	mov	a,_bp
      0047BE 24 12            [12]11094 	add	a,#0x12
      0047C0 F9               [12]11095 	mov	r1,a
      0047C1 E6               [12]11096 	mov	a,@r0
      0047C2 47               [12]11097 	orl	a,@r1
      0047C3 F7               [12]11098 	mov	@r1,a
      0047C4 08               [12]11099 	inc	r0
      0047C5 E6               [12]11100 	mov	a,@r0
      0047C6 09               [12]11101 	inc	r1
      0047C7 47               [12]11102 	orl	a,@r1
      0047C8 F7               [12]11103 	mov	@r1,a
      0047C9 08               [12]11104 	inc	r0
      0047CA E6               [12]11105 	mov	a,@r0
      0047CB 09               [12]11106 	inc	r1
      0047CC 47               [12]11107 	orl	a,@r1
      0047CD F7               [12]11108 	mov	@r1,a
      0047CE 08               [12]11109 	inc	r0
      0047CF E6               [12]11110 	mov	a,@r0
      0047D0 09               [12]11111 	inc	r1
      0047D1 47               [12]11112 	orl	a,@r1
      0047D2 F7               [12]11113 	mov	@r1,a
      0047D3 74 25            [12]11114 	mov	a,#0x25
      0047D5 2F               [12]11115 	add	a,r7
      0047D6 FF               [12]11116 	mov	r7,a
      0047D7 E4               [12]11117 	clr	a
      0047D8 3E               [12]11118 	addc	a,r6
      0047D9 FE               [12]11119 	mov	r6,a
      0047DA 8F 82            [24]11120 	mov	dpl,r7
      0047DC 8E 83            [24]11121 	mov	dph,r6
      0047DE 8D F0            [24]11122 	mov	b,r5
      0047E0 12 00 00         [24]11123 	lcall	__gptrget
      0047E3 FA               [12]11124 	mov	r2,a
      0047E4 E4               [12]11125 	clr	a
      0047E5 FB               [12]11126 	mov	r3,a
      0047E6 FE               [12]11127 	mov	r6,a
      0047E7 FF               [12]11128 	mov	r7,a
      0047E8 E5 00            [12]11129 	mov	a,_bp
      0047EA 24 12            [12]11130 	add	a,#0x12
      0047EC F8               [12]11131 	mov	r0,a
      0047ED EB               [12]11132 	mov	a,r3
      0047EE 46               [12]11133 	orl	a,@r0
      0047EF FD               [12]11134 	mov	r5,a
      0047F0 EA               [12]11135 	mov	a,r2
      0047F1 08               [12]11136 	inc	r0
      0047F2 46               [12]11137 	orl	a,@r0
      0047F3 FC               [12]11138 	mov	r4,a
      0047F4 EE               [12]11139 	mov	a,r6
      0047F5 08               [12]11140 	inc	r0
      0047F6 46               [12]11141 	orl	a,@r0
      0047F7 FE               [12]11142 	mov	r6,a
      0047F8 EF               [12]11143 	mov	a,r7
      0047F9 08               [12]11144 	inc	r0
      0047FA 46               [12]11145 	orl	a,@r0
      0047FB FF               [12]11146 	mov	r7,a
      0047FC E5 00            [12]11147 	mov	a,_bp
      0047FE 24 0F            [12]11148 	add	a,#0x0f
      004800 F8               [12]11149 	mov	r0,a
      004801 86 82            [24]11150 	mov	dpl,@r0
      004803 08               [12]11151 	inc	r0
      004804 86 83            [24]11152 	mov	dph,@r0
      004806 08               [12]11153 	inc	r0
      004807 86 F0            [24]11154 	mov	b,@r0
      004809 12 00 00         [24]11155 	lcall	__gptrget
      00480C FB               [12]11156 	mov	r3,a
      00480D E5 00            [12]11157 	mov	a,_bp
      00480F 24 08            [12]11158 	add	a,#0x08
      004811 F8               [12]11159 	mov	r0,a
      004812 A6 03            [24]11160 	mov	@r0,ar3
      004814 08               [12]11161 	inc	r0
      004815 76 00            [12]11162 	mov	@r0,#0x00
      004817 08               [12]11163 	inc	r0
      004818 76 00            [12]11164 	mov	@r0,#0x00
      00481A 08               [12]11165 	inc	r0
      00481B 76 00            [12]11166 	mov	@r0,#0x00
      00481D E5 00            [12]11167 	mov	a,_bp
      00481F 24 08            [12]11168 	add	a,#0x08
      004821 F8               [12]11169 	mov	r0,a
      004822 E5 00            [12]11170 	mov	a,_bp
      004824 24 04            [12]11171 	add	a,#0x04
      004826 F9               [12]11172 	mov	r1,a
      004827 E6               [12]11173 	mov	a,@r0
      004828 4D               [12]11174 	orl	a,r5
      004829 F7               [12]11175 	mov	@r1,a
      00482A 08               [12]11176 	inc	r0
      00482B E6               [12]11177 	mov	a,@r0
      00482C 4C               [12]11178 	orl	a,r4
      00482D 09               [12]11179 	inc	r1
      00482E F7               [12]11180 	mov	@r1,a
      00482F 08               [12]11181 	inc	r0
      004830 E6               [12]11182 	mov	a,@r0
      004831 4E               [12]11183 	orl	a,r6
      004832 09               [12]11184 	inc	r1
      004833 F7               [12]11185 	mov	@r1,a
      004834 08               [12]11186 	inc	r0
      004835 E6               [12]11187 	mov	a,@r0
      004836 4F               [12]11188 	orl	a,r7
      004837 09               [12]11189 	inc	r1
      004838 F7               [12]11190 	mov	@r1,a
      004839                      11191 00138$:
                                  11192 ;	FATFS\src\ff.c:2295: fs1->fsize = fasize1;
      004839 E5 00            [12]11193 	mov	a,_bp
      00483B 24 2B            [12]11194 	add	a,#0x2b
      00483D F8               [12]11195 	mov	r0,a
      00483E E5 00            [12]11196 	mov	a,_bp
      004840 24 12            [12]11197 	add	a,#0x12
      004842 F9               [12]11198 	mov	r1,a
      004843 74 0E            [12]11199 	mov	a,#0x0e
      004845 26               [12]11200 	add	a,@r0
      004846 F7               [12]11201 	mov	@r1,a
      004847 E4               [12]11202 	clr	a
      004848 08               [12]11203 	inc	r0
      004849 36               [12]11204 	addc	a,@r0
      00484A 09               [12]11205 	inc	r1
      00484B F7               [12]11206 	mov	@r1,a
      00484C 08               [12]11207 	inc	r0
      00484D 09               [12]11208 	inc	r1
      00484E E6               [12]11209 	mov	a,@r0
      00484F F7               [12]11210 	mov	@r1,a
      004850 E5 00            [12]11211 	mov	a,_bp
      004852 24 12            [12]11212 	add	a,#0x12
      004854 F8               [12]11213 	mov	r0,a
      004855 86 82            [24]11214 	mov	dpl,@r0
      004857 08               [12]11215 	inc	r0
      004858 86 83            [24]11216 	mov	dph,@r0
      00485A 08               [12]11217 	inc	r0
      00485B 86 F0            [24]11218 	mov	b,@r0
      00485D E5 00            [12]11219 	mov	a,_bp
      00485F 24 04            [12]11220 	add	a,#0x04
      004861 F9               [12]11221 	mov	r1,a
      004862 E7               [12]11222 	mov	a,@r1
      004863 12 00 00         [24]11223 	lcall	__gptrput
      004866 A3               [24]11224 	inc	dptr
      004867 09               [12]11225 	inc	r1
      004868 E7               [12]11226 	mov	a,@r1
      004869 12 00 00         [24]11227 	lcall	__gptrput
      00486C A3               [24]11228 	inc	dptr
      00486D 09               [12]11229 	inc	r1
      00486E E7               [12]11230 	mov	a,@r1
      00486F 12 00 00         [24]11231 	lcall	__gptrput
      004872 A3               [24]11232 	inc	dptr
      004873 09               [12]11233 	inc	r1
      004874 E7               [12]11234 	mov	a,@r1
      004875 12 00 00         [24]11235 	lcall	__gptrput
                                  11236 ;	FATFS\src\ff.c:2297: P1 = 0xf4;
      004878 75 90 F4         [24]11237 	mov	_P1,#0xf4
                                  11238 ;	FATFS\src\ff.c:2298: fs1->n_fats = fs1->win[BPB_NumFATs];					/* Number of FAT copies */
      00487B E5 00            [12]11239 	mov	a,_bp
      00487D 24 2B            [12]11240 	add	a,#0x2b
      00487F F8               [12]11241 	mov	r0,a
      004880 74 03            [12]11242 	mov	a,#0x03
      004882 26               [12]11243 	add	a,@r0
      004883 FE               [12]11244 	mov	r6,a
      004884 E4               [12]11245 	clr	a
      004885 08               [12]11246 	inc	r0
      004886 36               [12]11247 	addc	a,@r0
      004887 FD               [12]11248 	mov	r5,a
      004888 08               [12]11249 	inc	r0
      004889 86 04            [24]11250 	mov	ar4,@r0
      00488B E5 00            [12]11251 	mov	a,_bp
      00488D 24 2B            [12]11252 	add	a,#0x2b
      00488F F8               [12]11253 	mov	r0,a
      004890 74 26            [12]11254 	mov	a,#0x26
      004892 26               [12]11255 	add	a,@r0
      004893 FA               [12]11256 	mov	r2,a
      004894 E4               [12]11257 	clr	a
      004895 08               [12]11258 	inc	r0
      004896 36               [12]11259 	addc	a,@r0
      004897 FB               [12]11260 	mov	r3,a
      004898 08               [12]11261 	inc	r0
      004899 86 07            [24]11262 	mov	ar7,@r0
      00489B 74 10            [12]11263 	mov	a,#0x10
      00489D 2A               [12]11264 	add	a,r2
      00489E FA               [12]11265 	mov	r2,a
      00489F E4               [12]11266 	clr	a
      0048A0 3B               [12]11267 	addc	a,r3
      0048A1 FB               [12]11268 	mov	r3,a
      0048A2 8A 82            [24]11269 	mov	dpl,r2
      0048A4 8B 83            [24]11270 	mov	dph,r3
      0048A6 8F F0            [24]11271 	mov	b,r7
      0048A8 12 00 00         [24]11272 	lcall	__gptrget
      0048AB FA               [12]11273 	mov	r2,a
      0048AC 8E 82            [24]11274 	mov	dpl,r6
      0048AE 8D 83            [24]11275 	mov	dph,r5
      0048B0 8C F0            [24]11276 	mov	b,r4
      0048B2 12 00 00         [24]11277 	lcall	__gptrput
                                  11278 ;	FATFS\src\ff.c:2299: if (fs1->n_fats != 1 && fs1->n_fats != 2)				/* (Must be 1 or 2) */
      0048B5 8E 82            [24]11279 	mov	dpl,r6
      0048B7 8D 83            [24]11280 	mov	dph,r5
      0048B9 8C F0            [24]11281 	mov	b,r4
      0048BB 12 00 00         [24]11282 	lcall	__gptrget
      0048BE FF               [12]11283 	mov	r7,a
      0048BF BA 01 02         [24]11284 	cjne	r2,#0x01,00355$
      0048C2 80 0B            [24]11285 	sjmp	00140$
      0048C4                      11286 00355$:
      0048C4 BF 02 02         [24]11287 	cjne	r7,#0x02,00356$
      0048C7 80 06            [24]11288 	sjmp	00140$
      0048C9                      11289 00356$:
                                  11290 ;	FATFS\src\ff.c:2300: return FR_NO_FILESYSTEM;
      0048C9 75 82 0D         [24]11291 	mov	dpl,#0x0d
      0048CC 02 51 FC         [24]11292 	ljmp	00170$
      0048CF                      11293 00140$:
                                  11294 ;	FATFS\src\ff.c:2301: fasize1 *= fs1->n_fats;								/* Number of sectors for FAT area */
      0048CF 8E 82            [24]11295 	mov	dpl,r6
      0048D1 8D 83            [24]11296 	mov	dph,r5
      0048D3 8C F0            [24]11297 	mov	b,r4
      0048D5 12 00 00         [24]11298 	lcall	__gptrget
      0048D8 FA               [12]11299 	mov	r2,a
      0048D9 7B 00            [12]11300 	mov	r3,#0x00
      0048DB 7E 00            [12]11301 	mov	r6,#0x00
      0048DD 7F 00            [12]11302 	mov	r7,#0x00
      0048DF C0 02            [24]11303 	push	ar2
      0048E1 C0 03            [24]11304 	push	ar3
      0048E3 C0 06            [24]11305 	push	ar6
      0048E5 C0 07            [24]11306 	push	ar7
      0048E7 E5 00            [12]11307 	mov	a,_bp
      0048E9 24 04            [12]11308 	add	a,#0x04
      0048EB F8               [12]11309 	mov	r0,a
      0048EC 86 82            [24]11310 	mov	dpl,@r0
      0048EE 08               [12]11311 	inc	r0
      0048EF 86 83            [24]11312 	mov	dph,@r0
      0048F1 08               [12]11313 	inc	r0
      0048F2 86 F0            [24]11314 	mov	b,@r0
      0048F4 08               [12]11315 	inc	r0
      0048F5 E6               [12]11316 	mov	a,@r0
      0048F6 12 00 B5         [24]11317 	lcall	__mullong
      0048F9 AC 82            [24]11318 	mov	r4,dpl
      0048FB AD 83            [24]11319 	mov	r5,dph
      0048FD AE F0            [24]11320 	mov	r6,b
      0048FF FF               [12]11321 	mov	r7,a
      004900 E5 81            [12]11322 	mov	a,sp
      004902 24 FC            [12]11323 	add	a,#0xfc
      004904 F5 81            [12]11324 	mov	sp,a
      004906 E5 00            [12]11325 	mov	a,_bp
      004908 24 32            [12]11326 	add	a,#0x32
      00490A F8               [12]11327 	mov	r0,a
      00490B A6 04            [24]11328 	mov	@r0,ar4
      00490D 08               [12]11329 	inc	r0
      00490E A6 05            [24]11330 	mov	@r0,ar5
      004910 08               [12]11331 	inc	r0
      004911 A6 06            [24]11332 	mov	@r0,ar6
      004913 08               [12]11333 	inc	r0
      004914 A6 07            [24]11334 	mov	@r0,ar7
                                  11335 ;	FATFS\src\ff.c:2303: P1 = 0xf5;
      004916 75 90 F5         [24]11336 	mov	_P1,#0xf5
                                  11337 ;	FATFS\src\ff.c:2304: fs1->csize = fs1->win[BPB_SecPerClus];				/* Number of sectors per cluster */
      004919 E5 00            [12]11338 	mov	a,_bp
      00491B 24 2B            [12]11339 	add	a,#0x2b
      00491D F8               [12]11340 	mov	r0,a
      00491E A9 00            [24]11341 	mov	r1,_bp
      004920 09               [12]11342 	inc	r1
      004921 74 02            [12]11343 	mov	a,#0x02
      004923 26               [12]11344 	add	a,@r0
      004924 F7               [12]11345 	mov	@r1,a
      004925 E4               [12]11346 	clr	a
      004926 08               [12]11347 	inc	r0
      004927 36               [12]11348 	addc	a,@r0
      004928 09               [12]11349 	inc	r1
      004929 F7               [12]11350 	mov	@r1,a
      00492A 08               [12]11351 	inc	r0
      00492B 09               [12]11352 	inc	r1
      00492C E6               [12]11353 	mov	a,@r0
      00492D F7               [12]11354 	mov	@r1,a
      00492E E5 00            [12]11355 	mov	a,_bp
      004930 24 2B            [12]11356 	add	a,#0x2b
      004932 F8               [12]11357 	mov	r0,a
      004933 74 26            [12]11358 	mov	a,#0x26
      004935 26               [12]11359 	add	a,@r0
      004936 FC               [12]11360 	mov	r4,a
      004937 E4               [12]11361 	clr	a
      004938 08               [12]11362 	inc	r0
      004939 36               [12]11363 	addc	a,@r0
      00493A FD               [12]11364 	mov	r5,a
      00493B 08               [12]11365 	inc	r0
      00493C 86 06            [24]11366 	mov	ar6,@r0
      00493E 74 0D            [12]11367 	mov	a,#0x0d
      004940 2C               [12]11368 	add	a,r4
      004941 FC               [12]11369 	mov	r4,a
      004942 E4               [12]11370 	clr	a
      004943 3D               [12]11371 	addc	a,r5
      004944 FD               [12]11372 	mov	r5,a
      004945 8C 82            [24]11373 	mov	dpl,r4
      004947 8D 83            [24]11374 	mov	dph,r5
      004949 8E F0            [24]11375 	mov	b,r6
      00494B 12 00 00         [24]11376 	lcall	__gptrget
      00494E FC               [12]11377 	mov	r4,a
      00494F A8 00            [24]11378 	mov	r0,_bp
      004951 08               [12]11379 	inc	r0
      004952 86 82            [24]11380 	mov	dpl,@r0
      004954 08               [12]11381 	inc	r0
      004955 86 83            [24]11382 	mov	dph,@r0
      004957 08               [12]11383 	inc	r0
      004958 86 F0            [24]11384 	mov	b,@r0
      00495A EC               [12]11385 	mov	a,r4
      00495B 12 00 00         [24]11386 	lcall	__gptrput
                                  11387 ;	FATFS\src\ff.c:2305: if (!fs1->csize || (fs1->csize & (fs1->csize - 1)))	/* (Must be power of 2) */
      00495E A8 00            [24]11388 	mov	r0,_bp
      004960 08               [12]11389 	inc	r0
      004961 86 82            [24]11390 	mov	dpl,@r0
      004963 08               [12]11391 	inc	r0
      004964 86 83            [24]11392 	mov	dph,@r0
      004966 08               [12]11393 	inc	r0
      004967 86 F0            [24]11394 	mov	b,@r0
      004969 12 00 00         [24]11395 	lcall	__gptrget
      00496C FE               [12]11396 	mov	r6,a
      00496D EC               [12]11397 	mov	a,r4
      00496E 60 14            [24]11398 	jz	00142$
      004970 7D 00            [12]11399 	mov	r5,#0x00
      004972 EE               [12]11400 	mov	a,r6
      004973 24 FF            [12]11401 	add	a,#0xff
      004975 FC               [12]11402 	mov	r4,a
      004976 ED               [12]11403 	mov	a,r5
      004977 34 FF            [12]11404 	addc	a,#0xff
      004979 FF               [12]11405 	mov	r7,a
      00497A EC               [12]11406 	mov	a,r4
      00497B 52 06            [12]11407 	anl	ar6,a
      00497D EF               [12]11408 	mov	a,r7
      00497E 52 05            [12]11409 	anl	ar5,a
      004980 EE               [12]11410 	mov	a,r6
      004981 4D               [12]11411 	orl	a,r5
      004982 60 06            [24]11412 	jz	00143$
      004984                      11413 00142$:
                                  11414 ;	FATFS\src\ff.c:2306: return FR_NO_FILESYSTEM;
      004984 75 82 0D         [24]11415 	mov	dpl,#0x0d
      004987 02 51 FC         [24]11416 	ljmp	00170$
      00498A                      11417 00143$:
                                  11418 ;	FATFS\src\ff.c:2308: P1 = 0xf6;
      00498A 75 90 F6         [24]11419 	mov	_P1,#0xf6
                                  11420 ;	FATFS\src\ff.c:2309: fs1->n_rootdir = LD_WORD(fs1->win+BPB_RootEntCnt);	/* Number of root directory entries */
      00498D E5 00            [12]11421 	mov	a,_bp
      00498F 24 2B            [12]11422 	add	a,#0x2b
      004991 F8               [12]11423 	mov	r0,a
      004992 E5 00            [12]11424 	mov	a,_bp
      004994 24 04            [12]11425 	add	a,#0x04
      004996 F9               [12]11426 	mov	r1,a
      004997 74 08            [12]11427 	mov	a,#0x08
      004999 26               [12]11428 	add	a,@r0
      00499A F7               [12]11429 	mov	@r1,a
      00499B E4               [12]11430 	clr	a
      00499C 08               [12]11431 	inc	r0
      00499D 36               [12]11432 	addc	a,@r0
      00499E 09               [12]11433 	inc	r1
      00499F F7               [12]11434 	mov	@r1,a
      0049A0 08               [12]11435 	inc	r0
      0049A1 09               [12]11436 	inc	r1
      0049A2 E6               [12]11437 	mov	a,@r0
      0049A3 F7               [12]11438 	mov	@r1,a
      0049A4 E5 00            [12]11439 	mov	a,_bp
      0049A6 24 2B            [12]11440 	add	a,#0x2b
      0049A8 F8               [12]11441 	mov	r0,a
      0049A9 74 26            [12]11442 	mov	a,#0x26
      0049AB 26               [12]11443 	add	a,@r0
      0049AC FD               [12]11444 	mov	r5,a
      0049AD E4               [12]11445 	clr	a
      0049AE 08               [12]11446 	inc	r0
      0049AF 36               [12]11447 	addc	a,@r0
      0049B0 FE               [12]11448 	mov	r6,a
      0049B1 08               [12]11449 	inc	r0
      0049B2 86 07            [24]11450 	mov	ar7,@r0
      0049B4 E5 00            [12]11451 	mov	a,_bp
      0049B6 24 0F            [12]11452 	add	a,#0x0f
      0049B8 F8               [12]11453 	mov	r0,a
      0049B9 74 11            [12]11454 	mov	a,#0x11
      0049BB 2D               [12]11455 	add	a,r5
      0049BC F6               [12]11456 	mov	@r0,a
      0049BD E4               [12]11457 	clr	a
      0049BE 3E               [12]11458 	addc	a,r6
      0049BF 08               [12]11459 	inc	r0
      0049C0 F6               [12]11460 	mov	@r0,a
      0049C1 08               [12]11461 	inc	r0
      0049C2 A6 07            [24]11462 	mov	@r0,ar7
      0049C4 74 12            [12]11463 	mov	a,#0x12
      0049C6 2D               [12]11464 	add	a,r5
      0049C7 FA               [12]11465 	mov	r2,a
      0049C8 E4               [12]11466 	clr	a
      0049C9 3E               [12]11467 	addc	a,r6
      0049CA FB               [12]11468 	mov	r3,a
      0049CB 8A 82            [24]11469 	mov	dpl,r2
      0049CD 8B 83            [24]11470 	mov	dph,r3
      0049CF 8F F0            [24]11471 	mov	b,r7
      0049D1 12 00 00         [24]11472 	lcall	__gptrget
      0049D4 FA               [12]11473 	mov	r2,a
      0049D5 FD               [12]11474 	mov	r5,a
      0049D6 7E 00            [12]11475 	mov	r6,#0x00
      0049D8 E5 00            [12]11476 	mov	a,_bp
      0049DA 24 0F            [12]11477 	add	a,#0x0f
      0049DC F8               [12]11478 	mov	r0,a
      0049DD 86 82            [24]11479 	mov	dpl,@r0
      0049DF 08               [12]11480 	inc	r0
      0049E0 86 83            [24]11481 	mov	dph,@r0
      0049E2 08               [12]11482 	inc	r0
      0049E3 86 F0            [24]11483 	mov	b,@r0
      0049E5 12 00 00         [24]11484 	lcall	__gptrget
      0049E8 FB               [12]11485 	mov	r3,a
      0049E9 7F 00            [12]11486 	mov	r7,#0x00
      0049EB EE               [12]11487 	mov	a,r6
      0049EC 42 03            [12]11488 	orl	ar3,a
      0049EE ED               [12]11489 	mov	a,r5
      0049EF 42 07            [12]11490 	orl	ar7,a
      0049F1 E5 00            [12]11491 	mov	a,_bp
      0049F3 24 04            [12]11492 	add	a,#0x04
      0049F5 F8               [12]11493 	mov	r0,a
      0049F6 86 82            [24]11494 	mov	dpl,@r0
      0049F8 08               [12]11495 	inc	r0
      0049F9 86 83            [24]11496 	mov	dph,@r0
      0049FB 08               [12]11497 	inc	r0
      0049FC 86 F0            [24]11498 	mov	b,@r0
      0049FE EB               [12]11499 	mov	a,r3
      0049FF 12 00 00         [24]11500 	lcall	__gptrput
      004A02 A3               [24]11501 	inc	dptr
      004A03 EF               [12]11502 	mov	a,r7
      004A04 12 00 00         [24]11503 	lcall	__gptrput
                                  11504 ;	FATFS\src\ff.c:2310: if (fs1->n_rootdir % (SS(fs1) / SZ_DIR))				/* (Must be sector aligned) */
      004A07 EB               [12]11505 	mov	a,r3
      004A08 54 0F            [12]11506 	anl	a,#0x0f
      004A0A 60 06            [24]11507 	jz	00146$
                                  11508 ;	FATFS\src\ff.c:2311: return FR_NO_FILESYSTEM;
      004A0C 75 82 0D         [24]11509 	mov	dpl,#0x0d
      004A0F 02 51 FC         [24]11510 	ljmp	00170$
      004A12                      11511 00146$:
                                  11512 ;	FATFS\src\ff.c:2313: P1 = 0xf7;
      004A12 75 90 F7         [24]11513 	mov	_P1,#0xf7
                                  11514 ;	FATFS\src\ff.c:2314: tsect1 = LD_WORD(fs1->win+BPB_TotSec16);				/* Number of sectors on the volume */
      004A15 E5 00            [12]11515 	mov	a,_bp
      004A17 24 2B            [12]11516 	add	a,#0x2b
      004A19 F8               [12]11517 	mov	r0,a
      004A1A 74 26            [12]11518 	mov	a,#0x26
      004A1C 26               [12]11519 	add	a,@r0
      004A1D FD               [12]11520 	mov	r5,a
      004A1E E4               [12]11521 	clr	a
      004A1F 08               [12]11522 	inc	r0
      004A20 36               [12]11523 	addc	a,@r0
      004A21 FE               [12]11524 	mov	r6,a
      004A22 08               [12]11525 	inc	r0
      004A23 86 07            [24]11526 	mov	ar7,@r0
      004A25 E5 00            [12]11527 	mov	a,_bp
      004A27 24 0F            [12]11528 	add	a,#0x0f
      004A29 F8               [12]11529 	mov	r0,a
      004A2A 74 13            [12]11530 	mov	a,#0x13
      004A2C 2D               [12]11531 	add	a,r5
      004A2D F6               [12]11532 	mov	@r0,a
      004A2E E4               [12]11533 	clr	a
      004A2F 3E               [12]11534 	addc	a,r6
      004A30 08               [12]11535 	inc	r0
      004A31 F6               [12]11536 	mov	@r0,a
      004A32 08               [12]11537 	inc	r0
      004A33 A6 07            [24]11538 	mov	@r0,ar7
      004A35 74 14            [12]11539 	mov	a,#0x14
      004A37 2D               [12]11540 	add	a,r5
      004A38 FA               [12]11541 	mov	r2,a
      004A39 E4               [12]11542 	clr	a
      004A3A 3E               [12]11543 	addc	a,r6
      004A3B FB               [12]11544 	mov	r3,a
      004A3C 8A 82            [24]11545 	mov	dpl,r2
      004A3E 8B 83            [24]11546 	mov	dph,r3
      004A40 8F F0            [24]11547 	mov	b,r7
      004A42 12 00 00         [24]11548 	lcall	__gptrget
      004A45 FA               [12]11549 	mov	r2,a
      004A46 FD               [12]11550 	mov	r5,a
      004A47 7E 00            [12]11551 	mov	r6,#0x00
      004A49 E5 00            [12]11552 	mov	a,_bp
      004A4B 24 0F            [12]11553 	add	a,#0x0f
      004A4D F8               [12]11554 	mov	r0,a
      004A4E 86 82            [24]11555 	mov	dpl,@r0
      004A50 08               [12]11556 	inc	r0
      004A51 86 83            [24]11557 	mov	dph,@r0
      004A53 08               [12]11558 	inc	r0
      004A54 86 F0            [24]11559 	mov	b,@r0
      004A56 12 00 00         [24]11560 	lcall	__gptrget
      004A59 FB               [12]11561 	mov	r3,a
      004A5A 7F 00            [12]11562 	mov	r7,#0x00
      004A5C EE               [12]11563 	mov	a,r6
      004A5D 42 03            [12]11564 	orl	ar3,a
      004A5F ED               [12]11565 	mov	a,r5
      004A60 42 07            [12]11566 	orl	ar7,a
      004A62 E5 00            [12]11567 	mov	a,_bp
      004A64 24 27            [12]11568 	add	a,#0x27
      004A66 F8               [12]11569 	mov	r0,a
      004A67 A6 03            [24]11570 	mov	@r0,ar3
      004A69 08               [12]11571 	inc	r0
      004A6A A6 07            [24]11572 	mov	@r0,ar7
      004A6C 08               [12]11573 	inc	r0
      004A6D 76 00            [12]11574 	mov	@r0,#0x00
      004A6F 08               [12]11575 	inc	r0
      004A70 76 00            [12]11576 	mov	@r0,#0x00
                                  11577 ;	FATFS\src\ff.c:2315: if (!tsect1) tsect1 = LD_DWORD(fs1->win+BPB_TotSec32);
      004A72 E5 00            [12]11578 	mov	a,_bp
      004A74 24 27            [12]11579 	add	a,#0x27
      004A76 F8               [12]11580 	mov	r0,a
      004A77 E6               [12]11581 	mov	a,@r0
      004A78 08               [12]11582 	inc	r0
      004A79 46               [12]11583 	orl	a,@r0
      004A7A 08               [12]11584 	inc	r0
      004A7B 46               [12]11585 	orl	a,@r0
      004A7C 08               [12]11586 	inc	r0
      004A7D 46               [12]11587 	orl	a,@r0
      004A7E 60 03            [24]11588 	jz	00360$
      004A80 02 4B 83         [24]11589 	ljmp	00148$
      004A83                      11590 00360$:
      004A83 E5 00            [12]11591 	mov	a,_bp
      004A85 24 2B            [12]11592 	add	a,#0x2b
      004A87 F8               [12]11593 	mov	r0,a
      004A88 E5 00            [12]11594 	mov	a,_bp
      004A8A 24 08            [12]11595 	add	a,#0x08
      004A8C F9               [12]11596 	mov	r1,a
      004A8D 74 26            [12]11597 	mov	a,#0x26
      004A8F 26               [12]11598 	add	a,@r0
      004A90 F7               [12]11599 	mov	@r1,a
      004A91 E4               [12]11600 	clr	a
      004A92 08               [12]11601 	inc	r0
      004A93 36               [12]11602 	addc	a,@r0
      004A94 09               [12]11603 	inc	r1
      004A95 F7               [12]11604 	mov	@r1,a
      004A96 08               [12]11605 	inc	r0
      004A97 09               [12]11606 	inc	r1
      004A98 E6               [12]11607 	mov	a,@r0
      004A99 F7               [12]11608 	mov	@r1,a
      004A9A E5 00            [12]11609 	mov	a,_bp
      004A9C 24 08            [12]11610 	add	a,#0x08
      004A9E F8               [12]11611 	mov	r0,a
      004A9F E5 00            [12]11612 	mov	a,_bp
      004AA1 24 0F            [12]11613 	add	a,#0x0f
      004AA3 F9               [12]11614 	mov	r1,a
      004AA4 74 20            [12]11615 	mov	a,#0x20
      004AA6 26               [12]11616 	add	a,@r0
      004AA7 F7               [12]11617 	mov	@r1,a
      004AA8 E4               [12]11618 	clr	a
      004AA9 08               [12]11619 	inc	r0
      004AAA 36               [12]11620 	addc	a,@r0
      004AAB 09               [12]11621 	inc	r1
      004AAC F7               [12]11622 	mov	@r1,a
      004AAD 08               [12]11623 	inc	r0
      004AAE 09               [12]11624 	inc	r1
      004AAF E6               [12]11625 	mov	a,@r0
      004AB0 F7               [12]11626 	mov	@r1,a
      004AB1 E5 00            [12]11627 	mov	a,_bp
      004AB3 24 08            [12]11628 	add	a,#0x08
      004AB5 F8               [12]11629 	mov	r0,a
      004AB6 74 23            [12]11630 	mov	a,#0x23
      004AB8 26               [12]11631 	add	a,@r0
      004AB9 FA               [12]11632 	mov	r2,a
      004ABA E4               [12]11633 	clr	a
      004ABB 08               [12]11634 	inc	r0
      004ABC 36               [12]11635 	addc	a,@r0
      004ABD FB               [12]11636 	mov	r3,a
      004ABE 08               [12]11637 	inc	r0
      004ABF 86 07            [24]11638 	mov	ar7,@r0
      004AC1 8A 82            [24]11639 	mov	dpl,r2
      004AC3 8B 83            [24]11640 	mov	dph,r3
      004AC5 8F F0            [24]11641 	mov	b,r7
      004AC7 12 00 00         [24]11642 	lcall	__gptrget
      004ACA FA               [12]11643 	mov	r2,a
      004ACB E4               [12]11644 	clr	a
      004ACC E5 00            [12]11645 	mov	a,_bp
      004ACE 24 16            [12]11646 	add	a,#0x16
      004AD0 F8               [12]11647 	mov	r0,a
      004AD1 08               [12]11648 	inc	r0
      004AD2 08               [12]11649 	inc	r0
      004AD3 08               [12]11650 	inc	r0
      004AD4 A6 02            [24]11651 	mov	@r0,ar2
      004AD6 18               [12]11652 	dec	r0
      004AD7 18               [12]11653 	dec	r0
      004AD8 18               [12]11654 	dec	r0
      004AD9 76 00            [12]11655 	mov	@r0,#0x00
      004ADB 08               [12]11656 	inc	r0
      004ADC 76 00            [12]11657 	mov	@r0,#0x00
      004ADE 08               [12]11658 	inc	r0
      004ADF 76 00            [12]11659 	mov	@r0,#0x00
      004AE1 E5 00            [12]11660 	mov	a,_bp
      004AE3 24 08            [12]11661 	add	a,#0x08
      004AE5 F8               [12]11662 	mov	r0,a
      004AE6 74 22            [12]11663 	mov	a,#0x22
      004AE8 26               [12]11664 	add	a,@r0
      004AE9 FC               [12]11665 	mov	r4,a
      004AEA E4               [12]11666 	clr	a
      004AEB 08               [12]11667 	inc	r0
      004AEC 36               [12]11668 	addc	a,@r0
      004AED FD               [12]11669 	mov	r5,a
      004AEE 08               [12]11670 	inc	r0
      004AEF 86 07            [24]11671 	mov	ar7,@r0
      004AF1 8C 82            [24]11672 	mov	dpl,r4
      004AF3 8D 83            [24]11673 	mov	dph,r5
      004AF5 8F F0            [24]11674 	mov	b,r7
      004AF7 12 00 00         [24]11675 	lcall	__gptrget
      004AFA FC               [12]11676 	mov	r4,a
      004AFB 7F 00            [12]11677 	mov	r7,#0x00
      004AFD 8F 05            [24]11678 	mov	ar5,r7
      004AFF 8C 06            [24]11679 	mov	ar6,r4
      004B01 E4               [12]11680 	clr	a
      004B02 FC               [12]11681 	mov	r4,a
      004B03 FF               [12]11682 	mov	r7,a
      004B04 E5 00            [12]11683 	mov	a,_bp
      004B06 24 16            [12]11684 	add	a,#0x16
      004B08 F8               [12]11685 	mov	r0,a
      004B09 EC               [12]11686 	mov	a,r4
      004B0A 46               [12]11687 	orl	a,@r0
      004B0B F6               [12]11688 	mov	@r0,a
      004B0C EF               [12]11689 	mov	a,r7
      004B0D 08               [12]11690 	inc	r0
      004B0E 46               [12]11691 	orl	a,@r0
      004B0F F6               [12]11692 	mov	@r0,a
      004B10 EE               [12]11693 	mov	a,r6
      004B11 08               [12]11694 	inc	r0
      004B12 46               [12]11695 	orl	a,@r0
      004B13 F6               [12]11696 	mov	@r0,a
      004B14 ED               [12]11697 	mov	a,r5
      004B15 08               [12]11698 	inc	r0
      004B16 46               [12]11699 	orl	a,@r0
      004B17 F6               [12]11700 	mov	@r0,a
      004B18 E5 00            [12]11701 	mov	a,_bp
      004B1A 24 08            [12]11702 	add	a,#0x08
      004B1C F8               [12]11703 	mov	r0,a
      004B1D 74 21            [12]11704 	mov	a,#0x21
      004B1F 26               [12]11705 	add	a,@r0
      004B20 FA               [12]11706 	mov	r2,a
      004B21 E4               [12]11707 	clr	a
      004B22 08               [12]11708 	inc	r0
      004B23 36               [12]11709 	addc	a,@r0
      004B24 FB               [12]11710 	mov	r3,a
      004B25 08               [12]11711 	inc	r0
      004B26 86 07            [24]11712 	mov	ar7,@r0
      004B28 8A 82            [24]11713 	mov	dpl,r2
      004B2A 8B 83            [24]11714 	mov	dph,r3
      004B2C 8F F0            [24]11715 	mov	b,r7
      004B2E 12 00 00         [24]11716 	lcall	__gptrget
      004B31 FF               [12]11717 	mov	r7,a
      004B32 E4               [12]11718 	clr	a
      004B33 FA               [12]11719 	mov	r2,a
      004B34 FE               [12]11720 	mov	r6,a
      004B35 FD               [12]11721 	mov	r5,a
      004B36 E5 00            [12]11722 	mov	a,_bp
      004B38 24 16            [12]11723 	add	a,#0x16
      004B3A F8               [12]11724 	mov	r0,a
      004B3B EA               [12]11725 	mov	a,r2
      004B3C 46               [12]11726 	orl	a,@r0
      004B3D F6               [12]11727 	mov	@r0,a
      004B3E EF               [12]11728 	mov	a,r7
      004B3F 08               [12]11729 	inc	r0
      004B40 46               [12]11730 	orl	a,@r0
      004B41 F6               [12]11731 	mov	@r0,a
      004B42 EE               [12]11732 	mov	a,r6
      004B43 08               [12]11733 	inc	r0
      004B44 46               [12]11734 	orl	a,@r0
      004B45 F6               [12]11735 	mov	@r0,a
      004B46 ED               [12]11736 	mov	a,r5
      004B47 08               [12]11737 	inc	r0
      004B48 46               [12]11738 	orl	a,@r0
      004B49 F6               [12]11739 	mov	@r0,a
      004B4A E5 00            [12]11740 	mov	a,_bp
      004B4C 24 0F            [12]11741 	add	a,#0x0f
      004B4E F8               [12]11742 	mov	r0,a
      004B4F 86 82            [24]11743 	mov	dpl,@r0
      004B51 08               [12]11744 	inc	r0
      004B52 86 83            [24]11745 	mov	dph,@r0
      004B54 08               [12]11746 	inc	r0
      004B55 86 F0            [24]11747 	mov	b,@r0
      004B57 12 00 00         [24]11748 	lcall	__gptrget
      004B5A FB               [12]11749 	mov	r3,a
      004B5B E4               [12]11750 	clr	a
      004B5C FC               [12]11751 	mov	r4,a
      004B5D FE               [12]11752 	mov	r6,a
      004B5E FF               [12]11753 	mov	r7,a
      004B5F E5 00            [12]11754 	mov	a,_bp
      004B61 24 16            [12]11755 	add	a,#0x16
      004B63 F8               [12]11756 	mov	r0,a
      004B64 E6               [12]11757 	mov	a,@r0
      004B65 42 03            [12]11758 	orl	ar3,a
      004B67 08               [12]11759 	inc	r0
      004B68 E6               [12]11760 	mov	a,@r0
      004B69 42 04            [12]11761 	orl	ar4,a
      004B6B 08               [12]11762 	inc	r0
      004B6C E6               [12]11763 	mov	a,@r0
      004B6D 42 06            [12]11764 	orl	ar6,a
      004B6F 08               [12]11765 	inc	r0
      004B70 E6               [12]11766 	mov	a,@r0
      004B71 42 07            [12]11767 	orl	ar7,a
      004B73 E5 00            [12]11768 	mov	a,_bp
      004B75 24 27            [12]11769 	add	a,#0x27
      004B77 F8               [12]11770 	mov	r0,a
      004B78 A6 03            [24]11771 	mov	@r0,ar3
      004B7A 08               [12]11772 	inc	r0
      004B7B A6 04            [24]11773 	mov	@r0,ar4
      004B7D 08               [12]11774 	inc	r0
      004B7E A6 06            [24]11775 	mov	@r0,ar6
      004B80 08               [12]11776 	inc	r0
      004B81 A6 07            [24]11777 	mov	@r0,ar7
                                  11778 ;	FATFS\src\ff.c:2390: return FR_OK;
                                  11779 ;	FATFS\src\ff.c:2315: if (!tsect1) tsect1 = LD_DWORD(fs1->win+BPB_TotSec32);
      004B83                      11780 00148$:
                                  11781 ;	FATFS\src\ff.c:2317: P1 = 0xf8;
      004B83 75 90 F8         [24]11782 	mov	_P1,#0xf8
                                  11783 ;	FATFS\src\ff.c:2318: nrsv1 = LD_WORD(fs1->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
      004B86 E5 00            [12]11784 	mov	a,_bp
      004B88 24 2B            [12]11785 	add	a,#0x2b
      004B8A F8               [12]11786 	mov	r0,a
      004B8B 74 26            [12]11787 	mov	a,#0x26
      004B8D 26               [12]11788 	add	a,@r0
      004B8E FC               [12]11789 	mov	r4,a
      004B8F E4               [12]11790 	clr	a
      004B90 08               [12]11791 	inc	r0
      004B91 36               [12]11792 	addc	a,@r0
      004B92 FD               [12]11793 	mov	r5,a
      004B93 08               [12]11794 	inc	r0
      004B94 86 06            [24]11795 	mov	ar6,@r0
      004B96 74 0E            [12]11796 	mov	a,#0x0e
      004B98 2C               [12]11797 	add	a,r4
      004B99 FA               [12]11798 	mov	r2,a
      004B9A E4               [12]11799 	clr	a
      004B9B 3D               [12]11800 	addc	a,r5
      004B9C FB               [12]11801 	mov	r3,a
      004B9D 8E 07            [24]11802 	mov	ar7,r6
      004B9F 74 0F            [12]11803 	mov	a,#0x0f
      004BA1 2C               [12]11804 	add	a,r4
      004BA2 FC               [12]11805 	mov	r4,a
      004BA3 E4               [12]11806 	clr	a
      004BA4 3D               [12]11807 	addc	a,r5
      004BA5 FD               [12]11808 	mov	r5,a
      004BA6 8C 82            [24]11809 	mov	dpl,r4
      004BA8 8D 83            [24]11810 	mov	dph,r5
      004BAA 8E F0            [24]11811 	mov	b,r6
      004BAC 12 00 00         [24]11812 	lcall	__gptrget
      004BAF FE               [12]11813 	mov	r6,a
      004BB0 7C 00            [12]11814 	mov	r4,#0x00
      004BB2 8A 82            [24]11815 	mov	dpl,r2
      004BB4 8B 83            [24]11816 	mov	dph,r3
      004BB6 8F F0            [24]11817 	mov	b,r7
      004BB8 12 00 00         [24]11818 	lcall	__gptrget
      004BBB FA               [12]11819 	mov	r2,a
      004BBC 7F 00            [12]11820 	mov	r7,#0x00
      004BBE 42 04            [12]11821 	orl	ar4,a
      004BC0 EF               [12]11822 	mov	a,r7
      004BC1 42 06            [12]11823 	orl	ar6,a
      004BC3 8C 07            [24]11824 	mov	ar7,r4
      004BC5 8E 05            [24]11825 	mov	ar5,r6
                                  11826 ;	FATFS\src\ff.c:2319: if (!nrsv1) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
      004BC7 EC               [12]11827 	mov	a,r4
      004BC8 4E               [12]11828 	orl	a,r6
      004BC9 70 06            [24]11829 	jnz	00150$
      004BCB 75 82 0D         [24]11830 	mov	dpl,#0x0d
      004BCE 02 51 FC         [24]11831 	ljmp	00170$
      004BD1                      11832 00150$:
                                  11833 ;	FATFS\src\ff.c:2321: P1 = 0xf9;
      004BD1 75 90 F9         [24]11834 	mov	_P1,#0xf9
                                  11835 ;	FATFS\src\ff.c:2323: sysect1 = nrsv1 + fasize1 + fs1->n_rootdir / (SS(fs1) / SZ_DIR);	/* RSV+FAT+DIR */
      004BD4 E5 00            [12]11836 	mov	a,_bp
      004BD6 24 16            [12]11837 	add	a,#0x16
      004BD8 F8               [12]11838 	mov	r0,a
      004BD9 A6 07            [24]11839 	mov	@r0,ar7
      004BDB 08               [12]11840 	inc	r0
      004BDC A6 05            [24]11841 	mov	@r0,ar5
      004BDE 08               [12]11842 	inc	r0
      004BDF 76 00            [12]11843 	mov	@r0,#0x00
      004BE1 08               [12]11844 	inc	r0
      004BE2 76 00            [12]11845 	mov	@r0,#0x00
      004BE4 E5 00            [12]11846 	mov	a,_bp
      004BE6 24 16            [12]11847 	add	a,#0x16
      004BE8 F8               [12]11848 	mov	r0,a
      004BE9 E5 00            [12]11849 	mov	a,_bp
      004BEB 24 32            [12]11850 	add	a,#0x32
      004BED F9               [12]11851 	mov	r1,a
      004BEE E7               [12]11852 	mov	a,@r1
      004BEF 26               [12]11853 	add	a,@r0
      004BF0 C0 E0            [24]11854 	push	acc
      004BF2 09               [12]11855 	inc	r1
      004BF3 E7               [12]11856 	mov	a,@r1
      004BF4 08               [12]11857 	inc	r0
      004BF5 36               [12]11858 	addc	a,@r0
      004BF6 C0 E0            [24]11859 	push	acc
      004BF8 09               [12]11860 	inc	r1
      004BF9 E7               [12]11861 	mov	a,@r1
      004BFA 08               [12]11862 	inc	r0
      004BFB 36               [12]11863 	addc	a,@r0
      004BFC C0 E0            [24]11864 	push	acc
      004BFE 09               [12]11865 	inc	r1
      004BFF E7               [12]11866 	mov	a,@r1
      004C00 08               [12]11867 	inc	r0
      004C01 36               [12]11868 	addc	a,@r0
      004C02 C0 E0            [24]11869 	push	acc
      004C04 E5 00            [12]11870 	mov	a,_bp
      004C06 24 0B            [12]11871 	add	a,#0x0b
      004C08 F8               [12]11872 	mov	r0,a
      004C09 D0 E0            [24]11873 	pop	acc
      004C0B F6               [12]11874 	mov	@r0,a
      004C0C 18               [12]11875 	dec	r0
      004C0D D0 E0            [24]11876 	pop	acc
      004C0F F6               [12]11877 	mov	@r0,a
      004C10 18               [12]11878 	dec	r0
      004C11 D0 E0            [24]11879 	pop	acc
      004C13 F6               [12]11880 	mov	@r0,a
      004C14 18               [12]11881 	dec	r0
      004C15 D0 E0            [24]11882 	pop	acc
      004C17 F6               [12]11883 	mov	@r0,a
      004C18 E5 00            [12]11884 	mov	a,_bp
      004C1A 24 04            [12]11885 	add	a,#0x04
      004C1C F8               [12]11886 	mov	r0,a
      004C1D 86 82            [24]11887 	mov	dpl,@r0
      004C1F 08               [12]11888 	inc	r0
      004C20 86 83            [24]11889 	mov	dph,@r0
      004C22 08               [12]11890 	inc	r0
      004C23 86 F0            [24]11891 	mov	b,@r0
      004C25 12 00 00         [24]11892 	lcall	__gptrget
      004C28 FA               [12]11893 	mov	r2,a
      004C29 A3               [24]11894 	inc	dptr
      004C2A 12 00 00         [24]11895 	lcall	__gptrget
      004C2D C4               [12]11896 	swap	a
      004C2E CA               [12]11897 	xch	a,r2
      004C2F C4               [12]11898 	swap	a
      004C30 54 0F            [12]11899 	anl	a,#0x0f
      004C32 6A               [12]11900 	xrl	a,r2
      004C33 CA               [12]11901 	xch	a,r2
      004C34 54 0F            [12]11902 	anl	a,#0x0f
      004C36 CA               [12]11903 	xch	a,r2
      004C37 6A               [12]11904 	xrl	a,r2
      004C38 CA               [12]11905 	xch	a,r2
      004C39 FB               [12]11906 	mov	r3,a
      004C3A E4               [12]11907 	clr	a
      004C3B FE               [12]11908 	mov	r6,a
      004C3C FF               [12]11909 	mov	r7,a
      004C3D E5 00            [12]11910 	mov	a,_bp
      004C3F 24 08            [12]11911 	add	a,#0x08
      004C41 F8               [12]11912 	mov	r0,a
      004C42 EA               [12]11913 	mov	a,r2
      004C43 26               [12]11914 	add	a,@r0
      004C44 FA               [12]11915 	mov	r2,a
      004C45 EB               [12]11916 	mov	a,r3
      004C46 08               [12]11917 	inc	r0
      004C47 36               [12]11918 	addc	a,@r0
      004C48 FB               [12]11919 	mov	r3,a
      004C49 EE               [12]11920 	mov	a,r6
      004C4A 08               [12]11921 	inc	r0
      004C4B 36               [12]11922 	addc	a,@r0
      004C4C FE               [12]11923 	mov	r6,a
      004C4D EF               [12]11924 	mov	a,r7
      004C4E 08               [12]11925 	inc	r0
      004C4F 36               [12]11926 	addc	a,@r0
      004C50 FF               [12]11927 	mov	r7,a
      004C51 E5 00            [12]11928 	mov	a,_bp
      004C53 24 23            [12]11929 	add	a,#0x23
      004C55 F8               [12]11930 	mov	r0,a
      004C56 A6 02            [24]11931 	mov	@r0,ar2
      004C58 08               [12]11932 	inc	r0
      004C59 A6 03            [24]11933 	mov	@r0,ar3
      004C5B 08               [12]11934 	inc	r0
      004C5C A6 06            [24]11935 	mov	@r0,ar6
      004C5E 08               [12]11936 	inc	r0
      004C5F A6 07            [24]11937 	mov	@r0,ar7
                                  11938 ;	FATFS\src\ff.c:2324: if (tsect1 < sysect1) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
      004C61 E5 00            [12]11939 	mov	a,_bp
      004C63 24 27            [12]11940 	add	a,#0x27
      004C65 F8               [12]11941 	mov	r0,a
      004C66 E5 00            [12]11942 	mov	a,_bp
      004C68 24 23            [12]11943 	add	a,#0x23
      004C6A F9               [12]11944 	mov	r1,a
      004C6B C3               [12]11945 	clr	c
      004C6C E6               [12]11946 	mov	a,@r0
      004C6D 97               [12]11947 	subb	a,@r1
      004C6E 08               [12]11948 	inc	r0
      004C6F E6               [12]11949 	mov	a,@r0
      004C70 09               [12]11950 	inc	r1
      004C71 97               [12]11951 	subb	a,@r1
      004C72 08               [12]11952 	inc	r0
      004C73 E6               [12]11953 	mov	a,@r0
      004C74 09               [12]11954 	inc	r1
      004C75 97               [12]11955 	subb	a,@r1
      004C76 08               [12]11956 	inc	r0
      004C77 E6               [12]11957 	mov	a,@r0
      004C78 09               [12]11958 	inc	r1
      004C79 97               [12]11959 	subb	a,@r1
      004C7A 50 06            [24]11960 	jnc	00152$
      004C7C 75 82 0D         [24]11961 	mov	dpl,#0x0d
      004C7F 02 51 FC         [24]11962 	ljmp	00170$
      004C82                      11963 00152$:
                                  11964 ;	FATFS\src\ff.c:2325: nclst1 = (tsect1 - sysect1) / fs1->csize;				/* Number of clusters */
      004C82 E5 00            [12]11965 	mov	a,_bp
      004C84 24 27            [12]11966 	add	a,#0x27
      004C86 F8               [12]11967 	mov	r0,a
      004C87 E5 00            [12]11968 	mov	a,_bp
      004C89 24 23            [12]11969 	add	a,#0x23
      004C8B F9               [12]11970 	mov	r1,a
      004C8C E6               [12]11971 	mov	a,@r0
      004C8D C3               [12]11972 	clr	c
      004C8E 97               [12]11973 	subb	a,@r1
      004C8F C0 E0            [24]11974 	push	acc
      004C91 08               [12]11975 	inc	r0
      004C92 E6               [12]11976 	mov	a,@r0
      004C93 09               [12]11977 	inc	r1
      004C94 97               [12]11978 	subb	a,@r1
      004C95 C0 E0            [24]11979 	push	acc
      004C97 08               [12]11980 	inc	r0
      004C98 E6               [12]11981 	mov	a,@r0
      004C99 09               [12]11982 	inc	r1
      004C9A 97               [12]11983 	subb	a,@r1
      004C9B C0 E0            [24]11984 	push	acc
      004C9D 08               [12]11985 	inc	r0
      004C9E E6               [12]11986 	mov	a,@r0
      004C9F 09               [12]11987 	inc	r1
      004CA0 97               [12]11988 	subb	a,@r1
      004CA1 C0 E0            [24]11989 	push	acc
      004CA3 E5 00            [12]11990 	mov	a,_bp
      004CA5 24 0B            [12]11991 	add	a,#0x0b
      004CA7 F8               [12]11992 	mov	r0,a
      004CA8 D0 E0            [24]11993 	pop	acc
      004CAA F6               [12]11994 	mov	@r0,a
      004CAB 18               [12]11995 	dec	r0
      004CAC D0 E0            [24]11996 	pop	acc
      004CAE F6               [12]11997 	mov	@r0,a
      004CAF 18               [12]11998 	dec	r0
      004CB0 D0 E0            [24]11999 	pop	acc
      004CB2 F6               [12]12000 	mov	@r0,a
      004CB3 18               [12]12001 	dec	r0
      004CB4 D0 E0            [24]12002 	pop	acc
      004CB6 F6               [12]12003 	mov	@r0,a
      004CB7 A8 00            [24]12004 	mov	r0,_bp
      004CB9 08               [12]12005 	inc	r0
      004CBA 86 82            [24]12006 	mov	dpl,@r0
      004CBC 08               [12]12007 	inc	r0
      004CBD 86 83            [24]12008 	mov	dph,@r0
      004CBF 08               [12]12009 	inc	r0
      004CC0 86 F0            [24]12010 	mov	b,@r0
      004CC2 12 00 00         [24]12011 	lcall	__gptrget
      004CC5 FA               [12]12012 	mov	r2,a
      004CC6 7B 00            [12]12013 	mov	r3,#0x00
      004CC8 7E 00            [12]12014 	mov	r6,#0x00
      004CCA 7F 00            [12]12015 	mov	r7,#0x00
      004CCC C0 02            [24]12016 	push	ar2
      004CCE C0 03            [24]12017 	push	ar3
      004CD0 C0 06            [24]12018 	push	ar6
      004CD2 C0 07            [24]12019 	push	ar7
      004CD4 E5 00            [12]12020 	mov	a,_bp
      004CD6 24 08            [12]12021 	add	a,#0x08
      004CD8 F8               [12]12022 	mov	r0,a
      004CD9 86 82            [24]12023 	mov	dpl,@r0
      004CDB 08               [12]12024 	inc	r0
      004CDC 86 83            [24]12025 	mov	dph,@r0
      004CDE 08               [12]12026 	inc	r0
      004CDF 86 F0            [24]12027 	mov	b,@r0
      004CE1 08               [12]12028 	inc	r0
      004CE2 E6               [12]12029 	mov	a,@r0
      004CE3 12 00 23         [24]12030 	lcall	__divulong
      004CE6 AC 82            [24]12031 	mov	r4,dpl
      004CE8 AD 83            [24]12032 	mov	r5,dph
      004CEA AE F0            [24]12033 	mov	r6,b
      004CEC FF               [12]12034 	mov	r7,a
      004CED E5 81            [12]12035 	mov	a,sp
      004CEF 24 FC            [12]12036 	add	a,#0xfc
      004CF1 F5 81            [12]12037 	mov	sp,a
                                  12038 ;	FATFS\src\ff.c:2326: if (!nclst1) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
      004CF3 EC               [12]12039 	mov	a,r4
      004CF4 4D               [12]12040 	orl	a,r5
      004CF5 4E               [12]12041 	orl	a,r6
      004CF6 4F               [12]12042 	orl	a,r7
      004CF7 70 06            [24]12043 	jnz	00154$
      004CF9 75 82 0D         [24]12044 	mov	dpl,#0x0d
      004CFC 02 51 FC         [24]12045 	ljmp	00170$
      004CFF                      12046 00154$:
                                  12047 ;	FATFS\src\ff.c:2327: fmt1 = FS_FAT12;
      004CFF E5 00            [12]12048 	mov	a,_bp
      004D01 24 22            [12]12049 	add	a,#0x22
      004D03 F8               [12]12050 	mov	r0,a
      004D04 76 01            [12]12051 	mov	@r0,#0x01
                                  12052 ;	FATFS\src\ff.c:2328: if (nclst1 >= MIN_FAT16) fmt1 = FS_FAT16;
      004D06 C3               [12]12053 	clr	c
      004D07 EC               [12]12054 	mov	a,r4
      004D08 94 F6            [12]12055 	subb	a,#0xf6
      004D0A ED               [12]12056 	mov	a,r5
      004D0B 94 0F            [12]12057 	subb	a,#0x0f
      004D0D EE               [12]12058 	mov	a,r6
      004D0E 94 00            [12]12059 	subb	a,#0x00
      004D10 EF               [12]12060 	mov	a,r7
      004D11 94 00            [12]12061 	subb	a,#0x00
      004D13 40 07            [24]12062 	jc	00156$
      004D15 E5 00            [12]12063 	mov	a,_bp
      004D17 24 22            [12]12064 	add	a,#0x22
      004D19 F8               [12]12065 	mov	r0,a
      004D1A 76 02            [12]12066 	mov	@r0,#0x02
      004D1C                      12067 00156$:
                                  12068 ;	FATFS\src\ff.c:2329: if (nclst1 >= MIN_FAT32) fmt1 = FS_FAT32;
      004D1C C3               [12]12069 	clr	c
      004D1D EC               [12]12070 	mov	a,r4
      004D1E 94 F6            [12]12071 	subb	a,#0xf6
      004D20 ED               [12]12072 	mov	a,r5
      004D21 94 FF            [12]12073 	subb	a,#0xff
      004D23 EE               [12]12074 	mov	a,r6
      004D24 94 00            [12]12075 	subb	a,#0x00
      004D26 EF               [12]12076 	mov	a,r7
      004D27 94 00            [12]12077 	subb	a,#0x00
      004D29 40 07            [24]12078 	jc	00158$
      004D2B E5 00            [12]12079 	mov	a,_bp
      004D2D 24 22            [12]12080 	add	a,#0x22
      004D2F F8               [12]12081 	mov	r0,a
      004D30 76 03            [12]12082 	mov	@r0,#0x03
      004D32                      12083 00158$:
                                  12084 ;	FATFS\src\ff.c:2331: P1 = 0xfa;
      004D32 75 90 FA         [24]12085 	mov	_P1,#0xfa
                                  12086 ;	FATFS\src\ff.c:2333: fs1->n_fatent = nclst1 + 2;							/* Number of FAT entries */
      004D35 E5 00            [12]12087 	mov	a,_bp
      004D37 24 2B            [12]12088 	add	a,#0x2b
      004D39 F8               [12]12089 	mov	r0,a
      004D3A E5 00            [12]12090 	mov	a,_bp
      004D3C 24 08            [12]12091 	add	a,#0x08
      004D3E F9               [12]12092 	mov	r1,a
      004D3F 74 0A            [12]12093 	mov	a,#0x0a
      004D41 26               [12]12094 	add	a,@r0
      004D42 F7               [12]12095 	mov	@r1,a
      004D43 E4               [12]12096 	clr	a
      004D44 08               [12]12097 	inc	r0
      004D45 36               [12]12098 	addc	a,@r0
      004D46 09               [12]12099 	inc	r1
      004D47 F7               [12]12100 	mov	@r1,a
      004D48 08               [12]12101 	inc	r0
      004D49 09               [12]12102 	inc	r1
      004D4A E6               [12]12103 	mov	a,@r0
      004D4B F7               [12]12104 	mov	@r1,a
      004D4C 74 02            [12]12105 	mov	a,#0x02
      004D4E 2C               [12]12106 	add	a,r4
      004D4F FC               [12]12107 	mov	r4,a
      004D50 E4               [12]12108 	clr	a
      004D51 3D               [12]12109 	addc	a,r5
      004D52 FD               [12]12110 	mov	r5,a
      004D53 E4               [12]12111 	clr	a
      004D54 3E               [12]12112 	addc	a,r6
      004D55 FE               [12]12113 	mov	r6,a
      004D56 E4               [12]12114 	clr	a
      004D57 3F               [12]12115 	addc	a,r7
      004D58 FF               [12]12116 	mov	r7,a
      004D59 E5 00            [12]12117 	mov	a,_bp
      004D5B 24 08            [12]12118 	add	a,#0x08
      004D5D F8               [12]12119 	mov	r0,a
      004D5E 86 82            [24]12120 	mov	dpl,@r0
      004D60 08               [12]12121 	inc	r0
      004D61 86 83            [24]12122 	mov	dph,@r0
      004D63 08               [12]12123 	inc	r0
      004D64 86 F0            [24]12124 	mov	b,@r0
      004D66 EC               [12]12125 	mov	a,r4
      004D67 12 00 00         [24]12126 	lcall	__gptrput
      004D6A A3               [24]12127 	inc	dptr
      004D6B ED               [12]12128 	mov	a,r5
      004D6C 12 00 00         [24]12129 	lcall	__gptrput
      004D6F A3               [24]12130 	inc	dptr
      004D70 EE               [12]12131 	mov	a,r6
      004D71 12 00 00         [24]12132 	lcall	__gptrput
      004D74 A3               [24]12133 	inc	dptr
      004D75 EF               [12]12134 	mov	a,r7
      004D76 12 00 00         [24]12135 	lcall	__gptrput
                                  12136 ;	FATFS\src\ff.c:2334: fs1->volbase = bsect1;								/* Volume start sector */
      004D79 E5 00            [12]12137 	mov	a,_bp
      004D7B 24 2B            [12]12138 	add	a,#0x2b
      004D7D F8               [12]12139 	mov	r0,a
      004D7E 74 12            [12]12140 	mov	a,#0x12
      004D80 26               [12]12141 	add	a,@r0
      004D81 FD               [12]12142 	mov	r5,a
      004D82 E4               [12]12143 	clr	a
      004D83 08               [12]12144 	inc	r0
      004D84 36               [12]12145 	addc	a,@r0
      004D85 FE               [12]12146 	mov	r6,a
      004D86 08               [12]12147 	inc	r0
      004D87 86 07            [24]12148 	mov	ar7,@r0
      004D89 8D 82            [24]12149 	mov	dpl,r5
      004D8B 8E 83            [24]12150 	mov	dph,r6
      004D8D 8F F0            [24]12151 	mov	b,r7
      004D8F E5 00            [12]12152 	mov	a,_bp
      004D91 24 2E            [12]12153 	add	a,#0x2e
      004D93 F8               [12]12154 	mov	r0,a
      004D94 E6               [12]12155 	mov	a,@r0
      004D95 12 00 00         [24]12156 	lcall	__gptrput
      004D98 A3               [24]12157 	inc	dptr
      004D99 08               [12]12158 	inc	r0
      004D9A E6               [12]12159 	mov	a,@r0
      004D9B 12 00 00         [24]12160 	lcall	__gptrput
      004D9E A3               [24]12161 	inc	dptr
      004D9F 08               [12]12162 	inc	r0
      004DA0 E6               [12]12163 	mov	a,@r0
      004DA1 12 00 00         [24]12164 	lcall	__gptrput
      004DA4 A3               [24]12165 	inc	dptr
      004DA5 08               [12]12166 	inc	r0
      004DA6 E6               [12]12167 	mov	a,@r0
      004DA7 12 00 00         [24]12168 	lcall	__gptrput
                                  12169 ;	FATFS\src\ff.c:2335: fs1->fatbase = bsect1 + nrsv1; 						/* FAT start sector */
      004DAA E5 00            [12]12170 	mov	a,_bp
      004DAC 24 2B            [12]12171 	add	a,#0x2b
      004DAE F8               [12]12172 	mov	r0,a
      004DAF E5 00            [12]12173 	mov	a,_bp
      004DB1 24 0F            [12]12174 	add	a,#0x0f
      004DB3 F9               [12]12175 	mov	r1,a
      004DB4 74 16            [12]12176 	mov	a,#0x16
      004DB6 26               [12]12177 	add	a,@r0
      004DB7 F7               [12]12178 	mov	@r1,a
      004DB8 E4               [12]12179 	clr	a
      004DB9 08               [12]12180 	inc	r0
      004DBA 36               [12]12181 	addc	a,@r0
      004DBB 09               [12]12182 	inc	r1
      004DBC F7               [12]12183 	mov	@r1,a
      004DBD 08               [12]12184 	inc	r0
      004DBE 09               [12]12185 	inc	r1
      004DBF E6               [12]12186 	mov	a,@r0
      004DC0 F7               [12]12187 	mov	@r1,a
      004DC1 E5 00            [12]12188 	mov	a,_bp
      004DC3 24 2E            [12]12189 	add	a,#0x2e
      004DC5 F8               [12]12190 	mov	r0,a
      004DC6 E5 00            [12]12191 	mov	a,_bp
      004DC8 24 16            [12]12192 	add	a,#0x16
      004DCA F9               [12]12193 	mov	r1,a
      004DCB E7               [12]12194 	mov	a,@r1
      004DCC 26               [12]12195 	add	a,@r0
      004DCD FA               [12]12196 	mov	r2,a
      004DCE 09               [12]12197 	inc	r1
      004DCF E7               [12]12198 	mov	a,@r1
      004DD0 08               [12]12199 	inc	r0
      004DD1 36               [12]12200 	addc	a,@r0
      004DD2 FB               [12]12201 	mov	r3,a
      004DD3 09               [12]12202 	inc	r1
      004DD4 E7               [12]12203 	mov	a,@r1
      004DD5 08               [12]12204 	inc	r0
      004DD6 36               [12]12205 	addc	a,@r0
      004DD7 FC               [12]12206 	mov	r4,a
      004DD8 09               [12]12207 	inc	r1
      004DD9 E7               [12]12208 	mov	a,@r1
      004DDA 08               [12]12209 	inc	r0
      004DDB 36               [12]12210 	addc	a,@r0
      004DDC FF               [12]12211 	mov	r7,a
      004DDD E5 00            [12]12212 	mov	a,_bp
      004DDF 24 0F            [12]12213 	add	a,#0x0f
      004DE1 F8               [12]12214 	mov	r0,a
      004DE2 86 82            [24]12215 	mov	dpl,@r0
      004DE4 08               [12]12216 	inc	r0
      004DE5 86 83            [24]12217 	mov	dph,@r0
      004DE7 08               [12]12218 	inc	r0
      004DE8 86 F0            [24]12219 	mov	b,@r0
      004DEA EA               [12]12220 	mov	a,r2
      004DEB 12 00 00         [24]12221 	lcall	__gptrput
      004DEE A3               [24]12222 	inc	dptr
      004DEF EB               [12]12223 	mov	a,r3
      004DF0 12 00 00         [24]12224 	lcall	__gptrput
      004DF3 A3               [24]12225 	inc	dptr
      004DF4 EC               [12]12226 	mov	a,r4
      004DF5 12 00 00         [24]12227 	lcall	__gptrput
      004DF8 A3               [24]12228 	inc	dptr
      004DF9 EF               [12]12229 	mov	a,r7
      004DFA 12 00 00         [24]12230 	lcall	__gptrput
                                  12231 ;	FATFS\src\ff.c:2336: fs1->database = bsect1 + sysect1;						/* Data start sector */
      004DFD E5 00            [12]12232 	mov	a,_bp
      004DFF 24 2B            [12]12233 	add	a,#0x2b
      004E01 F8               [12]12234 	mov	r0,a
      004E02 E5 00            [12]12235 	mov	a,_bp
      004E04 24 16            [12]12236 	add	a,#0x16
      004E06 F9               [12]12237 	mov	r1,a
      004E07 74 1E            [12]12238 	mov	a,#0x1e
      004E09 26               [12]12239 	add	a,@r0
      004E0A F7               [12]12240 	mov	@r1,a
      004E0B E4               [12]12241 	clr	a
      004E0C 08               [12]12242 	inc	r0
      004E0D 36               [12]12243 	addc	a,@r0
      004E0E 09               [12]12244 	inc	r1
      004E0F F7               [12]12245 	mov	@r1,a
      004E10 08               [12]12246 	inc	r0
      004E11 09               [12]12247 	inc	r1
      004E12 E6               [12]12248 	mov	a,@r0
      004E13 F7               [12]12249 	mov	@r1,a
      004E14 E5 00            [12]12250 	mov	a,_bp
      004E16 24 2E            [12]12251 	add	a,#0x2e
      004E18 F8               [12]12252 	mov	r0,a
      004E19 E5 00            [12]12253 	mov	a,_bp
      004E1B 24 23            [12]12254 	add	a,#0x23
      004E1D F9               [12]12255 	mov	r1,a
      004E1E E7               [12]12256 	mov	a,@r1
      004E1F 26               [12]12257 	add	a,@r0
      004E20 FA               [12]12258 	mov	r2,a
      004E21 09               [12]12259 	inc	r1
      004E22 E7               [12]12260 	mov	a,@r1
      004E23 08               [12]12261 	inc	r0
      004E24 36               [12]12262 	addc	a,@r0
      004E25 FB               [12]12263 	mov	r3,a
      004E26 09               [12]12264 	inc	r1
      004E27 E7               [12]12265 	mov	a,@r1
      004E28 08               [12]12266 	inc	r0
      004E29 36               [12]12267 	addc	a,@r0
      004E2A FC               [12]12268 	mov	r4,a
      004E2B 09               [12]12269 	inc	r1
      004E2C E7               [12]12270 	mov	a,@r1
      004E2D 08               [12]12271 	inc	r0
      004E2E 36               [12]12272 	addc	a,@r0
      004E2F FF               [12]12273 	mov	r7,a
      004E30 E5 00            [12]12274 	mov	a,_bp
      004E32 24 16            [12]12275 	add	a,#0x16
      004E34 F8               [12]12276 	mov	r0,a
      004E35 86 82            [24]12277 	mov	dpl,@r0
      004E37 08               [12]12278 	inc	r0
      004E38 86 83            [24]12279 	mov	dph,@r0
      004E3A 08               [12]12280 	inc	r0
      004E3B 86 F0            [24]12281 	mov	b,@r0
      004E3D EA               [12]12282 	mov	a,r2
      004E3E 12 00 00         [24]12283 	lcall	__gptrput
      004E41 A3               [24]12284 	inc	dptr
      004E42 EB               [12]12285 	mov	a,r3
      004E43 12 00 00         [24]12286 	lcall	__gptrput
      004E46 A3               [24]12287 	inc	dptr
      004E47 EC               [12]12288 	mov	a,r4
      004E48 12 00 00         [24]12289 	lcall	__gptrput
      004E4B A3               [24]12290 	inc	dptr
      004E4C EF               [12]12291 	mov	a,r7
      004E4D 12 00 00         [24]12292 	lcall	__gptrput
                                  12293 ;	FATFS\src\ff.c:2337: if (fmt1 == FS_FAT32) {
      004E50 E5 00            [12]12294 	mov	a,_bp
      004E52 24 22            [12]12295 	add	a,#0x22
      004E54 F8               [12]12296 	mov	r0,a
      004E55 B6 03 02         [24]12297 	cjne	@r0,#0x03,00366$
      004E58 80 03            [24]12298 	sjmp	00367$
      004E5A                      12299 00366$:
      004E5A 02 4F DA         [24]12300 	ljmp	00164$
      004E5D                      12301 00367$:
                                  12302 ;	FATFS\src\ff.c:2338: if (fs1->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
      004E5D E5 00            [12]12303 	mov	a,_bp
      004E5F 24 04            [12]12304 	add	a,#0x04
      004E61 F8               [12]12305 	mov	r0,a
      004E62 86 82            [24]12306 	mov	dpl,@r0
      004E64 08               [12]12307 	inc	r0
      004E65 86 83            [24]12308 	mov	dph,@r0
      004E67 08               [12]12309 	inc	r0
      004E68 86 F0            [24]12310 	mov	b,@r0
      004E6A 12 00 00         [24]12311 	lcall	__gptrget
      004E6D FE               [12]12312 	mov	r6,a
      004E6E A3               [24]12313 	inc	dptr
      004E6F 12 00 00         [24]12314 	lcall	__gptrget
      004E72 FF               [12]12315 	mov	r7,a
      004E73 4E               [12]12316 	orl	a,r6
      004E74 60 06            [24]12317 	jz	00160$
      004E76 75 82 0D         [24]12318 	mov	dpl,#0x0d
      004E79 02 51 FC         [24]12319 	ljmp	00170$
      004E7C                      12320 00160$:
                                  12321 ;	FATFS\src\ff.c:2339: fs1->dirbase = LD_DWORD(fs1->win+BPB_RootClus);	/* Root directory start cluster */
      004E7C E5 00            [12]12322 	mov	a,_bp
      004E7E 24 2B            [12]12323 	add	a,#0x2b
      004E80 F8               [12]12324 	mov	r0,a
      004E81 E5 00            [12]12325 	mov	a,_bp
      004E83 24 16            [12]12326 	add	a,#0x16
      004E85 F9               [12]12327 	mov	r1,a
      004E86 74 1A            [12]12328 	mov	a,#0x1a
      004E88 26               [12]12329 	add	a,@r0
      004E89 F7               [12]12330 	mov	@r1,a
      004E8A E4               [12]12331 	clr	a
      004E8B 08               [12]12332 	inc	r0
      004E8C 36               [12]12333 	addc	a,@r0
      004E8D 09               [12]12334 	inc	r1
      004E8E F7               [12]12335 	mov	@r1,a
      004E8F 08               [12]12336 	inc	r0
      004E90 09               [12]12337 	inc	r1
      004E91 E6               [12]12338 	mov	a,@r0
      004E92 F7               [12]12339 	mov	@r1,a
      004E93 E5 00            [12]12340 	mov	a,_bp
      004E95 24 2B            [12]12341 	add	a,#0x2b
      004E97 F8               [12]12342 	mov	r0,a
      004E98 E5 00            [12]12343 	mov	a,_bp
      004E9A 24 0C            [12]12344 	add	a,#0x0c
      004E9C F9               [12]12345 	mov	r1,a
      004E9D 74 26            [12]12346 	mov	a,#0x26
      004E9F 26               [12]12347 	add	a,@r0
      004EA0 F7               [12]12348 	mov	@r1,a
      004EA1 E4               [12]12349 	clr	a
      004EA2 08               [12]12350 	inc	r0
      004EA3 36               [12]12351 	addc	a,@r0
      004EA4 09               [12]12352 	inc	r1
      004EA5 F7               [12]12353 	mov	@r1,a
      004EA6 08               [12]12354 	inc	r0
      004EA7 09               [12]12355 	inc	r1
      004EA8 E6               [12]12356 	mov	a,@r0
      004EA9 F7               [12]12357 	mov	@r1,a
      004EAA E5 00            [12]12358 	mov	a,_bp
      004EAC 24 0C            [12]12359 	add	a,#0x0c
      004EAE F8               [12]12360 	mov	r0,a
      004EAF A9 00            [24]12361 	mov	r1,_bp
      004EB1 09               [12]12362 	inc	r1
      004EB2 74 2C            [12]12363 	mov	a,#0x2c
      004EB4 26               [12]12364 	add	a,@r0
      004EB5 F7               [12]12365 	mov	@r1,a
      004EB6 E4               [12]12366 	clr	a
      004EB7 08               [12]12367 	inc	r0
      004EB8 36               [12]12368 	addc	a,@r0
      004EB9 09               [12]12369 	inc	r1
      004EBA F7               [12]12370 	mov	@r1,a
      004EBB 08               [12]12371 	inc	r0
      004EBC 09               [12]12372 	inc	r1
      004EBD E6               [12]12373 	mov	a,@r0
      004EBE F7               [12]12374 	mov	@r1,a
      004EBF E5 00            [12]12375 	mov	a,_bp
      004EC1 24 0C            [12]12376 	add	a,#0x0c
      004EC3 F8               [12]12377 	mov	r0,a
      004EC4 74 2F            [12]12378 	mov	a,#0x2f
      004EC6 26               [12]12379 	add	a,@r0
      004EC7 FD               [12]12380 	mov	r5,a
      004EC8 E4               [12]12381 	clr	a
      004EC9 08               [12]12382 	inc	r0
      004ECA 36               [12]12383 	addc	a,@r0
      004ECB FE               [12]12384 	mov	r6,a
      004ECC 08               [12]12385 	inc	r0
      004ECD 86 07            [24]12386 	mov	ar7,@r0
      004ECF 8D 82            [24]12387 	mov	dpl,r5
      004ED1 8E 83            [24]12388 	mov	dph,r6
      004ED3 8F F0            [24]12389 	mov	b,r7
      004ED5 12 00 00         [24]12390 	lcall	__gptrget
      004ED8 FC               [12]12391 	mov	r4,a
      004ED9 E4               [12]12392 	clr	a
      004EDA E5 00            [12]12393 	mov	a,_bp
      004EDC 24 1A            [12]12394 	add	a,#0x1a
      004EDE F8               [12]12395 	mov	r0,a
      004EDF 08               [12]12396 	inc	r0
      004EE0 08               [12]12397 	inc	r0
      004EE1 08               [12]12398 	inc	r0
      004EE2 A6 04            [24]12399 	mov	@r0,ar4
      004EE4 18               [12]12400 	dec	r0
      004EE5 18               [12]12401 	dec	r0
      004EE6 18               [12]12402 	dec	r0
      004EE7 76 00            [12]12403 	mov	@r0,#0x00
      004EE9 08               [12]12404 	inc	r0
      004EEA 76 00            [12]12405 	mov	@r0,#0x00
      004EEC 08               [12]12406 	inc	r0
      004EED 76 00            [12]12407 	mov	@r0,#0x00
      004EEF E5 00            [12]12408 	mov	a,_bp
      004EF1 24 0C            [12]12409 	add	a,#0x0c
      004EF3 F8               [12]12410 	mov	r0,a
      004EF4 74 2E            [12]12411 	mov	a,#0x2e
      004EF6 26               [12]12412 	add	a,@r0
      004EF7 FA               [12]12413 	mov	r2,a
      004EF8 E4               [12]12414 	clr	a
      004EF9 08               [12]12415 	inc	r0
      004EFA 36               [12]12416 	addc	a,@r0
      004EFB FB               [12]12417 	mov	r3,a
      004EFC 08               [12]12418 	inc	r0
      004EFD 86 07            [24]12419 	mov	ar7,@r0
      004EFF 8A 82            [24]12420 	mov	dpl,r2
      004F01 8B 83            [24]12421 	mov	dph,r3
      004F03 8F F0            [24]12422 	mov	b,r7
      004F05 12 00 00         [24]12423 	lcall	__gptrget
      004F08 FA               [12]12424 	mov	r2,a
      004F09 7F 00            [12]12425 	mov	r7,#0x00
      004F0B 8F 05            [24]12426 	mov	ar5,r7
      004F0D 8A 06            [24]12427 	mov	ar6,r2
      004F0F E4               [12]12428 	clr	a
      004F10 FA               [12]12429 	mov	r2,a
      004F11 FF               [12]12430 	mov	r7,a
      004F12 E5 00            [12]12431 	mov	a,_bp
      004F14 24 1A            [12]12432 	add	a,#0x1a
      004F16 F8               [12]12433 	mov	r0,a
      004F17 EA               [12]12434 	mov	a,r2
      004F18 46               [12]12435 	orl	a,@r0
      004F19 F6               [12]12436 	mov	@r0,a
      004F1A EF               [12]12437 	mov	a,r7
      004F1B 08               [12]12438 	inc	r0
      004F1C 46               [12]12439 	orl	a,@r0
      004F1D F6               [12]12440 	mov	@r0,a
      004F1E EE               [12]12441 	mov	a,r6
      004F1F 08               [12]12442 	inc	r0
      004F20 46               [12]12443 	orl	a,@r0
      004F21 F6               [12]12444 	mov	@r0,a
      004F22 ED               [12]12445 	mov	a,r5
      004F23 08               [12]12446 	inc	r0
      004F24 46               [12]12447 	orl	a,@r0
      004F25 F6               [12]12448 	mov	@r0,a
      004F26 E5 00            [12]12449 	mov	a,_bp
      004F28 24 0C            [12]12450 	add	a,#0x0c
      004F2A F8               [12]12451 	mov	r0,a
      004F2B 74 2D            [12]12452 	mov	a,#0x2d
      004F2D 26               [12]12453 	add	a,@r0
      004F2E FB               [12]12454 	mov	r3,a
      004F2F E4               [12]12455 	clr	a
      004F30 08               [12]12456 	inc	r0
      004F31 36               [12]12457 	addc	a,@r0
      004F32 FC               [12]12458 	mov	r4,a
      004F33 08               [12]12459 	inc	r0
      004F34 86 07            [24]12460 	mov	ar7,@r0
      004F36 8B 82            [24]12461 	mov	dpl,r3
      004F38 8C 83            [24]12462 	mov	dph,r4
      004F3A 8F F0            [24]12463 	mov	b,r7
      004F3C 12 00 00         [24]12464 	lcall	__gptrget
      004F3F FF               [12]12465 	mov	r7,a
      004F40 E4               [12]12466 	clr	a
      004F41 FB               [12]12467 	mov	r3,a
      004F42 FE               [12]12468 	mov	r6,a
      004F43 FD               [12]12469 	mov	r5,a
      004F44 E5 00            [12]12470 	mov	a,_bp
      004F46 24 1A            [12]12471 	add	a,#0x1a
      004F48 F8               [12]12472 	mov	r0,a
      004F49 EB               [12]12473 	mov	a,r3
      004F4A 46               [12]12474 	orl	a,@r0
      004F4B F6               [12]12475 	mov	@r0,a
      004F4C EF               [12]12476 	mov	a,r7
      004F4D 08               [12]12477 	inc	r0
      004F4E 46               [12]12478 	orl	a,@r0
      004F4F F6               [12]12479 	mov	@r0,a
      004F50 EE               [12]12480 	mov	a,r6
      004F51 08               [12]12481 	inc	r0
      004F52 46               [12]12482 	orl	a,@r0
      004F53 F6               [12]12483 	mov	@r0,a
      004F54 ED               [12]12484 	mov	a,r5
      004F55 08               [12]12485 	inc	r0
      004F56 46               [12]12486 	orl	a,@r0
      004F57 F6               [12]12487 	mov	@r0,a
      004F58 A8 00            [24]12488 	mov	r0,_bp
      004F5A 08               [12]12489 	inc	r0
      004F5B 86 82            [24]12490 	mov	dpl,@r0
      004F5D 08               [12]12491 	inc	r0
      004F5E 86 83            [24]12492 	mov	dph,@r0
      004F60 08               [12]12493 	inc	r0
      004F61 86 F0            [24]12494 	mov	b,@r0
      004F63 12 00 00         [24]12495 	lcall	__gptrget
      004F66 FA               [12]12496 	mov	r2,a
      004F67 E4               [12]12497 	clr	a
      004F68 FE               [12]12498 	mov	r6,a
      004F69 FC               [12]12499 	mov	r4,a
      004F6A FF               [12]12500 	mov	r7,a
      004F6B E5 00            [12]12501 	mov	a,_bp
      004F6D 24 1A            [12]12502 	add	a,#0x1a
      004F6F F8               [12]12503 	mov	r0,a
      004F70 E6               [12]12504 	mov	a,@r0
      004F71 42 02            [12]12505 	orl	ar2,a
      004F73 08               [12]12506 	inc	r0
      004F74 E6               [12]12507 	mov	a,@r0
      004F75 42 06            [12]12508 	orl	ar6,a
      004F77 08               [12]12509 	inc	r0
      004F78 E6               [12]12510 	mov	a,@r0
      004F79 42 04            [12]12511 	orl	ar4,a
      004F7B 08               [12]12512 	inc	r0
      004F7C E6               [12]12513 	mov	a,@r0
      004F7D 42 07            [12]12514 	orl	ar7,a
      004F7F E5 00            [12]12515 	mov	a,_bp
      004F81 24 16            [12]12516 	add	a,#0x16
      004F83 F8               [12]12517 	mov	r0,a
      004F84 86 82            [24]12518 	mov	dpl,@r0
      004F86 08               [12]12519 	inc	r0
      004F87 86 83            [24]12520 	mov	dph,@r0
      004F89 08               [12]12521 	inc	r0
      004F8A 86 F0            [24]12522 	mov	b,@r0
      004F8C EA               [12]12523 	mov	a,r2
      004F8D 12 00 00         [24]12524 	lcall	__gptrput
      004F90 A3               [24]12525 	inc	dptr
      004F91 EE               [12]12526 	mov	a,r6
      004F92 12 00 00         [24]12527 	lcall	__gptrput
      004F95 A3               [24]12528 	inc	dptr
      004F96 EC               [12]12529 	mov	a,r4
      004F97 12 00 00         [24]12530 	lcall	__gptrput
      004F9A A3               [24]12531 	inc	dptr
      004F9B EF               [12]12532 	mov	a,r7
      004F9C 12 00 00         [24]12533 	lcall	__gptrput
                                  12534 ;	FATFS\src\ff.c:2340: szbfat1 = fs1->n_fatent * 4;						/* (Needed FAT size) */
      004F9F E5 00            [12]12535 	mov	a,_bp
      004FA1 24 08            [12]12536 	add	a,#0x08
      004FA3 F8               [12]12537 	mov	r0,a
      004FA4 86 82            [24]12538 	mov	dpl,@r0
      004FA6 08               [12]12539 	inc	r0
      004FA7 86 83            [24]12540 	mov	dph,@r0
      004FA9 08               [12]12541 	inc	r0
      004FAA 86 F0            [24]12542 	mov	b,@r0
      004FAC 12 00 00         [24]12543 	lcall	__gptrget
      004FAF FC               [12]12544 	mov	r4,a
      004FB0 A3               [24]12545 	inc	dptr
      004FB1 12 00 00         [24]12546 	lcall	__gptrget
      004FB4 FD               [12]12547 	mov	r5,a
      004FB5 A3               [24]12548 	inc	dptr
      004FB6 12 00 00         [24]12549 	lcall	__gptrget
      004FB9 FE               [12]12550 	mov	r6,a
      004FBA A3               [24]12551 	inc	dptr
      004FBB 12 00 00         [24]12552 	lcall	__gptrget
      004FBE FF               [12]12553 	mov	r7,a
      004FBF EC               [12]12554 	mov	a,r4
      004FC0 2C               [12]12555 	add	a,r4
      004FC1 FC               [12]12556 	mov	r4,a
      004FC2 ED               [12]12557 	mov	a,r5
      004FC3 33               [12]12558 	rlc	a
      004FC4 FD               [12]12559 	mov	r5,a
      004FC5 EE               [12]12560 	mov	a,r6
      004FC6 33               [12]12561 	rlc	a
      004FC7 FE               [12]12562 	mov	r6,a
      004FC8 EF               [12]12563 	mov	a,r7
      004FC9 33               [12]12564 	rlc	a
      004FCA FF               [12]12565 	mov	r7,a
      004FCB EC               [12]12566 	mov	a,r4
      004FCC 2C               [12]12567 	add	a,r4
      004FCD FC               [12]12568 	mov	r4,a
      004FCE ED               [12]12569 	mov	a,r5
      004FCF 33               [12]12570 	rlc	a
      004FD0 FD               [12]12571 	mov	r5,a
      004FD1 EE               [12]12572 	mov	a,r6
      004FD2 33               [12]12573 	rlc	a
      004FD3 FE               [12]12574 	mov	r6,a
      004FD4 EF               [12]12575 	mov	a,r7
      004FD5 33               [12]12576 	rlc	a
      004FD6 FF               [12]12577 	mov	r7,a
      004FD7 02 51 4F         [24]12578 	ljmp	00165$
      004FDA                      12579 00164$:
                                  12580 ;	FATFS\src\ff.c:2342: if (!fs1->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
      004FDA E5 00            [12]12581 	mov	a,_bp
      004FDC 24 04            [12]12582 	add	a,#0x04
      004FDE F8               [12]12583 	mov	r0,a
      004FDF 86 82            [24]12584 	mov	dpl,@r0
      004FE1 08               [12]12585 	inc	r0
      004FE2 86 83            [24]12586 	mov	dph,@r0
      004FE4 08               [12]12587 	inc	r0
      004FE5 86 F0            [24]12588 	mov	b,@r0
      004FE7 12 00 00         [24]12589 	lcall	__gptrget
      004FEA FA               [12]12590 	mov	r2,a
      004FEB A3               [24]12591 	inc	dptr
      004FEC 12 00 00         [24]12592 	lcall	__gptrget
      004FEF FB               [12]12593 	mov	r3,a
      004FF0 4A               [12]12594 	orl	a,r2
      004FF1 70 06            [24]12595 	jnz	00162$
      004FF3 75 82 0D         [24]12596 	mov	dpl,#0x0d
      004FF6 02 51 FC         [24]12597 	ljmp	00170$
      004FF9                      12598 00162$:
                                  12599 ;	FATFS\src\ff.c:2343: fs1->dirbase = fs1->fatbase + fasize1;				/* Root directory start sector */
      004FF9 E5 00            [12]12600 	mov	a,_bp
      004FFB 24 2B            [12]12601 	add	a,#0x2b
      004FFD F8               [12]12602 	mov	r0,a
      004FFE 74 1A            [12]12603 	mov	a,#0x1a
      005000 26               [12]12604 	add	a,@r0
      005001 FF               [12]12605 	mov	r7,a
      005002 E4               [12]12606 	clr	a
      005003 08               [12]12607 	inc	r0
      005004 36               [12]12608 	addc	a,@r0
      005005 FE               [12]12609 	mov	r6,a
      005006 08               [12]12610 	inc	r0
      005007 86 05            [24]12611 	mov	ar5,@r0
      005009 E5 00            [12]12612 	mov	a,_bp
      00500B 24 0F            [12]12613 	add	a,#0x0f
      00500D F8               [12]12614 	mov	r0,a
      00500E 86 82            [24]12615 	mov	dpl,@r0
      005010 08               [12]12616 	inc	r0
      005011 86 83            [24]12617 	mov	dph,@r0
      005013 08               [12]12618 	inc	r0
      005014 86 F0            [24]12619 	mov	b,@r0
      005016 E5 00            [12]12620 	mov	a,_bp
      005018 24 16            [12]12621 	add	a,#0x16
      00501A F9               [12]12622 	mov	r1,a
      00501B 12 00 00         [24]12623 	lcall	__gptrget
      00501E F7               [12]12624 	mov	@r1,a
      00501F A3               [24]12625 	inc	dptr
      005020 12 00 00         [24]12626 	lcall	__gptrget
      005023 09               [12]12627 	inc	r1
      005024 F7               [12]12628 	mov	@r1,a
      005025 A3               [24]12629 	inc	dptr
      005026 12 00 00         [24]12630 	lcall	__gptrget
      005029 09               [12]12631 	inc	r1
      00502A F7               [12]12632 	mov	@r1,a
      00502B A3               [24]12633 	inc	dptr
      00502C 12 00 00         [24]12634 	lcall	__gptrget
      00502F 09               [12]12635 	inc	r1
      005030 F7               [12]12636 	mov	@r1,a
      005031 E5 00            [12]12637 	mov	a,_bp
      005033 24 16            [12]12638 	add	a,#0x16
      005035 F8               [12]12639 	mov	r0,a
      005036 E5 00            [12]12640 	mov	a,_bp
      005038 24 32            [12]12641 	add	a,#0x32
      00503A F9               [12]12642 	mov	r1,a
      00503B E7               [12]12643 	mov	a,@r1
      00503C 26               [12]12644 	add	a,@r0
      00503D F6               [12]12645 	mov	@r0,a
      00503E 09               [12]12646 	inc	r1
      00503F E7               [12]12647 	mov	a,@r1
      005040 08               [12]12648 	inc	r0
      005041 36               [12]12649 	addc	a,@r0
      005042 F6               [12]12650 	mov	@r0,a
      005043 09               [12]12651 	inc	r1
      005044 E7               [12]12652 	mov	a,@r1
      005045 08               [12]12653 	inc	r0
      005046 36               [12]12654 	addc	a,@r0
      005047 F6               [12]12655 	mov	@r0,a
      005048 09               [12]12656 	inc	r1
      005049 E7               [12]12657 	mov	a,@r1
      00504A 08               [12]12658 	inc	r0
      00504B 36               [12]12659 	addc	a,@r0
      00504C F6               [12]12660 	mov	@r0,a
      00504D 8F 82            [24]12661 	mov	dpl,r7
      00504F 8E 83            [24]12662 	mov	dph,r6
      005051 8D F0            [24]12663 	mov	b,r5
      005053 E5 00            [12]12664 	mov	a,_bp
      005055 24 16            [12]12665 	add	a,#0x16
      005057 F8               [12]12666 	mov	r0,a
      005058 E6               [12]12667 	mov	a,@r0
      005059 12 00 00         [24]12668 	lcall	__gptrput
      00505C A3               [24]12669 	inc	dptr
      00505D 08               [12]12670 	inc	r0
      00505E E6               [12]12671 	mov	a,@r0
      00505F 12 00 00         [24]12672 	lcall	__gptrput
      005062 A3               [24]12673 	inc	dptr
      005063 08               [12]12674 	inc	r0
      005064 E6               [12]12675 	mov	a,@r0
      005065 12 00 00         [24]12676 	lcall	__gptrput
      005068 A3               [24]12677 	inc	dptr
      005069 08               [12]12678 	inc	r0
      00506A E6               [12]12679 	mov	a,@r0
      00506B 12 00 00         [24]12680 	lcall	__gptrput
                                  12681 ;	FATFS\src\ff.c:2344: szbfat1 = (fmt1 == FS_FAT16) ?					/* (Needed FAT size) */
      00506E E5 00            [12]12682 	mov	a,_bp
      005070 24 22            [12]12683 	add	a,#0x22
      005072 F8               [12]12684 	mov	r0,a
      005073 B6 02 37         [24]12685 	cjne	@r0,#0x02,00176$
                                  12686 ;	FATFS\src\ff.c:2345: fs1->n_fatent * 2 : fs1->n_fatent * 3 / 2 + (fs1->n_fatent & 1);
      005076 E5 00            [12]12687 	mov	a,_bp
      005078 24 08            [12]12688 	add	a,#0x08
      00507A F8               [12]12689 	mov	r0,a
      00507B 86 82            [24]12690 	mov	dpl,@r0
      00507D 08               [12]12691 	inc	r0
      00507E 86 83            [24]12692 	mov	dph,@r0
      005080 08               [12]12693 	inc	r0
      005081 86 F0            [24]12694 	mov	b,@r0
      005083 12 00 00         [24]12695 	lcall	__gptrget
      005086 FF               [12]12696 	mov	r7,a
      005087 A3               [24]12697 	inc	dptr
      005088 12 00 00         [24]12698 	lcall	__gptrget
      00508B FE               [12]12699 	mov	r6,a
      00508C A3               [24]12700 	inc	dptr
      00508D 12 00 00         [24]12701 	lcall	__gptrget
      005090 FD               [12]12702 	mov	r5,a
      005091 A3               [24]12703 	inc	dptr
      005092 12 00 00         [24]12704 	lcall	__gptrget
      005095 FC               [12]12705 	mov	r4,a
      005096 E5 00            [12]12706 	mov	a,_bp
      005098 24 1E            [12]12707 	add	a,#0x1e
      00509A F8               [12]12708 	mov	r0,a
      00509B EF               [12]12709 	mov	a,r7
      00509C 2F               [12]12710 	add	a,r7
      00509D F6               [12]12711 	mov	@r0,a
      00509E EE               [12]12712 	mov	a,r6
      00509F 33               [12]12713 	rlc	a
      0050A0 08               [12]12714 	inc	r0
      0050A1 F6               [12]12715 	mov	@r0,a
      0050A2 ED               [12]12716 	mov	a,r5
      0050A3 33               [12]12717 	rlc	a
      0050A4 08               [12]12718 	inc	r0
      0050A5 F6               [12]12719 	mov	@r0,a
      0050A6 EC               [12]12720 	mov	a,r4
      0050A7 33               [12]12721 	rlc	a
      0050A8 08               [12]12722 	inc	r0
      0050A9 F6               [12]12723 	mov	@r0,a
      0050AA 02 51 3F         [24]12724 	ljmp	00177$
      0050AD                      12725 00176$:
      0050AD E5 00            [12]12726 	mov	a,_bp
      0050AF 24 08            [12]12727 	add	a,#0x08
      0050B1 F8               [12]12728 	mov	r0,a
      0050B2 86 82            [24]12729 	mov	dpl,@r0
      0050B4 08               [12]12730 	inc	r0
      0050B5 86 83            [24]12731 	mov	dph,@r0
      0050B7 08               [12]12732 	inc	r0
      0050B8 86 F0            [24]12733 	mov	b,@r0
      0050BA 12 00 00         [24]12734 	lcall	__gptrget
      0050BD FF               [12]12735 	mov	r7,a
      0050BE A3               [24]12736 	inc	dptr
      0050BF 12 00 00         [24]12737 	lcall	__gptrget
      0050C2 FE               [12]12738 	mov	r6,a
      0050C3 A3               [24]12739 	inc	dptr
      0050C4 12 00 00         [24]12740 	lcall	__gptrget
      0050C7 FD               [12]12741 	mov	r5,a
      0050C8 A3               [24]12742 	inc	dptr
      0050C9 12 00 00         [24]12743 	lcall	__gptrget
      0050CC FC               [12]12744 	mov	r4,a
      0050CD C0 07            [24]12745 	push	ar7
      0050CF C0 06            [24]12746 	push	ar6
      0050D1 C0 05            [24]12747 	push	ar5
      0050D3 C0 04            [24]12748 	push	ar4
      0050D5 C0 07            [24]12749 	push	ar7
      0050D7 C0 06            [24]12750 	push	ar6
      0050D9 C0 05            [24]12751 	push	ar5
      0050DB C0 04            [24]12752 	push	ar4
      0050DD 90 00 03         [24]12753 	mov	dptr,#(0x03&0x00ff)
      0050E0 E4               [12]12754 	clr	a
      0050E1 F5 F0            [12]12755 	mov	b,a
      0050E3 12 00 B5         [24]12756 	lcall	__mullong
      0050E6 C8               [12]12757 	xch	a,r0
      0050E7 E5 00            [12]12758 	mov	a,_bp
      0050E9 24 16            [12]12759 	add	a,#0x16
      0050EB C8               [12]12760 	xch	a,r0
      0050EC A6 82            [24]12761 	mov	@r0,dpl
      0050EE 08               [12]12762 	inc	r0
      0050EF A6 83            [24]12763 	mov	@r0,dph
      0050F1 08               [12]12764 	inc	r0
      0050F2 A6 F0            [24]12765 	mov	@r0,b
      0050F4 08               [12]12766 	inc	r0
      0050F5 F6               [12]12767 	mov	@r0,a
      0050F6 E5 81            [12]12768 	mov	a,sp
      0050F8 24 FC            [12]12769 	add	a,#0xfc
      0050FA F5 81            [12]12770 	mov	sp,a
      0050FC D0 04            [24]12771 	pop	ar4
      0050FE D0 05            [24]12772 	pop	ar5
      005100 D0 06            [24]12773 	pop	ar6
      005102 D0 07            [24]12774 	pop	ar7
      005104 E5 00            [12]12775 	mov	a,_bp
      005106 24 16            [12]12776 	add	a,#0x16
      005108 F8               [12]12777 	mov	r0,a
      005109 08               [12]12778 	inc	r0
      00510A 08               [12]12779 	inc	r0
      00510B 08               [12]12780 	inc	r0
      00510C E6               [12]12781 	mov	a,@r0
      00510D C3               [12]12782 	clr	c
      00510E 13               [12]12783 	rrc	a
      00510F F6               [12]12784 	mov	@r0,a
      005110 18               [12]12785 	dec	r0
      005111 E6               [12]12786 	mov	a,@r0
      005112 13               [12]12787 	rrc	a
      005113 F6               [12]12788 	mov	@r0,a
      005114 18               [12]12789 	dec	r0
      005115 E6               [12]12790 	mov	a,@r0
      005116 13               [12]12791 	rrc	a
      005117 F6               [12]12792 	mov	@r0,a
      005118 18               [12]12793 	dec	r0
      005119 E6               [12]12794 	mov	a,@r0
      00511A 13               [12]12795 	rrc	a
      00511B F6               [12]12796 	mov	@r0,a
      00511C 53 07 01         [24]12797 	anl	ar7,#0x01
      00511F E4               [12]12798 	clr	a
      005120 FE               [12]12799 	mov	r6,a
      005121 FD               [12]12800 	mov	r5,a
      005122 FC               [12]12801 	mov	r4,a
      005123 E5 00            [12]12802 	mov	a,_bp
      005125 24 16            [12]12803 	add	a,#0x16
      005127 F8               [12]12804 	mov	r0,a
      005128 E5 00            [12]12805 	mov	a,_bp
      00512A 24 1E            [12]12806 	add	a,#0x1e
      00512C F9               [12]12807 	mov	r1,a
      00512D EF               [12]12808 	mov	a,r7
      00512E 26               [12]12809 	add	a,@r0
      00512F F7               [12]12810 	mov	@r1,a
      005130 EE               [12]12811 	mov	a,r6
      005131 08               [12]12812 	inc	r0
      005132 36               [12]12813 	addc	a,@r0
      005133 09               [12]12814 	inc	r1
      005134 F7               [12]12815 	mov	@r1,a
      005135 ED               [12]12816 	mov	a,r5
      005136 08               [12]12817 	inc	r0
      005137 36               [12]12818 	addc	a,@r0
      005138 09               [12]12819 	inc	r1
      005139 F7               [12]12820 	mov	@r1,a
      00513A EC               [12]12821 	mov	a,r4
      00513B 08               [12]12822 	inc	r0
      00513C 36               [12]12823 	addc	a,@r0
      00513D 09               [12]12824 	inc	r1
      00513E F7               [12]12825 	mov	@r1,a
      00513F                      12826 00177$:
      00513F E5 00            [12]12827 	mov	a,_bp
      005141 24 1E            [12]12828 	add	a,#0x1e
      005143 F8               [12]12829 	mov	r0,a
      005144 86 04            [24]12830 	mov	ar4,@r0
      005146 08               [12]12831 	inc	r0
      005147 86 05            [24]12832 	mov	ar5,@r0
      005149 08               [12]12833 	inc	r0
      00514A 86 06            [24]12834 	mov	ar6,@r0
      00514C 08               [12]12835 	inc	r0
      00514D 86 07            [24]12836 	mov	ar7,@r0
      00514F                      12837 00165$:
                                  12838 ;	FATFS\src\ff.c:2347: P1 = 0xfb;
      00514F 75 90 FB         [24]12839 	mov	_P1,#0xfb
                                  12840 ;	FATFS\src\ff.c:2348: if (fs1->fsize < (szbfat1 + (SS(fs1) - 1)) / SS(fs1))	/* (BPB_FATSz must not be less than needed) */
      005152 E5 00            [12]12841 	mov	a,_bp
      005154 24 12            [12]12842 	add	a,#0x12
      005156 F8               [12]12843 	mov	r0,a
      005157 86 82            [24]12844 	mov	dpl,@r0
      005159 08               [12]12845 	inc	r0
      00515A 86 83            [24]12846 	mov	dph,@r0
      00515C 08               [12]12847 	inc	r0
      00515D 86 F0            [24]12848 	mov	b,@r0
      00515F E5 00            [12]12849 	mov	a,_bp
      005161 24 16            [12]12850 	add	a,#0x16
      005163 F9               [12]12851 	mov	r1,a
      005164 12 00 00         [24]12852 	lcall	__gptrget
      005167 F7               [12]12853 	mov	@r1,a
      005168 A3               [24]12854 	inc	dptr
      005169 12 00 00         [24]12855 	lcall	__gptrget
      00516C 09               [12]12856 	inc	r1
      00516D F7               [12]12857 	mov	@r1,a
      00516E A3               [24]12858 	inc	dptr
      00516F 12 00 00         [24]12859 	lcall	__gptrget
      005172 09               [12]12860 	inc	r1
      005173 F7               [12]12861 	mov	@r1,a
      005174 A3               [24]12862 	inc	dptr
      005175 12 00 00         [24]12863 	lcall	__gptrget
      005178 09               [12]12864 	inc	r1
      005179 F7               [12]12865 	mov	@r1,a
      00517A 74 FF            [12]12866 	mov	a,#0xff
      00517C 2C               [12]12867 	add	a,r4
      00517D 74 01            [12]12868 	mov	a,#0x01
      00517F 3D               [12]12869 	addc	a,r5
      005180 FD               [12]12870 	mov	r5,a
      005181 E4               [12]12871 	clr	a
      005182 3E               [12]12872 	addc	a,r6
      005183 FE               [12]12873 	mov	r6,a
      005184 E4               [12]12874 	clr	a
      005185 3F               [12]12875 	addc	a,r7
      005186 7F 00            [12]12876 	mov	r7,#0x00
      005188 C3               [12]12877 	clr	c
      005189 13               [12]12878 	rrc	a
      00518A CE               [12]12879 	xch	a,r6
      00518B 13               [12]12880 	rrc	a
      00518C CD               [12]12881 	xch	a,r5
      00518D 13               [12]12882 	rrc	a
      00518E FC               [12]12883 	mov	r4,a
      00518F E5 00            [12]12884 	mov	a,_bp
      005191 24 16            [12]12885 	add	a,#0x16
      005193 F8               [12]12886 	mov	r0,a
      005194 C3               [12]12887 	clr	c
      005195 E6               [12]12888 	mov	a,@r0
      005196 9C               [12]12889 	subb	a,r4
      005197 08               [12]12890 	inc	r0
      005198 E6               [12]12891 	mov	a,@r0
      005199 9D               [12]12892 	subb	a,r5
      00519A 08               [12]12893 	inc	r0
      00519B E6               [12]12894 	mov	a,@r0
      00519C 9E               [12]12895 	subb	a,r6
      00519D 08               [12]12896 	inc	r0
      00519E E6               [12]12897 	mov	a,@r0
      00519F 9F               [12]12898 	subb	a,r7
      0051A0 50 05            [24]12899 	jnc	00167$
                                  12900 ;	FATFS\src\ff.c:2349: return FR_NO_FILESYSTEM;
      0051A2 75 82 0D         [24]12901 	mov	dpl,#0x0d
      0051A5 80 55            [24]12902 	sjmp	00170$
      0051A7                      12903 00167$:
                                  12904 ;	FATFS\src\ff.c:2351: P1 = 0xfc;
      0051A7 75 90 FC         [24]12905 	mov	_P1,#0xfc
                                  12906 ;	FATFS\src\ff.c:2379: P1 = 0xfe;
      0051AA 75 90 FE         [24]12907 	mov	_P1,#0xfe
                                  12908 ;	FATFS\src\ff.c:2380: fs1->fs_type = fmt1;	/* FAT sub-type */
      0051AD E5 00            [12]12909 	mov	a,_bp
      0051AF 24 2B            [12]12910 	add	a,#0x2b
      0051B1 F8               [12]12911 	mov	r0,a
      0051B2 86 82            [24]12912 	mov	dpl,@r0
      0051B4 08               [12]12913 	inc	r0
      0051B5 86 83            [24]12914 	mov	dph,@r0
      0051B7 08               [12]12915 	inc	r0
      0051B8 86 F0            [24]12916 	mov	b,@r0
      0051BA E5 00            [12]12917 	mov	a,_bp
      0051BC 24 22            [12]12918 	add	a,#0x22
      0051BE F9               [12]12919 	mov	r1,a
      0051BF E7               [12]12920 	mov	a,@r1
      0051C0 12 00 00         [24]12921 	lcall	__gptrput
                                  12922 ;	FATFS\src\ff.c:2381: fs1->id = ++Fsid;	/* File system mount ID */
      0051C3 E5 00            [12]12923 	mov	a,_bp
      0051C5 24 2B            [12]12924 	add	a,#0x2b
      0051C7 F8               [12]12925 	mov	r0,a
      0051C8 74 06            [12]12926 	mov	a,#0x06
      0051CA 26               [12]12927 	add	a,@r0
      0051CB FD               [12]12928 	mov	r5,a
      0051CC E4               [12]12929 	clr	a
      0051CD 08               [12]12930 	inc	r0
      0051CE 36               [12]12931 	addc	a,@r0
      0051CF FE               [12]12932 	mov	r6,a
      0051D0 08               [12]12933 	inc	r0
      0051D1 86 07            [24]12934 	mov	ar7,@r0
      0051D3 90 A2 4D         [24]12935 	mov	dptr,#_Fsid
      0051D6 E0               [24]12936 	movx	a,@dptr
      0051D7 24 01            [12]12937 	add	a,#0x01
      0051D9 F0               [24]12938 	movx	@dptr,a
      0051DA A3               [24]12939 	inc	dptr
      0051DB E0               [24]12940 	movx	a,@dptr
      0051DC 34 00            [12]12941 	addc	a,#0x00
      0051DE F0               [24]12942 	movx	@dptr,a
      0051DF 90 A2 4D         [24]12943 	mov	dptr,#_Fsid
      0051E2 E0               [24]12944 	movx	a,@dptr
      0051E3 FB               [12]12945 	mov	r3,a
      0051E4 A3               [24]12946 	inc	dptr
      0051E5 E0               [24]12947 	movx	a,@dptr
      0051E6 FC               [12]12948 	mov	r4,a
      0051E7 8D 82            [24]12949 	mov	dpl,r5
      0051E9 8E 83            [24]12950 	mov	dph,r6
      0051EB 8F F0            [24]12951 	mov	b,r7
      0051ED EB               [12]12952 	mov	a,r3
      0051EE 12 00 00         [24]12953 	lcall	__gptrput
      0051F1 A3               [24]12954 	inc	dptr
      0051F2 EC               [12]12955 	mov	a,r4
      0051F3 12 00 00         [24]12956 	lcall	__gptrput
                                  12957 ;	FATFS\src\ff.c:2388: P1 = 0xff;
      0051F6 75 90 FF         [24]12958 	mov	_P1,#0xff
                                  12959 ;	FATFS\src\ff.c:2390: return FR_OK;
      0051F9 75 82 00         [24]12960 	mov	dpl,#0x00
      0051FC                      12961 00170$:
                                  12962 ;	FATFS\src\ff.c:2391: }
      0051FC 85 00 81         [24]12963 	mov	sp,_bp
      0051FF D0 00            [24]12964 	pop	_bp
      005201 02 00 00         [24]12965 	ljmp	__sdcc_banked_ret
                                  12966 ;------------------------------------------------------------
                                  12967 ;Allocation info for local variables in function 'validate'
                                  12968 ;------------------------------------------------------------
                                  12969 ;obj                       Allocated to registers r5 r6 r7 
                                  12970 ;fil                       Allocated to stack - _bp +1
                                  12971 ;------------------------------------------------------------
                                  12972 ;	FATFS\src\ff.c:2401: FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
                                  12973 ;	-----------------------------------------
                                  12974 ;	 function validate
                                  12975 ;	-----------------------------------------
      005204                      12976 _validate:
      005204 C0 00            [24]12977 	push	_bp
      005206 85 81 00         [24]12978 	mov	_bp,sp
      005209 05 81            [12]12979 	inc	sp
      00520B 05 81            [12]12980 	inc	sp
      00520D 05 81            [12]12981 	inc	sp
      00520F AD 82            [24]12982 	mov	r5,dpl
      005211 AE 83            [24]12983 	mov	r6,dph
      005213 AF F0            [24]12984 	mov	r7,b
                                  12985 ;	FATFS\src\ff.c:2405: FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
      005215 A8 00            [24]12986 	mov	r0,_bp
      005217 08               [12]12987 	inc	r0
      005218 A6 05            [24]12988 	mov	@r0,ar5
      00521A 08               [12]12989 	inc	r0
      00521B A6 06            [24]12990 	mov	@r0,ar6
      00521D 08               [12]12991 	inc	r0
      00521E A6 07            [24]12992 	mov	@r0,ar7
                                  12993 ;	FATFS\src\ff.c:2408: if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
      005220 A8 00            [24]12994 	mov	r0,_bp
      005222 08               [12]12995 	inc	r0
      005223 E6               [12]12996 	mov	a,@r0
      005224 08               [12]12997 	inc	r0
      005225 46               [12]12998 	orl	a,@r0
      005226 60 79            [24]12999 	jz	00101$
      005228 A8 00            [24]13000 	mov	r0,_bp
      00522A 08               [12]13001 	inc	r0
      00522B 86 82            [24]13002 	mov	dpl,@r0
      00522D 08               [12]13003 	inc	r0
      00522E 86 83            [24]13004 	mov	dph,@r0
      005230 08               [12]13005 	inc	r0
      005231 86 F0            [24]13006 	mov	b,@r0
      005233 12 00 00         [24]13007 	lcall	__gptrget
      005236 FA               [12]13008 	mov	r2,a
      005237 A3               [24]13009 	inc	dptr
      005238 12 00 00         [24]13010 	lcall	__gptrget
      00523B FB               [12]13011 	mov	r3,a
      00523C A3               [24]13012 	inc	dptr
      00523D 12 00 00         [24]13013 	lcall	__gptrget
      005240 FC               [12]13014 	mov	r4,a
      005241 EA               [12]13015 	mov	a,r2
      005242 4B               [12]13016 	orl	a,r3
      005243 60 5C            [24]13017 	jz	00101$
      005245 8A 82            [24]13018 	mov	dpl,r2
      005247 8B 83            [24]13019 	mov	dph,r3
      005249 8C F0            [24]13020 	mov	b,r4
      00524B 12 00 00         [24]13021 	lcall	__gptrget
      00524E 60 51            [24]13022 	jz	00101$
      005250 74 06            [12]13023 	mov	a,#0x06
      005252 2A               [12]13024 	add	a,r2
      005253 FD               [12]13025 	mov	r5,a
      005254 E4               [12]13026 	clr	a
      005255 3B               [12]13027 	addc	a,r3
      005256 FE               [12]13028 	mov	r6,a
      005257 8C 07            [24]13029 	mov	ar7,r4
      005259 8D 82            [24]13030 	mov	dpl,r5
      00525B 8E 83            [24]13031 	mov	dph,r6
      00525D 8F F0            [24]13032 	mov	b,r7
      00525F 12 00 00         [24]13033 	lcall	__gptrget
      005262 FD               [12]13034 	mov	r5,a
      005263 A3               [24]13035 	inc	dptr
      005264 12 00 00         [24]13036 	lcall	__gptrget
      005267 FE               [12]13037 	mov	r6,a
      005268 C0 02            [24]13038 	push	ar2
      00526A C0 03            [24]13039 	push	ar3
      00526C C0 04            [24]13040 	push	ar4
      00526E A8 00            [24]13041 	mov	r0,_bp
      005270 08               [12]13042 	inc	r0
      005271 74 03            [12]13043 	mov	a,#0x03
      005273 26               [12]13044 	add	a,@r0
      005274 FB               [12]13045 	mov	r3,a
      005275 E4               [12]13046 	clr	a
      005276 08               [12]13047 	inc	r0
      005277 36               [12]13048 	addc	a,@r0
      005278 FC               [12]13049 	mov	r4,a
      005279 08               [12]13050 	inc	r0
      00527A 86 07            [24]13051 	mov	ar7,@r0
      00527C 8B 82            [24]13052 	mov	dpl,r3
      00527E 8C 83            [24]13053 	mov	dph,r4
      005280 8F F0            [24]13054 	mov	b,r7
      005282 12 00 00         [24]13055 	lcall	__gptrget
      005285 FB               [12]13056 	mov	r3,a
      005286 A3               [24]13057 	inc	dptr
      005287 12 00 00         [24]13058 	lcall	__gptrget
      00528A FC               [12]13059 	mov	r4,a
      00528B ED               [12]13060 	mov	a,r5
      00528C B5 03 0C         [24]13061 	cjne	a,ar3,00129$
      00528F EE               [12]13062 	mov	a,r6
      005290 B5 04 08         [24]13063 	cjne	a,ar4,00129$
      005293 D0 04            [24]13064 	pop	ar4
      005295 D0 03            [24]13065 	pop	ar3
      005297 D0 02            [24]13066 	pop	ar2
      005299 80 0B            [24]13067 	sjmp	00102$
      00529B                      13068 00129$:
      00529B D0 04            [24]13069 	pop	ar4
      00529D D0 03            [24]13070 	pop	ar3
      00529F D0 02            [24]13071 	pop	ar2
      0052A1                      13072 00101$:
                                  13073 ;	FATFS\src\ff.c:2409: return FR_INVALID_OBJECT;
      0052A1 75 82 09         [24]13074 	mov	dpl,#0x09
      0052A4 80 26            [24]13075 	sjmp	00108$
      0052A6                      13076 00102$:
                                  13077 ;	FATFS\src\ff.c:2413: if (disk_status(fil->fs->drv) & STA_NOINIT)
      0052A6 0A               [12]13078 	inc	r2
      0052A7 BA 00 01         [24]13079 	cjne	r2,#0x00,00130$
      0052AA 0B               [12]13080 	inc	r3
      0052AB                      13081 00130$:
      0052AB 8A 82            [24]13082 	mov	dpl,r2
      0052AD 8B 83            [24]13083 	mov	dph,r3
      0052AF 8C F0            [24]13084 	mov	b,r4
      0052B1 12 00 00         [24]13085 	lcall	__gptrget
      0052B4 F5 82            [12]13086 	mov	dpl,a
      0052B6 78 30            [12]13087 	mov	r0,#_disk_status
      0052B8 79 07            [12]13088 	mov	r1,#(_disk_status >> 8)
      0052BA 7A 00            [12]13089 	mov	r2,#(_disk_status >> 16)
      0052BC 12 00 00         [24]13090 	lcall	__sdcc_banked_call
      0052BF E5 82            [12]13091 	mov	a,dpl
      0052C1 30 E0 05         [24]13092 	jnb	acc.0,00107$
                                  13093 ;	FATFS\src\ff.c:2414: return FR_NOT_READY;
      0052C4 75 82 03         [24]13094 	mov	dpl,#0x03
      0052C7 80 03            [24]13095 	sjmp	00108$
      0052C9                      13096 00107$:
                                  13097 ;	FATFS\src\ff.c:2416: return FR_OK;
      0052C9 75 82 00         [24]13098 	mov	dpl,#0x00
      0052CC                      13099 00108$:
                                  13100 ;	FATFS\src\ff.c:2417: }
      0052CC 85 00 81         [24]13101 	mov	sp,_bp
      0052CF D0 00            [24]13102 	pop	_bp
      0052D1 02 00 00         [24]13103 	ljmp	__sdcc_banked_ret
                                  13104 ;------------------------------------------------------------
                                  13105 ;Allocation info for local variables in function 'f_mount'
                                  13106 ;------------------------------------------------------------
                                  13107 ;path                      Allocated to stack - _bp -6
                                  13108 ;opt                       Allocated to stack - _bp -7
                                  13109 ;fs                        Allocated to stack - _bp +4
                                  13110 ;cfs                       Allocated to stack - _bp +1
                                  13111 ;vol                       Allocated to registers r6 r7 
                                  13112 ;res                       Allocated to registers r7 
                                  13113 ;rp                        Allocated to stack - _bp +7
                                  13114 ;sloc0                     Allocated to stack - _bp +1
                                  13115 ;------------------------------------------------------------
                                  13116 ;	FATFS\src\ff.c:2434: FRESULT f_mount (
                                  13117 ;	-----------------------------------------
                                  13118 ;	 function f_mount
                                  13119 ;	-----------------------------------------
      0052D4                      13120 _f_mount:
      0052D4 C0 00            [24]13121 	push	_bp
      0052D6 E5 81            [12]13122 	mov	a,sp
      0052D8 F5 00            [12]13123 	mov	_bp,a
      0052DA 24 09            [12]13124 	add	a,#0x09
      0052DC F5 81            [12]13125 	mov	sp,a
      0052DE C8               [12]13126 	xch	a,r0
      0052DF E5 00            [12]13127 	mov	a,_bp
      0052E1 24 04            [12]13128 	add	a,#0x04
      0052E3 C8               [12]13129 	xch	a,r0
      0052E4 A6 82            [24]13130 	mov	@r0,dpl
      0052E6 08               [12]13131 	inc	r0
      0052E7 A6 83            [24]13132 	mov	@r0,dph
      0052E9 08               [12]13133 	inc	r0
      0052EA A6 F0            [24]13134 	mov	@r0,b
                                  13135 ;	FATFS\src\ff.c:2443: const TCHAR *rp = path;
      0052EC E5 00            [12]13136 	mov	a,_bp
      0052EE 24 FA            [12]13137 	add	a,#0xfa
      0052F0 F8               [12]13138 	mov	r0,a
      0052F1 E5 00            [12]13139 	mov	a,_bp
      0052F3 24 07            [12]13140 	add	a,#0x07
      0052F5 F9               [12]13141 	mov	r1,a
      0052F6 E6               [12]13142 	mov	a,@r0
      0052F7 F7               [12]13143 	mov	@r1,a
      0052F8 08               [12]13144 	inc	r0
      0052F9 09               [12]13145 	inc	r1
      0052FA E6               [12]13146 	mov	a,@r0
      0052FB F7               [12]13147 	mov	@r1,a
      0052FC 08               [12]13148 	inc	r0
      0052FD 09               [12]13149 	inc	r1
      0052FE E6               [12]13150 	mov	a,@r0
      0052FF F7               [12]13151 	mov	@r1,a
                                  13152 ;	FATFS\src\ff.c:2446: vol = get_ldnumber(&rp);
      005300 E5 00            [12]13153 	mov	a,_bp
      005302 24 07            [12]13154 	add	a,#0x07
      005304 FF               [12]13155 	mov	r7,a
      005305 7E 00            [12]13156 	mov	r6,#0x00
      005307 7D 40            [12]13157 	mov	r5,#0x40
      005309 8F 82            [24]13158 	mov	dpl,r7
      00530B 8E 83            [24]13159 	mov	dph,r6
      00530D 8D F0            [24]13160 	mov	b,r5
      00530F 78 D7            [12]13161 	mov	r0,#_get_ldnumber
      005311 79 3D            [12]13162 	mov	r1,#(_get_ldnumber >> 8)
      005313 7A 00            [12]13163 	mov	r2,#(_get_ldnumber >> 16)
      005315 12 00 00         [24]13164 	lcall	__sdcc_banked_call
      005318 AE 82            [24]13165 	mov	r6,dpl
                                  13166 ;	FATFS\src\ff.c:2447: if (vol < 0) return FR_INVALID_DRIVE;
      00531A E5 83            [12]13167 	mov	a,dph
      00531C FF               [12]13168 	mov	r7,a
      00531D 30 E7 06         [24]13169 	jnb	acc.7,00102$
      005320 75 82 0B         [24]13170 	mov	dpl,#0x0b
      005323 02 53 EB         [24]13171 	ljmp	00110$
      005326                      13172 00102$:
                                  13173 ;	FATFS\src\ff.c:2448: cfs = FatFs[vol];					/* Pointer to fs object */
      005326 C0 06            [24]13174 	push	ar6
      005328 C0 07            [24]13175 	push	ar7
      00532A 90 00 03         [24]13176 	mov	dptr,#0x0003
      00532D 12 01 0E         [24]13177 	lcall	__mulint
      005330 AE 82            [24]13178 	mov	r6,dpl
      005332 AF 83            [24]13179 	mov	r7,dph
      005334 15 81            [12]13180 	dec	sp
      005336 15 81            [12]13181 	dec	sp
      005338 EE               [12]13182 	mov	a,r6
      005339 24 47            [12]13183 	add	a,#_FatFs
      00533B FE               [12]13184 	mov	r6,a
      00533C EF               [12]13185 	mov	a,r7
      00533D 34 A2            [12]13186 	addc	a,#(_FatFs >> 8)
      00533F FF               [12]13187 	mov	r7,a
      005340 8E 82            [24]13188 	mov	dpl,r6
      005342 8F 83            [24]13189 	mov	dph,r7
      005344 E0               [24]13190 	movx	a,@dptr
      005345 FB               [12]13191 	mov	r3,a
      005346 A3               [24]13192 	inc	dptr
      005347 E0               [24]13193 	movx	a,@dptr
      005348 FC               [12]13194 	mov	r4,a
      005349 A3               [24]13195 	inc	dptr
      00534A E0               [24]13196 	movx	a,@dptr
      00534B FD               [12]13197 	mov	r5,a
      00534C A8 00            [24]13198 	mov	r0,_bp
      00534E 08               [12]13199 	inc	r0
      00534F A6 03            [24]13200 	mov	@r0,ar3
      005351 08               [12]13201 	inc	r0
      005352 A6 04            [24]13202 	mov	@r0,ar4
      005354 08               [12]13203 	inc	r0
      005355 A6 05            [24]13204 	mov	@r0,ar5
                                  13205 ;	FATFS\src\ff.c:2450: if (cfs) {
      005357 EB               [12]13206 	mov	a,r3
      005358 4C               [12]13207 	orl	a,r4
      005359 60 0F            [24]13208 	jz	00104$
                                  13209 ;	FATFS\src\ff.c:2457: cfs->fs_type = 0;				/* Clear old fs object */
      00535B A8 00            [24]13210 	mov	r0,_bp
      00535D 08               [12]13211 	inc	r0
      00535E 86 82            [24]13212 	mov	dpl,@r0
      005360 08               [12]13213 	inc	r0
      005361 86 83            [24]13214 	mov	dph,@r0
      005363 08               [12]13215 	inc	r0
      005364 86 F0            [24]13216 	mov	b,@r0
      005366 E4               [12]13217 	clr	a
      005367 12 00 00         [24]13218 	lcall	__gptrput
      00536A                      13219 00104$:
                                  13220 ;	FATFS\src\ff.c:2460: if (fs) {
      00536A E5 00            [12]13221 	mov	a,_bp
      00536C 24 04            [12]13222 	add	a,#0x04
      00536E F8               [12]13223 	mov	r0,a
      00536F E6               [12]13224 	mov	a,@r0
      005370 08               [12]13225 	inc	r0
      005371 46               [12]13226 	orl	a,@r0
      005372 60 17            [24]13227 	jz	00106$
                                  13228 ;	FATFS\src\ff.c:2461: fs->fs_type = 0;				/* Clear new fs object */
      005374 E5 00            [12]13229 	mov	a,_bp
      005376 24 04            [12]13230 	add	a,#0x04
      005378 F8               [12]13231 	mov	r0,a
      005379 86 03            [24]13232 	mov	ar3,@r0
      00537B 08               [12]13233 	inc	r0
      00537C 86 04            [24]13234 	mov	ar4,@r0
      00537E 08               [12]13235 	inc	r0
      00537F 86 05            [24]13236 	mov	ar5,@r0
      005381 8B 82            [24]13237 	mov	dpl,r3
      005383 8C 83            [24]13238 	mov	dph,r4
      005385 8D F0            [24]13239 	mov	b,r5
      005387 E4               [12]13240 	clr	a
      005388 12 00 00         [24]13241 	lcall	__gptrput
      00538B                      13242 00106$:
                                  13243 ;	FATFS\src\ff.c:2466: FatFs[vol] = fs;					/* Register new fs object */
      00538B 8E 82            [24]13244 	mov	dpl,r6
      00538D 8F 83            [24]13245 	mov	dph,r7
      00538F E5 00            [12]13246 	mov	a,_bp
      005391 24 04            [12]13247 	add	a,#0x04
      005393 F8               [12]13248 	mov	r0,a
      005394 E6               [12]13249 	mov	a,@r0
      005395 F0               [24]13250 	movx	@dptr,a
      005396 08               [12]13251 	inc	r0
      005397 E6               [12]13252 	mov	a,@r0
      005398 A3               [24]13253 	inc	dptr
      005399 F0               [24]13254 	movx	@dptr,a
      00539A 08               [12]13255 	inc	r0
      00539B E6               [12]13256 	mov	a,@r0
      00539C A3               [24]13257 	inc	dptr
      00539D F0               [24]13258 	movx	@dptr,a
                                  13259 ;	FATFS\src\ff.c:2468: if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
      00539E E5 00            [12]13260 	mov	a,_bp
      0053A0 24 04            [12]13261 	add	a,#0x04
      0053A2 F8               [12]13262 	mov	r0,a
      0053A3 E6               [12]13263 	mov	a,@r0
      0053A4 08               [12]13264 	inc	r0
      0053A5 46               [12]13265 	orl	a,@r0
      0053A6 60 0A            [24]13266 	jz	00107$
      0053A8 E5 00            [12]13267 	mov	a,_bp
      0053AA 24 F9            [12]13268 	add	a,#0xf9
      0053AC F8               [12]13269 	mov	r0,a
      0053AD B6 01 02         [24]13270 	cjne	@r0,#0x01,00132$
      0053B0 80 05            [24]13271 	sjmp	00108$
      0053B2                      13272 00132$:
      0053B2                      13273 00107$:
      0053B2 75 82 00         [24]13274 	mov	dpl,#0x00
      0053B5 80 34            [24]13275 	sjmp	00110$
      0053B7                      13276 00108$:
                                  13277 ;	FATFS\src\ff.c:2470: res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
      0053B7 E5 00            [12]13278 	mov	a,_bp
      0053B9 24 FA            [12]13279 	add	a,#0xfa
      0053BB FF               [12]13280 	mov	r7,a
      0053BC 7E 00            [12]13281 	mov	r6,#0x00
      0053BE 7D 40            [12]13282 	mov	r5,#0x40
      0053C0 E5 00            [12]13283 	mov	a,_bp
      0053C2 24 04            [12]13284 	add	a,#0x04
      0053C4 FC               [12]13285 	mov	r4,a
      0053C5 7B 00            [12]13286 	mov	r3,#0x00
      0053C7 7A 40            [12]13287 	mov	r2,#0x40
      0053C9 E4               [12]13288 	clr	a
      0053CA C0 E0            [24]13289 	push	acc
      0053CC C0 07            [24]13290 	push	ar7
      0053CE C0 06            [24]13291 	push	ar6
      0053D0 C0 05            [24]13292 	push	ar5
      0053D2 8C 82            [24]13293 	mov	dpl,r4
      0053D4 8B 83            [24]13294 	mov	dph,r3
      0053D6 8A F0            [24]13295 	mov	b,r2
      0053D8 78 29            [12]13296 	mov	r0,#_find_volume
      0053DA 79 42            [12]13297 	mov	r1,#(_find_volume >> 8)
      0053DC 7A 00            [12]13298 	mov	r2,#(_find_volume >> 16)
      0053DE 12 00 00         [24]13299 	lcall	__sdcc_banked_call
      0053E1 AF 82            [24]13300 	mov	r7,dpl
      0053E3 E5 81            [12]13301 	mov	a,sp
      0053E5 24 FC            [12]13302 	add	a,#0xfc
      0053E7 F5 81            [12]13303 	mov	sp,a
                                  13304 ;	FATFS\src\ff.c:2471: LEAVE_FF(fs, res);
      0053E9 8F 82            [24]13305 	mov	dpl,r7
      0053EB                      13306 00110$:
                                  13307 ;	FATFS\src\ff.c:2472: }
      0053EB 85 00 81         [24]13308 	mov	sp,_bp
      0053EE D0 00            [24]13309 	pop	_bp
      0053F0 02 00 00         [24]13310 	ljmp	__sdcc_banked_ret
                                  13311 ;------------------------------------------------------------
                                  13312 ;Allocation info for local variables in function 'f_open'
                                  13313 ;------------------------------------------------------------
                                  13314 ;path                      Allocated to stack - _bp -6
                                  13315 ;mode                      Allocated to stack - _bp -7
                                  13316 ;fp                        Allocated to stack - _bp +1
                                  13317 ;res                       Allocated to stack - _bp +56
                                  13318 ;dj                        Allocated to stack - _bp +11
                                  13319 ;dir                       Allocated to stack - _bp +41
                                  13320 ;sfn                       Allocated to stack - _bp +44
                                  13321 ;lfn                       Allocated to registers r2 r3 r4 
                                  13322 ;sloc0                     Allocated to stack - _bp +4
                                  13323 ;sloc1                     Allocated to stack - _bp +7
                                  13324 ;------------------------------------------------------------
                                  13325 ;	FATFS\src\ff.c:2481: FRESULT f_open (
                                  13326 ;	-----------------------------------------
                                  13327 ;	 function f_open
                                  13328 ;	-----------------------------------------
      0053F3                      13329 _f_open:
      0053F3 C0 00            [24]13330 	push	_bp
      0053F5 85 81 00         [24]13331 	mov	_bp,sp
      0053F8 C0 82            [24]13332 	push	dpl
      0053FA C0 83            [24]13333 	push	dph
      0053FC C0 F0            [24]13334 	push	b
      0053FE E5 81            [12]13335 	mov	a,sp
      005400 24 35            [12]13336 	add	a,#0x35
      005402 F5 81            [12]13337 	mov	sp,a
                                  13338 ;	FATFS\src\ff.c:2492: P1 = 0xC1;
      005404 75 90 C1         [24]13339 	mov	_P1,#0xc1
                                  13340 ;	FATFS\src\ff.c:2493: if (!fp)
      005407 A8 00            [24]13341 	mov	r0,_bp
      005409 08               [12]13342 	inc	r0
      00540A E6               [12]13343 	mov	a,@r0
      00540B 08               [12]13344 	inc	r0
      00540C 46               [12]13345 	orl	a,@r0
      00540D 70 06            [24]13346 	jnz	00102$
                                  13347 ;	FATFS\src\ff.c:2494: return FR_INVALID_OBJECT;
      00540F 75 82 09         [24]13348 	mov	dpl,#0x09
      005412 02 58 2A         [24]13349 	ljmp	00116$
      005415                      13350 00102$:
                                  13351 ;	FATFS\src\ff.c:2495: fp->fs = 0;			/* Clear file object */
      005415 A8 00            [24]13352 	mov	r0,_bp
      005417 08               [12]13353 	inc	r0
      005418 86 82            [24]13354 	mov	dpl,@r0
      00541A 08               [12]13355 	inc	r0
      00541B 86 83            [24]13356 	mov	dph,@r0
      00541D 08               [12]13357 	inc	r0
      00541E 86 F0            [24]13358 	mov	b,@r0
      005420 E4               [12]13359 	clr	a
      005421 12 00 00         [24]13360 	lcall	__gptrput
      005424 A3               [24]13361 	inc	dptr
      005425 12 00 00         [24]13362 	lcall	__gptrput
      005428 A3               [24]13363 	inc	dptr
      005429 12 00 00         [24]13364 	lcall	__gptrput
                                  13365 ;	FATFS\src\ff.c:2497: P1 = 0xC2;
      00542C 75 90 C2         [24]13366 	mov	_P1,#0xc2
                                  13367 ;	FATFS\src\ff.c:2503: P1 = 0xC3;
      00542F 75 90 C3         [24]13368 	mov	_P1,#0xc3
                                  13369 ;	FATFS\src\ff.c:2504: mode &= FA_READ;
      005432 E5 00            [12]13370 	mov	a,_bp
      005434 24 F9            [12]13371 	add	a,#0xf9
      005436 F8               [12]13372 	mov	r0,a
      005437 E6               [12]13373 	mov	a,@r0
      005438 54 01            [12]13374 	anl	a,#0x01
      00543A F6               [12]13375 	mov	@r0,a
                                  13376 ;	FATFS\src\ff.c:2505: res = find_volume(&dj.fs, &path, 0);
      00543B E5 00            [12]13377 	mov	a,_bp
      00543D 24 FA            [12]13378 	add	a,#0xfa
      00543F FC               [12]13379 	mov	r4,a
      005440 7B 00            [12]13380 	mov	r3,#0x00
      005442 7A 40            [12]13381 	mov	r2,#0x40
      005444 E5 00            [12]13382 	mov	a,_bp
      005446 24 0B            [12]13383 	add	a,#0x0b
      005448 FF               [12]13384 	mov	r7,a
      005449 7E 00            [12]13385 	mov	r6,#0x00
      00544B 7D 40            [12]13386 	mov	r5,#0x40
      00544D E4               [12]13387 	clr	a
      00544E C0 E0            [24]13388 	push	acc
      005450 C0 04            [24]13389 	push	ar4
      005452 C0 03            [24]13390 	push	ar3
      005454 C0 02            [24]13391 	push	ar2
      005456 8F 82            [24]13392 	mov	dpl,r7
      005458 8E 83            [24]13393 	mov	dph,r6
      00545A 8D F0            [24]13394 	mov	b,r5
      00545C 78 29            [12]13395 	mov	r0,#_find_volume
      00545E 79 42            [12]13396 	mov	r1,#(_find_volume >> 8)
      005460 7A 00            [12]13397 	mov	r2,#(_find_volume >> 16)
      005462 12 00 00         [24]13398 	lcall	__sdcc_banked_call
      005465 AF 82            [24]13399 	mov	r7,dpl
      005467 E5 81            [12]13400 	mov	a,sp
      005469 24 FC            [12]13401 	add	a,#0xfc
      00546B F5 81            [12]13402 	mov	sp,a
      00546D E5 00            [12]13403 	mov	a,_bp
      00546F 24 38            [12]13404 	add	a,#0x38
      005471 F8               [12]13405 	mov	r0,a
      005472 A6 07            [24]13406 	mov	@r0,ar7
                                  13407 ;	FATFS\src\ff.c:2506: P1 = 0xC4;
      005474 75 90 C4         [24]13408 	mov	_P1,#0xc4
                                  13409 ;	FATFS\src\ff.c:2508: P1 = 0xC5;
      005477 75 90 C5         [24]13410 	mov	_P1,#0xc5
                                  13411 ;	FATFS\src\ff.c:2509: if (res == FR_OK)
      00547A E5 00            [12]13412 	mov	a,_bp
      00547C 24 38            [12]13413 	add	a,#0x38
      00547E F8               [12]13414 	mov	r0,a
      00547F E6               [12]13415 	mov	a,@r0
      005480 60 03            [24]13416 	jz	00147$
      005482 02 58 20         [24]13417 	ljmp	00115$
      005485                      13418 00147$:
                                  13419 ;	FATFS\src\ff.c:2511: P1 = 0xC6;
      005485 75 90 C6         [24]13420 	mov	_P1,#0xc6
                                  13421 ;	FATFS\src\ff.c:2512: INIT_BUF(dj);
      005488 90 02 00         [24]13422 	mov	dptr,#0x0200
      00548B 78 95            [12]13423 	mov	r0,#_ff_memalloc
      00548D 79 0B            [12]13424 	mov	r1,#(_ff_memalloc >> 8)
      00548F 7A 00            [12]13425 	mov	r2,#(_ff_memalloc >> 16)
      005491 12 00 00         [24]13426 	lcall	__sdcc_banked_call
      005494 AA 82            [24]13427 	mov	r2,dpl
      005496 AB 83            [24]13428 	mov	r3,dph
      005498 AC F0            [24]13429 	mov	r4,b
      00549A EA               [12]13430 	mov	a,r2
      00549B 4B               [12]13431 	orl	a,r3
      00549C 70 06            [24]13432 	jnz	00104$
      00549E 75 82 11         [24]13433 	mov	dpl,#0x11
      0054A1 02 58 2A         [24]13434 	ljmp	00116$
      0054A4                      13435 00104$:
      0054A4 E5 00            [12]13436 	mov	a,_bp
      0054A6 24 0B            [12]13437 	add	a,#0x0b
      0054A8 F9               [12]13438 	mov	r1,a
      0054A9 24 19            [12]13439 	add	a,#0x19
      0054AB F8               [12]13440 	mov	r0,a
      0054AC A6 02            [24]13441 	mov	@r0,ar2
      0054AE 08               [12]13442 	inc	r0
      0054AF A6 03            [24]13443 	mov	@r0,ar3
      0054B1 08               [12]13444 	inc	r0
      0054B2 A6 04            [24]13445 	mov	@r0,ar4
      0054B4 74 16            [12]13446 	mov	a,#0x16
      0054B6 29               [12]13447 	add	a,r1
      0054B7 F8               [12]13448 	mov	r0,a
      0054B8 E5 00            [12]13449 	mov	a,_bp
      0054BA 24 2C            [12]13450 	add	a,#0x2c
      0054BC FF               [12]13451 	mov	r7,a
      0054BD 7E 00            [12]13452 	mov	r6,#0x00
      0054BF 7D 40            [12]13453 	mov	r5,#0x40
      0054C1 A6 07            [24]13454 	mov	@r0,ar7
      0054C3 08               [12]13455 	inc	r0
      0054C4 A6 06            [24]13456 	mov	@r0,ar6
      0054C6 08               [12]13457 	inc	r0
      0054C7 A6 05            [24]13458 	mov	@r0,ar5
                                  13459 ;	FATFS\src\ff.c:2514: P1 = 0xC7;
      0054C9 75 90 C7         [24]13460 	mov	_P1,#0xc7
                                  13461 ;	FATFS\src\ff.c:2515: res = follow_path(&dj, path);	/* Follow the file path */
      0054CC 89 07            [24]13462 	mov	ar7,r1
      0054CE 7E 00            [12]13463 	mov	r6,#0x00
      0054D0 7D 40            [12]13464 	mov	r5,#0x40
      0054D2 C0 04            [24]13465 	push	ar4
      0054D4 C0 03            [24]13466 	push	ar3
      0054D6 C0 02            [24]13467 	push	ar2
      0054D8 C0 01            [24]13468 	push	ar1
      0054DA E5 00            [12]13469 	mov	a,_bp
      0054DC 24 FA            [12]13470 	add	a,#0xfa
      0054DE F8               [12]13471 	mov	r0,a
      0054DF E6               [12]13472 	mov	a,@r0
      0054E0 C0 E0            [24]13473 	push	acc
      0054E2 08               [12]13474 	inc	r0
      0054E3 E6               [12]13475 	mov	a,@r0
      0054E4 C0 E0            [24]13476 	push	acc
      0054E6 08               [12]13477 	inc	r0
      0054E7 E6               [12]13478 	mov	a,@r0
      0054E8 C0 E0            [24]13479 	push	acc
      0054EA 8F 82            [24]13480 	mov	dpl,r7
      0054EC 8E 83            [24]13481 	mov	dph,r6
      0054EE 8D F0            [24]13482 	mov	b,r5
      0054F0 78 10            [12]13483 	mov	r0,#_follow_path
      0054F2 79 3B            [12]13484 	mov	r1,#(_follow_path >> 8)
      0054F4 7A 00            [12]13485 	mov	r2,#(_follow_path >> 16)
      0054F6 12 00 00         [24]13486 	lcall	__sdcc_banked_call
      0054F9 AF 82            [24]13487 	mov	r7,dpl
      0054FB 15 81            [12]13488 	dec	sp
      0054FD 15 81            [12]13489 	dec	sp
      0054FF 15 81            [12]13490 	dec	sp
      005501 D0 01            [24]13491 	pop	ar1
      005503 D0 02            [24]13492 	pop	ar2
      005505 D0 03            [24]13493 	pop	ar3
      005507 D0 04            [24]13494 	pop	ar4
      005509 E5 00            [12]13495 	mov	a,_bp
      00550B 24 38            [12]13496 	add	a,#0x38
      00550D F8               [12]13497 	mov	r0,a
      00550E A6 07            [24]13498 	mov	@r0,ar7
                                  13499 ;	FATFS\src\ff.c:2516: dir = dj.dir;
      005510 74 13            [12]13500 	mov	a,#0x13
      005512 29               [12]13501 	add	a,r1
      005513 F8               [12]13502 	mov	r0,a
      005514 86 07            [24]13503 	mov	ar7,@r0
      005516 08               [12]13504 	inc	r0
      005517 86 06            [24]13505 	mov	ar6,@r0
      005519 08               [12]13506 	inc	r0
      00551A 86 05            [24]13507 	mov	ar5,@r0
      00551C E5 00            [12]13508 	mov	a,_bp
      00551E 24 29            [12]13509 	add	a,#0x29
      005520 F8               [12]13510 	mov	r0,a
      005521 A6 07            [24]13511 	mov	@r0,ar7
      005523 08               [12]13512 	inc	r0
      005524 A6 06            [24]13513 	mov	@r0,ar6
      005526 08               [12]13514 	inc	r0
      005527 A6 05            [24]13515 	mov	@r0,ar5
                                  13516 ;	FATFS\src\ff.c:2518: P1 = 0xC8;
      005529 75 90 C8         [24]13517 	mov	_P1,#0xc8
                                  13518 ;	FATFS\src\ff.c:2601: if (res == FR_OK)
      00552C E5 00            [12]13519 	mov	a,_bp
      00552E 24 38            [12]13520 	add	a,#0x38
      005530 F8               [12]13521 	mov	r0,a
      005531 E6               [12]13522 	mov	a,@r0
      005532 70 64            [24]13523 	jnz	00111$
                                  13524 ;	FATFS\src\ff.c:2603: P1 = 0xCD;
      005534 C0 02            [24]13525 	push	ar2
      005536 C0 03            [24]13526 	push	ar3
      005538 C0 04            [24]13527 	push	ar4
      00553A 75 90 CD         [24]13528 	mov	_P1,#0xcd
                                  13529 ;	FATFS\src\ff.c:2604: dir = dj.dir;
      00553D 8F 02            [24]13530 	mov	ar2,r7
      00553F 8E 03            [24]13531 	mov	ar3,r6
      005541 8D 04            [24]13532 	mov	ar4,r5
      005543 E5 00            [12]13533 	mov	a,_bp
      005545 24 29            [12]13534 	add	a,#0x29
      005547 F8               [12]13535 	mov	r0,a
      005548 A6 02            [24]13536 	mov	@r0,ar2
      00554A 08               [12]13537 	inc	r0
      00554B A6 03            [24]13538 	mov	@r0,ar3
      00554D 08               [12]13539 	inc	r0
      00554E A6 04            [24]13540 	mov	@r0,ar4
                                  13541 ;	FATFS\src\ff.c:2605: if (!dir) {						/* Current directory itself */
      005550 D0 04            [24]13542 	pop	ar4
      005552 D0 03            [24]13543 	pop	ar3
      005554 D0 02            [24]13544 	pop	ar2
      005556 E5 00            [12]13545 	mov	a,_bp
      005558 24 29            [12]13546 	add	a,#0x29
      00555A F8               [12]13547 	mov	r0,a
      00555B E6               [12]13548 	mov	a,@r0
      00555C 08               [12]13549 	inc	r0
      00555D 46               [12]13550 	orl	a,@r0
      00555E 70 09            [24]13551 	jnz	00108$
                                  13552 ;	FATFS\src\ff.c:2606: res = FR_INVALID_NAME;
      005560 E5 00            [12]13553 	mov	a,_bp
      005562 24 38            [12]13554 	add	a,#0x38
      005564 F8               [12]13555 	mov	r0,a
      005565 76 06            [12]13556 	mov	@r0,#0x06
      005567 80 2F            [24]13557 	sjmp	00111$
      005569                      13558 00108$:
                                  13559 ;	FATFS\src\ff.c:2608: if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
      005569 C0 02            [24]13560 	push	ar2
      00556B C0 03            [24]13561 	push	ar3
      00556D C0 04            [24]13562 	push	ar4
      00556F E5 00            [12]13563 	mov	a,_bp
      005571 24 29            [12]13564 	add	a,#0x29
      005573 F8               [12]13565 	mov	r0,a
      005574 74 0B            [12]13566 	mov	a,#0x0b
      005576 26               [12]13567 	add	a,@r0
      005577 FA               [12]13568 	mov	r2,a
      005578 E4               [12]13569 	clr	a
      005579 08               [12]13570 	inc	r0
      00557A 36               [12]13571 	addc	a,@r0
      00557B FB               [12]13572 	mov	r3,a
      00557C 08               [12]13573 	inc	r0
      00557D 86 04            [24]13574 	mov	ar4,@r0
      00557F 8A 82            [24]13575 	mov	dpl,r2
      005581 8B 83            [24]13576 	mov	dph,r3
      005583 8C F0            [24]13577 	mov	b,r4
      005585 12 00 00         [24]13578 	lcall	__gptrget
      005588 D0 04            [24]13579 	pop	ar4
      00558A D0 03            [24]13580 	pop	ar3
      00558C D0 02            [24]13581 	pop	ar2
      00558E 30 E4 07         [24]13582 	jnb	acc.4,00111$
                                  13583 ;	FATFS\src\ff.c:2609: res = FR_NO_FILE;
      005591 E5 00            [12]13584 	mov	a,_bp
      005593 24 38            [12]13585 	add	a,#0x38
      005595 F8               [12]13586 	mov	r0,a
      005596 76 04            [12]13587 	mov	@r0,#0x04
      005598                      13588 00111$:
                                  13589 ;	FATFS\src\ff.c:2613: P1 = 0xCE;
      005598 75 90 CE         [24]13590 	mov	_P1,#0xce
                                  13591 ;	FATFS\src\ff.c:2614: FREE_BUF();
      00559B 8A 82            [24]13592 	mov	dpl,r2
      00559D 8B 83            [24]13593 	mov	dph,r3
      00559F 8C F0            [24]13594 	mov	b,r4
      0055A1 C0 01            [24]13595 	push	ar1
      0055A3 78 AD            [12]13596 	mov	r0,#_ff_memfree
      0055A5 79 0B            [12]13597 	mov	r1,#(_ff_memfree >> 8)
      0055A7 7A 00            [12]13598 	mov	r2,#(_ff_memfree >> 16)
      0055A9 12 00 00         [24]13599 	lcall	__sdcc_banked_call
      0055AC D0 01            [24]13600 	pop	ar1
                                  13601 ;	FATFS\src\ff.c:2616: P1 = 0xCF;
      0055AE 75 90 CF         [24]13602 	mov	_P1,#0xcf
                                  13603 ;	FATFS\src\ff.c:2617: if (res == FR_OK)
      0055B1 E5 00            [12]13604 	mov	a,_bp
      0055B3 24 38            [12]13605 	add	a,#0x38
      0055B5 F8               [12]13606 	mov	r0,a
      0055B6 E6               [12]13607 	mov	a,@r0
      0055B7 60 03            [24]13608 	jz	00152$
      0055B9 02 58 20         [24]13609 	ljmp	00115$
      0055BC                      13610 00152$:
                                  13611 ;	FATFS\src\ff.c:2619: fp->flag = mode;					/* File access mode */
      0055BC A8 00            [24]13612 	mov	r0,_bp
      0055BE 08               [12]13613 	inc	r0
      0055BF 74 05            [12]13614 	mov	a,#0x05
      0055C1 26               [12]13615 	add	a,@r0
      0055C2 FA               [12]13616 	mov	r2,a
      0055C3 E4               [12]13617 	clr	a
      0055C4 08               [12]13618 	inc	r0
      0055C5 36               [12]13619 	addc	a,@r0
      0055C6 FB               [12]13620 	mov	r3,a
      0055C7 08               [12]13621 	inc	r0
      0055C8 86 04            [24]13622 	mov	ar4,@r0
      0055CA 8A 82            [24]13623 	mov	dpl,r2
      0055CC 8B 83            [24]13624 	mov	dph,r3
      0055CE 8C F0            [24]13625 	mov	b,r4
      0055D0 E5 00            [12]13626 	mov	a,_bp
      0055D2 24 F9            [12]13627 	add	a,#0xf9
      0055D4 F8               [12]13628 	mov	r0,a
      0055D5 E6               [12]13629 	mov	a,@r0
      0055D6 12 00 00         [24]13630 	lcall	__gptrput
                                  13631 ;	FATFS\src\ff.c:2620: fp->err = 0;						/* Clear error flag */
      0055D9 A8 00            [24]13632 	mov	r0,_bp
      0055DB 08               [12]13633 	inc	r0
      0055DC 74 06            [12]13634 	mov	a,#0x06
      0055DE 26               [12]13635 	add	a,@r0
      0055DF FA               [12]13636 	mov	r2,a
      0055E0 E4               [12]13637 	clr	a
      0055E1 08               [12]13638 	inc	r0
      0055E2 36               [12]13639 	addc	a,@r0
      0055E3 FB               [12]13640 	mov	r3,a
      0055E4 08               [12]13641 	inc	r0
      0055E5 86 04            [24]13642 	mov	ar4,@r0
      0055E7 8A 82            [24]13643 	mov	dpl,r2
      0055E9 8B 83            [24]13644 	mov	dph,r3
      0055EB 8C F0            [24]13645 	mov	b,r4
      0055ED E4               [12]13646 	clr	a
      0055EE 12 00 00         [24]13647 	lcall	__gptrput
                                  13648 ;	FATFS\src\ff.c:2621: fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
      0055F1 A8 00            [24]13649 	mov	r0,_bp
      0055F3 08               [12]13650 	inc	r0
      0055F4 C0 01            [24]13651 	push	ar1
      0055F6 E5 00            [12]13652 	mov	a,_bp
      0055F8 24 04            [12]13653 	add	a,#0x04
      0055FA F9               [12]13654 	mov	r1,a
      0055FB 74 0F            [12]13655 	mov	a,#0x0f
      0055FD 26               [12]13656 	add	a,@r0
      0055FE F7               [12]13657 	mov	@r1,a
      0055FF E4               [12]13658 	clr	a
      005600 08               [12]13659 	inc	r0
      005601 36               [12]13660 	addc	a,@r0
      005602 09               [12]13661 	inc	r1
      005603 F7               [12]13662 	mov	@r1,a
      005604 08               [12]13663 	inc	r0
      005605 09               [12]13664 	inc	r1
      005606 E6               [12]13665 	mov	a,@r0
      005607 F7               [12]13666 	mov	@r1,a
      005608 D0 01            [24]13667 	pop	ar1
      00560A 87 05            [24]13668 	mov	ar5,@r1
      00560C 09               [12]13669 	inc	r1
      00560D 87 06            [24]13670 	mov	ar6,@r1
      00560F 09               [12]13671 	inc	r1
      005610 87 07            [24]13672 	mov	ar7,@r1
      005612 19               [12]13673 	dec	r1
      005613 19               [12]13674 	dec	r1
      005614 C0 01            [24]13675 	push	ar1
      005616 E5 00            [12]13676 	mov	a,_bp
      005618 24 29            [12]13677 	add	a,#0x29
      00561A F8               [12]13678 	mov	r0,a
      00561B E6               [12]13679 	mov	a,@r0
      00561C C0 E0            [24]13680 	push	acc
      00561E 08               [12]13681 	inc	r0
      00561F E6               [12]13682 	mov	a,@r0
      005620 C0 E0            [24]13683 	push	acc
      005622 08               [12]13684 	inc	r0
      005623 E6               [12]13685 	mov	a,@r0
      005624 C0 E0            [24]13686 	push	acc
      005626 8D 82            [24]13687 	mov	dpl,r5
      005628 8E 83            [24]13688 	mov	dph,r6
      00562A 8F F0            [24]13689 	mov	b,r7
      00562C 78 4E            [12]13690 	mov	r0,#_ld_clust
      00562E 79 1E            [12]13691 	mov	r1,#(_ld_clust >> 8)
      005630 7A 00            [12]13692 	mov	r2,#(_ld_clust >> 16)
      005632 12 00 00         [24]13693 	lcall	__sdcc_banked_call
      005635 AE 82            [24]13694 	mov	r6,dpl
      005637 AD 83            [24]13695 	mov	r5,dph
      005639 AC F0            [24]13696 	mov	r4,b
      00563B FF               [12]13697 	mov	r7,a
      00563C 15 81            [12]13698 	dec	sp
      00563E 15 81            [12]13699 	dec	sp
      005640 15 81            [12]13700 	dec	sp
      005642 E5 00            [12]13701 	mov	a,_bp
      005644 24 04            [12]13702 	add	a,#0x04
      005646 F8               [12]13703 	mov	r0,a
      005647 86 82            [24]13704 	mov	dpl,@r0
      005649 08               [12]13705 	inc	r0
      00564A 86 83            [24]13706 	mov	dph,@r0
      00564C 08               [12]13707 	inc	r0
      00564D 86 F0            [24]13708 	mov	b,@r0
      00564F EE               [12]13709 	mov	a,r6
      005650 12 00 00         [24]13710 	lcall	__gptrput
      005653 A3               [24]13711 	inc	dptr
      005654 ED               [12]13712 	mov	a,r5
      005655 12 00 00         [24]13713 	lcall	__gptrput
      005658 A3               [24]13714 	inc	dptr
      005659 EC               [12]13715 	mov	a,r4
      00565A 12 00 00         [24]13716 	lcall	__gptrput
      00565D A3               [24]13717 	inc	dptr
      00565E EF               [12]13718 	mov	a,r7
      00565F 12 00 00         [24]13719 	lcall	__gptrput
                                  13720 ;	FATFS\src\ff.c:2622: fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
      005662 A8 00            [24]13721 	mov	r0,_bp
      005664 08               [12]13722 	inc	r0
      005665 E5 00            [12]13723 	mov	a,_bp
      005667 24 04            [12]13724 	add	a,#0x04
      005669 F9               [12]13725 	mov	r1,a
      00566A 74 0B            [12]13726 	mov	a,#0x0b
      00566C 26               [12]13727 	add	a,@r0
      00566D F7               [12]13728 	mov	@r1,a
      00566E E4               [12]13729 	clr	a
      00566F 08               [12]13730 	inc	r0
      005670 36               [12]13731 	addc	a,@r0
      005671 09               [12]13732 	inc	r1
      005672 F7               [12]13733 	mov	@r1,a
      005673 08               [12]13734 	inc	r0
      005674 09               [12]13735 	inc	r1
      005675 E6               [12]13736 	mov	a,@r0
      005676 F7               [12]13737 	mov	@r1,a
      005677 D0 01            [24]13738 	pop	ar1
      005679 E5 00            [12]13739 	mov	a,_bp
      00567B 24 29            [12]13740 	add	a,#0x29
      00567D F8               [12]13741 	mov	r0,a
      00567E 74 1F            [12]13742 	mov	a,#0x1f
      005680 26               [12]13743 	add	a,@r0
      005681 FA               [12]13744 	mov	r2,a
      005682 E4               [12]13745 	clr	a
      005683 08               [12]13746 	inc	r0
      005684 36               [12]13747 	addc	a,@r0
      005685 FB               [12]13748 	mov	r3,a
      005686 08               [12]13749 	inc	r0
      005687 86 04            [24]13750 	mov	ar4,@r0
      005689 8A 82            [24]13751 	mov	dpl,r2
      00568B 8B 83            [24]13752 	mov	dph,r3
      00568D 8C F0            [24]13753 	mov	b,r4
      00568F 12 00 00         [24]13754 	lcall	__gptrget
      005692 FA               [12]13755 	mov	r2,a
      005693 E4               [12]13756 	clr	a
      005694 E5 00            [12]13757 	mov	a,_bp
      005696 24 07            [12]13758 	add	a,#0x07
      005698 F8               [12]13759 	mov	r0,a
      005699 08               [12]13760 	inc	r0
      00569A 08               [12]13761 	inc	r0
      00569B 08               [12]13762 	inc	r0
      00569C A6 02            [24]13763 	mov	@r0,ar2
      00569E 18               [12]13764 	dec	r0
      00569F 18               [12]13765 	dec	r0
      0056A0 18               [12]13766 	dec	r0
      0056A1 76 00            [12]13767 	mov	@r0,#0x00
      0056A3 08               [12]13768 	inc	r0
      0056A4 76 00            [12]13769 	mov	@r0,#0x00
      0056A6 08               [12]13770 	inc	r0
      0056A7 76 00            [12]13771 	mov	@r0,#0x00
      0056A9 E5 00            [12]13772 	mov	a,_bp
      0056AB 24 29            [12]13773 	add	a,#0x29
      0056AD F8               [12]13774 	mov	r0,a
      0056AE 74 1E            [12]13775 	mov	a,#0x1e
      0056B0 26               [12]13776 	add	a,@r0
      0056B1 FD               [12]13777 	mov	r5,a
      0056B2 E4               [12]13778 	clr	a
      0056B3 08               [12]13779 	inc	r0
      0056B4 36               [12]13780 	addc	a,@r0
      0056B5 FE               [12]13781 	mov	r6,a
      0056B6 08               [12]13782 	inc	r0
      0056B7 86 07            [24]13783 	mov	ar7,@r0
      0056B9 8D 82            [24]13784 	mov	dpl,r5
      0056BB 8E 83            [24]13785 	mov	dph,r6
      0056BD 8F F0            [24]13786 	mov	b,r7
      0056BF 12 00 00         [24]13787 	lcall	__gptrget
      0056C2 FD               [12]13788 	mov	r5,a
      0056C3 7F 00            [12]13789 	mov	r7,#0x00
      0056C5 8F 04            [24]13790 	mov	ar4,r7
      0056C7 8D 06            [24]13791 	mov	ar6,r5
      0056C9 E4               [12]13792 	clr	a
      0056CA FD               [12]13793 	mov	r5,a
      0056CB FF               [12]13794 	mov	r7,a
      0056CC E5 00            [12]13795 	mov	a,_bp
      0056CE 24 07            [12]13796 	add	a,#0x07
      0056D0 F8               [12]13797 	mov	r0,a
      0056D1 ED               [12]13798 	mov	a,r5
      0056D2 46               [12]13799 	orl	a,@r0
      0056D3 F6               [12]13800 	mov	@r0,a
      0056D4 EF               [12]13801 	mov	a,r7
      0056D5 08               [12]13802 	inc	r0
      0056D6 46               [12]13803 	orl	a,@r0
      0056D7 F6               [12]13804 	mov	@r0,a
      0056D8 EE               [12]13805 	mov	a,r6
      0056D9 08               [12]13806 	inc	r0
      0056DA 46               [12]13807 	orl	a,@r0
      0056DB F6               [12]13808 	mov	@r0,a
      0056DC EC               [12]13809 	mov	a,r4
      0056DD 08               [12]13810 	inc	r0
      0056DE 46               [12]13811 	orl	a,@r0
      0056DF F6               [12]13812 	mov	@r0,a
      0056E0 E5 00            [12]13813 	mov	a,_bp
      0056E2 24 29            [12]13814 	add	a,#0x29
      0056E4 F8               [12]13815 	mov	r0,a
      0056E5 74 1D            [12]13816 	mov	a,#0x1d
      0056E7 26               [12]13817 	add	a,@r0
      0056E8 FA               [12]13818 	mov	r2,a
      0056E9 E4               [12]13819 	clr	a
      0056EA 08               [12]13820 	inc	r0
      0056EB 36               [12]13821 	addc	a,@r0
      0056EC FB               [12]13822 	mov	r3,a
      0056ED 08               [12]13823 	inc	r0
      0056EE 86 07            [24]13824 	mov	ar7,@r0
      0056F0 8A 82            [24]13825 	mov	dpl,r2
      0056F2 8B 83            [24]13826 	mov	dph,r3
      0056F4 8F F0            [24]13827 	mov	b,r7
      0056F6 12 00 00         [24]13828 	lcall	__gptrget
      0056F9 FF               [12]13829 	mov	r7,a
      0056FA E4               [12]13830 	clr	a
      0056FB FA               [12]13831 	mov	r2,a
      0056FC FE               [12]13832 	mov	r6,a
      0056FD FD               [12]13833 	mov	r5,a
      0056FE E5 00            [12]13834 	mov	a,_bp
      005700 24 07            [12]13835 	add	a,#0x07
      005702 F8               [12]13836 	mov	r0,a
      005703 EA               [12]13837 	mov	a,r2
      005704 46               [12]13838 	orl	a,@r0
      005705 F6               [12]13839 	mov	@r0,a
      005706 EF               [12]13840 	mov	a,r7
      005707 08               [12]13841 	inc	r0
      005708 46               [12]13842 	orl	a,@r0
      005709 F6               [12]13843 	mov	@r0,a
      00570A EE               [12]13844 	mov	a,r6
      00570B 08               [12]13845 	inc	r0
      00570C 46               [12]13846 	orl	a,@r0
      00570D F6               [12]13847 	mov	@r0,a
      00570E ED               [12]13848 	mov	a,r5
      00570F 08               [12]13849 	inc	r0
      005710 46               [12]13850 	orl	a,@r0
      005711 F6               [12]13851 	mov	@r0,a
      005712 E5 00            [12]13852 	mov	a,_bp
      005714 24 29            [12]13853 	add	a,#0x29
      005716 F8               [12]13854 	mov	r0,a
      005717 74 1C            [12]13855 	mov	a,#0x1c
      005719 26               [12]13856 	add	a,@r0
      00571A FB               [12]13857 	mov	r3,a
      00571B E4               [12]13858 	clr	a
      00571C 08               [12]13859 	inc	r0
      00571D 36               [12]13860 	addc	a,@r0
      00571E FC               [12]13861 	mov	r4,a
      00571F 08               [12]13862 	inc	r0
      005720 86 07            [24]13863 	mov	ar7,@r0
      005722 8B 82            [24]13864 	mov	dpl,r3
      005724 8C 83            [24]13865 	mov	dph,r4
      005726 8F F0            [24]13866 	mov	b,r7
      005728 12 00 00         [24]13867 	lcall	__gptrget
      00572B FB               [12]13868 	mov	r3,a
      00572C E4               [12]13869 	clr	a
      00572D FE               [12]13870 	mov	r6,a
      00572E FF               [12]13871 	mov	r7,a
      00572F FD               [12]13872 	mov	r5,a
      005730 E5 00            [12]13873 	mov	a,_bp
      005732 24 07            [12]13874 	add	a,#0x07
      005734 F8               [12]13875 	mov	r0,a
      005735 E6               [12]13876 	mov	a,@r0
      005736 42 03            [12]13877 	orl	ar3,a
      005738 08               [12]13878 	inc	r0
      005739 E6               [12]13879 	mov	a,@r0
      00573A 42 06            [12]13880 	orl	ar6,a
      00573C 08               [12]13881 	inc	r0
      00573D E6               [12]13882 	mov	a,@r0
      00573E 42 07            [12]13883 	orl	ar7,a
      005740 08               [12]13884 	inc	r0
      005741 E6               [12]13885 	mov	a,@r0
      005742 42 05            [12]13886 	orl	ar5,a
      005744 E5 00            [12]13887 	mov	a,_bp
      005746 24 04            [12]13888 	add	a,#0x04
      005748 F8               [12]13889 	mov	r0,a
      005749 86 82            [24]13890 	mov	dpl,@r0
      00574B 08               [12]13891 	inc	r0
      00574C 86 83            [24]13892 	mov	dph,@r0
      00574E 08               [12]13893 	inc	r0
      00574F 86 F0            [24]13894 	mov	b,@r0
      005751 EB               [12]13895 	mov	a,r3
      005752 12 00 00         [24]13896 	lcall	__gptrput
      005755 A3               [24]13897 	inc	dptr
      005756 EE               [12]13898 	mov	a,r6
      005757 12 00 00         [24]13899 	lcall	__gptrput
      00575A A3               [24]13900 	inc	dptr
      00575B EF               [12]13901 	mov	a,r7
      00575C 12 00 00         [24]13902 	lcall	__gptrput
      00575F A3               [24]13903 	inc	dptr
      005760 ED               [12]13904 	mov	a,r5
      005761 12 00 00         [24]13905 	lcall	__gptrput
                                  13906 ;	FATFS\src\ff.c:2623: fp->fptr = 0;						/* File pointer */
      005764 A8 00            [24]13907 	mov	r0,_bp
      005766 08               [12]13908 	inc	r0
      005767 74 07            [12]13909 	mov	a,#0x07
      005769 26               [12]13910 	add	a,@r0
      00576A FD               [12]13911 	mov	r5,a
      00576B E4               [12]13912 	clr	a
      00576C 08               [12]13913 	inc	r0
      00576D 36               [12]13914 	addc	a,@r0
      00576E FE               [12]13915 	mov	r6,a
      00576F 08               [12]13916 	inc	r0
      005770 86 07            [24]13917 	mov	ar7,@r0
      005772 8D 82            [24]13918 	mov	dpl,r5
      005774 8E 83            [24]13919 	mov	dph,r6
      005776 8F F0            [24]13920 	mov	b,r7
      005778 E4               [12]13921 	clr	a
      005779 12 00 00         [24]13922 	lcall	__gptrput
      00577C A3               [24]13923 	inc	dptr
      00577D 12 00 00         [24]13924 	lcall	__gptrput
      005780 A3               [24]13925 	inc	dptr
      005781 12 00 00         [24]13926 	lcall	__gptrput
      005784 A3               [24]13927 	inc	dptr
      005785 12 00 00         [24]13928 	lcall	__gptrput
                                  13929 ;	FATFS\src\ff.c:2624: fp->dsect = 0;
      005788 A8 00            [24]13930 	mov	r0,_bp
      00578A 08               [12]13931 	inc	r0
      00578B 74 17            [12]13932 	mov	a,#0x17
      00578D 26               [12]13933 	add	a,@r0
      00578E FD               [12]13934 	mov	r5,a
      00578F E4               [12]13935 	clr	a
      005790 08               [12]13936 	inc	r0
      005791 36               [12]13937 	addc	a,@r0
      005792 FE               [12]13938 	mov	r6,a
      005793 08               [12]13939 	inc	r0
      005794 86 07            [24]13940 	mov	ar7,@r0
      005796 8D 82            [24]13941 	mov	dpl,r5
      005798 8E 83            [24]13942 	mov	dph,r6
      00579A 8F F0            [24]13943 	mov	b,r7
      00579C E4               [12]13944 	clr	a
      00579D 12 00 00         [24]13945 	lcall	__gptrput
      0057A0 A3               [24]13946 	inc	dptr
      0057A1 12 00 00         [24]13947 	lcall	__gptrput
      0057A4 A3               [24]13948 	inc	dptr
      0057A5 12 00 00         [24]13949 	lcall	__gptrput
      0057A8 A3               [24]13950 	inc	dptr
      0057A9 12 00 00         [24]13951 	lcall	__gptrput
                                  13952 ;	FATFS\src\ff.c:2626: fp->cltbl = 0;						/* Normal seek mode */
      0057AC A8 00            [24]13953 	mov	r0,_bp
      0057AE 08               [12]13954 	inc	r0
      0057AF 74 1B            [12]13955 	mov	a,#0x1b
      0057B1 26               [12]13956 	add	a,@r0
      0057B2 FD               [12]13957 	mov	r5,a
      0057B3 E4               [12]13958 	clr	a
      0057B4 08               [12]13959 	inc	r0
      0057B5 36               [12]13960 	addc	a,@r0
      0057B6 FE               [12]13961 	mov	r6,a
      0057B7 08               [12]13962 	inc	r0
      0057B8 86 07            [24]13963 	mov	ar7,@r0
      0057BA 8D 82            [24]13964 	mov	dpl,r5
      0057BC 8E 83            [24]13965 	mov	dph,r6
      0057BE 8F F0            [24]13966 	mov	b,r7
      0057C0 E4               [12]13967 	clr	a
      0057C1 12 00 00         [24]13968 	lcall	__gptrput
      0057C4 A3               [24]13969 	inc	dptr
      0057C5 12 00 00         [24]13970 	lcall	__gptrput
      0057C8 A3               [24]13971 	inc	dptr
      0057C9 12 00 00         [24]13972 	lcall	__gptrput
                                  13973 ;	FATFS\src\ff.c:2628: fp->fs = dj.fs;	 					/* Validate file object */
      0057CC 87 05            [24]13974 	mov	ar5,@r1
      0057CE 09               [12]13975 	inc	r1
      0057CF 87 06            [24]13976 	mov	ar6,@r1
      0057D1 09               [12]13977 	inc	r1
      0057D2 87 07            [24]13978 	mov	ar7,@r1
      0057D4 A8 00            [24]13979 	mov	r0,_bp
      0057D6 08               [12]13980 	inc	r0
      0057D7 86 82            [24]13981 	mov	dpl,@r0
      0057D9 08               [12]13982 	inc	r0
      0057DA 86 83            [24]13983 	mov	dph,@r0
      0057DC 08               [12]13984 	inc	r0
      0057DD 86 F0            [24]13985 	mov	b,@r0
      0057DF ED               [12]13986 	mov	a,r5
      0057E0 12 00 00         [24]13987 	lcall	__gptrput
      0057E3 A3               [24]13988 	inc	dptr
      0057E4 EE               [12]13989 	mov	a,r6
      0057E5 12 00 00         [24]13990 	lcall	__gptrput
      0057E8 A3               [24]13991 	inc	dptr
      0057E9 EF               [12]13992 	mov	a,r7
      0057EA 12 00 00         [24]13993 	lcall	__gptrput
                                  13994 ;	FATFS\src\ff.c:2629: fp->id = fp->fs->id;
      0057ED A8 00            [24]13995 	mov	r0,_bp
      0057EF 08               [12]13996 	inc	r0
      0057F0 74 03            [12]13997 	mov	a,#0x03
      0057F2 26               [12]13998 	add	a,@r0
      0057F3 FA               [12]13999 	mov	r2,a
      0057F4 E4               [12]14000 	clr	a
      0057F5 08               [12]14001 	inc	r0
      0057F6 36               [12]14002 	addc	a,@r0
      0057F7 FB               [12]14003 	mov	r3,a
      0057F8 08               [12]14004 	inc	r0
      0057F9 86 04            [24]14005 	mov	ar4,@r0
      0057FB 74 06            [12]14006 	mov	a,#0x06
      0057FD 2D               [12]14007 	add	a,r5
      0057FE FD               [12]14008 	mov	r5,a
      0057FF E4               [12]14009 	clr	a
      005800 3E               [12]14010 	addc	a,r6
      005801 FE               [12]14011 	mov	r6,a
      005802 8D 82            [24]14012 	mov	dpl,r5
      005804 8E 83            [24]14013 	mov	dph,r6
      005806 8F F0            [24]14014 	mov	b,r7
      005808 12 00 00         [24]14015 	lcall	__gptrget
      00580B FD               [12]14016 	mov	r5,a
      00580C A3               [24]14017 	inc	dptr
      00580D 12 00 00         [24]14018 	lcall	__gptrget
      005810 FE               [12]14019 	mov	r6,a
      005811 8A 82            [24]14020 	mov	dpl,r2
      005813 8B 83            [24]14021 	mov	dph,r3
      005815 8C F0            [24]14022 	mov	b,r4
      005817 ED               [12]14023 	mov	a,r5
      005818 12 00 00         [24]14024 	lcall	__gptrput
      00581B A3               [24]14025 	inc	dptr
      00581C EE               [12]14026 	mov	a,r6
      00581D 12 00 00         [24]14027 	lcall	__gptrput
      005820                      14028 00115$:
                                  14029 ;	FATFS\src\ff.c:2633: P1 = 0xD1;
      005820 75 90 D1         [24]14030 	mov	_P1,#0xd1
                                  14031 ;	FATFS\src\ff.c:2634: LEAVE_FF(dj.fs, res);
      005823 E5 00            [12]14032 	mov	a,_bp
      005825 24 38            [12]14033 	add	a,#0x38
      005827 F8               [12]14034 	mov	r0,a
      005828 86 82            [24]14035 	mov	dpl,@r0
                                  14036 ;	FATFS\src\ff.c:2636: P1 = 0xD2;
      00582A                      14037 00116$:
                                  14038 ;	FATFS\src\ff.c:2637: }
      00582A 85 00 81         [24]14039 	mov	sp,_bp
      00582D D0 00            [24]14040 	pop	_bp
      00582F 02 00 00         [24]14041 	ljmp	__sdcc_banked_ret
                                  14042 ;------------------------------------------------------------
                                  14043 ;Allocation info for local variables in function 'f_read'
                                  14044 ;------------------------------------------------------------
                                  14045 ;buff                      Allocated to stack - _bp -6
                                  14046 ;btr                       Allocated to stack - _bp -8
                                  14047 ;br                        Allocated to stack - _bp -11
                                  14048 ;fp                        Allocated to stack - _bp +1
                                  14049 ;res                       Allocated to registers r6 
                                  14050 ;clst                      Allocated to stack - _bp +41
                                  14051 ;sect                      Allocated to stack - _bp +37
                                  14052 ;remain                    Allocated to stack - _bp +45
                                  14053 ;rcnt                      Allocated to stack - _bp +52
                                  14054 ;cc                        Allocated to registers r2 r3 
                                  14055 ;csect                     Allocated to registers r4 
                                  14056 ;rbuff                     Allocated to stack - _bp +49
                                  14057 ;sloc0                     Allocated to stack - _bp +4
                                  14058 ;sloc1                     Allocated to stack - _bp +24
                                  14059 ;sloc2                     Allocated to stack - _bp +15
                                  14060 ;sloc3                     Allocated to stack - _bp +34
                                  14061 ;sloc4                     Allocated to stack - _bp +18
                                  14062 ;sloc5                     Allocated to stack - _bp +11
                                  14063 ;sloc6                     Allocated to stack - _bp +28
                                  14064 ;sloc7                     Allocated to stack - _bp +31
                                  14065 ;sloc8                     Allocated to stack - _bp +7
                                  14066 ;sloc9                     Allocated to stack - _bp +21
                                  14067 ;------------------------------------------------------------
                                  14068 ;	FATFS\src\ff.c:2646: FRESULT f_read (
                                  14069 ;	-----------------------------------------
                                  14070 ;	 function f_read
                                  14071 ;	-----------------------------------------
      005832                      14072 _f_read:
      005832 C0 00            [24]14073 	push	_bp
      005834 85 81 00         [24]14074 	mov	_bp,sp
      005837 C0 82            [24]14075 	push	dpl
      005839 C0 83            [24]14076 	push	dph
      00583B C0 F0            [24]14077 	push	b
      00583D E5 81            [12]14078 	mov	a,sp
      00583F 24 32            [12]14079 	add	a,#0x32
      005841 F5 81            [12]14080 	mov	sp,a
                                  14081 ;	FATFS\src\ff.c:2656: BYTE csect, *rbuff = (BYTE*)buff;
      005843 E5 00            [12]14082 	mov	a,_bp
      005845 24 FA            [12]14083 	add	a,#0xfa
      005847 F8               [12]14084 	mov	r0,a
      005848 E5 00            [12]14085 	mov	a,_bp
      00584A 24 31            [12]14086 	add	a,#0x31
      00584C F9               [12]14087 	mov	r1,a
      00584D E6               [12]14088 	mov	a,@r0
      00584E F7               [12]14089 	mov	@r1,a
      00584F 08               [12]14090 	inc	r0
      005850 09               [12]14091 	inc	r1
      005851 E6               [12]14092 	mov	a,@r0
      005852 F7               [12]14093 	mov	@r1,a
      005853 08               [12]14094 	inc	r0
      005854 09               [12]14095 	inc	r1
      005855 E6               [12]14096 	mov	a,@r0
      005856 F7               [12]14097 	mov	@r1,a
                                  14098 ;	FATFS\src\ff.c:2659: *br = 0;	/* Clear read byte counter */
      005857 E5 00            [12]14099 	mov	a,_bp
      005859 24 F5            [12]14100 	add	a,#0xf5
      00585B F8               [12]14101 	mov	r0,a
      00585C E5 00            [12]14102 	mov	a,_bp
      00585E 24 1C            [12]14103 	add	a,#0x1c
      005860 F9               [12]14104 	mov	r1,a
      005861 E6               [12]14105 	mov	a,@r0
      005862 F7               [12]14106 	mov	@r1,a
      005863 08               [12]14107 	inc	r0
      005864 09               [12]14108 	inc	r1
      005865 E6               [12]14109 	mov	a,@r0
      005866 F7               [12]14110 	mov	@r1,a
      005867 08               [12]14111 	inc	r0
      005868 09               [12]14112 	inc	r1
      005869 E6               [12]14113 	mov	a,@r0
      00586A F7               [12]14114 	mov	@r1,a
      00586B E5 00            [12]14115 	mov	a,_bp
      00586D 24 1C            [12]14116 	add	a,#0x1c
      00586F F8               [12]14117 	mov	r0,a
      005870 86 82            [24]14118 	mov	dpl,@r0
      005872 08               [12]14119 	inc	r0
      005873 86 83            [24]14120 	mov	dph,@r0
      005875 08               [12]14121 	inc	r0
      005876 86 F0            [24]14122 	mov	b,@r0
      005878 E4               [12]14123 	clr	a
      005879 12 00 00         [24]14124 	lcall	__gptrput
      00587C A3               [24]14125 	inc	dptr
      00587D 12 00 00         [24]14126 	lcall	__gptrput
                                  14127 ;	FATFS\src\ff.c:2661: res = validate(fp);							/* Check validity */
      005880 A8 00            [24]14128 	mov	r0,_bp
      005882 08               [12]14129 	inc	r0
      005883 86 05            [24]14130 	mov	ar5,@r0
      005885 08               [12]14131 	inc	r0
      005886 86 06            [24]14132 	mov	ar6,@r0
      005888 08               [12]14133 	inc	r0
      005889 86 07            [24]14134 	mov	ar7,@r0
      00588B 8D 82            [24]14135 	mov	dpl,r5
      00588D 8E 83            [24]14136 	mov	dph,r6
      00588F 8F F0            [24]14137 	mov	b,r7
      005891 78 04            [12]14138 	mov	r0,#_validate
      005893 79 52            [12]14139 	mov	r1,#(_validate >> 8)
      005895 7A 00            [12]14140 	mov	r2,#(_validate >> 16)
      005897 12 00 00         [24]14141 	lcall	__sdcc_banked_call
                                  14142 ;	FATFS\src\ff.c:2662: if (res != FR_OK) LEAVE_FF(fp->fs, res);
      00589A E5 82            [12]14143 	mov	a,dpl
      00589C FF               [12]14144 	mov	r7,a
      00589D FE               [12]14145 	mov	r6,a
      00589E 60 05            [24]14146 	jz	00102$
      0058A0 8E 82            [24]14147 	mov	dpl,r6
      0058A2 02 60 D7         [24]14148 	ljmp	00139$
      0058A5                      14149 00102$:
                                  14150 ;	FATFS\src\ff.c:2663: if (fp->err)								/* Check error */
      0058A5 A8 00            [24]14151 	mov	r0,_bp
      0058A7 08               [12]14152 	inc	r0
      0058A8 74 06            [12]14153 	mov	a,#0x06
      0058AA 26               [12]14154 	add	a,@r0
      0058AB FD               [12]14155 	mov	r5,a
      0058AC E4               [12]14156 	clr	a
      0058AD 08               [12]14157 	inc	r0
      0058AE 36               [12]14158 	addc	a,@r0
      0058AF FE               [12]14159 	mov	r6,a
      0058B0 08               [12]14160 	inc	r0
      0058B1 86 07            [24]14161 	mov	ar7,@r0
      0058B3 8D 82            [24]14162 	mov	dpl,r5
      0058B5 8E 83            [24]14163 	mov	dph,r6
      0058B7 8F F0            [24]14164 	mov	b,r7
      0058B9 12 00 00         [24]14165 	lcall	__gptrget
      0058BC FF               [12]14166 	mov	r7,a
      0058BD 60 05            [24]14167 	jz	00104$
                                  14168 ;	FATFS\src\ff.c:2664: LEAVE_FF(fp->fs, (FRESULT)fp->err);
      0058BF 8F 82            [24]14169 	mov	dpl,r7
      0058C1 02 60 D7         [24]14170 	ljmp	00139$
      0058C4                      14171 00104$:
                                  14172 ;	FATFS\src\ff.c:2665: if (!(fp->flag & FA_READ)) 					/* Check access mode */
      0058C4 A8 00            [24]14173 	mov	r0,_bp
      0058C6 08               [12]14174 	inc	r0
      0058C7 74 05            [12]14175 	mov	a,#0x05
      0058C9 26               [12]14176 	add	a,@r0
      0058CA FD               [12]14177 	mov	r5,a
      0058CB E4               [12]14178 	clr	a
      0058CC 08               [12]14179 	inc	r0
      0058CD 36               [12]14180 	addc	a,@r0
      0058CE FE               [12]14181 	mov	r6,a
      0058CF 08               [12]14182 	inc	r0
      0058D0 86 07            [24]14183 	mov	ar7,@r0
      0058D2 8D 82            [24]14184 	mov	dpl,r5
      0058D4 8E 83            [24]14185 	mov	dph,r6
      0058D6 8F F0            [24]14186 	mov	b,r7
      0058D8 12 00 00         [24]14187 	lcall	__gptrget
      0058DB FD               [12]14188 	mov	r5,a
      0058DC 20 E0 06         [24]14189 	jb	acc.0,00106$
                                  14190 ;	FATFS\src\ff.c:2666: LEAVE_FF(fp->fs, FR_DENIED);
      0058DF 75 82 07         [24]14191 	mov	dpl,#0x07
      0058E2 02 60 D7         [24]14192 	ljmp	00139$
      0058E5                      14193 00106$:
                                  14194 ;	FATFS\src\ff.c:2667: remain = fp->fsize - fp->fptr;
      0058E5 A8 00            [24]14195 	mov	r0,_bp
      0058E7 08               [12]14196 	inc	r0
      0058E8 74 0B            [12]14197 	mov	a,#0x0b
      0058EA 26               [12]14198 	add	a,@r0
      0058EB FF               [12]14199 	mov	r7,a
      0058EC E4               [12]14200 	clr	a
      0058ED 08               [12]14201 	inc	r0
      0058EE 36               [12]14202 	addc	a,@r0
      0058EF FD               [12]14203 	mov	r5,a
      0058F0 08               [12]14204 	inc	r0
      0058F1 86 06            [24]14205 	mov	ar6,@r0
      0058F3 8F 82            [24]14206 	mov	dpl,r7
      0058F5 8D 83            [24]14207 	mov	dph,r5
      0058F7 8E F0            [24]14208 	mov	b,r6
      0058F9 E5 00            [12]14209 	mov	a,_bp
      0058FB 24 18            [12]14210 	add	a,#0x18
      0058FD F8               [12]14211 	mov	r0,a
      0058FE 12 00 00         [24]14212 	lcall	__gptrget
      005901 F6               [12]14213 	mov	@r0,a
      005902 A3               [24]14214 	inc	dptr
      005903 12 00 00         [24]14215 	lcall	__gptrget
      005906 08               [12]14216 	inc	r0
      005907 F6               [12]14217 	mov	@r0,a
      005908 A3               [24]14218 	inc	dptr
      005909 12 00 00         [24]14219 	lcall	__gptrget
      00590C 08               [12]14220 	inc	r0
      00590D F6               [12]14221 	mov	@r0,a
      00590E A3               [24]14222 	inc	dptr
      00590F 12 00 00         [24]14223 	lcall	__gptrget
      005912 08               [12]14224 	inc	r0
      005913 F6               [12]14225 	mov	@r0,a
      005914 A8 00            [24]14226 	mov	r0,_bp
      005916 08               [12]14227 	inc	r0
      005917 E5 00            [12]14228 	mov	a,_bp
      005919 24 04            [12]14229 	add	a,#0x04
      00591B F9               [12]14230 	mov	r1,a
      00591C 74 07            [12]14231 	mov	a,#0x07
      00591E 26               [12]14232 	add	a,@r0
      00591F F7               [12]14233 	mov	@r1,a
      005920 E4               [12]14234 	clr	a
      005921 08               [12]14235 	inc	r0
      005922 36               [12]14236 	addc	a,@r0
      005923 09               [12]14237 	inc	r1
      005924 F7               [12]14238 	mov	@r1,a
      005925 08               [12]14239 	inc	r0
      005926 09               [12]14240 	inc	r1
      005927 E6               [12]14241 	mov	a,@r0
      005928 F7               [12]14242 	mov	@r1,a
      005929 E5 00            [12]14243 	mov	a,_bp
      00592B 24 04            [12]14244 	add	a,#0x04
      00592D F8               [12]14245 	mov	r0,a
      00592E 86 82            [24]14246 	mov	dpl,@r0
      005930 08               [12]14247 	inc	r0
      005931 86 83            [24]14248 	mov	dph,@r0
      005933 08               [12]14249 	inc	r0
      005934 86 F0            [24]14250 	mov	b,@r0
      005936 12 00 00         [24]14251 	lcall	__gptrget
      005939 FA               [12]14252 	mov	r2,a
      00593A A3               [24]14253 	inc	dptr
      00593B 12 00 00         [24]14254 	lcall	__gptrget
      00593E FB               [12]14255 	mov	r3,a
      00593F A3               [24]14256 	inc	dptr
      005940 12 00 00         [24]14257 	lcall	__gptrget
      005943 FE               [12]14258 	mov	r6,a
      005944 A3               [24]14259 	inc	dptr
      005945 12 00 00         [24]14260 	lcall	__gptrget
      005948 FF               [12]14261 	mov	r7,a
      005949 E5 00            [12]14262 	mov	a,_bp
      00594B 24 18            [12]14263 	add	a,#0x18
      00594D F8               [12]14264 	mov	r0,a
      00594E E6               [12]14265 	mov	a,@r0
      00594F C3               [12]14266 	clr	c
      005950 9A               [12]14267 	subb	a,r2
      005951 FA               [12]14268 	mov	r2,a
      005952 08               [12]14269 	inc	r0
      005953 E6               [12]14270 	mov	a,@r0
      005954 9B               [12]14271 	subb	a,r3
      005955 FB               [12]14272 	mov	r3,a
      005956 08               [12]14273 	inc	r0
      005957 E6               [12]14274 	mov	a,@r0
      005958 9E               [12]14275 	subb	a,r6
      005959 FE               [12]14276 	mov	r6,a
      00595A 08               [12]14277 	inc	r0
      00595B E6               [12]14278 	mov	a,@r0
      00595C 9F               [12]14279 	subb	a,r7
      00595D FF               [12]14280 	mov	r7,a
      00595E E5 00            [12]14281 	mov	a,_bp
      005960 24 2D            [12]14282 	add	a,#0x2d
      005962 F8               [12]14283 	mov	r0,a
      005963 A6 02            [24]14284 	mov	@r0,ar2
      005965 08               [12]14285 	inc	r0
      005966 A6 03            [24]14286 	mov	@r0,ar3
      005968 08               [12]14287 	inc	r0
      005969 A6 06            [24]14288 	mov	@r0,ar6
      00596B 08               [12]14289 	inc	r0
      00596C A6 07            [24]14290 	mov	@r0,ar7
                                  14291 ;	FATFS\src\ff.c:2668: if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
      00596E E5 00            [12]14292 	mov	a,_bp
      005970 24 F8            [12]14293 	add	a,#0xf8
      005972 F8               [12]14294 	mov	r0,a
      005973 86 04            [24]14295 	mov	ar4,@r0
      005975 08               [12]14296 	inc	r0
      005976 86 05            [24]14297 	mov	ar5,@r0
      005978 E4               [12]14298 	clr	a
      005979 FE               [12]14299 	mov	r6,a
      00597A FF               [12]14300 	mov	r7,a
      00597B E5 00            [12]14301 	mov	a,_bp
      00597D 24 2D            [12]14302 	add	a,#0x2d
      00597F F8               [12]14303 	mov	r0,a
      005980 C3               [12]14304 	clr	c
      005981 E6               [12]14305 	mov	a,@r0
      005982 9C               [12]14306 	subb	a,r4
      005983 08               [12]14307 	inc	r0
      005984 E6               [12]14308 	mov	a,@r0
      005985 9D               [12]14309 	subb	a,r5
      005986 08               [12]14310 	inc	r0
      005987 E6               [12]14311 	mov	a,@r0
      005988 9E               [12]14312 	subb	a,r6
      005989 08               [12]14313 	inc	r0
      00598A E6               [12]14314 	mov	a,@r0
      00598B 9F               [12]14315 	subb	a,r7
      00598C 50 10            [24]14316 	jnc	00158$
      00598E E5 00            [12]14317 	mov	a,_bp
      005990 24 2D            [12]14318 	add	a,#0x2d
      005992 F8               [12]14319 	mov	r0,a
      005993 E5 00            [12]14320 	mov	a,_bp
      005995 24 F8            [12]14321 	add	a,#0xf8
      005997 F9               [12]14322 	mov	r1,a
      005998 E6               [12]14323 	mov	a,@r0
      005999 F7               [12]14324 	mov	@r1,a
      00599A 08               [12]14325 	inc	r0
      00599B 09               [12]14326 	inc	r1
      00599C E6               [12]14327 	mov	a,@r0
      00599D F7               [12]14328 	mov	@r1,a
      00599E                      14329 00158$:
      00599E A8 00            [24]14330 	mov	r0,_bp
      0059A0 08               [12]14331 	inc	r0
      0059A1 E5 00            [12]14332 	mov	a,_bp
      0059A3 24 15            [12]14333 	add	a,#0x15
      0059A5 F9               [12]14334 	mov	r1,a
      0059A6 74 1B            [12]14335 	mov	a,#0x1b
      0059A8 26               [12]14336 	add	a,@r0
      0059A9 F7               [12]14337 	mov	@r1,a
      0059AA E4               [12]14338 	clr	a
      0059AB 08               [12]14339 	inc	r0
      0059AC 36               [12]14340 	addc	a,@r0
      0059AD 09               [12]14341 	inc	r1
      0059AE F7               [12]14342 	mov	@r1,a
      0059AF 08               [12]14343 	inc	r0
      0059B0 09               [12]14344 	inc	r1
      0059B1 E6               [12]14345 	mov	a,@r0
      0059B2 F7               [12]14346 	mov	@r1,a
      0059B3 A8 00            [24]14347 	mov	r0,_bp
      0059B5 08               [12]14348 	inc	r0
      0059B6 E5 00            [12]14349 	mov	a,_bp
      0059B8 24 18            [12]14350 	add	a,#0x18
      0059BA F9               [12]14351 	mov	r1,a
      0059BB 74 13            [12]14352 	mov	a,#0x13
      0059BD 26               [12]14353 	add	a,@r0
      0059BE F7               [12]14354 	mov	@r1,a
      0059BF E4               [12]14355 	clr	a
      0059C0 08               [12]14356 	inc	r0
      0059C1 36               [12]14357 	addc	a,@r0
      0059C2 09               [12]14358 	inc	r1
      0059C3 F7               [12]14359 	mov	@r1,a
      0059C4 08               [12]14360 	inc	r0
      0059C5 09               [12]14361 	inc	r1
      0059C6 E6               [12]14362 	mov	a,@r0
      0059C7 F7               [12]14363 	mov	@r1,a
      0059C8 A8 00            [24]14364 	mov	r0,_bp
      0059CA 08               [12]14365 	inc	r0
      0059CB E5 00            [12]14366 	mov	a,_bp
      0059CD 24 0F            [12]14367 	add	a,#0x0f
      0059CF F9               [12]14368 	mov	r1,a
      0059D0 74 0F            [12]14369 	mov	a,#0x0f
      0059D2 26               [12]14370 	add	a,@r0
      0059D3 F7               [12]14371 	mov	@r1,a
      0059D4 E4               [12]14372 	clr	a
      0059D5 08               [12]14373 	inc	r0
      0059D6 36               [12]14374 	addc	a,@r0
      0059D7 09               [12]14375 	inc	r1
      0059D8 F7               [12]14376 	mov	@r1,a
      0059D9 08               [12]14377 	inc	r0
      0059DA 09               [12]14378 	inc	r1
      0059DB E6               [12]14379 	mov	a,@r0
      0059DC F7               [12]14380 	mov	@r1,a
      0059DD E5 00            [12]14381 	mov	a,_bp
      0059DF 24 18            [12]14382 	add	a,#0x18
      0059E1 F8               [12]14383 	mov	r0,a
      0059E2 E5 00            [12]14384 	mov	a,_bp
      0059E4 24 22            [12]14385 	add	a,#0x22
      0059E6 F9               [12]14386 	mov	r1,a
      0059E7 E6               [12]14387 	mov	a,@r0
      0059E8 F7               [12]14388 	mov	@r1,a
      0059E9 08               [12]14389 	inc	r0
      0059EA 09               [12]14390 	inc	r1
      0059EB E6               [12]14391 	mov	a,@r0
      0059EC F7               [12]14392 	mov	@r1,a
      0059ED 08               [12]14393 	inc	r0
      0059EE 09               [12]14394 	inc	r1
      0059EF E6               [12]14395 	mov	a,@r0
      0059F0 F7               [12]14396 	mov	@r1,a
      0059F1 E5 00            [12]14397 	mov	a,_bp
      0059F3 24 04            [12]14398 	add	a,#0x04
      0059F5 A8 00            [24]14399 	mov	r0,_bp
      0059F7 08               [12]14400 	inc	r0
      0059F8 E5 00            [12]14401 	mov	a,_bp
      0059FA 24 12            [12]14402 	add	a,#0x12
      0059FC F9               [12]14403 	mov	r1,a
      0059FD 74 17            [12]14404 	mov	a,#0x17
      0059FF 26               [12]14405 	add	a,@r0
      005A00 F7               [12]14406 	mov	@r1,a
      005A01 E4               [12]14407 	clr	a
      005A02 08               [12]14408 	inc	r0
      005A03 36               [12]14409 	addc	a,@r0
      005A04 09               [12]14410 	inc	r1
      005A05 F7               [12]14411 	mov	@r1,a
      005A06 08               [12]14412 	inc	r0
      005A07 09               [12]14413 	inc	r1
      005A08 E6               [12]14414 	mov	a,@r0
      005A09 F7               [12]14415 	mov	@r1,a
      005A0A                      14416 00138$:
                                  14417 ;	FATFS\src\ff.c:2670: for ( ;  btr;								/* Repeat until all data read */
      005A0A E5 00            [12]14418 	mov	a,_bp
      005A0C 24 F8            [12]14419 	add	a,#0xf8
      005A0E F8               [12]14420 	mov	r0,a
      005A0F E6               [12]14421 	mov	a,@r0
      005A10 08               [12]14422 	inc	r0
      005A11 46               [12]14423 	orl	a,@r0
      005A12 70 03            [24]14424 	jnz	00235$
      005A14 02 60 D4         [24]14425 	ljmp	00136$
      005A17                      14426 00235$:
                                  14427 ;	FATFS\src\ff.c:2672: if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
      005A17 E5 00            [12]14428 	mov	a,_bp
      005A19 24 04            [12]14429 	add	a,#0x04
      005A1B F8               [12]14430 	mov	r0,a
      005A1C 86 82            [24]14431 	mov	dpl,@r0
      005A1E 08               [12]14432 	inc	r0
      005A1F 86 83            [24]14433 	mov	dph,@r0
      005A21 08               [12]14434 	inc	r0
      005A22 86 F0            [24]14435 	mov	b,@r0
      005A24 E5 00            [12]14436 	mov	a,_bp
      005A26 24 0B            [12]14437 	add	a,#0x0b
      005A28 F9               [12]14438 	mov	r1,a
      005A29 12 00 00         [24]14439 	lcall	__gptrget
      005A2C F7               [12]14440 	mov	@r1,a
      005A2D A3               [24]14441 	inc	dptr
      005A2E 12 00 00         [24]14442 	lcall	__gptrget
      005A31 09               [12]14443 	inc	r1
      005A32 F7               [12]14444 	mov	@r1,a
      005A33 A3               [24]14445 	inc	dptr
      005A34 12 00 00         [24]14446 	lcall	__gptrget
      005A37 09               [12]14447 	inc	r1
      005A38 F7               [12]14448 	mov	@r1,a
      005A39 A3               [24]14449 	inc	dptr
      005A3A 12 00 00         [24]14450 	lcall	__gptrget
      005A3D 09               [12]14451 	inc	r1
      005A3E F7               [12]14452 	mov	@r1,a
      005A3F E5 00            [12]14453 	mov	a,_bp
      005A41 24 0B            [12]14454 	add	a,#0x0b
      005A43 F8               [12]14455 	mov	r0,a
      005A44 E6               [12]14456 	mov	a,@r0
      005A45 70 05            [24]14457 	jnz	00236$
      005A47 08               [12]14458 	inc	r0
      005A48 E6               [12]14459 	mov	a,@r0
      005A49 30 E0 03         [24]14460 	jnb	acc.0,00237$
      005A4C                      14461 00236$:
      005A4C 02 5E 7B         [24]14462 	ljmp	00130$
      005A4F                      14463 00237$:
                                  14464 ;	FATFS\src\ff.c:2673: csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
      005A4F E5 00            [12]14465 	mov	a,_bp
      005A51 24 0B            [12]14466 	add	a,#0x0b
      005A53 F8               [12]14467 	mov	r0,a
      005A54 E5 00            [12]14468 	mov	a,_bp
      005A56 24 07            [12]14469 	add	a,#0x07
      005A58 F9               [12]14470 	mov	r1,a
      005A59 08               [12]14471 	inc	r0
      005A5A 08               [12]14472 	inc	r0
      005A5B 08               [12]14473 	inc	r0
      005A5C E6               [12]14474 	mov	a,@r0
      005A5D 09               [12]14475 	inc	r1
      005A5E 09               [12]14476 	inc	r1
      005A5F 09               [12]14477 	inc	r1
      005A60 77 00            [12]14478 	mov	@r1,#0x00
      005A62 C3               [12]14479 	clr	c
      005A63 13               [12]14480 	rrc	a
      005A64 19               [12]14481 	dec	r1
      005A65 F7               [12]14482 	mov	@r1,a
      005A66 18               [12]14483 	dec	r0
      005A67 E6               [12]14484 	mov	a,@r0
      005A68 13               [12]14485 	rrc	a
      005A69 19               [12]14486 	dec	r1
      005A6A F7               [12]14487 	mov	@r1,a
      005A6B 18               [12]14488 	dec	r0
      005A6C E6               [12]14489 	mov	a,@r0
      005A6D 13               [12]14490 	rrc	a
      005A6E 19               [12]14491 	dec	r1
      005A6F F7               [12]14492 	mov	@r1,a
      005A70 A8 00            [24]14493 	mov	r0,_bp
      005A72 08               [12]14494 	inc	r0
      005A73 86 82            [24]14495 	mov	dpl,@r0
      005A75 08               [12]14496 	inc	r0
      005A76 86 83            [24]14497 	mov	dph,@r0
      005A78 08               [12]14498 	inc	r0
      005A79 86 F0            [24]14499 	mov	b,@r0
      005A7B E5 00            [12]14500 	mov	a,_bp
      005A7D 24 1F            [12]14501 	add	a,#0x1f
      005A7F F9               [12]14502 	mov	r1,a
      005A80 12 00 00         [24]14503 	lcall	__gptrget
      005A83 F7               [12]14504 	mov	@r1,a
      005A84 A3               [24]14505 	inc	dptr
      005A85 12 00 00         [24]14506 	lcall	__gptrget
      005A88 09               [12]14507 	inc	r1
      005A89 F7               [12]14508 	mov	@r1,a
      005A8A A3               [24]14509 	inc	dptr
      005A8B 12 00 00         [24]14510 	lcall	__gptrget
      005A8E 09               [12]14511 	inc	r1
      005A8F F7               [12]14512 	mov	@r1,a
      005A90 E5 00            [12]14513 	mov	a,_bp
      005A92 24 1F            [12]14514 	add	a,#0x1f
      005A94 F8               [12]14515 	mov	r0,a
      005A95 74 02            [12]14516 	mov	a,#0x02
      005A97 26               [12]14517 	add	a,@r0
      005A98 FA               [12]14518 	mov	r2,a
      005A99 E4               [12]14519 	clr	a
      005A9A 08               [12]14520 	inc	r0
      005A9B 36               [12]14521 	addc	a,@r0
      005A9C FB               [12]14522 	mov	r3,a
      005A9D 08               [12]14523 	inc	r0
      005A9E 86 07            [24]14524 	mov	ar7,@r0
      005AA0 8A 82            [24]14525 	mov	dpl,r2
      005AA2 8B 83            [24]14526 	mov	dph,r3
      005AA4 8F F0            [24]14527 	mov	b,r7
      005AA6 12 00 00         [24]14528 	lcall	__gptrget
      005AA9 FA               [12]14529 	mov	r2,a
      005AAA 1A               [12]14530 	dec	r2
      005AAB E5 00            [12]14531 	mov	a,_bp
      005AAD 24 07            [12]14532 	add	a,#0x07
      005AAF F8               [12]14533 	mov	r0,a
      005AB0 E6               [12]14534 	mov	a,@r0
      005AB1 52 02            [12]14535 	anl	ar2,a
      005AB3 8A 04            [24]14536 	mov	ar4,r2
                                  14537 ;	FATFS\src\ff.c:2674: if (!csect) {						/* On the cluster boundary? */
      005AB5 EC               [12]14538 	mov	a,r4
      005AB6 60 03            [24]14539 	jz	00238$
      005AB8 02 5C 54         [24]14540 	ljmp	00120$
      005ABB                      14541 00238$:
                                  14542 ;	FATFS\src\ff.c:2675: if (fp->fptr == 0) {			/* On the top of the file? */
      005ABB E5 00            [12]14543 	mov	a,_bp
      005ABD 24 0B            [12]14544 	add	a,#0x0b
      005ABF F8               [12]14545 	mov	r0,a
      005AC0 E6               [12]14546 	mov	a,@r0
      005AC1 08               [12]14547 	inc	r0
      005AC2 46               [12]14548 	orl	a,@r0
      005AC3 08               [12]14549 	inc	r0
      005AC4 46               [12]14550 	orl	a,@r0
      005AC5 08               [12]14551 	inc	r0
      005AC6 46               [12]14552 	orl	a,@r0
      005AC7 70 2B            [24]14553 	jnz	00113$
                                  14554 ;	FATFS\src\ff.c:2676: clst = fp->sclust;			/* Follow from the origin */
      005AC9 E5 00            [12]14555 	mov	a,_bp
      005ACB 24 0F            [12]14556 	add	a,#0x0f
      005ACD F8               [12]14557 	mov	r0,a
      005ACE 86 82            [24]14558 	mov	dpl,@r0
      005AD0 08               [12]14559 	inc	r0
      005AD1 86 83            [24]14560 	mov	dph,@r0
      005AD3 08               [12]14561 	inc	r0
      005AD4 86 F0            [24]14562 	mov	b,@r0
      005AD6 E5 00            [12]14563 	mov	a,_bp
      005AD8 24 29            [12]14564 	add	a,#0x29
      005ADA F9               [12]14565 	mov	r1,a
      005ADB 12 00 00         [24]14566 	lcall	__gptrget
      005ADE F7               [12]14567 	mov	@r1,a
      005ADF A3               [24]14568 	inc	dptr
      005AE0 12 00 00         [24]14569 	lcall	__gptrget
      005AE3 09               [12]14570 	inc	r1
      005AE4 F7               [12]14571 	mov	@r1,a
      005AE5 A3               [24]14572 	inc	dptr
      005AE6 12 00 00         [24]14573 	lcall	__gptrget
      005AE9 09               [12]14574 	inc	r1
      005AEA F7               [12]14575 	mov	@r1,a
      005AEB A3               [24]14576 	inc	dptr
      005AEC 12 00 00         [24]14577 	lcall	__gptrget
      005AEF 09               [12]14578 	inc	r1
      005AF0 F7               [12]14579 	mov	@r1,a
      005AF1 02 5B BC         [24]14580 	ljmp	00114$
      005AF4                      14581 00113$:
                                  14582 ;	FATFS\src\ff.c:2679: if (fp->cltbl)
      005AF4 E5 00            [12]14583 	mov	a,_bp
      005AF6 24 15            [12]14584 	add	a,#0x15
      005AF8 F8               [12]14585 	mov	r0,a
      005AF9 86 82            [24]14586 	mov	dpl,@r0
      005AFB 08               [12]14587 	inc	r0
      005AFC 86 83            [24]14588 	mov	dph,@r0
      005AFE 08               [12]14589 	inc	r0
      005AFF 86 F0            [24]14590 	mov	b,@r0
      005B01 12 00 00         [24]14591 	lcall	__gptrget
      005B04 FF               [12]14592 	mov	r7,a
      005B05 A3               [24]14593 	inc	dptr
      005B06 12 00 00         [24]14594 	lcall	__gptrget
      005B09 FE               [12]14595 	mov	r6,a
      005B0A A3               [24]14596 	inc	dptr
      005B0B 12 00 00         [24]14597 	lcall	__gptrget
      005B0E EF               [12]14598 	mov	a,r7
      005B0F 4E               [12]14599 	orl	a,r6
      005B10 60 4B            [24]14600 	jz	00110$
                                  14601 ;	FATFS\src\ff.c:2680: clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
      005B12 C0 04            [24]14602 	push	ar4
      005B14 E5 00            [12]14603 	mov	a,_bp
      005B16 24 0B            [12]14604 	add	a,#0x0b
      005B18 F8               [12]14605 	mov	r0,a
      005B19 E6               [12]14606 	mov	a,@r0
      005B1A C0 E0            [24]14607 	push	acc
      005B1C 08               [12]14608 	inc	r0
      005B1D E6               [12]14609 	mov	a,@r0
      005B1E C0 E0            [24]14610 	push	acc
      005B20 08               [12]14611 	inc	r0
      005B21 E6               [12]14612 	mov	a,@r0
      005B22 C0 E0            [24]14613 	push	acc
      005B24 08               [12]14614 	inc	r0
      005B25 E6               [12]14615 	mov	a,@r0
      005B26 C0 E0            [24]14616 	push	acc
      005B28 A8 00            [24]14617 	mov	r0,_bp
      005B2A 08               [12]14618 	inc	r0
      005B2B 86 82            [24]14619 	mov	dpl,@r0
      005B2D 08               [12]14620 	inc	r0
      005B2E 86 83            [24]14621 	mov	dph,@r0
      005B30 08               [12]14622 	inc	r0
      005B31 86 F0            [24]14623 	mov	b,@r0
      005B33 78 95            [12]14624 	mov	r0,#_clmt_clust
      005B35 79 14            [12]14625 	mov	r1,#(_clmt_clust >> 8)
      005B37 7A 00            [12]14626 	mov	r2,#(_clmt_clust >> 16)
      005B39 12 00 00         [24]14627 	lcall	__sdcc_banked_call
      005B3C AE 82            [24]14628 	mov	r6,dpl
      005B3E AB 83            [24]14629 	mov	r3,dph
      005B40 AD F0            [24]14630 	mov	r5,b
      005B42 FF               [12]14631 	mov	r7,a
      005B43 E5 81            [12]14632 	mov	a,sp
      005B45 24 FC            [12]14633 	add	a,#0xfc
      005B47 F5 81            [12]14634 	mov	sp,a
      005B49 D0 04            [24]14635 	pop	ar4
      005B4B E5 00            [12]14636 	mov	a,_bp
      005B4D 24 29            [12]14637 	add	a,#0x29
      005B4F F8               [12]14638 	mov	r0,a
      005B50 A6 06            [24]14639 	mov	@r0,ar6
      005B52 08               [12]14640 	inc	r0
      005B53 A6 03            [24]14641 	mov	@r0,ar3
      005B55 08               [12]14642 	inc	r0
      005B56 A6 05            [24]14643 	mov	@r0,ar5
      005B58 08               [12]14644 	inc	r0
      005B59 A6 07            [24]14645 	mov	@r0,ar7
      005B5B 80 5F            [24]14646 	sjmp	00114$
      005B5D                      14647 00110$:
                                  14648 ;	FATFS\src\ff.c:2683: clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
      005B5D E5 00            [12]14649 	mov	a,_bp
      005B5F 24 18            [12]14650 	add	a,#0x18
      005B61 F8               [12]14651 	mov	r0,a
      005B62 86 82            [24]14652 	mov	dpl,@r0
      005B64 08               [12]14653 	inc	r0
      005B65 86 83            [24]14654 	mov	dph,@r0
      005B67 08               [12]14655 	inc	r0
      005B68 86 F0            [24]14656 	mov	b,@r0
      005B6A 12 00 00         [24]14657 	lcall	__gptrget
      005B6D FF               [12]14658 	mov	r7,a
      005B6E A3               [24]14659 	inc	dptr
      005B6F 12 00 00         [24]14660 	lcall	__gptrget
      005B72 FE               [12]14661 	mov	r6,a
      005B73 A3               [24]14662 	inc	dptr
      005B74 12 00 00         [24]14663 	lcall	__gptrget
      005B77 FD               [12]14664 	mov	r5,a
      005B78 A3               [24]14665 	inc	dptr
      005B79 12 00 00         [24]14666 	lcall	__gptrget
      005B7C FB               [12]14667 	mov	r3,a
      005B7D C0 04            [24]14668 	push	ar4
      005B7F C0 07            [24]14669 	push	ar7
      005B81 C0 06            [24]14670 	push	ar6
      005B83 C0 05            [24]14671 	push	ar5
      005B85 C0 03            [24]14672 	push	ar3
      005B87 E5 00            [12]14673 	mov	a,_bp
      005B89 24 1F            [12]14674 	add	a,#0x1f
      005B8B F8               [12]14675 	mov	r0,a
      005B8C 86 82            [24]14676 	mov	dpl,@r0
      005B8E 08               [12]14677 	inc	r0
      005B8F 86 83            [24]14678 	mov	dph,@r0
      005B91 08               [12]14679 	inc	r0
      005B92 86 F0            [24]14680 	mov	b,@r0
      005B94 78 8D            [12]14681 	mov	r0,#_get_fat
      005B96 79 0F            [12]14682 	mov	r1,#(_get_fat >> 8)
      005B98 7A 00            [12]14683 	mov	r2,#(_get_fat >> 16)
      005B9A 12 00 00         [24]14684 	lcall	__sdcc_banked_call
      005B9D AE 82            [24]14685 	mov	r6,dpl
      005B9F AB 83            [24]14686 	mov	r3,dph
      005BA1 AD F0            [24]14687 	mov	r5,b
      005BA3 FF               [12]14688 	mov	r7,a
      005BA4 E5 81            [12]14689 	mov	a,sp
      005BA6 24 FC            [12]14690 	add	a,#0xfc
      005BA8 F5 81            [12]14691 	mov	sp,a
      005BAA D0 04            [24]14692 	pop	ar4
      005BAC E5 00            [12]14693 	mov	a,_bp
      005BAE 24 29            [12]14694 	add	a,#0x29
      005BB0 F8               [12]14695 	mov	r0,a
      005BB1 A6 06            [24]14696 	mov	@r0,ar6
      005BB3 08               [12]14697 	inc	r0
      005BB4 A6 03            [24]14698 	mov	@r0,ar3
      005BB6 08               [12]14699 	inc	r0
      005BB7 A6 05            [24]14700 	mov	@r0,ar5
      005BB9 08               [12]14701 	inc	r0
      005BBA A6 07            [24]14702 	mov	@r0,ar7
      005BBC                      14703 00114$:
                                  14704 ;	FATFS\src\ff.c:2685: if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
      005BBC E5 00            [12]14705 	mov	a,_bp
      005BBE 24 29            [12]14706 	add	a,#0x29
      005BC0 F8               [12]14707 	mov	r0,a
      005BC1 C3               [12]14708 	clr	c
      005BC2 E6               [12]14709 	mov	a,@r0
      005BC3 94 02            [12]14710 	subb	a,#0x02
      005BC5 08               [12]14711 	inc	r0
      005BC6 E6               [12]14712 	mov	a,@r0
      005BC7 94 00            [12]14713 	subb	a,#0x00
      005BC9 08               [12]14714 	inc	r0
      005BCA E6               [12]14715 	mov	a,@r0
      005BCB 94 00            [12]14716 	subb	a,#0x00
      005BCD 08               [12]14717 	inc	r0
      005BCE E6               [12]14718 	mov	a,@r0
      005BCF 94 00            [12]14719 	subb	a,#0x00
      005BD1 50 1F            [24]14720 	jnc	00116$
      005BD3 A8 00            [24]14721 	mov	r0,_bp
      005BD5 08               [12]14722 	inc	r0
      005BD6 74 06            [12]14723 	mov	a,#0x06
      005BD8 26               [12]14724 	add	a,@r0
      005BD9 FF               [12]14725 	mov	r7,a
      005BDA E4               [12]14726 	clr	a
      005BDB 08               [12]14727 	inc	r0
      005BDC 36               [12]14728 	addc	a,@r0
      005BDD FE               [12]14729 	mov	r6,a
      005BDE 08               [12]14730 	inc	r0
      005BDF 86 05            [24]14731 	mov	ar5,@r0
      005BE1 8F 82            [24]14732 	mov	dpl,r7
      005BE3 8E 83            [24]14733 	mov	dph,r6
      005BE5 8D F0            [24]14734 	mov	b,r5
      005BE7 74 02            [12]14735 	mov	a,#0x02
      005BE9 12 00 00         [24]14736 	lcall	__gptrput
      005BEC 75 82 02         [24]14737 	mov	dpl,#0x02
      005BEF 02 60 D7         [24]14738 	ljmp	00139$
      005BF2                      14739 00116$:
                                  14740 ;	FATFS\src\ff.c:2686: if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      005BF2 E5 00            [12]14741 	mov	a,_bp
      005BF4 24 29            [12]14742 	add	a,#0x29
      005BF6 F8               [12]14743 	mov	r0,a
      005BF7 B6 FF 2B         [24]14744 	cjne	@r0,#0xff,00118$
      005BFA 08               [12]14745 	inc	r0
      005BFB B6 FF 27         [24]14746 	cjne	@r0,#0xff,00118$
      005BFE 08               [12]14747 	inc	r0
      005BFF B6 FF 23         [24]14748 	cjne	@r0,#0xff,00118$
      005C02 08               [12]14749 	inc	r0
      005C03 B6 FF 1F         [24]14750 	cjne	@r0,#0xff,00118$
      005C06 A8 00            [24]14751 	mov	r0,_bp
      005C08 08               [12]14752 	inc	r0
      005C09 74 06            [12]14753 	mov	a,#0x06
      005C0B 26               [12]14754 	add	a,@r0
      005C0C FF               [12]14755 	mov	r7,a
      005C0D E4               [12]14756 	clr	a
      005C0E 08               [12]14757 	inc	r0
      005C0F 36               [12]14758 	addc	a,@r0
      005C10 FE               [12]14759 	mov	r6,a
      005C11 08               [12]14760 	inc	r0
      005C12 86 05            [24]14761 	mov	ar5,@r0
      005C14 8F 82            [24]14762 	mov	dpl,r7
      005C16 8E 83            [24]14763 	mov	dph,r6
      005C18 8D F0            [24]14764 	mov	b,r5
      005C1A 74 01            [12]14765 	mov	a,#0x01
      005C1C 12 00 00         [24]14766 	lcall	__gptrput
      005C1F 75 82 01         [24]14767 	mov	dpl,#0x01
      005C22 02 60 D7         [24]14768 	ljmp	00139$
      005C25                      14769 00118$:
                                  14770 ;	FATFS\src\ff.c:2687: fp->clust = clst;				/* Update current cluster */
      005C25 A8 00            [24]14771 	mov	r0,_bp
      005C27 08               [12]14772 	inc	r0
      005C28 74 13            [12]14773 	mov	a,#0x13
      005C2A 26               [12]14774 	add	a,@r0
      005C2B FD               [12]14775 	mov	r5,a
      005C2C E4               [12]14776 	clr	a
      005C2D 08               [12]14777 	inc	r0
      005C2E 36               [12]14778 	addc	a,@r0
      005C2F FE               [12]14779 	mov	r6,a
      005C30 08               [12]14780 	inc	r0
      005C31 86 07            [24]14781 	mov	ar7,@r0
      005C33 8D 82            [24]14782 	mov	dpl,r5
      005C35 8E 83            [24]14783 	mov	dph,r6
      005C37 8F F0            [24]14784 	mov	b,r7
      005C39 E5 00            [12]14785 	mov	a,_bp
      005C3B 24 29            [12]14786 	add	a,#0x29
      005C3D F8               [12]14787 	mov	r0,a
      005C3E E6               [12]14788 	mov	a,@r0
      005C3F 12 00 00         [24]14789 	lcall	__gptrput
      005C42 A3               [24]14790 	inc	dptr
      005C43 08               [12]14791 	inc	r0
      005C44 E6               [12]14792 	mov	a,@r0
      005C45 12 00 00         [24]14793 	lcall	__gptrput
      005C48 A3               [24]14794 	inc	dptr
      005C49 08               [12]14795 	inc	r0
      005C4A E6               [12]14796 	mov	a,@r0
      005C4B 12 00 00         [24]14797 	lcall	__gptrput
      005C4E A3               [24]14798 	inc	dptr
      005C4F 08               [12]14799 	inc	r0
      005C50 E6               [12]14800 	mov	a,@r0
      005C51 12 00 00         [24]14801 	lcall	__gptrput
      005C54                      14802 00120$:
                                  14803 ;	FATFS\src\ff.c:2689: sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
      005C54 E5 00            [12]14804 	mov	a,_bp
      005C56 24 22            [12]14805 	add	a,#0x22
      005C58 F8               [12]14806 	mov	r0,a
      005C59 86 82            [24]14807 	mov	dpl,@r0
      005C5B 08               [12]14808 	inc	r0
      005C5C 86 83            [24]14809 	mov	dph,@r0
      005C5E 08               [12]14810 	inc	r0
      005C5F 86 F0            [24]14811 	mov	b,@r0
      005C61 E5 00            [12]14812 	mov	a,_bp
      005C63 24 07            [12]14813 	add	a,#0x07
      005C65 F9               [12]14814 	mov	r1,a
      005C66 12 00 00         [24]14815 	lcall	__gptrget
      005C69 F7               [12]14816 	mov	@r1,a
      005C6A A3               [24]14817 	inc	dptr
      005C6B 12 00 00         [24]14818 	lcall	__gptrget
      005C6E 09               [12]14819 	inc	r1
      005C6F F7               [12]14820 	mov	@r1,a
      005C70 A3               [24]14821 	inc	dptr
      005C71 12 00 00         [24]14822 	lcall	__gptrget
      005C74 09               [12]14823 	inc	r1
      005C75 F7               [12]14824 	mov	@r1,a
      005C76 A3               [24]14825 	inc	dptr
      005C77 12 00 00         [24]14826 	lcall	__gptrget
      005C7A 09               [12]14827 	inc	r1
      005C7B F7               [12]14828 	mov	@r1,a
      005C7C A8 00            [24]14829 	mov	r0,_bp
      005C7E 08               [12]14830 	inc	r0
      005C7F 86 82            [24]14831 	mov	dpl,@r0
      005C81 08               [12]14832 	inc	r0
      005C82 86 83            [24]14833 	mov	dph,@r0
      005C84 08               [12]14834 	inc	r0
      005C85 86 F0            [24]14835 	mov	b,@r0
      005C87 12 00 00         [24]14836 	lcall	__gptrget
      005C8A FA               [12]14837 	mov	r2,a
      005C8B A3               [24]14838 	inc	dptr
      005C8C 12 00 00         [24]14839 	lcall	__gptrget
      005C8F FB               [12]14840 	mov	r3,a
      005C90 A3               [24]14841 	inc	dptr
      005C91 12 00 00         [24]14842 	lcall	__gptrget
      005C94 FF               [12]14843 	mov	r7,a
      005C95 C0 04            [24]14844 	push	ar4
      005C97 E5 00            [12]14845 	mov	a,_bp
      005C99 24 07            [12]14846 	add	a,#0x07
      005C9B F8               [12]14847 	mov	r0,a
      005C9C E6               [12]14848 	mov	a,@r0
      005C9D C0 E0            [24]14849 	push	acc
      005C9F 08               [12]14850 	inc	r0
      005CA0 E6               [12]14851 	mov	a,@r0
      005CA1 C0 E0            [24]14852 	push	acc
      005CA3 08               [12]14853 	inc	r0
      005CA4 E6               [12]14854 	mov	a,@r0
      005CA5 C0 E0            [24]14855 	push	acc
      005CA7 08               [12]14856 	inc	r0
      005CA8 E6               [12]14857 	mov	a,@r0
      005CA9 C0 E0            [24]14858 	push	acc
      005CAB 8A 82            [24]14859 	mov	dpl,r2
      005CAD 8B 83            [24]14860 	mov	dph,r3
      005CAF 8F F0            [24]14861 	mov	b,r7
      005CB1 78 72            [12]14862 	mov	r0,#_clust2sect
      005CB3 79 0E            [12]14863 	mov	r1,#(_clust2sect >> 8)
      005CB5 7A 00            [12]14864 	mov	r2,#(_clust2sect >> 16)
      005CB7 12 00 00         [24]14865 	lcall	__sdcc_banked_call
      005CBA C8               [12]14866 	xch	a,r0
      005CBB E5 00            [12]14867 	mov	a,_bp
      005CBD 24 07            [12]14868 	add	a,#0x07
      005CBF C8               [12]14869 	xch	a,r0
      005CC0 A6 82            [24]14870 	mov	@r0,dpl
      005CC2 08               [12]14871 	inc	r0
      005CC3 A6 83            [24]14872 	mov	@r0,dph
      005CC5 08               [12]14873 	inc	r0
      005CC6 A6 F0            [24]14874 	mov	@r0,b
      005CC8 08               [12]14875 	inc	r0
      005CC9 F6               [12]14876 	mov	@r0,a
      005CCA E5 81            [12]14877 	mov	a,sp
      005CCC 24 FC            [12]14878 	add	a,#0xfc
      005CCE F5 81            [12]14879 	mov	sp,a
      005CD0 D0 04            [24]14880 	pop	ar4
                                  14881 ;	FATFS\src\ff.c:2690: if (!sect) ABORT(fp->fs, FR_INT_ERR);
      005CD2 E5 00            [12]14882 	mov	a,_bp
      005CD4 24 07            [12]14883 	add	a,#0x07
      005CD6 F8               [12]14884 	mov	r0,a
      005CD7 E6               [12]14885 	mov	a,@r0
      005CD8 08               [12]14886 	inc	r0
      005CD9 46               [12]14887 	orl	a,@r0
      005CDA 08               [12]14888 	inc	r0
      005CDB 46               [12]14889 	orl	a,@r0
      005CDC 08               [12]14890 	inc	r0
      005CDD 46               [12]14891 	orl	a,@r0
      005CDE 70 1F            [24]14892 	jnz	00122$
      005CE0 A8 00            [24]14893 	mov	r0,_bp
      005CE2 08               [12]14894 	inc	r0
      005CE3 74 06            [12]14895 	mov	a,#0x06
      005CE5 26               [12]14896 	add	a,@r0
      005CE6 FF               [12]14897 	mov	r7,a
      005CE7 E4               [12]14898 	clr	a
      005CE8 08               [12]14899 	inc	r0
      005CE9 36               [12]14900 	addc	a,@r0
      005CEA FE               [12]14901 	mov	r6,a
      005CEB 08               [12]14902 	inc	r0
      005CEC 86 05            [24]14903 	mov	ar5,@r0
      005CEE 8F 82            [24]14904 	mov	dpl,r7
      005CF0 8E 83            [24]14905 	mov	dph,r6
      005CF2 8D F0            [24]14906 	mov	b,r5
      005CF4 74 02            [12]14907 	mov	a,#0x02
      005CF6 12 00 00         [24]14908 	lcall	__gptrput
      005CF9 75 82 02         [24]14909 	mov	dpl,#0x02
      005CFC 02 60 D7         [24]14910 	ljmp	00139$
      005CFF                      14911 00122$:
                                  14912 ;	FATFS\src\ff.c:2691: sect += csect;
      005CFF 8C 02            [24]14913 	mov	ar2,r4
      005D01 E4               [12]14914 	clr	a
      005D02 FB               [12]14915 	mov	r3,a
      005D03 FE               [12]14916 	mov	r6,a
      005D04 FF               [12]14917 	mov	r7,a
      005D05 E5 00            [12]14918 	mov	a,_bp
      005D07 24 07            [12]14919 	add	a,#0x07
      005D09 F8               [12]14920 	mov	r0,a
      005D0A EA               [12]14921 	mov	a,r2
      005D0B 26               [12]14922 	add	a,@r0
      005D0C FA               [12]14923 	mov	r2,a
      005D0D EB               [12]14924 	mov	a,r3
      005D0E 08               [12]14925 	inc	r0
      005D0F 36               [12]14926 	addc	a,@r0
      005D10 FB               [12]14927 	mov	r3,a
      005D11 EE               [12]14928 	mov	a,r6
      005D12 08               [12]14929 	inc	r0
      005D13 36               [12]14930 	addc	a,@r0
      005D14 FE               [12]14931 	mov	r6,a
      005D15 EF               [12]14932 	mov	a,r7
      005D16 08               [12]14933 	inc	r0
      005D17 36               [12]14934 	addc	a,@r0
      005D18 FF               [12]14935 	mov	r7,a
      005D19 E5 00            [12]14936 	mov	a,_bp
      005D1B 24 25            [12]14937 	add	a,#0x25
      005D1D F8               [12]14938 	mov	r0,a
      005D1E A6 02            [24]14939 	mov	@r0,ar2
      005D20 08               [12]14940 	inc	r0
      005D21 A6 03            [24]14941 	mov	@r0,ar3
      005D23 08               [12]14942 	inc	r0
      005D24 A6 06            [24]14943 	mov	@r0,ar6
      005D26 08               [12]14944 	inc	r0
      005D27 A6 07            [24]14945 	mov	@r0,ar7
                                  14946 ;	FATFS\src\ff.c:2692: cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
      005D29 E5 00            [12]14947 	mov	a,_bp
      005D2B 24 F8            [12]14948 	add	a,#0xf8
      005D2D F8               [12]14949 	mov	r0,a
      005D2E 08               [12]14950 	inc	r0
      005D2F E6               [12]14951 	mov	a,@r0
      005D30 C3               [12]14952 	clr	c
      005D31 13               [12]14953 	rrc	a
                                  14954 ;	FATFS\src\ff.c:2693: if (cc) {							/* Read maximum contiguous sectors directly */
      005D32 FA               [12]14955 	mov	r2,a
      005D33 7B 00            [12]14956 	mov	r3,#0x00
      005D35 4B               [12]14957 	orl	a,r3
      005D36 70 03            [24]14958 	jnz	00245$
      005D38 02 5E 4C         [24]14959 	ljmp	00128$
      005D3B                      14960 00245$:
                                  14961 ;	FATFS\src\ff.c:2694: if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
      005D3B 8C 06            [24]14962 	mov	ar6,r4
      005D3D 7F 00            [12]14963 	mov	r7,#0x00
      005D3F 8E 04            [24]14964 	mov	ar4,r6
      005D41 8F 05            [24]14965 	mov	ar5,r7
      005D43 E5 00            [12]14966 	mov	a,_bp
      005D45 24 07            [12]14967 	add	a,#0x07
      005D47 F8               [12]14968 	mov	r0,a
      005D48 EA               [12]14969 	mov	a,r2
      005D49 2C               [12]14970 	add	a,r4
      005D4A F6               [12]14971 	mov	@r0,a
      005D4B EB               [12]14972 	mov	a,r3
      005D4C 3D               [12]14973 	addc	a,r5
      005D4D 08               [12]14974 	inc	r0
      005D4E F6               [12]14975 	mov	@r0,a
      005D4F C0 02            [24]14976 	push	ar2
      005D51 C0 03            [24]14977 	push	ar3
      005D53 A8 00            [24]14978 	mov	r0,_bp
      005D55 08               [12]14979 	inc	r0
      005D56 86 82            [24]14980 	mov	dpl,@r0
      005D58 08               [12]14981 	inc	r0
      005D59 86 83            [24]14982 	mov	dph,@r0
      005D5B 08               [12]14983 	inc	r0
      005D5C 86 F0            [24]14984 	mov	b,@r0
      005D5E 12 00 00         [24]14985 	lcall	__gptrget
      005D61 FA               [12]14986 	mov	r2,a
      005D62 A3               [24]14987 	inc	dptr
      005D63 12 00 00         [24]14988 	lcall	__gptrget
      005D66 FB               [12]14989 	mov	r3,a
      005D67 A3               [24]14990 	inc	dptr
      005D68 12 00 00         [24]14991 	lcall	__gptrget
      005D6B FD               [12]14992 	mov	r5,a
      005D6C 74 02            [12]14993 	mov	a,#0x02
      005D6E 2A               [12]14994 	add	a,r2
      005D6F FA               [12]14995 	mov	r2,a
      005D70 E4               [12]14996 	clr	a
      005D71 3B               [12]14997 	addc	a,r3
      005D72 FB               [12]14998 	mov	r3,a
      005D73 8A 82            [24]14999 	mov	dpl,r2
      005D75 8B 83            [24]15000 	mov	dph,r3
      005D77 8D F0            [24]15001 	mov	b,r5
      005D79 E5 00            [12]15002 	mov	a,_bp
      005D7B 24 1F            [12]15003 	add	a,#0x1f
      005D7D F8               [12]15004 	mov	r0,a
      005D7E 12 00 00         [24]15005 	lcall	__gptrget
      005D81 F6               [12]15006 	mov	@r0,a
      005D82 E5 00            [12]15007 	mov	a,_bp
      005D84 24 1F            [12]15008 	add	a,#0x1f
      005D86 F8               [12]15009 	mov	r0,a
      005D87 86 04            [24]15010 	mov	ar4,@r0
      005D89 7D 00            [12]15011 	mov	r5,#0x00
      005D8B E5 00            [12]15012 	mov	a,_bp
      005D8D 24 07            [12]15013 	add	a,#0x07
      005D8F F8               [12]15014 	mov	r0,a
      005D90 C3               [12]15015 	clr	c
      005D91 EC               [12]15016 	mov	a,r4
      005D92 96               [12]15017 	subb	a,@r0
      005D93 ED               [12]15018 	mov	a,r5
      005D94 08               [12]15019 	inc	r0
      005D95 96               [12]15020 	subb	a,@r0
      005D96 D0 03            [24]15021 	pop	ar3
      005D98 D0 02            [24]15022 	pop	ar2
      005D9A 50 14            [24]15023 	jnc	00124$
                                  15024 ;	FATFS\src\ff.c:2695: cc = fp->fs->csize - csect;
      005D9C E5 00            [12]15025 	mov	a,_bp
      005D9E 24 1F            [12]15026 	add	a,#0x1f
      005DA0 F8               [12]15027 	mov	r0,a
      005DA1 86 04            [24]15028 	mov	ar4,@r0
      005DA3 7D 00            [12]15029 	mov	r5,#0x00
      005DA5 EC               [12]15030 	mov	a,r4
      005DA6 C3               [12]15031 	clr	c
      005DA7 9E               [12]15032 	subb	a,r6
      005DA8 FE               [12]15033 	mov	r6,a
      005DA9 ED               [12]15034 	mov	a,r5
      005DAA 9F               [12]15035 	subb	a,r7
      005DAB FF               [12]15036 	mov	r7,a
      005DAC 8E 02            [24]15037 	mov	ar2,r6
      005DAE 8F 03            [24]15038 	mov	ar3,r7
      005DB0                      15039 00124$:
                                  15040 ;	FATFS\src\ff.c:2696: if (disk_read(fp->fs->drv, rbuff, sect, cc))
      005DB0 A8 00            [24]15041 	mov	r0,_bp
      005DB2 08               [12]15042 	inc	r0
      005DB3 86 82            [24]15043 	mov	dpl,@r0
      005DB5 08               [12]15044 	inc	r0
      005DB6 86 83            [24]15045 	mov	dph,@r0
      005DB8 08               [12]15046 	inc	r0
      005DB9 86 F0            [24]15047 	mov	b,@r0
      005DBB 12 00 00         [24]15048 	lcall	__gptrget
      005DBE FD               [12]15049 	mov	r5,a
      005DBF A3               [24]15050 	inc	dptr
      005DC0 12 00 00         [24]15051 	lcall	__gptrget
      005DC3 FE               [12]15052 	mov	r6,a
      005DC4 A3               [24]15053 	inc	dptr
      005DC5 12 00 00         [24]15054 	lcall	__gptrget
      005DC8 FF               [12]15055 	mov	r7,a
      005DC9 0D               [12]15056 	inc	r5
      005DCA BD 00 01         [24]15057 	cjne	r5,#0x00,00247$
      005DCD 0E               [12]15058 	inc	r6
      005DCE                      15059 00247$:
      005DCE 8D 82            [24]15060 	mov	dpl,r5
      005DD0 8E 83            [24]15061 	mov	dph,r6
      005DD2 8F F0            [24]15062 	mov	b,r7
      005DD4 12 00 00         [24]15063 	lcall	__gptrget
      005DD7 FD               [12]15064 	mov	r5,a
      005DD8 C0 03            [24]15065 	push	ar3
      005DDA C0 02            [24]15066 	push	ar2
      005DDC C0 02            [24]15067 	push	ar2
      005DDE C0 03            [24]15068 	push	ar3
      005DE0 E5 00            [12]15069 	mov	a,_bp
      005DE2 24 25            [12]15070 	add	a,#0x25
      005DE4 F8               [12]15071 	mov	r0,a
      005DE5 E6               [12]15072 	mov	a,@r0
      005DE6 C0 E0            [24]15073 	push	acc
      005DE8 08               [12]15074 	inc	r0
      005DE9 E6               [12]15075 	mov	a,@r0
      005DEA C0 E0            [24]15076 	push	acc
      005DEC 08               [12]15077 	inc	r0
      005DED E6               [12]15078 	mov	a,@r0
      005DEE C0 E0            [24]15079 	push	acc
      005DF0 08               [12]15080 	inc	r0
      005DF1 E6               [12]15081 	mov	a,@r0
      005DF2 C0 E0            [24]15082 	push	acc
      005DF4 E5 00            [12]15083 	mov	a,_bp
      005DF6 24 31            [12]15084 	add	a,#0x31
      005DF8 F8               [12]15085 	mov	r0,a
      005DF9 E6               [12]15086 	mov	a,@r0
      005DFA C0 E0            [24]15087 	push	acc
      005DFC 08               [12]15088 	inc	r0
      005DFD E6               [12]15089 	mov	a,@r0
      005DFE C0 E0            [24]15090 	push	acc
      005E00 08               [12]15091 	inc	r0
      005E01 E6               [12]15092 	mov	a,@r0
      005E02 C0 E0            [24]15093 	push	acc
      005E04 8D 82            [24]15094 	mov	dpl,r5
      005E06 78 60            [12]15095 	mov	r0,#_disk_read
      005E08 79 07            [12]15096 	mov	r1,#(_disk_read >> 8)
      005E0A 7A 00            [12]15097 	mov	r2,#(_disk_read >> 16)
      005E0C 12 00 00         [24]15098 	lcall	__sdcc_banked_call
      005E0F AF 82            [24]15099 	mov	r7,dpl
      005E11 E5 81            [12]15100 	mov	a,sp
      005E13 24 F7            [12]15101 	add	a,#0xf7
      005E15 F5 81            [12]15102 	mov	sp,a
      005E17 D0 02            [24]15103 	pop	ar2
      005E19 D0 03            [24]15104 	pop	ar3
      005E1B EF               [12]15105 	mov	a,r7
      005E1C 60 1F            [24]15106 	jz	00126$
                                  15107 ;	FATFS\src\ff.c:2697: ABORT(fp->fs, FR_DISK_ERR);
      005E1E A8 00            [24]15108 	mov	r0,_bp
      005E20 08               [12]15109 	inc	r0
      005E21 74 06            [12]15110 	mov	a,#0x06
      005E23 26               [12]15111 	add	a,@r0
      005E24 FD               [12]15112 	mov	r5,a
      005E25 E4               [12]15113 	clr	a
      005E26 08               [12]15114 	inc	r0
      005E27 36               [12]15115 	addc	a,@r0
      005E28 FE               [12]15116 	mov	r6,a
      005E29 08               [12]15117 	inc	r0
      005E2A 86 07            [24]15118 	mov	ar7,@r0
      005E2C 8D 82            [24]15119 	mov	dpl,r5
      005E2E 8E 83            [24]15120 	mov	dph,r6
      005E30 8F F0            [24]15121 	mov	b,r7
      005E32 74 01            [12]15122 	mov	a,#0x01
      005E34 12 00 00         [24]15123 	lcall	__gptrput
      005E37 75 82 01         [24]15124 	mov	dpl,#0x01
      005E3A 02 60 D7         [24]15125 	ljmp	00139$
      005E3D                      15126 00126$:
                                  15127 ;	FATFS\src\ff.c:2707: rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
      005E3D E5 00            [12]15128 	mov	a,_bp
      005E3F 24 34            [12]15129 	add	a,#0x34
      005E41 F8               [12]15130 	mov	r0,a
      005E42 EA               [12]15131 	mov	a,r2
      005E43 2A               [12]15132 	add	a,r2
      005E44 08               [12]15133 	inc	r0
      005E45 F6               [12]15134 	mov	@r0,a
      005E46 18               [12]15135 	dec	r0
      005E47 76 00            [12]15136 	mov	@r0,#0x00
                                  15137 ;	FATFS\src\ff.c:2708: continue;
      005E49 02 5F F6         [24]15138 	ljmp	00135$
      005E4C                      15139 00128$:
                                  15140 ;	FATFS\src\ff.c:2723: fp->dsect = sect;
      005E4C A8 00            [24]15141 	mov	r0,_bp
      005E4E 08               [12]15142 	inc	r0
      005E4F 74 17            [12]15143 	mov	a,#0x17
      005E51 26               [12]15144 	add	a,@r0
      005E52 FB               [12]15145 	mov	r3,a
      005E53 E4               [12]15146 	clr	a
      005E54 08               [12]15147 	inc	r0
      005E55 36               [12]15148 	addc	a,@r0
      005E56 FC               [12]15149 	mov	r4,a
      005E57 08               [12]15150 	inc	r0
      005E58 86 05            [24]15151 	mov	ar5,@r0
      005E5A 8B 82            [24]15152 	mov	dpl,r3
      005E5C 8C 83            [24]15153 	mov	dph,r4
      005E5E 8D F0            [24]15154 	mov	b,r5
      005E60 E5 00            [12]15155 	mov	a,_bp
      005E62 24 25            [12]15156 	add	a,#0x25
      005E64 F8               [12]15157 	mov	r0,a
      005E65 E6               [12]15158 	mov	a,@r0
      005E66 12 00 00         [24]15159 	lcall	__gptrput
      005E69 A3               [24]15160 	inc	dptr
      005E6A 08               [12]15161 	inc	r0
      005E6B E6               [12]15162 	mov	a,@r0
      005E6C 12 00 00         [24]15163 	lcall	__gptrput
      005E6F A3               [24]15164 	inc	dptr
      005E70 08               [12]15165 	inc	r0
      005E71 E6               [12]15166 	mov	a,@r0
      005E72 12 00 00         [24]15167 	lcall	__gptrput
      005E75 A3               [24]15168 	inc	dptr
      005E76 08               [12]15169 	inc	r0
      005E77 E6               [12]15170 	mov	a,@r0
      005E78 12 00 00         [24]15171 	lcall	__gptrput
      005E7B                      15172 00130$:
                                  15173 ;	FATFS\src\ff.c:2725: rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
      005E7B A8 00            [24]15174 	mov	r0,_bp
      005E7D 08               [12]15175 	inc	r0
      005E7E E5 00            [12]15176 	mov	a,_bp
      005E80 24 07            [12]15177 	add	a,#0x07
      005E82 F9               [12]15178 	mov	r1,a
      005E83 74 07            [12]15179 	mov	a,#0x07
      005E85 26               [12]15180 	add	a,@r0
      005E86 F7               [12]15181 	mov	@r1,a
      005E87 E4               [12]15182 	clr	a
      005E88 08               [12]15183 	inc	r0
      005E89 36               [12]15184 	addc	a,@r0
      005E8A 09               [12]15185 	inc	r1
      005E8B F7               [12]15186 	mov	@r1,a
      005E8C 08               [12]15187 	inc	r0
      005E8D 09               [12]15188 	inc	r1
      005E8E E6               [12]15189 	mov	a,@r0
      005E8F F7               [12]15190 	mov	@r1,a
      005E90 E5 00            [12]15191 	mov	a,_bp
      005E92 24 07            [12]15192 	add	a,#0x07
      005E94 F8               [12]15193 	mov	r0,a
      005E95 86 82            [24]15194 	mov	dpl,@r0
      005E97 08               [12]15195 	inc	r0
      005E98 86 83            [24]15196 	mov	dph,@r0
      005E9A 08               [12]15197 	inc	r0
      005E9B 86 F0            [24]15198 	mov	b,@r0
      005E9D 12 00 00         [24]15199 	lcall	__gptrget
      005EA0 FA               [12]15200 	mov	r2,a
      005EA1 A3               [24]15201 	inc	dptr
      005EA2 12 00 00         [24]15202 	lcall	__gptrget
      005EA5 FD               [12]15203 	mov	r5,a
      005EA6 53 05 01         [24]15204 	anl	ar5,#0x01
      005EA9 E5 00            [12]15205 	mov	a,_bp
      005EAB 24 34            [12]15206 	add	a,#0x34
      005EAD F8               [12]15207 	mov	r0,a
      005EAE E4               [12]15208 	clr	a
      005EAF C3               [12]15209 	clr	c
      005EB0 9A               [12]15210 	subb	a,r2
      005EB1 F6               [12]15211 	mov	@r0,a
      005EB2 74 02            [12]15212 	mov	a,#0x02
      005EB4 9D               [12]15213 	subb	a,r5
      005EB5 08               [12]15214 	inc	r0
      005EB6 F6               [12]15215 	mov	@r0,a
                                  15216 ;	FATFS\src\ff.c:2726: if (rcnt > btr) rcnt = btr;
      005EB7 E5 00            [12]15217 	mov	a,_bp
      005EB9 24 34            [12]15218 	add	a,#0x34
      005EBB F8               [12]15219 	mov	r0,a
      005EBC E5 00            [12]15220 	mov	a,_bp
      005EBE 24 F8            [12]15221 	add	a,#0xf8
      005EC0 F9               [12]15222 	mov	r1,a
      005EC1 C3               [12]15223 	clr	c
      005EC2 E7               [12]15224 	mov	a,@r1
      005EC3 96               [12]15225 	subb	a,@r0
      005EC4 09               [12]15226 	inc	r1
      005EC5 E7               [12]15227 	mov	a,@r1
      005EC6 08               [12]15228 	inc	r0
      005EC7 96               [12]15229 	subb	a,@r0
      005EC8 50 10            [24]15230 	jnc	00132$
      005ECA E5 00            [12]15231 	mov	a,_bp
      005ECC 24 F8            [12]15232 	add	a,#0xf8
      005ECE F8               [12]15233 	mov	r0,a
      005ECF E5 00            [12]15234 	mov	a,_bp
      005ED1 24 34            [12]15235 	add	a,#0x34
      005ED3 F9               [12]15236 	mov	r1,a
      005ED4 E6               [12]15237 	mov	a,@r0
      005ED5 F7               [12]15238 	mov	@r1,a
      005ED6 08               [12]15239 	inc	r0
      005ED7 09               [12]15240 	inc	r1
      005ED8 E6               [12]15241 	mov	a,@r0
      005ED9 F7               [12]15242 	mov	@r1,a
      005EDA                      15243 00132$:
                                  15244 ;	FATFS\src\ff.c:2728: if (move_window(fp->fs, fp->dsect))		/* Move sector window */
      005EDA E5 00            [12]15245 	mov	a,_bp
      005EDC 24 12            [12]15246 	add	a,#0x12
      005EDE F8               [12]15247 	mov	r0,a
      005EDF 86 82            [24]15248 	mov	dpl,@r0
      005EE1 08               [12]15249 	inc	r0
      005EE2 86 83            [24]15250 	mov	dph,@r0
      005EE4 08               [12]15251 	inc	r0
      005EE5 86 F0            [24]15252 	mov	b,@r0
      005EE7 E5 00            [12]15253 	mov	a,_bp
      005EE9 24 0B            [12]15254 	add	a,#0x0b
      005EEB F9               [12]15255 	mov	r1,a
      005EEC 12 00 00         [24]15256 	lcall	__gptrget
      005EEF F7               [12]15257 	mov	@r1,a
      005EF0 A3               [24]15258 	inc	dptr
      005EF1 12 00 00         [24]15259 	lcall	__gptrget
      005EF4 09               [12]15260 	inc	r1
      005EF5 F7               [12]15261 	mov	@r1,a
      005EF6 A3               [24]15262 	inc	dptr
      005EF7 12 00 00         [24]15263 	lcall	__gptrget
      005EFA 09               [12]15264 	inc	r1
      005EFB F7               [12]15265 	mov	@r1,a
      005EFC A3               [24]15266 	inc	dptr
      005EFD 12 00 00         [24]15267 	lcall	__gptrget
      005F00 09               [12]15268 	inc	r1
      005F01 F7               [12]15269 	mov	@r1,a
      005F02 A8 00            [24]15270 	mov	r0,_bp
      005F04 08               [12]15271 	inc	r0
      005F05 86 82            [24]15272 	mov	dpl,@r0
      005F07 08               [12]15273 	inc	r0
      005F08 86 83            [24]15274 	mov	dph,@r0
      005F0A 08               [12]15275 	inc	r0
      005F0B 86 F0            [24]15276 	mov	b,@r0
      005F0D 12 00 00         [24]15277 	lcall	__gptrget
      005F10 FD               [12]15278 	mov	r5,a
      005F11 A3               [24]15279 	inc	dptr
      005F12 12 00 00         [24]15280 	lcall	__gptrget
      005F15 FE               [12]15281 	mov	r6,a
      005F16 A3               [24]15282 	inc	dptr
      005F17 12 00 00         [24]15283 	lcall	__gptrget
      005F1A FF               [12]15284 	mov	r7,a
      005F1B E5 00            [12]15285 	mov	a,_bp
      005F1D 24 0B            [12]15286 	add	a,#0x0b
      005F1F F8               [12]15287 	mov	r0,a
      005F20 E6               [12]15288 	mov	a,@r0
      005F21 C0 E0            [24]15289 	push	acc
      005F23 08               [12]15290 	inc	r0
      005F24 E6               [12]15291 	mov	a,@r0
      005F25 C0 E0            [24]15292 	push	acc
      005F27 08               [12]15293 	inc	r0
      005F28 E6               [12]15294 	mov	a,@r0
      005F29 C0 E0            [24]15295 	push	acc
      005F2B 08               [12]15296 	inc	r0
      005F2C E6               [12]15297 	mov	a,@r0
      005F2D C0 E0            [24]15298 	push	acc
      005F2F 8D 82            [24]15299 	mov	dpl,r5
      005F31 8E 83            [24]15300 	mov	dph,r6
      005F33 8F F0            [24]15301 	mov	b,r7
      005F35 78 7C            [12]15302 	mov	r0,#_move_window
      005F37 79 0D            [12]15303 	mov	r1,#(_move_window >> 8)
      005F39 7A 00            [12]15304 	mov	r2,#(_move_window >> 16)
      005F3B 12 00 00         [24]15305 	lcall	__sdcc_banked_call
      005F3E AF 82            [24]15306 	mov	r7,dpl
      005F40 E5 81            [12]15307 	mov	a,sp
      005F42 24 FC            [12]15308 	add	a,#0xfc
      005F44 F5 81            [12]15309 	mov	sp,a
      005F46 EF               [12]15310 	mov	a,r7
      005F47 60 1F            [24]15311 	jz	00134$
                                  15312 ;	FATFS\src\ff.c:2729: ABORT(fp->fs, FR_DISK_ERR);
      005F49 A8 00            [24]15313 	mov	r0,_bp
      005F4B 08               [12]15314 	inc	r0
      005F4C 74 06            [12]15315 	mov	a,#0x06
      005F4E 26               [12]15316 	add	a,@r0
      005F4F FB               [12]15317 	mov	r3,a
      005F50 E4               [12]15318 	clr	a
      005F51 08               [12]15319 	inc	r0
      005F52 36               [12]15320 	addc	a,@r0
      005F53 FC               [12]15321 	mov	r4,a
      005F54 08               [12]15322 	inc	r0
      005F55 86 05            [24]15323 	mov	ar5,@r0
      005F57 8B 82            [24]15324 	mov	dpl,r3
      005F59 8C 83            [24]15325 	mov	dph,r4
      005F5B 8D F0            [24]15326 	mov	b,r5
      005F5D 74 01            [12]15327 	mov	a,#0x01
      005F5F 12 00 00         [24]15328 	lcall	__gptrput
      005F62 75 82 01         [24]15329 	mov	dpl,#0x01
      005F65 02 60 D7         [24]15330 	ljmp	00139$
      005F68                      15331 00134$:
                                  15332 ;	FATFS\src\ff.c:2730: mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
      005F68 A8 00            [24]15333 	mov	r0,_bp
      005F6A 08               [12]15334 	inc	r0
      005F6B 86 82            [24]15335 	mov	dpl,@r0
      005F6D 08               [12]15336 	inc	r0
      005F6E 86 83            [24]15337 	mov	dph,@r0
      005F70 08               [12]15338 	inc	r0
      005F71 86 F0            [24]15339 	mov	b,@r0
      005F73 12 00 00         [24]15340 	lcall	__gptrget
      005F76 FB               [12]15341 	mov	r3,a
      005F77 A3               [24]15342 	inc	dptr
      005F78 12 00 00         [24]15343 	lcall	__gptrget
      005F7B FC               [12]15344 	mov	r4,a
      005F7C A3               [24]15345 	inc	dptr
      005F7D 12 00 00         [24]15346 	lcall	__gptrget
      005F80 FD               [12]15347 	mov	r5,a
      005F81 E5 00            [12]15348 	mov	a,_bp
      005F83 24 1F            [12]15349 	add	a,#0x1f
      005F85 F8               [12]15350 	mov	r0,a
      005F86 74 26            [12]15351 	mov	a,#0x26
      005F88 2B               [12]15352 	add	a,r3
      005F89 F6               [12]15353 	mov	@r0,a
      005F8A E4               [12]15354 	clr	a
      005F8B 3C               [12]15355 	addc	a,r4
      005F8C 08               [12]15356 	inc	r0
      005F8D F6               [12]15357 	mov	@r0,a
      005F8E 08               [12]15358 	inc	r0
      005F8F A6 05            [24]15359 	mov	@r0,ar5
      005F91 E5 00            [12]15360 	mov	a,_bp
      005F93 24 07            [12]15361 	add	a,#0x07
      005F95 F8               [12]15362 	mov	r0,a
      005F96 86 82            [24]15363 	mov	dpl,@r0
      005F98 08               [12]15364 	inc	r0
      005F99 86 83            [24]15365 	mov	dph,@r0
      005F9B 08               [12]15366 	inc	r0
      005F9C 86 F0            [24]15367 	mov	b,@r0
      005F9E 12 00 00         [24]15368 	lcall	__gptrget
      005FA1 FA               [12]15369 	mov	r2,a
      005FA2 A3               [24]15370 	inc	dptr
      005FA3 12 00 00         [24]15371 	lcall	__gptrget
      005FA6 FD               [12]15372 	mov	r5,a
      005FA7 A3               [24]15373 	inc	dptr
      005FA8 12 00 00         [24]15374 	lcall	__gptrget
      005FAB A3               [24]15375 	inc	dptr
      005FAC 12 00 00         [24]15376 	lcall	__gptrget
      005FAF 53 05 01         [24]15377 	anl	ar5,#0x01
      005FB2 E4               [12]15378 	clr	a
      005FB3 E5 00            [12]15379 	mov	a,_bp
      005FB5 24 1F            [12]15380 	add	a,#0x1f
      005FB7 F8               [12]15381 	mov	r0,a
      005FB8 EA               [12]15382 	mov	a,r2
      005FB9 26               [12]15383 	add	a,@r0
      005FBA FA               [12]15384 	mov	r2,a
      005FBB ED               [12]15385 	mov	a,r5
      005FBC 08               [12]15386 	inc	r0
      005FBD 36               [12]15387 	addc	a,@r0
      005FBE FD               [12]15388 	mov	r5,a
      005FBF 08               [12]15389 	inc	r0
      005FC0 86 06            [24]15390 	mov	ar6,@r0
      005FC2 E5 00            [12]15391 	mov	a,_bp
      005FC4 24 31            [12]15392 	add	a,#0x31
      005FC6 F8               [12]15393 	mov	r0,a
      005FC7 86 03            [24]15394 	mov	ar3,@r0
      005FC9 08               [12]15395 	inc	r0
      005FCA 86 04            [24]15396 	mov	ar4,@r0
      005FCC 08               [12]15397 	inc	r0
      005FCD 86 07            [24]15398 	mov	ar7,@r0
      005FCF E5 00            [12]15399 	mov	a,_bp
      005FD1 24 34            [12]15400 	add	a,#0x34
      005FD3 F8               [12]15401 	mov	r0,a
      005FD4 E6               [12]15402 	mov	a,@r0
      005FD5 C0 E0            [24]15403 	push	acc
      005FD7 08               [12]15404 	inc	r0
      005FD8 E6               [12]15405 	mov	a,@r0
      005FD9 C0 E0            [24]15406 	push	acc
      005FDB C0 02            [24]15407 	push	ar2
      005FDD C0 05            [24]15408 	push	ar5
      005FDF C0 06            [24]15409 	push	ar6
      005FE1 8B 82            [24]15410 	mov	dpl,r3
      005FE3 8C 83            [24]15411 	mov	dph,r4
      005FE5 8F F0            [24]15412 	mov	b,r7
      005FE7 78 B9            [12]15413 	mov	r0,#_mem_cpy
      005FE9 79 0B            [12]15414 	mov	r1,#(_mem_cpy >> 8)
      005FEB 7A 00            [12]15415 	mov	r2,#(_mem_cpy >> 16)
      005FED 12 00 00         [24]15416 	lcall	__sdcc_banked_call
      005FF0 E5 81            [12]15417 	mov	a,sp
      005FF2 24 FB            [12]15418 	add	a,#0xfb
      005FF4 F5 81            [12]15419 	mov	sp,a
      005FF6                      15420 00135$:
                                  15421 ;	FATFS\src\ff.c:2671: rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
      005FF6 E5 00            [12]15422 	mov	a,_bp
      005FF8 24 31            [12]15423 	add	a,#0x31
      005FFA F8               [12]15424 	mov	r0,a
      005FFB E5 00            [12]15425 	mov	a,_bp
      005FFD 24 34            [12]15426 	add	a,#0x34
      005FFF F9               [12]15427 	mov	r1,a
      006000 E7               [12]15428 	mov	a,@r1
      006001 26               [12]15429 	add	a,@r0
      006002 F6               [12]15430 	mov	@r0,a
      006003 09               [12]15431 	inc	r1
      006004 E7               [12]15432 	mov	a,@r1
      006005 08               [12]15433 	inc	r0
      006006 36               [12]15434 	addc	a,@r0
      006007 F6               [12]15435 	mov	@r0,a
      006008 A8 00            [24]15436 	mov	r0,_bp
      00600A 08               [12]15437 	inc	r0
      00600B E5 00            [12]15438 	mov	a,_bp
      00600D 24 07            [12]15439 	add	a,#0x07
      00600F F9               [12]15440 	mov	r1,a
      006010 74 07            [12]15441 	mov	a,#0x07
      006012 26               [12]15442 	add	a,@r0
      006013 F7               [12]15443 	mov	@r1,a
      006014 E4               [12]15444 	clr	a
      006015 08               [12]15445 	inc	r0
      006016 36               [12]15446 	addc	a,@r0
      006017 09               [12]15447 	inc	r1
      006018 F7               [12]15448 	mov	@r1,a
      006019 08               [12]15449 	inc	r0
      00601A 09               [12]15450 	inc	r1
      00601B E6               [12]15451 	mov	a,@r0
      00601C F7               [12]15452 	mov	@r1,a
      00601D E5 00            [12]15453 	mov	a,_bp
      00601F 24 07            [12]15454 	add	a,#0x07
      006021 F8               [12]15455 	mov	r0,a
      006022 86 82            [24]15456 	mov	dpl,@r0
      006024 08               [12]15457 	inc	r0
      006025 86 83            [24]15458 	mov	dph,@r0
      006027 08               [12]15459 	inc	r0
      006028 86 F0            [24]15460 	mov	b,@r0
      00602A E5 00            [12]15461 	mov	a,_bp
      00602C 24 0B            [12]15462 	add	a,#0x0b
      00602E F9               [12]15463 	mov	r1,a
      00602F 12 00 00         [24]15464 	lcall	__gptrget
      006032 F7               [12]15465 	mov	@r1,a
      006033 A3               [24]15466 	inc	dptr
      006034 12 00 00         [24]15467 	lcall	__gptrget
      006037 09               [12]15468 	inc	r1
      006038 F7               [12]15469 	mov	@r1,a
      006039 A3               [24]15470 	inc	dptr
      00603A 12 00 00         [24]15471 	lcall	__gptrget
      00603D 09               [12]15472 	inc	r1
      00603E F7               [12]15473 	mov	@r1,a
      00603F A3               [24]15474 	inc	dptr
      006040 12 00 00         [24]15475 	lcall	__gptrget
      006043 09               [12]15476 	inc	r1
      006044 F7               [12]15477 	mov	@r1,a
      006045 E5 00            [12]15478 	mov	a,_bp
      006047 24 34            [12]15479 	add	a,#0x34
      006049 F8               [12]15480 	mov	r0,a
      00604A 86 05            [24]15481 	mov	ar5,@r0
      00604C 08               [12]15482 	inc	r0
      00604D 86 06            [24]15483 	mov	ar6,@r0
      00604F E4               [12]15484 	clr	a
      006050 FC               [12]15485 	mov	r4,a
      006051 FF               [12]15486 	mov	r7,a
      006052 E5 00            [12]15487 	mov	a,_bp
      006054 24 0B            [12]15488 	add	a,#0x0b
      006056 F8               [12]15489 	mov	r0,a
      006057 ED               [12]15490 	mov	a,r5
      006058 26               [12]15491 	add	a,@r0
      006059 FD               [12]15492 	mov	r5,a
      00605A EE               [12]15493 	mov	a,r6
      00605B 08               [12]15494 	inc	r0
      00605C 36               [12]15495 	addc	a,@r0
      00605D FE               [12]15496 	mov	r6,a
      00605E EC               [12]15497 	mov	a,r4
      00605F 08               [12]15498 	inc	r0
      006060 36               [12]15499 	addc	a,@r0
      006061 FC               [12]15500 	mov	r4,a
      006062 EF               [12]15501 	mov	a,r7
      006063 08               [12]15502 	inc	r0
      006064 36               [12]15503 	addc	a,@r0
      006065 FF               [12]15504 	mov	r7,a
      006066 E5 00            [12]15505 	mov	a,_bp
      006068 24 07            [12]15506 	add	a,#0x07
      00606A F8               [12]15507 	mov	r0,a
      00606B 86 82            [24]15508 	mov	dpl,@r0
      00606D 08               [12]15509 	inc	r0
      00606E 86 83            [24]15510 	mov	dph,@r0
      006070 08               [12]15511 	inc	r0
      006071 86 F0            [24]15512 	mov	b,@r0
      006073 ED               [12]15513 	mov	a,r5
      006074 12 00 00         [24]15514 	lcall	__gptrput
      006077 A3               [24]15515 	inc	dptr
      006078 EE               [12]15516 	mov	a,r6
      006079 12 00 00         [24]15517 	lcall	__gptrput
      00607C A3               [24]15518 	inc	dptr
      00607D EC               [12]15519 	mov	a,r4
      00607E 12 00 00         [24]15520 	lcall	__gptrput
      006081 A3               [24]15521 	inc	dptr
      006082 EF               [12]15522 	mov	a,r7
      006083 12 00 00         [24]15523 	lcall	__gptrput
      006086 E5 00            [12]15524 	mov	a,_bp
      006088 24 1C            [12]15525 	add	a,#0x1c
      00608A F8               [12]15526 	mov	r0,a
      00608B 86 82            [24]15527 	mov	dpl,@r0
      00608D 08               [12]15528 	inc	r0
      00608E 86 83            [24]15529 	mov	dph,@r0
      006090 08               [12]15530 	inc	r0
      006091 86 F0            [24]15531 	mov	b,@r0
      006093 12 00 00         [24]15532 	lcall	__gptrget
      006096 FE               [12]15533 	mov	r6,a
      006097 A3               [24]15534 	inc	dptr
      006098 12 00 00         [24]15535 	lcall	__gptrget
      00609B FF               [12]15536 	mov	r7,a
      00609C E5 00            [12]15537 	mov	a,_bp
      00609E 24 34            [12]15538 	add	a,#0x34
      0060A0 F8               [12]15539 	mov	r0,a
      0060A1 E6               [12]15540 	mov	a,@r0
      0060A2 2E               [12]15541 	add	a,r6
      0060A3 FE               [12]15542 	mov	r6,a
      0060A4 08               [12]15543 	inc	r0
      0060A5 E6               [12]15544 	mov	a,@r0
      0060A6 3F               [12]15545 	addc	a,r7
      0060A7 FF               [12]15546 	mov	r7,a
      0060A8 E5 00            [12]15547 	mov	a,_bp
      0060AA 24 1C            [12]15548 	add	a,#0x1c
      0060AC F8               [12]15549 	mov	r0,a
      0060AD 86 82            [24]15550 	mov	dpl,@r0
      0060AF 08               [12]15551 	inc	r0
      0060B0 86 83            [24]15552 	mov	dph,@r0
      0060B2 08               [12]15553 	inc	r0
      0060B3 86 F0            [24]15554 	mov	b,@r0
      0060B5 EE               [12]15555 	mov	a,r6
      0060B6 12 00 00         [24]15556 	lcall	__gptrput
      0060B9 A3               [24]15557 	inc	dptr
      0060BA EF               [12]15558 	mov	a,r7
      0060BB 12 00 00         [24]15559 	lcall	__gptrput
      0060BE E5 00            [12]15560 	mov	a,_bp
      0060C0 24 F8            [12]15561 	add	a,#0xf8
      0060C2 F8               [12]15562 	mov	r0,a
      0060C3 E5 00            [12]15563 	mov	a,_bp
      0060C5 24 34            [12]15564 	add	a,#0x34
      0060C7 F9               [12]15565 	mov	r1,a
      0060C8 E6               [12]15566 	mov	a,@r0
      0060C9 C3               [12]15567 	clr	c
      0060CA 97               [12]15568 	subb	a,@r1
      0060CB F6               [12]15569 	mov	@r0,a
      0060CC 08               [12]15570 	inc	r0
      0060CD E6               [12]15571 	mov	a,@r0
      0060CE 09               [12]15572 	inc	r1
      0060CF 97               [12]15573 	subb	a,@r1
      0060D0 F6               [12]15574 	mov	@r0,a
      0060D1 02 5A 0A         [24]15575 	ljmp	00138$
      0060D4                      15576 00136$:
                                  15577 ;	FATFS\src\ff.c:2736: LEAVE_FF(fp->fs, FR_OK);
      0060D4 75 82 00         [24]15578 	mov	dpl,#0x00
      0060D7                      15579 00139$:
                                  15580 ;	FATFS\src\ff.c:2737: }
      0060D7 85 00 81         [24]15581 	mov	sp,_bp
      0060DA D0 00            [24]15582 	pop	_bp
      0060DC 02 00 00         [24]15583 	ljmp	__sdcc_banked_ret
                                  15584 ;------------------------------------------------------------
                                  15585 ;Allocation info for local variables in function 'f_close'
                                  15586 ;------------------------------------------------------------
                                  15587 ;fp                        Allocated to registers r5 r6 r7 
                                  15588 ;res                       Allocated to registers r3 
                                  15589 ;------------------------------------------------------------
                                  15590 ;	FATFS\src\ff.c:2917: FRESULT f_close (
                                  15591 ;	-----------------------------------------
                                  15592 ;	 function f_close
                                  15593 ;	-----------------------------------------
      0060DF                      15594 _f_close:
      0060DF AD 82            [24]15595 	mov	r5,dpl
      0060E1 AE 83            [24]15596 	mov	r6,dph
      0060E3 AF F0            [24]15597 	mov	r7,b
                                  15598 ;	FATFS\src\ff.c:2929: res = validate(fp);				/* Lock volume */
      0060E5 8D 02            [24]15599 	mov	ar2,r5
      0060E7 8E 03            [24]15600 	mov	ar3,r6
      0060E9 8F 04            [24]15601 	mov	ar4,r7
      0060EB 8A 82            [24]15602 	mov	dpl,r2
      0060ED 8B 83            [24]15603 	mov	dph,r3
      0060EF 8C F0            [24]15604 	mov	b,r4
      0060F1 C0 07            [24]15605 	push	ar7
      0060F3 C0 06            [24]15606 	push	ar6
      0060F5 C0 05            [24]15607 	push	ar5
      0060F7 78 04            [12]15608 	mov	r0,#_validate
      0060F9 79 52            [12]15609 	mov	r1,#(_validate >> 8)
      0060FB 7A 00            [12]15610 	mov	r2,#(_validate >> 16)
      0060FD 12 00 00         [24]15611 	lcall	__sdcc_banked_call
      006100 AC 82            [24]15612 	mov	r4,dpl
      006102 D0 05            [24]15613 	pop	ar5
      006104 D0 06            [24]15614 	pop	ar6
      006106 D0 07            [24]15615 	pop	ar7
                                  15616 ;	FATFS\src\ff.c:2930: if (res == FR_OK) {
      006108 EC               [12]15617 	mov	a,r4
      006109 FB               [12]15618 	mov	r3,a
      00610A 70 12            [24]15619 	jnz	00102$
                                  15620 ;	FATFS\src\ff.c:2938: fp->fs = 0;				/* Invalidate file object */
      00610C 8D 82            [24]15621 	mov	dpl,r5
      00610E 8E 83            [24]15622 	mov	dph,r6
      006110 8F F0            [24]15623 	mov	b,r7
      006112 E4               [12]15624 	clr	a
      006113 12 00 00         [24]15625 	lcall	__gptrput
      006116 A3               [24]15626 	inc	dptr
      006117 12 00 00         [24]15627 	lcall	__gptrput
      00611A A3               [24]15628 	inc	dptr
      00611B 12 00 00         [24]15629 	lcall	__gptrput
      00611E                      15630 00102$:
                                  15631 ;	FATFS\src\ff.c:2944: return res;
      00611E 8B 82            [24]15632 	mov	dpl,r3
                                  15633 ;	FATFS\src\ff.c:2945: }
      006120 02 00 00         [24]15634 	ljmp	__sdcc_banked_ret
                                  15635 ;------------------------------------------------------------
                                  15636 ;Allocation info for local variables in function 'f_lseek'
                                  15637 ;------------------------------------------------------------
                                  15638 ;ofs                       Allocated to stack - _bp -7
                                  15639 ;fp                        Allocated to stack - _bp +1
                                  15640 ;res                       Allocated to stack - _bp +29
                                  15641 ;cl                        Allocated to stack - _bp +49
                                  15642 ;pcl                       Allocated to stack - _bp +45
                                  15643 ;ncl                       Allocated to stack - _bp +41
                                  15644 ;tcl                       Allocated to stack - _bp +30
                                  15645 ;dsc                       Allocated to registers r7 r6 r5 r4 
                                  15646 ;tlen                      Allocated to stack - _bp +37
                                  15647 ;ulen                      Allocated to stack - _bp +4
                                  15648 ;tbl                       Allocated to stack - _bp +34
                                  15649 ;clst                      Allocated to registers r7 r6 r5 r4 
                                  15650 ;bcs                       Allocated to stack - _bp +30
                                  15651 ;nsect                     Allocated to registers r7 r6 r5 r4 
                                  15652 ;ifptr                     Allocated to registers r7 r6 r5 r4 
                                  15653 ;sloc0                     Allocated to stack - _bp +52
                                  15654 ;sloc1                     Allocated to stack - _bp +11
                                  15655 ;sloc2                     Allocated to stack - _bp +18
                                  15656 ;sloc3                     Allocated to stack - _bp +4
                                  15657 ;sloc4                     Allocated to stack - _bp +8
                                  15658 ;sloc5                     Allocated to stack - _bp +14
                                  15659 ;sloc6                     Allocated to stack - _bp +21
                                  15660 ;sloc7                     Allocated to stack - _bp +25
                                  15661 ;------------------------------------------------------------
                                  15662 ;	FATFS\src\ff.c:3089: FRESULT f_lseek (
                                  15663 ;	-----------------------------------------
                                  15664 ;	 function f_lseek
                                  15665 ;	-----------------------------------------
      006123                      15666 _f_lseek:
      006123 C0 00            [24]15667 	push	_bp
      006125 85 81 00         [24]15668 	mov	_bp,sp
      006128 C0 82            [24]15669 	push	dpl
      00612A C0 83            [24]15670 	push	dph
      00612C C0 F0            [24]15671 	push	b
      00612E E5 81            [12]15672 	mov	a,sp
      006130 24 31            [12]15673 	add	a,#0x31
      006132 F5 81            [12]15674 	mov	sp,a
                                  15675 ;	FATFS\src\ff.c:3097: res = validate(fp);					/* Check validity of the object */
      006134 A8 00            [24]15676 	mov	r0,_bp
      006136 08               [12]15677 	inc	r0
      006137 86 02            [24]15678 	mov	ar2,@r0
      006139 08               [12]15679 	inc	r0
      00613A 86 03            [24]15680 	mov	ar3,@r0
      00613C 08               [12]15681 	inc	r0
      00613D 86 04            [24]15682 	mov	ar4,@r0
      00613F 8A 82            [24]15683 	mov	dpl,r2
      006141 8B 83            [24]15684 	mov	dph,r3
      006143 8C F0            [24]15685 	mov	b,r4
      006145 78 04            [12]15686 	mov	r0,#_validate
      006147 79 52            [12]15687 	mov	r1,#(_validate >> 8)
      006149 7A 00            [12]15688 	mov	r2,#(_validate >> 16)
      00614B 12 00 00         [24]15689 	lcall	__sdcc_banked_call
      00614E AC 82            [24]15690 	mov	r4,dpl
      006150 E5 00            [12]15691 	mov	a,_bp
      006152 24 1D            [12]15692 	add	a,#0x1d
      006154 F8               [12]15693 	mov	r0,a
      006155 A6 04            [24]15694 	mov	@r0,ar4
                                  15695 ;	FATFS\src\ff.c:3098: if (res != FR_OK) LEAVE_FF(fp->fs, res);
      006157 E5 00            [12]15696 	mov	a,_bp
      006159 24 1D            [12]15697 	add	a,#0x1d
      00615B F8               [12]15698 	mov	r0,a
      00615C E6               [12]15699 	mov	a,@r0
      00615D 60 0A            [24]15700 	jz	00102$
      00615F E5 00            [12]15701 	mov	a,_bp
      006161 24 1D            [12]15702 	add	a,#0x1d
      006163 F8               [12]15703 	mov	r0,a
      006164 86 82            [24]15704 	mov	dpl,@r0
      006166 02 6F A4         [24]15705 	ljmp	00162$
      006169                      15706 00102$:
                                  15707 ;	FATFS\src\ff.c:3099: if (fp->err)						/* Check error */
      006169 A8 00            [24]15708 	mov	r0,_bp
      00616B 08               [12]15709 	inc	r0
      00616C E5 00            [12]15710 	mov	a,_bp
      00616E 24 08            [12]15711 	add	a,#0x08
      006170 F9               [12]15712 	mov	r1,a
      006171 74 06            [12]15713 	mov	a,#0x06
      006173 26               [12]15714 	add	a,@r0
      006174 F7               [12]15715 	mov	@r1,a
      006175 E4               [12]15716 	clr	a
      006176 08               [12]15717 	inc	r0
      006177 36               [12]15718 	addc	a,@r0
      006178 09               [12]15719 	inc	r1
      006179 F7               [12]15720 	mov	@r1,a
      00617A 08               [12]15721 	inc	r0
      00617B 09               [12]15722 	inc	r1
      00617C E6               [12]15723 	mov	a,@r0
      00617D F7               [12]15724 	mov	@r1,a
      00617E E5 00            [12]15725 	mov	a,_bp
      006180 24 08            [12]15726 	add	a,#0x08
      006182 F8               [12]15727 	mov	r0,a
      006183 86 82            [24]15728 	mov	dpl,@r0
      006185 08               [12]15729 	inc	r0
      006186 86 83            [24]15730 	mov	dph,@r0
      006188 08               [12]15731 	inc	r0
      006189 86 F0            [24]15732 	mov	b,@r0
      00618B 12 00 00         [24]15733 	lcall	__gptrget
      00618E FF               [12]15734 	mov	r7,a
      00618F 60 05            [24]15735 	jz	00104$
                                  15736 ;	FATFS\src\ff.c:3100: LEAVE_FF(fp->fs, (FRESULT)fp->err);
      006191 8F 82            [24]15737 	mov	dpl,r7
      006193 02 6F A4         [24]15738 	ljmp	00162$
      006196                      15739 00104$:
                                  15740 ;	FATFS\src\ff.c:3103: if (fp->cltbl) {	/* Fast seek */
      006196 A8 00            [24]15741 	mov	r0,_bp
      006198 08               [12]15742 	inc	r0
      006199 E5 00            [12]15743 	mov	a,_bp
      00619B 24 0B            [12]15744 	add	a,#0x0b
      00619D F9               [12]15745 	mov	r1,a
      00619E 74 1B            [12]15746 	mov	a,#0x1b
      0061A0 26               [12]15747 	add	a,@r0
      0061A1 F7               [12]15748 	mov	@r1,a
      0061A2 E4               [12]15749 	clr	a
      0061A3 08               [12]15750 	inc	r0
      0061A4 36               [12]15751 	addc	a,@r0
      0061A5 09               [12]15752 	inc	r1
      0061A6 F7               [12]15753 	mov	@r1,a
      0061A7 08               [12]15754 	inc	r0
      0061A8 09               [12]15755 	inc	r1
      0061A9 E6               [12]15756 	mov	a,@r0
      0061AA F7               [12]15757 	mov	@r1,a
      0061AB E5 00            [12]15758 	mov	a,_bp
      0061AD 24 0B            [12]15759 	add	a,#0x0b
      0061AF F8               [12]15760 	mov	r0,a
      0061B0 86 82            [24]15761 	mov	dpl,@r0
      0061B2 08               [12]15762 	inc	r0
      0061B3 86 83            [24]15763 	mov	dph,@r0
      0061B5 08               [12]15764 	inc	r0
      0061B6 86 F0            [24]15765 	mov	b,@r0
      0061B8 12 00 00         [24]15766 	lcall	__gptrget
      0061BB FF               [12]15767 	mov	r7,a
      0061BC A3               [24]15768 	inc	dptr
      0061BD 12 00 00         [24]15769 	lcall	__gptrget
      0061C0 FE               [12]15770 	mov	r6,a
      0061C1 A3               [24]15771 	inc	dptr
      0061C2 12 00 00         [24]15772 	lcall	__gptrget
      0061C5 FD               [12]15773 	mov	r5,a
      0061C6 EF               [12]15774 	mov	a,r7
      0061C7 4E               [12]15775 	orl	a,r6
      0061C8 70 03            [24]15776 	jnz	00310$
      0061CA 02 68 90         [24]15777 	ljmp	00160$
      0061CD                      15778 00310$:
                                  15779 ;	FATFS\src\ff.c:3106: if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
      0061CD E5 00            [12]15780 	mov	a,_bp
      0061CF 24 F9            [12]15781 	add	a,#0xf9
      0061D1 F8               [12]15782 	mov	r0,a
      0061D2 B6 FF 0E         [24]15783 	cjne	@r0,#0xff,00311$
      0061D5 08               [12]15784 	inc	r0
      0061D6 B6 FF 0A         [24]15785 	cjne	@r0,#0xff,00311$
      0061D9 08               [12]15786 	inc	r0
      0061DA B6 FF 06         [24]15787 	cjne	@r0,#0xff,00311$
      0061DD 08               [12]15788 	inc	r0
      0061DE B6 FF 02         [24]15789 	cjne	@r0,#0xff,00311$
      0061E1 80 03            [24]15790 	sjmp	00312$
      0061E3                      15791 00311$:
      0061E3 02 65 5F         [24]15792 	ljmp	00132$
      0061E6                      15793 00312$:
                                  15794 ;	FATFS\src\ff.c:3107: tbl = fp->cltbl;
      0061E6 8F 02            [24]15795 	mov	ar2,r7
      0061E8 8E 03            [24]15796 	mov	ar3,r6
      0061EA 8D 04            [24]15797 	mov	ar4,r5
                                  15798 ;	FATFS\src\ff.c:3108: tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
      0061EC 8A 82            [24]15799 	mov	dpl,r2
      0061EE 8B 83            [24]15800 	mov	dph,r3
      0061F0 8C F0            [24]15801 	mov	b,r4
      0061F2 E5 00            [12]15802 	mov	a,_bp
      0061F4 24 25            [12]15803 	add	a,#0x25
      0061F6 F8               [12]15804 	mov	r0,a
      0061F7 12 00 00         [24]15805 	lcall	__gptrget
      0061FA F6               [12]15806 	mov	@r0,a
      0061FB A3               [24]15807 	inc	dptr
      0061FC 12 00 00         [24]15808 	lcall	__gptrget
      0061FF 08               [12]15809 	inc	r0
      006200 F6               [12]15810 	mov	@r0,a
      006201 A3               [24]15811 	inc	dptr
      006202 12 00 00         [24]15812 	lcall	__gptrget
      006205 08               [12]15813 	inc	r0
      006206 F6               [12]15814 	mov	@r0,a
      006207 A3               [24]15815 	inc	dptr
      006208 12 00 00         [24]15816 	lcall	__gptrget
      00620B 08               [12]15817 	inc	r0
      00620C F6               [12]15818 	mov	@r0,a
      00620D E5 00            [12]15819 	mov	a,_bp
      00620F 24 12            [12]15820 	add	a,#0x12
      006211 F8               [12]15821 	mov	r0,a
      006212 74 04            [12]15822 	mov	a,#0x04
      006214 2A               [12]15823 	add	a,r2
      006215 F6               [12]15824 	mov	@r0,a
      006216 E4               [12]15825 	clr	a
      006217 3B               [12]15826 	addc	a,r3
      006218 08               [12]15827 	inc	r0
      006219 F6               [12]15828 	mov	@r0,a
      00621A 08               [12]15829 	inc	r0
      00621B A6 04            [24]15830 	mov	@r0,ar4
      00621D E5 00            [12]15831 	mov	a,_bp
      00621F 24 04            [12]15832 	add	a,#0x04
      006221 F8               [12]15833 	mov	r0,a
      006222 76 02            [12]15834 	mov	@r0,#0x02
      006224 E4               [12]15835 	clr	a
      006225 08               [12]15836 	inc	r0
      006226 F6               [12]15837 	mov	@r0,a
      006227 08               [12]15838 	inc	r0
      006228 F6               [12]15839 	mov	@r0,a
      006229 08               [12]15840 	inc	r0
      00622A F6               [12]15841 	mov	@r0,a
                                  15842 ;	FATFS\src\ff.c:3109: cl = fp->sclust;			/* Top of the chain */
      00622B A8 00            [24]15843 	mov	r0,_bp
      00622D 08               [12]15844 	inc	r0
      00622E 74 0F            [12]15845 	mov	a,#0x0f
      006230 26               [12]15846 	add	a,@r0
      006231 FA               [12]15847 	mov	r2,a
      006232 E4               [12]15848 	clr	a
      006233 08               [12]15849 	inc	r0
      006234 36               [12]15850 	addc	a,@r0
      006235 FB               [12]15851 	mov	r3,a
      006236 08               [12]15852 	inc	r0
      006237 86 04            [24]15853 	mov	ar4,@r0
      006239 8A 82            [24]15854 	mov	dpl,r2
      00623B 8B 83            [24]15855 	mov	dph,r3
      00623D 8C F0            [24]15856 	mov	b,r4
      00623F E5 00            [12]15857 	mov	a,_bp
      006241 24 31            [12]15858 	add	a,#0x31
      006243 F8               [12]15859 	mov	r0,a
      006244 12 00 00         [24]15860 	lcall	__gptrget
      006247 F6               [12]15861 	mov	@r0,a
      006248 A3               [24]15862 	inc	dptr
      006249 12 00 00         [24]15863 	lcall	__gptrget
      00624C 08               [12]15864 	inc	r0
      00624D F6               [12]15865 	mov	@r0,a
      00624E A3               [24]15866 	inc	dptr
      00624F 12 00 00         [24]15867 	lcall	__gptrget
      006252 08               [12]15868 	inc	r0
      006253 F6               [12]15869 	mov	@r0,a
      006254 A3               [24]15870 	inc	dptr
      006255 12 00 00         [24]15871 	lcall	__gptrget
      006258 08               [12]15872 	inc	r0
      006259 F6               [12]15873 	mov	@r0,a
                                  15874 ;	FATFS\src\ff.c:3110: if (cl) {
      00625A E5 00            [12]15875 	mov	a,_bp
      00625C 24 31            [12]15876 	add	a,#0x31
      00625E F8               [12]15877 	mov	r0,a
      00625F E6               [12]15878 	mov	a,@r0
      006260 08               [12]15879 	inc	r0
      006261 46               [12]15880 	orl	a,@r0
      006262 08               [12]15881 	inc	r0
      006263 46               [12]15882 	orl	a,@r0
      006264 08               [12]15883 	inc	r0
      006265 46               [12]15884 	orl	a,@r0
      006266 70 03            [24]15885 	jnz	00313$
      006268 02 64 DE         [24]15886 	ljmp	00118$
      00626B                      15887 00313$:
                                  15888 ;	FATFS\src\ff.c:3111: do {
      00626B 7C 02            [12]15889 	mov	r4,#0x02
      00626D 7D 00            [12]15890 	mov	r5,#0x00
      00626F 7E 00            [12]15891 	mov	r6,#0x00
      006271 7F 00            [12]15892 	mov	r7,#0x00
      006273                      15893 00114$:
                                  15894 ;	FATFS\src\ff.c:3113: tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
      006273 E5 00            [12]15895 	mov	a,_bp
      006275 24 31            [12]15896 	add	a,#0x31
      006277 F8               [12]15897 	mov	r0,a
      006278 E5 00            [12]15898 	mov	a,_bp
      00627A 24 1E            [12]15899 	add	a,#0x1e
      00627C F9               [12]15900 	mov	r1,a
      00627D E6               [12]15901 	mov	a,@r0
      00627E F7               [12]15902 	mov	@r1,a
      00627F 08               [12]15903 	inc	r0
      006280 09               [12]15904 	inc	r1
      006281 E6               [12]15905 	mov	a,@r0
      006282 F7               [12]15906 	mov	@r1,a
      006283 08               [12]15907 	inc	r0
      006284 09               [12]15908 	inc	r1
      006285 E6               [12]15909 	mov	a,@r0
      006286 F7               [12]15910 	mov	@r1,a
      006287 08               [12]15911 	inc	r0
      006288 09               [12]15912 	inc	r1
      006289 E6               [12]15913 	mov	a,@r0
      00628A F7               [12]15914 	mov	@r1,a
      00628B 74 02            [12]15915 	mov	a,#0x02
      00628D 2C               [12]15916 	add	a,r4
      00628E FC               [12]15917 	mov	r4,a
      00628F E4               [12]15918 	clr	a
      006290 3D               [12]15919 	addc	a,r5
      006291 FD               [12]15920 	mov	r5,a
      006292 E4               [12]15921 	clr	a
      006293 3E               [12]15922 	addc	a,r6
      006294 FE               [12]15923 	mov	r6,a
      006295 E4               [12]15924 	clr	a
      006296 3F               [12]15925 	addc	a,r7
      006297 FF               [12]15926 	mov	r7,a
      006298 E5 00            [12]15927 	mov	a,_bp
      00629A 24 04            [12]15928 	add	a,#0x04
      00629C F8               [12]15929 	mov	r0,a
      00629D A6 04            [24]15930 	mov	@r0,ar4
      00629F 08               [12]15931 	inc	r0
      0062A0 A6 05            [24]15932 	mov	@r0,ar5
      0062A2 08               [12]15933 	inc	r0
      0062A3 A6 06            [24]15934 	mov	@r0,ar6
      0062A5 08               [12]15935 	inc	r0
      0062A6 A6 07            [24]15936 	mov	@r0,ar7
                                  15937 ;	FATFS\src\ff.c:3114: do {
      0062A8 E5 00            [12]15938 	mov	a,_bp
      0062AA 24 29            [12]15939 	add	a,#0x29
      0062AC F8               [12]15940 	mov	r0,a
      0062AD E4               [12]15941 	clr	a
      0062AE F6               [12]15942 	mov	@r0,a
      0062AF 08               [12]15943 	inc	r0
      0062B0 F6               [12]15944 	mov	@r0,a
      0062B1 08               [12]15945 	inc	r0
      0062B2 F6               [12]15946 	mov	@r0,a
      0062B3 08               [12]15947 	inc	r0
      0062B4 F6               [12]15948 	mov	@r0,a
      0062B5                      15949 00109$:
                                  15950 ;	FATFS\src\ff.c:3115: pcl = cl; ncl++;
      0062B5 C0 04            [24]15951 	push	ar4
      0062B7 C0 05            [24]15952 	push	ar5
      0062B9 C0 06            [24]15953 	push	ar6
      0062BB C0 07            [24]15954 	push	ar7
      0062BD E5 00            [12]15955 	mov	a,_bp
      0062BF 24 31            [12]15956 	add	a,#0x31
      0062C1 F8               [12]15957 	mov	r0,a
      0062C2 E5 00            [12]15958 	mov	a,_bp
      0062C4 24 2D            [12]15959 	add	a,#0x2d
      0062C6 F9               [12]15960 	mov	r1,a
      0062C7 E6               [12]15961 	mov	a,@r0
      0062C8 F7               [12]15962 	mov	@r1,a
      0062C9 08               [12]15963 	inc	r0
      0062CA 09               [12]15964 	inc	r1
      0062CB E6               [12]15965 	mov	a,@r0
      0062CC F7               [12]15966 	mov	@r1,a
      0062CD 08               [12]15967 	inc	r0
      0062CE 09               [12]15968 	inc	r1
      0062CF E6               [12]15969 	mov	a,@r0
      0062D0 F7               [12]15970 	mov	@r1,a
      0062D1 08               [12]15971 	inc	r0
      0062D2 09               [12]15972 	inc	r1
      0062D3 E6               [12]15973 	mov	a,@r0
      0062D4 F7               [12]15974 	mov	@r1,a
      0062D5 E5 00            [12]15975 	mov	a,_bp
      0062D7 24 29            [12]15976 	add	a,#0x29
      0062D9 F8               [12]15977 	mov	r0,a
      0062DA 06               [12]15978 	inc	@r0
      0062DB B6 00 0C         [24]15979 	cjne	@r0,#0x00,00314$
      0062DE 08               [12]15980 	inc	r0
      0062DF 06               [12]15981 	inc	@r0
      0062E0 B6 00 07         [24]15982 	cjne	@r0,#0x00,00314$
      0062E3 08               [12]15983 	inc	r0
      0062E4 06               [12]15984 	inc	@r0
      0062E5 B6 00 02         [24]15985 	cjne	@r0,#0x00,00314$
      0062E8 08               [12]15986 	inc	r0
      0062E9 06               [12]15987 	inc	@r0
      0062EA                      15988 00314$:
                                  15989 ;	FATFS\src\ff.c:3116: cl = get_fat(fp->fs, cl);
      0062EA A8 00            [24]15990 	mov	r0,_bp
      0062EC 08               [12]15991 	inc	r0
      0062ED 86 82            [24]15992 	mov	dpl,@r0
      0062EF 08               [12]15993 	inc	r0
      0062F0 86 83            [24]15994 	mov	dph,@r0
      0062F2 08               [12]15995 	inc	r0
      0062F3 86 F0            [24]15996 	mov	b,@r0
      0062F5 12 00 00         [24]15997 	lcall	__gptrget
      0062F8 FA               [12]15998 	mov	r2,a
      0062F9 A3               [24]15999 	inc	dptr
      0062FA 12 00 00         [24]16000 	lcall	__gptrget
      0062FD FB               [12]16001 	mov	r3,a
      0062FE A3               [24]16002 	inc	dptr
      0062FF 12 00 00         [24]16003 	lcall	__gptrget
      006302 FF               [12]16004 	mov	r7,a
      006303 E5 00            [12]16005 	mov	a,_bp
      006305 24 31            [12]16006 	add	a,#0x31
      006307 F8               [12]16007 	mov	r0,a
      006308 E6               [12]16008 	mov	a,@r0
      006309 C0 E0            [24]16009 	push	acc
      00630B 08               [12]16010 	inc	r0
      00630C E6               [12]16011 	mov	a,@r0
      00630D C0 E0            [24]16012 	push	acc
      00630F 08               [12]16013 	inc	r0
      006310 E6               [12]16014 	mov	a,@r0
      006311 C0 E0            [24]16015 	push	acc
      006313 08               [12]16016 	inc	r0
      006314 E6               [12]16017 	mov	a,@r0
      006315 C0 E0            [24]16018 	push	acc
      006317 8A 82            [24]16019 	mov	dpl,r2
      006319 8B 83            [24]16020 	mov	dph,r3
      00631B 8F F0            [24]16021 	mov	b,r7
      00631D 78 8D            [12]16022 	mov	r0,#_get_fat
      00631F 79 0F            [12]16023 	mov	r1,#(_get_fat >> 8)
      006321 7A 00            [12]16024 	mov	r2,#(_get_fat >> 16)
      006323 12 00 00         [24]16025 	lcall	__sdcc_banked_call
      006326 AC 82            [24]16026 	mov	r4,dpl
      006328 AD 83            [24]16027 	mov	r5,dph
      00632A AE F0            [24]16028 	mov	r6,b
      00632C FF               [12]16029 	mov	r7,a
      00632D E5 81            [12]16030 	mov	a,sp
      00632F 24 FC            [12]16031 	add	a,#0xfc
      006331 F5 81            [12]16032 	mov	sp,a
      006333 E5 00            [12]16033 	mov	a,_bp
      006335 24 31            [12]16034 	add	a,#0x31
      006337 F8               [12]16035 	mov	r0,a
      006338 A6 04            [24]16036 	mov	@r0,ar4
      00633A 08               [12]16037 	inc	r0
      00633B A6 05            [24]16038 	mov	@r0,ar5
      00633D 08               [12]16039 	inc	r0
      00633E A6 06            [24]16040 	mov	@r0,ar6
      006340 08               [12]16041 	inc	r0
      006341 A6 07            [24]16042 	mov	@r0,ar7
                                  16043 ;	FATFS\src\ff.c:3117: if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
      006343 E5 00            [12]16044 	mov	a,_bp
      006345 24 31            [12]16045 	add	a,#0x31
      006347 F8               [12]16046 	mov	r0,a
      006348 C3               [12]16047 	clr	c
      006349 74 01            [12]16048 	mov	a,#0x01
      00634B 96               [12]16049 	subb	a,@r0
      00634C E4               [12]16050 	clr	a
      00634D 08               [12]16051 	inc	r0
      00634E 96               [12]16052 	subb	a,@r0
      00634F E4               [12]16053 	clr	a
      006350 08               [12]16054 	inc	r0
      006351 96               [12]16055 	subb	a,@r0
      006352 E4               [12]16056 	clr	a
      006353 08               [12]16057 	inc	r0
      006354 96               [12]16058 	subb	a,@r0
      006355 D0 07            [24]16059 	pop	ar7
      006357 D0 06            [24]16060 	pop	ar6
      006359 D0 05            [24]16061 	pop	ar5
      00635B D0 04            [24]16062 	pop	ar4
      00635D 40 18            [24]16063 	jc	00106$
      00635F E5 00            [12]16064 	mov	a,_bp
      006361 24 08            [12]16065 	add	a,#0x08
      006363 F8               [12]16066 	mov	r0,a
      006364 86 82            [24]16067 	mov	dpl,@r0
      006366 08               [12]16068 	inc	r0
      006367 86 83            [24]16069 	mov	dph,@r0
      006369 08               [12]16070 	inc	r0
      00636A 86 F0            [24]16071 	mov	b,@r0
      00636C 74 02            [12]16072 	mov	a,#0x02
      00636E 12 00 00         [24]16073 	lcall	__gptrput
      006371 75 82 02         [24]16074 	mov	dpl,#0x02
      006374 02 6F A4         [24]16075 	ljmp	00162$
      006377                      16076 00106$:
                                  16077 ;	FATFS\src\ff.c:3118: if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      006377 E5 00            [12]16078 	mov	a,_bp
      006379 24 31            [12]16079 	add	a,#0x31
      00637B F8               [12]16080 	mov	r0,a
      00637C B6 FF 24         [24]16081 	cjne	@r0,#0xff,00110$
      00637F 08               [12]16082 	inc	r0
      006380 B6 FF 20         [24]16083 	cjne	@r0,#0xff,00110$
      006383 08               [12]16084 	inc	r0
      006384 B6 FF 1C         [24]16085 	cjne	@r0,#0xff,00110$
      006387 08               [12]16086 	inc	r0
      006388 B6 FF 18         [24]16087 	cjne	@r0,#0xff,00110$
      00638B E5 00            [12]16088 	mov	a,_bp
      00638D 24 08            [12]16089 	add	a,#0x08
      00638F F8               [12]16090 	mov	r0,a
      006390 86 82            [24]16091 	mov	dpl,@r0
      006392 08               [12]16092 	inc	r0
      006393 86 83            [24]16093 	mov	dph,@r0
      006395 08               [12]16094 	inc	r0
      006396 86 F0            [24]16095 	mov	b,@r0
      006398 74 01            [12]16096 	mov	a,#0x01
      00639A 12 00 00         [24]16097 	lcall	__gptrput
      00639D 75 82 01         [24]16098 	mov	dpl,#0x01
      0063A0 02 6F A4         [24]16099 	ljmp	00162$
      0063A3                      16100 00110$:
                                  16101 ;	FATFS\src\ff.c:3119: } while (cl == pcl + 1);
      0063A3 C0 04            [24]16102 	push	ar4
      0063A5 C0 05            [24]16103 	push	ar5
      0063A7 C0 06            [24]16104 	push	ar6
      0063A9 C0 07            [24]16105 	push	ar7
      0063AB E5 00            [12]16106 	mov	a,_bp
      0063AD 24 2D            [12]16107 	add	a,#0x2d
      0063AF F8               [12]16108 	mov	r0,a
      0063B0 74 01            [12]16109 	mov	a,#0x01
      0063B2 26               [12]16110 	add	a,@r0
      0063B3 FA               [12]16111 	mov	r2,a
      0063B4 E4               [12]16112 	clr	a
      0063B5 08               [12]16113 	inc	r0
      0063B6 36               [12]16114 	addc	a,@r0
      0063B7 FB               [12]16115 	mov	r3,a
      0063B8 E4               [12]16116 	clr	a
      0063B9 08               [12]16117 	inc	r0
      0063BA 36               [12]16118 	addc	a,@r0
      0063BB FE               [12]16119 	mov	r6,a
      0063BC E4               [12]16120 	clr	a
      0063BD 08               [12]16121 	inc	r0
      0063BE 36               [12]16122 	addc	a,@r0
      0063BF FF               [12]16123 	mov	r7,a
      0063C0 E5 00            [12]16124 	mov	a,_bp
      0063C2 24 31            [12]16125 	add	a,#0x31
      0063C4 F8               [12]16126 	mov	r0,a
      0063C5 E6               [12]16127 	mov	a,@r0
      0063C6 B5 02 1A         [24]16128 	cjne	a,ar2,00318$
      0063C9 08               [12]16129 	inc	r0
      0063CA E6               [12]16130 	mov	a,@r0
      0063CB B5 03 15         [24]16131 	cjne	a,ar3,00318$
      0063CE 08               [12]16132 	inc	r0
      0063CF E6               [12]16133 	mov	a,@r0
      0063D0 B5 06 10         [24]16134 	cjne	a,ar6,00318$
      0063D3 08               [12]16135 	inc	r0
      0063D4 E6               [12]16136 	mov	a,@r0
      0063D5 B5 07 0B         [24]16137 	cjne	a,ar7,00318$
      0063D8 D0 07            [24]16138 	pop	ar7
      0063DA D0 06            [24]16139 	pop	ar6
      0063DC D0 05            [24]16140 	pop	ar5
      0063DE D0 04            [24]16141 	pop	ar4
      0063E0 02 62 B5         [24]16142 	ljmp	00109$
      0063E3                      16143 00318$:
      0063E3 D0 07            [24]16144 	pop	ar7
      0063E5 D0 06            [24]16145 	pop	ar6
      0063E7 D0 05            [24]16146 	pop	ar5
      0063E9 D0 04            [24]16147 	pop	ar4
                                  16148 ;	FATFS\src\ff.c:3120: if (ulen <= tlen) {		/* Store the length and top of the fragment */
      0063EB E5 00            [12]16149 	mov	a,_bp
      0063ED 24 25            [12]16150 	add	a,#0x25
      0063EF F8               [12]16151 	mov	r0,a
      0063F0 C3               [12]16152 	clr	c
      0063F1 E6               [12]16153 	mov	a,@r0
      0063F2 9C               [12]16154 	subb	a,r4
      0063F3 08               [12]16155 	inc	r0
      0063F4 E6               [12]16156 	mov	a,@r0
      0063F5 9D               [12]16157 	subb	a,r5
      0063F6 08               [12]16158 	inc	r0
      0063F7 E6               [12]16159 	mov	a,@r0
      0063F8 9E               [12]16160 	subb	a,r6
      0063F9 08               [12]16161 	inc	r0
      0063FA E6               [12]16162 	mov	a,@r0
      0063FB 9F               [12]16163 	subb	a,r7
      0063FC 50 03            [24]16164 	jnc	00319$
      0063FE 02 64 7F         [24]16165 	ljmp	00115$
      006401                      16166 00319$:
                                  16167 ;	FATFS\src\ff.c:3121: *tbl++ = ncl; *tbl++ = tcl;
      006401 E5 00            [12]16168 	mov	a,_bp
      006403 24 12            [12]16169 	add	a,#0x12
      006405 F8               [12]16170 	mov	r0,a
      006406 86 82            [24]16171 	mov	dpl,@r0
      006408 08               [12]16172 	inc	r0
      006409 86 83            [24]16173 	mov	dph,@r0
      00640B 08               [12]16174 	inc	r0
      00640C 86 F0            [24]16175 	mov	b,@r0
      00640E E5 00            [12]16176 	mov	a,_bp
      006410 24 29            [12]16177 	add	a,#0x29
      006412 F9               [12]16178 	mov	r1,a
      006413 E7               [12]16179 	mov	a,@r1
      006414 12 00 00         [24]16180 	lcall	__gptrput
      006417 A3               [24]16181 	inc	dptr
      006418 09               [12]16182 	inc	r1
      006419 E7               [12]16183 	mov	a,@r1
      00641A 12 00 00         [24]16184 	lcall	__gptrput
      00641D A3               [24]16185 	inc	dptr
      00641E 09               [12]16186 	inc	r1
      00641F E7               [12]16187 	mov	a,@r1
      006420 12 00 00         [24]16188 	lcall	__gptrput
      006423 A3               [24]16189 	inc	dptr
      006424 09               [12]16190 	inc	r1
      006425 E7               [12]16191 	mov	a,@r1
      006426 12 00 00         [24]16192 	lcall	__gptrput
      006429 E5 00            [12]16193 	mov	a,_bp
      00642B 24 12            [12]16194 	add	a,#0x12
      00642D F8               [12]16195 	mov	r0,a
      00642E E5 00            [12]16196 	mov	a,_bp
      006430 24 22            [12]16197 	add	a,#0x22
      006432 F9               [12]16198 	mov	r1,a
      006433 74 04            [12]16199 	mov	a,#0x04
      006435 26               [12]16200 	add	a,@r0
      006436 F7               [12]16201 	mov	@r1,a
      006437 E4               [12]16202 	clr	a
      006438 08               [12]16203 	inc	r0
      006439 36               [12]16204 	addc	a,@r0
      00643A 09               [12]16205 	inc	r1
      00643B F7               [12]16206 	mov	@r1,a
      00643C 08               [12]16207 	inc	r0
      00643D 09               [12]16208 	inc	r1
      00643E E6               [12]16209 	mov	a,@r0
      00643F F7               [12]16210 	mov	@r1,a
      006440 E5 00            [12]16211 	mov	a,_bp
      006442 24 22            [12]16212 	add	a,#0x22
      006444 F8               [12]16213 	mov	r0,a
      006445 86 82            [24]16214 	mov	dpl,@r0
      006447 08               [12]16215 	inc	r0
      006448 86 83            [24]16216 	mov	dph,@r0
      00644A 08               [12]16217 	inc	r0
      00644B 86 F0            [24]16218 	mov	b,@r0
      00644D E5 00            [12]16219 	mov	a,_bp
      00644F 24 1E            [12]16220 	add	a,#0x1e
      006451 F9               [12]16221 	mov	r1,a
      006452 E7               [12]16222 	mov	a,@r1
      006453 12 00 00         [24]16223 	lcall	__gptrput
      006456 A3               [24]16224 	inc	dptr
      006457 09               [12]16225 	inc	r1
      006458 E7               [12]16226 	mov	a,@r1
      006459 12 00 00         [24]16227 	lcall	__gptrput
      00645C A3               [24]16228 	inc	dptr
      00645D 09               [12]16229 	inc	r1
      00645E E7               [12]16230 	mov	a,@r1
      00645F 12 00 00         [24]16231 	lcall	__gptrput
      006462 A3               [24]16232 	inc	dptr
      006463 09               [12]16233 	inc	r1
      006464 E7               [12]16234 	mov	a,@r1
      006465 12 00 00         [24]16235 	lcall	__gptrput
      006468 E5 00            [12]16236 	mov	a,_bp
      00646A 24 22            [12]16237 	add	a,#0x22
      00646C F8               [12]16238 	mov	r0,a
      00646D E5 00            [12]16239 	mov	a,_bp
      00646F 24 12            [12]16240 	add	a,#0x12
      006471 F9               [12]16241 	mov	r1,a
      006472 74 04            [12]16242 	mov	a,#0x04
      006474 26               [12]16243 	add	a,@r0
      006475 F7               [12]16244 	mov	@r1,a
      006476 E4               [12]16245 	clr	a
      006477 08               [12]16246 	inc	r0
      006478 36               [12]16247 	addc	a,@r0
      006479 09               [12]16248 	inc	r1
      00647A F7               [12]16249 	mov	@r1,a
      00647B 08               [12]16250 	inc	r0
      00647C 09               [12]16251 	inc	r1
      00647D E6               [12]16252 	mov	a,@r0
      00647E F7               [12]16253 	mov	@r1,a
      00647F                      16254 00115$:
                                  16255 ;	FATFS\src\ff.c:3123: } while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
      00647F C0 04            [24]16256 	push	ar4
      006481 C0 05            [24]16257 	push	ar5
      006483 C0 06            [24]16258 	push	ar6
      006485 C0 07            [24]16259 	push	ar7
      006487 A8 00            [24]16260 	mov	r0,_bp
      006489 08               [12]16261 	inc	r0
      00648A 86 82            [24]16262 	mov	dpl,@r0
      00648C 08               [12]16263 	inc	r0
      00648D 86 83            [24]16264 	mov	dph,@r0
      00648F 08               [12]16265 	inc	r0
      006490 86 F0            [24]16266 	mov	b,@r0
      006492 12 00 00         [24]16267 	lcall	__gptrget
      006495 FA               [12]16268 	mov	r2,a
      006496 A3               [24]16269 	inc	dptr
      006497 12 00 00         [24]16270 	lcall	__gptrget
      00649A FB               [12]16271 	mov	r3,a
      00649B A3               [24]16272 	inc	dptr
      00649C 12 00 00         [24]16273 	lcall	__gptrget
      00649F FF               [12]16274 	mov	r7,a
      0064A0 74 0A            [12]16275 	mov	a,#0x0a
      0064A2 2A               [12]16276 	add	a,r2
      0064A3 FA               [12]16277 	mov	r2,a
      0064A4 E4               [12]16278 	clr	a
      0064A5 3B               [12]16279 	addc	a,r3
      0064A6 FB               [12]16280 	mov	r3,a
      0064A7 8A 82            [24]16281 	mov	dpl,r2
      0064A9 8B 83            [24]16282 	mov	dph,r3
      0064AB 8F F0            [24]16283 	mov	b,r7
      0064AD 12 00 00         [24]16284 	lcall	__gptrget
      0064B0 FA               [12]16285 	mov	r2,a
      0064B1 A3               [24]16286 	inc	dptr
      0064B2 12 00 00         [24]16287 	lcall	__gptrget
      0064B5 FB               [12]16288 	mov	r3,a
      0064B6 A3               [24]16289 	inc	dptr
      0064B7 12 00 00         [24]16290 	lcall	__gptrget
      0064BA FF               [12]16291 	mov	r7,a
      0064BB A3               [24]16292 	inc	dptr
      0064BC 12 00 00         [24]16293 	lcall	__gptrget
      0064BF FE               [12]16294 	mov	r6,a
      0064C0 E5 00            [12]16295 	mov	a,_bp
      0064C2 24 31            [12]16296 	add	a,#0x31
      0064C4 F8               [12]16297 	mov	r0,a
      0064C5 C3               [12]16298 	clr	c
      0064C6 E6               [12]16299 	mov	a,@r0
      0064C7 9A               [12]16300 	subb	a,r2
      0064C8 08               [12]16301 	inc	r0
      0064C9 E6               [12]16302 	mov	a,@r0
      0064CA 9B               [12]16303 	subb	a,r3
      0064CB 08               [12]16304 	inc	r0
      0064CC E6               [12]16305 	mov	a,@r0
      0064CD 9F               [12]16306 	subb	a,r7
      0064CE 08               [12]16307 	inc	r0
      0064CF E6               [12]16308 	mov	a,@r0
      0064D0 9E               [12]16309 	subb	a,r6
      0064D1 D0 07            [24]16310 	pop	ar7
      0064D3 D0 06            [24]16311 	pop	ar6
      0064D5 D0 05            [24]16312 	pop	ar5
      0064D7 D0 04            [24]16313 	pop	ar4
      0064D9 50 03            [24]16314 	jnc	00320$
      0064DB 02 62 73         [24]16315 	ljmp	00114$
      0064DE                      16316 00320$:
      0064DE                      16317 00118$:
                                  16318 ;	FATFS\src\ff.c:3125: *fp->cltbl = ulen;	/* Number of items used */
      0064DE E5 00            [12]16319 	mov	a,_bp
      0064E0 24 0B            [12]16320 	add	a,#0x0b
      0064E2 F8               [12]16321 	mov	r0,a
      0064E3 86 82            [24]16322 	mov	dpl,@r0
      0064E5 08               [12]16323 	inc	r0
      0064E6 86 83            [24]16324 	mov	dph,@r0
      0064E8 08               [12]16325 	inc	r0
      0064E9 86 F0            [24]16326 	mov	b,@r0
      0064EB 12 00 00         [24]16327 	lcall	__gptrget
      0064EE FF               [12]16328 	mov	r7,a
      0064EF A3               [24]16329 	inc	dptr
      0064F0 12 00 00         [24]16330 	lcall	__gptrget
      0064F3 FE               [12]16331 	mov	r6,a
      0064F4 A3               [24]16332 	inc	dptr
      0064F5 12 00 00         [24]16333 	lcall	__gptrget
      0064F8 FD               [12]16334 	mov	r5,a
      0064F9 8F 82            [24]16335 	mov	dpl,r7
      0064FB 8E 83            [24]16336 	mov	dph,r6
      0064FD 8D F0            [24]16337 	mov	b,r5
      0064FF E5 00            [12]16338 	mov	a,_bp
      006501 24 04            [12]16339 	add	a,#0x04
      006503 F8               [12]16340 	mov	r0,a
      006504 E6               [12]16341 	mov	a,@r0
      006505 12 00 00         [24]16342 	lcall	__gptrput
      006508 A3               [24]16343 	inc	dptr
      006509 08               [12]16344 	inc	r0
      00650A E6               [12]16345 	mov	a,@r0
      00650B 12 00 00         [24]16346 	lcall	__gptrput
      00650E A3               [24]16347 	inc	dptr
      00650F 08               [12]16348 	inc	r0
      006510 E6               [12]16349 	mov	a,@r0
      006511 12 00 00         [24]16350 	lcall	__gptrput
      006514 A3               [24]16351 	inc	dptr
      006515 08               [12]16352 	inc	r0
      006516 E6               [12]16353 	mov	a,@r0
      006517 12 00 00         [24]16354 	lcall	__gptrput
                                  16355 ;	FATFS\src\ff.c:3126: if (ulen <= tlen)
      00651A E5 00            [12]16356 	mov	a,_bp
      00651C 24 04            [12]16357 	add	a,#0x04
      00651E F8               [12]16358 	mov	r0,a
      00651F E5 00            [12]16359 	mov	a,_bp
      006521 24 25            [12]16360 	add	a,#0x25
      006523 F9               [12]16361 	mov	r1,a
      006524 C3               [12]16362 	clr	c
      006525 E7               [12]16363 	mov	a,@r1
      006526 96               [12]16364 	subb	a,@r0
      006527 09               [12]16365 	inc	r1
      006528 E7               [12]16366 	mov	a,@r1
      006529 08               [12]16367 	inc	r0
      00652A 96               [12]16368 	subb	a,@r0
      00652B 09               [12]16369 	inc	r1
      00652C E7               [12]16370 	mov	a,@r1
      00652D 08               [12]16371 	inc	r0
      00652E 96               [12]16372 	subb	a,@r0
      00652F 09               [12]16373 	inc	r1
      006530 E7               [12]16374 	mov	a,@r1
      006531 08               [12]16375 	inc	r0
      006532 96               [12]16376 	subb	a,@r0
      006533 40 20            [24]16377 	jc	00120$
                                  16378 ;	FATFS\src\ff.c:3127: *tbl = 0;		/* Terminate table */
      006535 E5 00            [12]16379 	mov	a,_bp
      006537 24 12            [12]16380 	add	a,#0x12
      006539 F8               [12]16381 	mov	r0,a
      00653A 86 82            [24]16382 	mov	dpl,@r0
      00653C 08               [12]16383 	inc	r0
      00653D 86 83            [24]16384 	mov	dph,@r0
      00653F 08               [12]16385 	inc	r0
      006540 86 F0            [24]16386 	mov	b,@r0
      006542 E4               [12]16387 	clr	a
      006543 12 00 00         [24]16388 	lcall	__gptrput
      006546 A3               [24]16389 	inc	dptr
      006547 12 00 00         [24]16390 	lcall	__gptrput
      00654A A3               [24]16391 	inc	dptr
      00654B 12 00 00         [24]16392 	lcall	__gptrput
      00654E A3               [24]16393 	inc	dptr
      00654F 12 00 00         [24]16394 	lcall	__gptrput
      006552 02 6F 9D         [24]16395 	ljmp	00161$
      006555                      16396 00120$:
                                  16397 ;	FATFS\src\ff.c:3129: res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
      006555 E5 00            [12]16398 	mov	a,_bp
      006557 24 1D            [12]16399 	add	a,#0x1d
      006559 F8               [12]16400 	mov	r0,a
      00655A 76 11            [12]16401 	mov	@r0,#0x11
      00655C 02 6F 9D         [24]16402 	ljmp	00161$
      00655F                      16403 00132$:
                                  16404 ;	FATFS\src\ff.c:3132: if (ofs > fp->fsize)		/* Clip offset at the file size */
      00655F A8 00            [24]16405 	mov	r0,_bp
      006561 08               [12]16406 	inc	r0
      006562 74 0B            [12]16407 	mov	a,#0x0b
      006564 26               [12]16408 	add	a,@r0
      006565 FF               [12]16409 	mov	r7,a
      006566 E4               [12]16410 	clr	a
      006567 08               [12]16411 	inc	r0
      006568 36               [12]16412 	addc	a,@r0
      006569 FE               [12]16413 	mov	r6,a
      00656A 08               [12]16414 	inc	r0
      00656B 86 05            [24]16415 	mov	ar5,@r0
      00656D 8F 82            [24]16416 	mov	dpl,r7
      00656F 8E 83            [24]16417 	mov	dph,r6
      006571 8D F0            [24]16418 	mov	b,r5
      006573 12 00 00         [24]16419 	lcall	__gptrget
      006576 FF               [12]16420 	mov	r7,a
      006577 A3               [24]16421 	inc	dptr
      006578 12 00 00         [24]16422 	lcall	__gptrget
      00657B FE               [12]16423 	mov	r6,a
      00657C A3               [24]16424 	inc	dptr
      00657D 12 00 00         [24]16425 	lcall	__gptrget
      006580 FD               [12]16426 	mov	r5,a
      006581 A3               [24]16427 	inc	dptr
      006582 12 00 00         [24]16428 	lcall	__gptrget
      006585 FC               [12]16429 	mov	r4,a
      006586 E5 00            [12]16430 	mov	a,_bp
      006588 24 F9            [12]16431 	add	a,#0xf9
      00658A F8               [12]16432 	mov	r0,a
      00658B C3               [12]16433 	clr	c
      00658C EF               [12]16434 	mov	a,r7
      00658D 96               [12]16435 	subb	a,@r0
      00658E EE               [12]16436 	mov	a,r6
      00658F 08               [12]16437 	inc	r0
      006590 96               [12]16438 	subb	a,@r0
      006591 ED               [12]16439 	mov	a,r5
      006592 08               [12]16440 	inc	r0
      006593 96               [12]16441 	subb	a,@r0
      006594 EC               [12]16442 	mov	a,r4
      006595 08               [12]16443 	inc	r0
      006596 96               [12]16444 	subb	a,@r0
      006597 50 10            [24]16445 	jnc	00123$
                                  16446 ;	FATFS\src\ff.c:3133: ofs = fp->fsize;
      006599 E5 00            [12]16447 	mov	a,_bp
      00659B 24 F9            [12]16448 	add	a,#0xf9
      00659D F8               [12]16449 	mov	r0,a
      00659E A6 07            [24]16450 	mov	@r0,ar7
      0065A0 08               [12]16451 	inc	r0
      0065A1 A6 06            [24]16452 	mov	@r0,ar6
      0065A3 08               [12]16453 	inc	r0
      0065A4 A6 05            [24]16454 	mov	@r0,ar5
      0065A6 08               [12]16455 	inc	r0
      0065A7 A6 04            [24]16456 	mov	@r0,ar4
      0065A9                      16457 00123$:
                                  16458 ;	FATFS\src\ff.c:3134: fp->fptr = ofs;				/* Set file pointer */
      0065A9 A8 00            [24]16459 	mov	r0,_bp
      0065AB 08               [12]16460 	inc	r0
      0065AC 74 07            [12]16461 	mov	a,#0x07
      0065AE 26               [12]16462 	add	a,@r0
      0065AF FF               [12]16463 	mov	r7,a
      0065B0 E4               [12]16464 	clr	a
      0065B1 08               [12]16465 	inc	r0
      0065B2 36               [12]16466 	addc	a,@r0
      0065B3 FE               [12]16467 	mov	r6,a
      0065B4 08               [12]16468 	inc	r0
      0065B5 86 05            [24]16469 	mov	ar5,@r0
      0065B7 8F 82            [24]16470 	mov	dpl,r7
      0065B9 8E 83            [24]16471 	mov	dph,r6
      0065BB 8D F0            [24]16472 	mov	b,r5
      0065BD E5 00            [12]16473 	mov	a,_bp
      0065BF 24 F9            [12]16474 	add	a,#0xf9
      0065C1 F8               [12]16475 	mov	r0,a
      0065C2 E6               [12]16476 	mov	a,@r0
      0065C3 12 00 00         [24]16477 	lcall	__gptrput
      0065C6 A3               [24]16478 	inc	dptr
      0065C7 08               [12]16479 	inc	r0
      0065C8 E6               [12]16480 	mov	a,@r0
      0065C9 12 00 00         [24]16481 	lcall	__gptrput
      0065CC A3               [24]16482 	inc	dptr
      0065CD 08               [12]16483 	inc	r0
      0065CE E6               [12]16484 	mov	a,@r0
      0065CF 12 00 00         [24]16485 	lcall	__gptrput
      0065D2 A3               [24]16486 	inc	dptr
      0065D3 08               [12]16487 	inc	r0
      0065D4 E6               [12]16488 	mov	a,@r0
      0065D5 12 00 00         [24]16489 	lcall	__gptrput
                                  16490 ;	FATFS\src\ff.c:3135: if (ofs) {
      0065D8 E5 00            [12]16491 	mov	a,_bp
      0065DA 24 F9            [12]16492 	add	a,#0xf9
      0065DC F8               [12]16493 	mov	r0,a
      0065DD E6               [12]16494 	mov	a,@r0
      0065DE 08               [12]16495 	inc	r0
      0065DF 46               [12]16496 	orl	a,@r0
      0065E0 08               [12]16497 	inc	r0
      0065E1 46               [12]16498 	orl	a,@r0
      0065E2 08               [12]16499 	inc	r0
      0065E3 46               [12]16500 	orl	a,@r0
      0065E4 70 03            [24]16501 	jnz	00323$
      0065E6 02 6F 9D         [24]16502 	ljmp	00161$
      0065E9                      16503 00323$:
                                  16504 ;	FATFS\src\ff.c:3136: fp->clust = clmt_clust(fp, ofs - 1);
      0065E9 A8 00            [24]16505 	mov	r0,_bp
      0065EB 08               [12]16506 	inc	r0
      0065EC 74 13            [12]16507 	mov	a,#0x13
      0065EE 26               [12]16508 	add	a,@r0
      0065EF FF               [12]16509 	mov	r7,a
      0065F0 E4               [12]16510 	clr	a
      0065F1 08               [12]16511 	inc	r0
      0065F2 36               [12]16512 	addc	a,@r0
      0065F3 FE               [12]16513 	mov	r6,a
      0065F4 08               [12]16514 	inc	r0
      0065F5 86 05            [24]16515 	mov	ar5,@r0
      0065F7 E5 00            [12]16516 	mov	a,_bp
      0065F9 24 F9            [12]16517 	add	a,#0xf9
      0065FB F8               [12]16518 	mov	r0,a
      0065FC E5 00            [12]16519 	mov	a,_bp
      0065FE 24 0E            [12]16520 	add	a,#0x0e
      006600 F9               [12]16521 	mov	r1,a
      006601 E6               [12]16522 	mov	a,@r0
      006602 24 FF            [12]16523 	add	a,#0xff
      006604 F7               [12]16524 	mov	@r1,a
      006605 08               [12]16525 	inc	r0
      006606 E6               [12]16526 	mov	a,@r0
      006607 34 FF            [12]16527 	addc	a,#0xff
      006609 09               [12]16528 	inc	r1
      00660A F7               [12]16529 	mov	@r1,a
      00660B 08               [12]16530 	inc	r0
      00660C E6               [12]16531 	mov	a,@r0
      00660D 34 FF            [12]16532 	addc	a,#0xff
      00660F 09               [12]16533 	inc	r1
      006610 F7               [12]16534 	mov	@r1,a
      006611 08               [12]16535 	inc	r0
      006612 E6               [12]16536 	mov	a,@r0
      006613 34 FF            [12]16537 	addc	a,#0xff
      006615 09               [12]16538 	inc	r1
      006616 F7               [12]16539 	mov	@r1,a
      006617 C0 07            [24]16540 	push	ar7
      006619 C0 06            [24]16541 	push	ar6
      00661B C0 05            [24]16542 	push	ar5
      00661D E5 00            [12]16543 	mov	a,_bp
      00661F 24 0E            [12]16544 	add	a,#0x0e
      006621 F8               [12]16545 	mov	r0,a
      006622 E6               [12]16546 	mov	a,@r0
      006623 C0 E0            [24]16547 	push	acc
      006625 08               [12]16548 	inc	r0
      006626 E6               [12]16549 	mov	a,@r0
      006627 C0 E0            [24]16550 	push	acc
      006629 08               [12]16551 	inc	r0
      00662A E6               [12]16552 	mov	a,@r0
      00662B C0 E0            [24]16553 	push	acc
      00662D 08               [12]16554 	inc	r0
      00662E E6               [12]16555 	mov	a,@r0
      00662F C0 E0            [24]16556 	push	acc
      006631 A8 00            [24]16557 	mov	r0,_bp
      006633 08               [12]16558 	inc	r0
      006634 86 82            [24]16559 	mov	dpl,@r0
      006636 08               [12]16560 	inc	r0
      006637 86 83            [24]16561 	mov	dph,@r0
      006639 08               [12]16562 	inc	r0
      00663A 86 F0            [24]16563 	mov	b,@r0
      00663C 78 95            [12]16564 	mov	r0,#_clmt_clust
      00663E 79 14            [12]16565 	mov	r1,#(_clmt_clust >> 8)
      006640 7A 00            [12]16566 	mov	r2,#(_clmt_clust >> 16)
      006642 12 00 00         [24]16567 	lcall	__sdcc_banked_call
      006645 C8               [12]16568 	xch	a,r0
      006646 E5 00            [12]16569 	mov	a,_bp
      006648 24 0E            [12]16570 	add	a,#0x0e
      00664A C8               [12]16571 	xch	a,r0
      00664B A6 82            [24]16572 	mov	@r0,dpl
      00664D 08               [12]16573 	inc	r0
      00664E A6 83            [24]16574 	mov	@r0,dph
      006650 08               [12]16575 	inc	r0
      006651 A6 F0            [24]16576 	mov	@r0,b
      006653 08               [12]16577 	inc	r0
      006654 F6               [12]16578 	mov	@r0,a
      006655 E5 81            [12]16579 	mov	a,sp
      006657 24 FC            [12]16580 	add	a,#0xfc
      006659 F5 81            [12]16581 	mov	sp,a
      00665B D0 05            [24]16582 	pop	ar5
      00665D D0 06            [24]16583 	pop	ar6
      00665F D0 07            [24]16584 	pop	ar7
      006661 8F 82            [24]16585 	mov	dpl,r7
      006663 8E 83            [24]16586 	mov	dph,r6
      006665 8D F0            [24]16587 	mov	b,r5
      006667 E5 00            [12]16588 	mov	a,_bp
      006669 24 0E            [12]16589 	add	a,#0x0e
      00666B F8               [12]16590 	mov	r0,a
      00666C E6               [12]16591 	mov	a,@r0
      00666D 12 00 00         [24]16592 	lcall	__gptrput
      006670 A3               [24]16593 	inc	dptr
      006671 08               [12]16594 	inc	r0
      006672 E6               [12]16595 	mov	a,@r0
      006673 12 00 00         [24]16596 	lcall	__gptrput
      006676 A3               [24]16597 	inc	dptr
      006677 08               [12]16598 	inc	r0
      006678 E6               [12]16599 	mov	a,@r0
      006679 12 00 00         [24]16600 	lcall	__gptrput
      00667C A3               [24]16601 	inc	dptr
      00667D 08               [12]16602 	inc	r0
      00667E E6               [12]16603 	mov	a,@r0
      00667F 12 00 00         [24]16604 	lcall	__gptrput
                                  16605 ;	FATFS\src\ff.c:3137: dsc = clust2sect(fp->fs, fp->clust);
      006682 A8 00            [24]16606 	mov	r0,_bp
      006684 08               [12]16607 	inc	r0
      006685 74 13            [12]16608 	mov	a,#0x13
      006687 26               [12]16609 	add	a,@r0
      006688 FF               [12]16610 	mov	r7,a
      006689 E4               [12]16611 	clr	a
      00668A 08               [12]16612 	inc	r0
      00668B 36               [12]16613 	addc	a,@r0
      00668C FE               [12]16614 	mov	r6,a
      00668D 08               [12]16615 	inc	r0
      00668E 86 05            [24]16616 	mov	ar5,@r0
      006690 8F 82            [24]16617 	mov	dpl,r7
      006692 8E 83            [24]16618 	mov	dph,r6
      006694 8D F0            [24]16619 	mov	b,r5
      006696 12 00 00         [24]16620 	lcall	__gptrget
      006699 FF               [12]16621 	mov	r7,a
      00669A A3               [24]16622 	inc	dptr
      00669B 12 00 00         [24]16623 	lcall	__gptrget
      00669E FE               [12]16624 	mov	r6,a
      00669F A3               [24]16625 	inc	dptr
      0066A0 12 00 00         [24]16626 	lcall	__gptrget
      0066A3 FD               [12]16627 	mov	r5,a
      0066A4 A3               [24]16628 	inc	dptr
      0066A5 12 00 00         [24]16629 	lcall	__gptrget
      0066A8 FC               [12]16630 	mov	r4,a
      0066A9 A8 00            [24]16631 	mov	r0,_bp
      0066AB 08               [12]16632 	inc	r0
      0066AC 86 82            [24]16633 	mov	dpl,@r0
      0066AE 08               [12]16634 	inc	r0
      0066AF 86 83            [24]16635 	mov	dph,@r0
      0066B1 08               [12]16636 	inc	r0
      0066B2 86 F0            [24]16637 	mov	b,@r0
      0066B4 E5 00            [12]16638 	mov	a,_bp
      0066B6 24 04            [12]16639 	add	a,#0x04
      0066B8 F9               [12]16640 	mov	r1,a
      0066B9 12 00 00         [24]16641 	lcall	__gptrget
      0066BC F7               [12]16642 	mov	@r1,a
      0066BD A3               [24]16643 	inc	dptr
      0066BE 12 00 00         [24]16644 	lcall	__gptrget
      0066C1 09               [12]16645 	inc	r1
      0066C2 F7               [12]16646 	mov	@r1,a
      0066C3 A3               [24]16647 	inc	dptr
      0066C4 12 00 00         [24]16648 	lcall	__gptrget
      0066C7 09               [12]16649 	inc	r1
      0066C8 F7               [12]16650 	mov	@r1,a
      0066C9 C0 07            [24]16651 	push	ar7
      0066CB C0 06            [24]16652 	push	ar6
      0066CD C0 05            [24]16653 	push	ar5
      0066CF C0 04            [24]16654 	push	ar4
      0066D1 E5 00            [12]16655 	mov	a,_bp
      0066D3 24 04            [12]16656 	add	a,#0x04
      0066D5 F8               [12]16657 	mov	r0,a
      0066D6 86 82            [24]16658 	mov	dpl,@r0
      0066D8 08               [12]16659 	inc	r0
      0066D9 86 83            [24]16660 	mov	dph,@r0
      0066DB 08               [12]16661 	inc	r0
      0066DC 86 F0            [24]16662 	mov	b,@r0
      0066DE 78 72            [12]16663 	mov	r0,#_clust2sect
      0066E0 79 0E            [12]16664 	mov	r1,#(_clust2sect >> 8)
      0066E2 7A 00            [12]16665 	mov	r2,#(_clust2sect >> 16)
      0066E4 12 00 00         [24]16666 	lcall	__sdcc_banked_call
      0066E7 C8               [12]16667 	xch	a,r0
      0066E8 E5 00            [12]16668 	mov	a,_bp
      0066EA 24 0E            [12]16669 	add	a,#0x0e
      0066EC C8               [12]16670 	xch	a,r0
      0066ED A6 82            [24]16671 	mov	@r0,dpl
      0066EF 08               [12]16672 	inc	r0
      0066F0 A6 83            [24]16673 	mov	@r0,dph
      0066F2 08               [12]16674 	inc	r0
      0066F3 A6 F0            [24]16675 	mov	@r0,b
      0066F5 08               [12]16676 	inc	r0
      0066F6 F6               [12]16677 	mov	@r0,a
      0066F7 E5 81            [12]16678 	mov	a,sp
      0066F9 24 FC            [12]16679 	add	a,#0xfc
      0066FB F5 81            [12]16680 	mov	sp,a
                                  16681 ;	FATFS\src\ff.c:3138: if (!dsc) ABORT(fp->fs, FR_INT_ERR);
      0066FD E5 00            [12]16682 	mov	a,_bp
      0066FF 24 0E            [12]16683 	add	a,#0x0e
      006701 F8               [12]16684 	mov	r0,a
      006702 E6               [12]16685 	mov	a,@r0
      006703 08               [12]16686 	inc	r0
      006704 46               [12]16687 	orl	a,@r0
      006705 08               [12]16688 	inc	r0
      006706 46               [12]16689 	orl	a,@r0
      006707 08               [12]16690 	inc	r0
      006708 46               [12]16691 	orl	a,@r0
      006709 70 1F            [24]16692 	jnz	00125$
      00670B A8 00            [24]16693 	mov	r0,_bp
      00670D 08               [12]16694 	inc	r0
      00670E 74 06            [12]16695 	mov	a,#0x06
      006710 26               [12]16696 	add	a,@r0
      006711 FF               [12]16697 	mov	r7,a
      006712 E4               [12]16698 	clr	a
      006713 08               [12]16699 	inc	r0
      006714 36               [12]16700 	addc	a,@r0
      006715 FE               [12]16701 	mov	r6,a
      006716 08               [12]16702 	inc	r0
      006717 86 05            [24]16703 	mov	ar5,@r0
      006719 8F 82            [24]16704 	mov	dpl,r7
      00671B 8E 83            [24]16705 	mov	dph,r6
      00671D 8D F0            [24]16706 	mov	b,r5
      00671F 74 02            [12]16707 	mov	a,#0x02
      006721 12 00 00         [24]16708 	lcall	__gptrput
      006724 75 82 02         [24]16709 	mov	dpl,#0x02
      006727 02 6F A4         [24]16710 	ljmp	00162$
      00672A                      16711 00125$:
                                  16712 ;	FATFS\src\ff.c:3139: dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
      00672A E5 00            [12]16713 	mov	a,_bp
      00672C 24 F9            [12]16714 	add	a,#0xf9
      00672E F8               [12]16715 	mov	r0,a
      00672F E6               [12]16716 	mov	a,@r0
      006730 24 FF            [12]16717 	add	a,#0xff
      006732 08               [12]16718 	inc	r0
      006733 E6               [12]16719 	mov	a,@r0
      006734 34 FF            [12]16720 	addc	a,#0xff
      006736 FE               [12]16721 	mov	r6,a
      006737 08               [12]16722 	inc	r0
      006738 E6               [12]16723 	mov	a,@r0
      006739 34 FF            [12]16724 	addc	a,#0xff
      00673B FD               [12]16725 	mov	r5,a
      00673C 08               [12]16726 	inc	r0
      00673D E6               [12]16727 	mov	a,@r0
      00673E 34 FF            [12]16728 	addc	a,#0xff
      006740 7C 00            [12]16729 	mov	r4,#0x00
      006742 C3               [12]16730 	clr	c
      006743 13               [12]16731 	rrc	a
      006744 CD               [12]16732 	xch	a,r5
      006745 13               [12]16733 	rrc	a
      006746 CE               [12]16734 	xch	a,r6
      006747 13               [12]16735 	rrc	a
      006748 FF               [12]16736 	mov	r7,a
      006749 A8 00            [24]16737 	mov	r0,_bp
      00674B 08               [12]16738 	inc	r0
      00674C 86 82            [24]16739 	mov	dpl,@r0
      00674E 08               [12]16740 	inc	r0
      00674F 86 83            [24]16741 	mov	dph,@r0
      006751 08               [12]16742 	inc	r0
      006752 86 F0            [24]16743 	mov	b,@r0
      006754 E5 00            [12]16744 	mov	a,_bp
      006756 24 12            [12]16745 	add	a,#0x12
      006758 F9               [12]16746 	mov	r1,a
      006759 12 00 00         [24]16747 	lcall	__gptrget
      00675C F7               [12]16748 	mov	@r1,a
      00675D A3               [24]16749 	inc	dptr
      00675E 12 00 00         [24]16750 	lcall	__gptrget
      006761 09               [12]16751 	inc	r1
      006762 F7               [12]16752 	mov	@r1,a
      006763 A3               [24]16753 	inc	dptr
      006764 12 00 00         [24]16754 	lcall	__gptrget
      006767 09               [12]16755 	inc	r1
      006768 F7               [12]16756 	mov	@r1,a
      006769 E5 00            [12]16757 	mov	a,_bp
      00676B 24 12            [12]16758 	add	a,#0x12
      00676D F8               [12]16759 	mov	r0,a
      00676E 74 02            [12]16760 	mov	a,#0x02
      006770 26               [12]16761 	add	a,@r0
      006771 F6               [12]16762 	mov	@r0,a
      006772 E4               [12]16763 	clr	a
      006773 08               [12]16764 	inc	r0
      006774 36               [12]16765 	addc	a,@r0
      006775 F6               [12]16766 	mov	@r0,a
      006776 E5 00            [12]16767 	mov	a,_bp
      006778 24 12            [12]16768 	add	a,#0x12
      00677A F8               [12]16769 	mov	r0,a
      00677B 86 82            [24]16770 	mov	dpl,@r0
      00677D 08               [12]16771 	inc	r0
      00677E 86 83            [24]16772 	mov	dph,@r0
      006780 08               [12]16773 	inc	r0
      006781 86 F0            [24]16774 	mov	b,@r0
      006783 12 00 00         [24]16775 	lcall	__gptrget
      006786 FB               [12]16776 	mov	r3,a
      006787 7A 00            [12]16777 	mov	r2,#0x00
      006789 1B               [12]16778 	dec	r3
      00678A BB FF 01         [24]16779 	cjne	r3,#0xff,00325$
      00678D 1A               [12]16780 	dec	r2
      00678E                      16781 00325$:
      00678E E5 00            [12]16782 	mov	a,_bp
      006790 24 15            [12]16783 	add	a,#0x15
      006792 F8               [12]16784 	mov	r0,a
      006793 A6 03            [24]16785 	mov	@r0,ar3
      006795 08               [12]16786 	inc	r0
      006796 A6 02            [24]16787 	mov	@r0,ar2
      006798 EA               [12]16788 	mov	a,r2
      006799 33               [12]16789 	rlc	a
      00679A 95 E0            [12]16790 	subb	a,acc
      00679C 08               [12]16791 	inc	r0
      00679D F6               [12]16792 	mov	@r0,a
      00679E 08               [12]16793 	inc	r0
      00679F F6               [12]16794 	mov	@r0,a
      0067A0 E5 00            [12]16795 	mov	a,_bp
      0067A2 24 15            [12]16796 	add	a,#0x15
      0067A4 F8               [12]16797 	mov	r0,a
      0067A5 E6               [12]16798 	mov	a,@r0
      0067A6 52 07            [12]16799 	anl	ar7,a
      0067A8 08               [12]16800 	inc	r0
      0067A9 E6               [12]16801 	mov	a,@r0
      0067AA 52 06            [12]16802 	anl	ar6,a
      0067AC 08               [12]16803 	inc	r0
      0067AD E6               [12]16804 	mov	a,@r0
      0067AE 52 05            [12]16805 	anl	ar5,a
      0067B0 08               [12]16806 	inc	r0
      0067B1 E6               [12]16807 	mov	a,@r0
      0067B2 52 04            [12]16808 	anl	ar4,a
      0067B4 E5 00            [12]16809 	mov	a,_bp
      0067B6 24 0E            [12]16810 	add	a,#0x0e
      0067B8 F8               [12]16811 	mov	r0,a
      0067B9 EF               [12]16812 	mov	a,r7
      0067BA 26               [12]16813 	add	a,@r0
      0067BB FF               [12]16814 	mov	r7,a
      0067BC EE               [12]16815 	mov	a,r6
      0067BD 08               [12]16816 	inc	r0
      0067BE 36               [12]16817 	addc	a,@r0
      0067BF FE               [12]16818 	mov	r6,a
      0067C0 ED               [12]16819 	mov	a,r5
      0067C1 08               [12]16820 	inc	r0
      0067C2 36               [12]16821 	addc	a,@r0
      0067C3 FD               [12]16822 	mov	r5,a
      0067C4 EC               [12]16823 	mov	a,r4
      0067C5 08               [12]16824 	inc	r0
      0067C6 36               [12]16825 	addc	a,@r0
      0067C7 FC               [12]16826 	mov	r4,a
                                  16827 ;	FATFS\src\ff.c:3140: if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
      0067C8 A8 00            [24]16828 	mov	r0,_bp
      0067CA 08               [12]16829 	inc	r0
      0067CB E5 00            [12]16830 	mov	a,_bp
      0067CD 24 15            [12]16831 	add	a,#0x15
      0067CF F9               [12]16832 	mov	r1,a
      0067D0 74 07            [12]16833 	mov	a,#0x07
      0067D2 26               [12]16834 	add	a,@r0
      0067D3 F7               [12]16835 	mov	@r1,a
      0067D4 E4               [12]16836 	clr	a
      0067D5 08               [12]16837 	inc	r0
      0067D6 36               [12]16838 	addc	a,@r0
      0067D7 09               [12]16839 	inc	r1
      0067D8 F7               [12]16840 	mov	@r1,a
      0067D9 08               [12]16841 	inc	r0
      0067DA 09               [12]16842 	inc	r1
      0067DB E6               [12]16843 	mov	a,@r0
      0067DC F7               [12]16844 	mov	@r1,a
      0067DD E5 00            [12]16845 	mov	a,_bp
      0067DF 24 15            [12]16846 	add	a,#0x15
      0067E1 F8               [12]16847 	mov	r0,a
      0067E2 86 82            [24]16848 	mov	dpl,@r0
      0067E4 08               [12]16849 	inc	r0
      0067E5 86 83            [24]16850 	mov	dph,@r0
      0067E7 08               [12]16851 	inc	r0
      0067E8 86 F0            [24]16852 	mov	b,@r0
      0067EA E5 00            [12]16853 	mov	a,_bp
      0067EC 24 15            [12]16854 	add	a,#0x15
      0067EE F9               [12]16855 	mov	r1,a
      0067EF 12 00 00         [24]16856 	lcall	__gptrget
      0067F2 F7               [12]16857 	mov	@r1,a
      0067F3 A3               [24]16858 	inc	dptr
      0067F4 12 00 00         [24]16859 	lcall	__gptrget
      0067F7 09               [12]16860 	inc	r1
      0067F8 F7               [12]16861 	mov	@r1,a
      0067F9 A3               [24]16862 	inc	dptr
      0067FA 12 00 00         [24]16863 	lcall	__gptrget
      0067FD 09               [12]16864 	inc	r1
      0067FE F7               [12]16865 	mov	@r1,a
      0067FF A3               [24]16866 	inc	dptr
      006800 12 00 00         [24]16867 	lcall	__gptrget
      006803 09               [12]16868 	inc	r1
      006804 F7               [12]16869 	mov	@r1,a
      006805 E5 00            [12]16870 	mov	a,_bp
      006807 24 15            [12]16871 	add	a,#0x15
      006809 F8               [12]16872 	mov	r0,a
      00680A E6               [12]16873 	mov	a,@r0
      00680B 70 08            [24]16874 	jnz	00326$
      00680D 08               [12]16875 	inc	r0
      00680E E6               [12]16876 	mov	a,@r0
      00680F 20 E0 03         [24]16877 	jb	acc.0,00326$
      006812 02 6F 9D         [24]16878 	ljmp	00161$
      006815                      16879 00326$:
      006815 A8 00            [24]16880 	mov	r0,_bp
      006817 08               [12]16881 	inc	r0
      006818 E5 00            [12]16882 	mov	a,_bp
      00681A 24 15            [12]16883 	add	a,#0x15
      00681C F9               [12]16884 	mov	r1,a
      00681D 74 17            [12]16885 	mov	a,#0x17
      00681F 26               [12]16886 	add	a,@r0
      006820 F7               [12]16887 	mov	@r1,a
      006821 E4               [12]16888 	clr	a
      006822 08               [12]16889 	inc	r0
      006823 36               [12]16890 	addc	a,@r0
      006824 09               [12]16891 	inc	r1
      006825 F7               [12]16892 	mov	@r1,a
      006826 08               [12]16893 	inc	r0
      006827 09               [12]16894 	inc	r1
      006828 E6               [12]16895 	mov	a,@r0
      006829 F7               [12]16896 	mov	@r1,a
      00682A E5 00            [12]16897 	mov	a,_bp
      00682C 24 15            [12]16898 	add	a,#0x15
      00682E F8               [12]16899 	mov	r0,a
      00682F 86 82            [24]16900 	mov	dpl,@r0
      006831 08               [12]16901 	inc	r0
      006832 86 83            [24]16902 	mov	dph,@r0
      006834 08               [12]16903 	inc	r0
      006835 86 F0            [24]16904 	mov	b,@r0
      006837 E5 00            [12]16905 	mov	a,_bp
      006839 24 0E            [12]16906 	add	a,#0x0e
      00683B F9               [12]16907 	mov	r1,a
      00683C 12 00 00         [24]16908 	lcall	__gptrget
      00683F F7               [12]16909 	mov	@r1,a
      006840 A3               [24]16910 	inc	dptr
      006841 12 00 00         [24]16911 	lcall	__gptrget
      006844 09               [12]16912 	inc	r1
      006845 F7               [12]16913 	mov	@r1,a
      006846 A3               [24]16914 	inc	dptr
      006847 12 00 00         [24]16915 	lcall	__gptrget
      00684A 09               [12]16916 	inc	r1
      00684B F7               [12]16917 	mov	@r1,a
      00684C A3               [24]16918 	inc	dptr
      00684D 12 00 00         [24]16919 	lcall	__gptrget
      006850 09               [12]16920 	inc	r1
      006851 F7               [12]16921 	mov	@r1,a
      006852 E5 00            [12]16922 	mov	a,_bp
      006854 24 0E            [12]16923 	add	a,#0x0e
      006856 F8               [12]16924 	mov	r0,a
      006857 E6               [12]16925 	mov	a,@r0
      006858 B5 07 12         [24]16926 	cjne	a,ar7,00327$
      00685B 08               [12]16927 	inc	r0
      00685C E6               [12]16928 	mov	a,@r0
      00685D B5 06 0D         [24]16929 	cjne	a,ar6,00327$
      006860 08               [12]16930 	inc	r0
      006861 E6               [12]16931 	mov	a,@r0
      006862 B5 05 08         [24]16932 	cjne	a,ar5,00327$
      006865 08               [12]16933 	inc	r0
      006866 E6               [12]16934 	mov	a,@r0
      006867 B5 04 03         [24]16935 	cjne	a,ar4,00327$
      00686A 02 6F 9D         [24]16936 	ljmp	00161$
      00686D                      16937 00327$:
                                  16938 ;	FATFS\src\ff.c:3152: fp->dsect = dsc;
      00686D E5 00            [12]16939 	mov	a,_bp
      00686F 24 15            [12]16940 	add	a,#0x15
      006871 F8               [12]16941 	mov	r0,a
      006872 86 82            [24]16942 	mov	dpl,@r0
      006874 08               [12]16943 	inc	r0
      006875 86 83            [24]16944 	mov	dph,@r0
      006877 08               [12]16945 	inc	r0
      006878 86 F0            [24]16946 	mov	b,@r0
      00687A EF               [12]16947 	mov	a,r7
      00687B 12 00 00         [24]16948 	lcall	__gptrput
      00687E A3               [24]16949 	inc	dptr
      00687F EE               [12]16950 	mov	a,r6
      006880 12 00 00         [24]16951 	lcall	__gptrput
      006883 A3               [24]16952 	inc	dptr
      006884 ED               [12]16953 	mov	a,r5
      006885 12 00 00         [24]16954 	lcall	__gptrput
      006888 A3               [24]16955 	inc	dptr
      006889 EC               [12]16956 	mov	a,r4
      00688A 12 00 00         [24]16957 	lcall	__gptrput
      00688D 02 6F 9D         [24]16958 	ljmp	00161$
      006890                      16959 00160$:
                                  16960 ;	FATFS\src\ff.c:3163: if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
      006890 A8 00            [24]16961 	mov	r0,_bp
      006892 08               [12]16962 	inc	r0
      006893 74 0B            [12]16963 	mov	a,#0x0b
      006895 26               [12]16964 	add	a,@r0
      006896 FF               [12]16965 	mov	r7,a
      006897 E4               [12]16966 	clr	a
      006898 08               [12]16967 	inc	r0
      006899 36               [12]16968 	addc	a,@r0
      00689A FE               [12]16969 	mov	r6,a
      00689B 08               [12]16970 	inc	r0
      00689C 86 05            [24]16971 	mov	ar5,@r0
      00689E 8F 82            [24]16972 	mov	dpl,r7
      0068A0 8E 83            [24]16973 	mov	dph,r6
      0068A2 8D F0            [24]16974 	mov	b,r5
      0068A4 12 00 00         [24]16975 	lcall	__gptrget
      0068A7 FF               [12]16976 	mov	r7,a
      0068A8 A3               [24]16977 	inc	dptr
      0068A9 12 00 00         [24]16978 	lcall	__gptrget
      0068AC FE               [12]16979 	mov	r6,a
      0068AD A3               [24]16980 	inc	dptr
      0068AE 12 00 00         [24]16981 	lcall	__gptrget
      0068B1 FD               [12]16982 	mov	r5,a
      0068B2 A3               [24]16983 	inc	dptr
      0068B3 12 00 00         [24]16984 	lcall	__gptrget
      0068B6 FC               [12]16985 	mov	r4,a
      0068B7 E5 00            [12]16986 	mov	a,_bp
      0068B9 24 F9            [12]16987 	add	a,#0xf9
      0068BB F8               [12]16988 	mov	r0,a
      0068BC C3               [12]16989 	clr	c
      0068BD EF               [12]16990 	mov	a,r7
      0068BE 96               [12]16991 	subb	a,@r0
      0068BF EE               [12]16992 	mov	a,r6
      0068C0 08               [12]16993 	inc	r0
      0068C1 96               [12]16994 	subb	a,@r0
      0068C2 ED               [12]16995 	mov	a,r5
      0068C3 08               [12]16996 	inc	r0
      0068C4 96               [12]16997 	subb	a,@r0
      0068C5 EC               [12]16998 	mov	a,r4
      0068C6 08               [12]16999 	inc	r0
      0068C7 96               [12]17000 	subb	a,@r0
      0068C8 50 10            [24]17001 	jnc	00135$
                                  17002 ;	FATFS\src\ff.c:3167: ) ofs = fp->fsize;
      0068CA E5 00            [12]17003 	mov	a,_bp
      0068CC 24 F9            [12]17004 	add	a,#0xf9
      0068CE F8               [12]17005 	mov	r0,a
      0068CF A6 07            [24]17006 	mov	@r0,ar7
      0068D1 08               [12]17007 	inc	r0
      0068D2 A6 06            [24]17008 	mov	@r0,ar6
      0068D4 08               [12]17009 	inc	r0
      0068D5 A6 05            [24]17010 	mov	@r0,ar5
      0068D7 08               [12]17011 	inc	r0
      0068D8 A6 04            [24]17012 	mov	@r0,ar4
      0068DA                      17013 00135$:
                                  17014 ;	FATFS\src\ff.c:3169: ifptr = fp->fptr;
      0068DA A8 00            [24]17015 	mov	r0,_bp
      0068DC 08               [12]17016 	inc	r0
      0068DD E5 00            [12]17017 	mov	a,_bp
      0068DF 24 15            [12]17018 	add	a,#0x15
      0068E1 F9               [12]17019 	mov	r1,a
      0068E2 74 07            [12]17020 	mov	a,#0x07
      0068E4 26               [12]17021 	add	a,@r0
      0068E5 F7               [12]17022 	mov	@r1,a
      0068E6 E4               [12]17023 	clr	a
      0068E7 08               [12]17024 	inc	r0
      0068E8 36               [12]17025 	addc	a,@r0
      0068E9 09               [12]17026 	inc	r1
      0068EA F7               [12]17027 	mov	@r1,a
      0068EB 08               [12]17028 	inc	r0
      0068EC 09               [12]17029 	inc	r1
      0068ED E6               [12]17030 	mov	a,@r0
      0068EE F7               [12]17031 	mov	@r1,a
      0068EF E5 00            [12]17032 	mov	a,_bp
      0068F1 24 15            [12]17033 	add	a,#0x15
      0068F3 F8               [12]17034 	mov	r0,a
      0068F4 86 82            [24]17035 	mov	dpl,@r0
      0068F6 08               [12]17036 	inc	r0
      0068F7 86 83            [24]17037 	mov	dph,@r0
      0068F9 08               [12]17038 	inc	r0
      0068FA 86 F0            [24]17039 	mov	b,@r0
      0068FC 12 00 00         [24]17040 	lcall	__gptrget
      0068FF FF               [12]17041 	mov	r7,a
      006900 A3               [24]17042 	inc	dptr
      006901 12 00 00         [24]17043 	lcall	__gptrget
      006904 FE               [12]17044 	mov	r6,a
      006905 A3               [24]17045 	inc	dptr
      006906 12 00 00         [24]17046 	lcall	__gptrget
      006909 FD               [12]17047 	mov	r5,a
      00690A A3               [24]17048 	inc	dptr
      00690B 12 00 00         [24]17049 	lcall	__gptrget
      00690E FC               [12]17050 	mov	r4,a
                                  17051 ;	FATFS\src\ff.c:3170: fp->fptr = nsect = 0;
      00690F E5 00            [12]17052 	mov	a,_bp
      006911 24 0E            [12]17053 	add	a,#0x0e
      006913 F8               [12]17054 	mov	r0,a
      006914 E4               [12]17055 	clr	a
      006915 F6               [12]17056 	mov	@r0,a
      006916 08               [12]17057 	inc	r0
      006917 F6               [12]17058 	mov	@r0,a
      006918 08               [12]17059 	inc	r0
      006919 F6               [12]17060 	mov	@r0,a
      00691A 08               [12]17061 	inc	r0
      00691B F6               [12]17062 	mov	@r0,a
      00691C E5 00            [12]17063 	mov	a,_bp
      00691E 24 15            [12]17064 	add	a,#0x15
      006920 F8               [12]17065 	mov	r0,a
      006921 86 82            [24]17066 	mov	dpl,@r0
      006923 08               [12]17067 	inc	r0
      006924 86 83            [24]17068 	mov	dph,@r0
      006926 08               [12]17069 	inc	r0
      006927 86 F0            [24]17070 	mov	b,@r0
      006929 E4               [12]17071 	clr	a
      00692A 12 00 00         [24]17072 	lcall	__gptrput
      00692D A3               [24]17073 	inc	dptr
      00692E 12 00 00         [24]17074 	lcall	__gptrput
      006931 A3               [24]17075 	inc	dptr
      006932 12 00 00         [24]17076 	lcall	__gptrput
      006935 A3               [24]17077 	inc	dptr
      006936 12 00 00         [24]17078 	lcall	__gptrput
                                  17079 ;	FATFS\src\ff.c:3171: if (ofs) {
      006939 E5 00            [12]17080 	mov	a,_bp
      00693B 24 F9            [12]17081 	add	a,#0xf9
      00693D F8               [12]17082 	mov	r0,a
      00693E E6               [12]17083 	mov	a,@r0
      00693F 08               [12]17084 	inc	r0
      006940 46               [12]17085 	orl	a,@r0
      006941 08               [12]17086 	inc	r0
      006942 46               [12]17087 	orl	a,@r0
      006943 08               [12]17088 	inc	r0
      006944 46               [12]17089 	orl	a,@r0
      006945 70 03            [24]17090 	jnz	00329$
      006947 02 6E FC         [24]17091 	ljmp	00155$
      00694A                      17092 00329$:
                                  17093 ;	FATFS\src\ff.c:3172: bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
      00694A A8 00            [24]17094 	mov	r0,_bp
      00694C 08               [12]17095 	inc	r0
      00694D 86 82            [24]17096 	mov	dpl,@r0
      00694F 08               [12]17097 	inc	r0
      006950 86 83            [24]17098 	mov	dph,@r0
      006952 08               [12]17099 	inc	r0
      006953 86 F0            [24]17100 	mov	b,@r0
      006955 E5 00            [12]17101 	mov	a,_bp
      006957 24 04            [12]17102 	add	a,#0x04
      006959 F9               [12]17103 	mov	r1,a
      00695A 12 00 00         [24]17104 	lcall	__gptrget
      00695D F7               [12]17105 	mov	@r1,a
      00695E A3               [24]17106 	inc	dptr
      00695F 12 00 00         [24]17107 	lcall	__gptrget
      006962 09               [12]17108 	inc	r1
      006963 F7               [12]17109 	mov	@r1,a
      006964 A3               [24]17110 	inc	dptr
      006965 12 00 00         [24]17111 	lcall	__gptrget
      006968 09               [12]17112 	inc	r1
      006969 F7               [12]17113 	mov	@r1,a
      00696A E5 00            [12]17114 	mov	a,_bp
      00696C 24 04            [12]17115 	add	a,#0x04
      00696E F8               [12]17116 	mov	r0,a
      00696F E5 00            [12]17117 	mov	a,_bp
      006971 24 04            [12]17118 	add	a,#0x04
      006973 F9               [12]17119 	mov	r1,a
      006974 74 02            [12]17120 	mov	a,#0x02
      006976 26               [12]17121 	add	a,@r0
      006977 F7               [12]17122 	mov	@r1,a
      006978 E4               [12]17123 	clr	a
      006979 08               [12]17124 	inc	r0
      00697A 36               [12]17125 	addc	a,@r0
      00697B 09               [12]17126 	inc	r1
      00697C F7               [12]17127 	mov	@r1,a
      00697D 08               [12]17128 	inc	r0
      00697E 09               [12]17129 	inc	r1
      00697F E6               [12]17130 	mov	a,@r0
      006980 F7               [12]17131 	mov	@r1,a
      006981 E5 00            [12]17132 	mov	a,_bp
      006983 24 04            [12]17133 	add	a,#0x04
      006985 F8               [12]17134 	mov	r0,a
      006986 86 82            [24]17135 	mov	dpl,@r0
      006988 08               [12]17136 	inc	r0
      006989 86 83            [24]17137 	mov	dph,@r0
      00698B 08               [12]17138 	inc	r0
      00698C 86 F0            [24]17139 	mov	b,@r0
      00698E 12 00 00         [24]17140 	lcall	__gptrget
      006991 FB               [12]17141 	mov	r3,a
      006992 E5 00            [12]17142 	mov	a,_bp
      006994 24 04            [12]17143 	add	a,#0x04
      006996 F8               [12]17144 	mov	r0,a
      006997 A6 03            [24]17145 	mov	@r0,ar3
      006999 08               [12]17146 	inc	r0
      00699A 76 00            [12]17147 	mov	@r0,#0x00
      00699C 08               [12]17148 	inc	r0
      00699D 76 00            [12]17149 	mov	@r0,#0x00
      00699F 08               [12]17150 	inc	r0
      0069A0 76 00            [12]17151 	mov	@r0,#0x00
      0069A2 E5 00            [12]17152 	mov	a,_bp
      0069A4 24 04            [12]17153 	add	a,#0x04
      0069A6 F8               [12]17154 	mov	r0,a
      0069A7 E5 00            [12]17155 	mov	a,_bp
      0069A9 24 1E            [12]17156 	add	a,#0x1e
      0069AB F9               [12]17157 	mov	r1,a
      0069AC E6               [12]17158 	mov	a,@r0
      0069AD 25 E0            [12]17159 	add	a,acc
      0069AF 09               [12]17160 	inc	r1
      0069B0 F7               [12]17161 	mov	@r1,a
      0069B1 08               [12]17162 	inc	r0
      0069B2 E6               [12]17163 	mov	a,@r0
      0069B3 33               [12]17164 	rlc	a
      0069B4 09               [12]17165 	inc	r1
      0069B5 F7               [12]17166 	mov	@r1,a
      0069B6 08               [12]17167 	inc	r0
      0069B7 E6               [12]17168 	mov	a,@r0
      0069B8 33               [12]17169 	rlc	a
      0069B9 09               [12]17170 	inc	r1
      0069BA F7               [12]17171 	mov	@r1,a
      0069BB 19               [12]17172 	dec	r1
      0069BC 19               [12]17173 	dec	r1
      0069BD 19               [12]17174 	dec	r1
      0069BE 77 00            [12]17175 	mov	@r1,#0x00
                                  17176 ;	FATFS\src\ff.c:3173: if (ifptr > 0 &&
      0069C0 EF               [12]17177 	mov	a,r7
      0069C1 4E               [12]17178 	orl	a,r6
      0069C2 4D               [12]17179 	orl	a,r5
      0069C3 4C               [12]17180 	orl	a,r4
      0069C4 70 03            [24]17181 	jnz	00330$
      0069C6 02 6B 6A         [24]17182 	ljmp	00137$
      0069C9                      17183 00330$:
                                  17184 ;	FATFS\src\ff.c:3174: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
      0069C9 E5 00            [12]17185 	mov	a,_bp
      0069CB 24 F9            [12]17186 	add	a,#0xf9
      0069CD F8               [12]17187 	mov	r0,a
      0069CE E5 00            [12]17188 	mov	a,_bp
      0069D0 24 04            [12]17189 	add	a,#0x04
      0069D2 F9               [12]17190 	mov	r1,a
      0069D3 E6               [12]17191 	mov	a,@r0
      0069D4 24 FF            [12]17192 	add	a,#0xff
      0069D6 F7               [12]17193 	mov	@r1,a
      0069D7 08               [12]17194 	inc	r0
      0069D8 E6               [12]17195 	mov	a,@r0
      0069D9 34 FF            [12]17196 	addc	a,#0xff
      0069DB 09               [12]17197 	inc	r1
      0069DC F7               [12]17198 	mov	@r1,a
      0069DD 08               [12]17199 	inc	r0
      0069DE E6               [12]17200 	mov	a,@r0
      0069DF 34 FF            [12]17201 	addc	a,#0xff
      0069E1 09               [12]17202 	inc	r1
      0069E2 F7               [12]17203 	mov	@r1,a
      0069E3 08               [12]17204 	inc	r0
      0069E4 E6               [12]17205 	mov	a,@r0
      0069E5 34 FF            [12]17206 	addc	a,#0xff
      0069E7 09               [12]17207 	inc	r1
      0069E8 F7               [12]17208 	mov	@r1,a
      0069E9 C0 07            [24]17209 	push	ar7
      0069EB C0 06            [24]17210 	push	ar6
      0069ED C0 05            [24]17211 	push	ar5
      0069EF C0 04            [24]17212 	push	ar4
      0069F1 E5 00            [12]17213 	mov	a,_bp
      0069F3 24 1E            [12]17214 	add	a,#0x1e
      0069F5 F8               [12]17215 	mov	r0,a
      0069F6 E6               [12]17216 	mov	a,@r0
      0069F7 C0 E0            [24]17217 	push	acc
      0069F9 08               [12]17218 	inc	r0
      0069FA E6               [12]17219 	mov	a,@r0
      0069FB C0 E0            [24]17220 	push	acc
      0069FD 08               [12]17221 	inc	r0
      0069FE E6               [12]17222 	mov	a,@r0
      0069FF C0 E0            [24]17223 	push	acc
      006A01 08               [12]17224 	inc	r0
      006A02 E6               [12]17225 	mov	a,@r0
      006A03 C0 E0            [24]17226 	push	acc
      006A05 E5 00            [12]17227 	mov	a,_bp
      006A07 24 04            [12]17228 	add	a,#0x04
      006A09 F8               [12]17229 	mov	r0,a
      006A0A 86 82            [24]17230 	mov	dpl,@r0
      006A0C 08               [12]17231 	inc	r0
      006A0D 86 83            [24]17232 	mov	dph,@r0
      006A0F 08               [12]17233 	inc	r0
      006A10 86 F0            [24]17234 	mov	b,@r0
      006A12 08               [12]17235 	inc	r0
      006A13 E6               [12]17236 	mov	a,@r0
      006A14 12 00 23         [24]17237 	lcall	__divulong
      006A17 C8               [12]17238 	xch	a,r0
      006A18 E5 00            [12]17239 	mov	a,_bp
      006A1A 24 04            [12]17240 	add	a,#0x04
      006A1C C8               [12]17241 	xch	a,r0
      006A1D A6 82            [24]17242 	mov	@r0,dpl
      006A1F 08               [12]17243 	inc	r0
      006A20 A6 83            [24]17244 	mov	@r0,dph
      006A22 08               [12]17245 	inc	r0
      006A23 A6 F0            [24]17246 	mov	@r0,b
      006A25 08               [12]17247 	inc	r0
      006A26 F6               [12]17248 	mov	@r0,a
      006A27 E5 81            [12]17249 	mov	a,sp
      006A29 24 FC            [12]17250 	add	a,#0xfc
      006A2B F5 81            [12]17251 	mov	sp,a
      006A2D D0 04            [24]17252 	pop	ar4
      006A2F D0 05            [24]17253 	pop	ar5
      006A31 D0 06            [24]17254 	pop	ar6
      006A33 D0 07            [24]17255 	pop	ar7
      006A35 E5 00            [12]17256 	mov	a,_bp
      006A37 24 19            [12]17257 	add	a,#0x19
      006A39 F8               [12]17258 	mov	r0,a
      006A3A EF               [12]17259 	mov	a,r7
      006A3B 24 FF            [12]17260 	add	a,#0xff
      006A3D F6               [12]17261 	mov	@r0,a
      006A3E EE               [12]17262 	mov	a,r6
      006A3F 34 FF            [12]17263 	addc	a,#0xff
      006A41 08               [12]17264 	inc	r0
      006A42 F6               [12]17265 	mov	@r0,a
      006A43 ED               [12]17266 	mov	a,r5
      006A44 34 FF            [12]17267 	addc	a,#0xff
      006A46 08               [12]17268 	inc	r0
      006A47 F6               [12]17269 	mov	@r0,a
      006A48 EC               [12]17270 	mov	a,r4
      006A49 34 FF            [12]17271 	addc	a,#0xff
      006A4B 08               [12]17272 	inc	r0
      006A4C F6               [12]17273 	mov	@r0,a
      006A4D C0 07            [24]17274 	push	ar7
      006A4F C0 06            [24]17275 	push	ar6
      006A51 C0 05            [24]17276 	push	ar5
      006A53 C0 04            [24]17277 	push	ar4
      006A55 E5 00            [12]17278 	mov	a,_bp
      006A57 24 1E            [12]17279 	add	a,#0x1e
      006A59 F8               [12]17280 	mov	r0,a
      006A5A E6               [12]17281 	mov	a,@r0
      006A5B C0 E0            [24]17282 	push	acc
      006A5D 08               [12]17283 	inc	r0
      006A5E E6               [12]17284 	mov	a,@r0
      006A5F C0 E0            [24]17285 	push	acc
      006A61 08               [12]17286 	inc	r0
      006A62 E6               [12]17287 	mov	a,@r0
      006A63 C0 E0            [24]17288 	push	acc
      006A65 08               [12]17289 	inc	r0
      006A66 E6               [12]17290 	mov	a,@r0
      006A67 C0 E0            [24]17291 	push	acc
      006A69 E5 00            [12]17292 	mov	a,_bp
      006A6B 24 19            [12]17293 	add	a,#0x19
      006A6D F8               [12]17294 	mov	r0,a
      006A6E 86 82            [24]17295 	mov	dpl,@r0
      006A70 08               [12]17296 	inc	r0
      006A71 86 83            [24]17297 	mov	dph,@r0
      006A73 08               [12]17298 	inc	r0
      006A74 86 F0            [24]17299 	mov	b,@r0
      006A76 08               [12]17300 	inc	r0
      006A77 E6               [12]17301 	mov	a,@r0
      006A78 12 00 23         [24]17302 	lcall	__divulong
      006A7B C8               [12]17303 	xch	a,r0
      006A7C E5 00            [12]17304 	mov	a,_bp
      006A7E 24 19            [12]17305 	add	a,#0x19
      006A80 C8               [12]17306 	xch	a,r0
      006A81 A6 82            [24]17307 	mov	@r0,dpl
      006A83 08               [12]17308 	inc	r0
      006A84 A6 83            [24]17309 	mov	@r0,dph
      006A86 08               [12]17310 	inc	r0
      006A87 A6 F0            [24]17311 	mov	@r0,b
      006A89 08               [12]17312 	inc	r0
      006A8A F6               [12]17313 	mov	@r0,a
      006A8B E5 81            [12]17314 	mov	a,sp
      006A8D 24 FC            [12]17315 	add	a,#0xfc
      006A8F F5 81            [12]17316 	mov	sp,a
      006A91 D0 04            [24]17317 	pop	ar4
      006A93 D0 05            [24]17318 	pop	ar5
      006A95 D0 06            [24]17319 	pop	ar6
      006A97 D0 07            [24]17320 	pop	ar7
      006A99 E5 00            [12]17321 	mov	a,_bp
      006A9B 24 04            [12]17322 	add	a,#0x04
      006A9D F8               [12]17323 	mov	r0,a
      006A9E E5 00            [12]17324 	mov	a,_bp
      006AA0 24 19            [12]17325 	add	a,#0x19
      006AA2 F9               [12]17326 	mov	r1,a
      006AA3 C3               [12]17327 	clr	c
      006AA4 E6               [12]17328 	mov	a,@r0
      006AA5 97               [12]17329 	subb	a,@r1
      006AA6 08               [12]17330 	inc	r0
      006AA7 E6               [12]17331 	mov	a,@r0
      006AA8 09               [12]17332 	inc	r1
      006AA9 97               [12]17333 	subb	a,@r1
      006AAA 08               [12]17334 	inc	r0
      006AAB E6               [12]17335 	mov	a,@r0
      006AAC 09               [12]17336 	inc	r1
      006AAD 97               [12]17337 	subb	a,@r1
      006AAE 08               [12]17338 	inc	r0
      006AAF E6               [12]17339 	mov	a,@r0
      006AB0 09               [12]17340 	inc	r1
      006AB1 97               [12]17341 	subb	a,@r1
      006AB2 50 03            [24]17342 	jnc	00331$
      006AB4 02 6B 6A         [24]17343 	ljmp	00137$
      006AB7                      17344 00331$:
                                  17345 ;	FATFS\src\ff.c:3175: fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
      006AB7 1F               [12]17346 	dec	r7
      006AB8 BF FF 09         [24]17347 	cjne	r7,#0xff,00332$
      006ABB 1E               [12]17348 	dec	r6
      006ABC BE FF 05         [24]17349 	cjne	r6,#0xff,00332$
      006ABF 1D               [12]17350 	dec	r5
      006AC0 BD FF 01         [24]17351 	cjne	r5,#0xff,00332$
      006AC3 1C               [12]17352 	dec	r4
      006AC4                      17353 00332$:
      006AC4 E5 00            [12]17354 	mov	a,_bp
      006AC6 24 1E            [12]17355 	add	a,#0x1e
      006AC8 F8               [12]17356 	mov	r0,a
      006AC9 E5 00            [12]17357 	mov	a,_bp
      006ACB 24 04            [12]17358 	add	a,#0x04
      006ACD F9               [12]17359 	mov	r1,a
      006ACE E6               [12]17360 	mov	a,@r0
      006ACF 24 FF            [12]17361 	add	a,#0xff
      006AD1 F7               [12]17362 	mov	@r1,a
      006AD2 08               [12]17363 	inc	r0
      006AD3 E6               [12]17364 	mov	a,@r0
      006AD4 34 FF            [12]17365 	addc	a,#0xff
      006AD6 09               [12]17366 	inc	r1
      006AD7 F7               [12]17367 	mov	@r1,a
      006AD8 08               [12]17368 	inc	r0
      006AD9 E6               [12]17369 	mov	a,@r0
      006ADA 34 FF            [12]17370 	addc	a,#0xff
      006ADC 09               [12]17371 	inc	r1
      006ADD F7               [12]17372 	mov	@r1,a
      006ADE 08               [12]17373 	inc	r0
      006ADF E6               [12]17374 	mov	a,@r0
      006AE0 34 FF            [12]17375 	addc	a,#0xff
      006AE2 09               [12]17376 	inc	r1
      006AE3 F7               [12]17377 	mov	@r1,a
      006AE4 E5 00            [12]17378 	mov	a,_bp
      006AE6 24 04            [12]17379 	add	a,#0x04
      006AE8 F8               [12]17380 	mov	r0,a
      006AE9 E6               [12]17381 	mov	a,@r0
      006AEA F4               [12]17382 	cpl	a
      006AEB F6               [12]17383 	mov	@r0,a
      006AEC 08               [12]17384 	inc	r0
      006AED E6               [12]17385 	mov	a,@r0
      006AEE F4               [12]17386 	cpl	a
      006AEF F6               [12]17387 	mov	@r0,a
      006AF0 08               [12]17388 	inc	r0
      006AF1 E6               [12]17389 	mov	a,@r0
      006AF2 F4               [12]17390 	cpl	a
      006AF3 F6               [12]17391 	mov	@r0,a
      006AF4 08               [12]17392 	inc	r0
      006AF5 E6               [12]17393 	mov	a,@r0
      006AF6 F4               [12]17394 	cpl	a
      006AF7 F6               [12]17395 	mov	@r0,a
      006AF8 E5 00            [12]17396 	mov	a,_bp
      006AFA 24 04            [12]17397 	add	a,#0x04
      006AFC F8               [12]17398 	mov	r0,a
      006AFD E6               [12]17399 	mov	a,@r0
      006AFE 52 07            [12]17400 	anl	ar7,a
      006B00 08               [12]17401 	inc	r0
      006B01 E6               [12]17402 	mov	a,@r0
      006B02 52 06            [12]17403 	anl	ar6,a
      006B04 08               [12]17404 	inc	r0
      006B05 E6               [12]17405 	mov	a,@r0
      006B06 52 05            [12]17406 	anl	ar5,a
      006B08 08               [12]17407 	inc	r0
      006B09 E6               [12]17408 	mov	a,@r0
      006B0A 52 04            [12]17409 	anl	ar4,a
      006B0C E5 00            [12]17410 	mov	a,_bp
      006B0E 24 15            [12]17411 	add	a,#0x15
      006B10 F8               [12]17412 	mov	r0,a
      006B11 86 82            [24]17413 	mov	dpl,@r0
      006B13 08               [12]17414 	inc	r0
      006B14 86 83            [24]17415 	mov	dph,@r0
      006B16 08               [12]17416 	inc	r0
      006B17 86 F0            [24]17417 	mov	b,@r0
      006B19 EF               [12]17418 	mov	a,r7
      006B1A 12 00 00         [24]17419 	lcall	__gptrput
      006B1D A3               [24]17420 	inc	dptr
      006B1E EE               [12]17421 	mov	a,r6
      006B1F 12 00 00         [24]17422 	lcall	__gptrput
      006B22 A3               [24]17423 	inc	dptr
      006B23 ED               [12]17424 	mov	a,r5
      006B24 12 00 00         [24]17425 	lcall	__gptrput
      006B27 A3               [24]17426 	inc	dptr
      006B28 EC               [12]17427 	mov	a,r4
      006B29 12 00 00         [24]17428 	lcall	__gptrput
                                  17429 ;	FATFS\src\ff.c:3176: ofs -= fp->fptr;
      006B2C E5 00            [12]17430 	mov	a,_bp
      006B2E 24 F9            [12]17431 	add	a,#0xf9
      006B30 F8               [12]17432 	mov	r0,a
      006B31 E6               [12]17433 	mov	a,@r0
      006B32 C3               [12]17434 	clr	c
      006B33 9F               [12]17435 	subb	a,r7
      006B34 F6               [12]17436 	mov	@r0,a
      006B35 08               [12]17437 	inc	r0
      006B36 E6               [12]17438 	mov	a,@r0
      006B37 9E               [12]17439 	subb	a,r6
      006B38 F6               [12]17440 	mov	@r0,a
      006B39 08               [12]17441 	inc	r0
      006B3A E6               [12]17442 	mov	a,@r0
      006B3B 9D               [12]17443 	subb	a,r5
      006B3C F6               [12]17444 	mov	@r0,a
      006B3D 08               [12]17445 	inc	r0
      006B3E E6               [12]17446 	mov	a,@r0
      006B3F 9C               [12]17447 	subb	a,r4
      006B40 F6               [12]17448 	mov	@r0,a
                                  17449 ;	FATFS\src\ff.c:3177: clst = fp->clust;
      006B41 A8 00            [24]17450 	mov	r0,_bp
      006B43 08               [12]17451 	inc	r0
      006B44 74 13            [12]17452 	mov	a,#0x13
      006B46 26               [12]17453 	add	a,@r0
      006B47 FF               [12]17454 	mov	r7,a
      006B48 E4               [12]17455 	clr	a
      006B49 08               [12]17456 	inc	r0
      006B4A 36               [12]17457 	addc	a,@r0
      006B4B FE               [12]17458 	mov	r6,a
      006B4C 08               [12]17459 	inc	r0
      006B4D 86 05            [24]17460 	mov	ar5,@r0
      006B4F 8F 82            [24]17461 	mov	dpl,r7
      006B51 8E 83            [24]17462 	mov	dph,r6
      006B53 8D F0            [24]17463 	mov	b,r5
      006B55 12 00 00         [24]17464 	lcall	__gptrget
      006B58 FF               [12]17465 	mov	r7,a
      006B59 A3               [24]17466 	inc	dptr
      006B5A 12 00 00         [24]17467 	lcall	__gptrget
      006B5D FE               [12]17468 	mov	r6,a
      006B5E A3               [24]17469 	inc	dptr
      006B5F 12 00 00         [24]17470 	lcall	__gptrget
      006B62 FD               [12]17471 	mov	r5,a
      006B63 A3               [24]17472 	inc	dptr
      006B64 12 00 00         [24]17473 	lcall	__gptrget
      006B67 FC               [12]17474 	mov	r4,a
      006B68 80 6A            [24]17475 	sjmp	00138$
      006B6A                      17476 00137$:
                                  17477 ;	FATFS\src\ff.c:3179: clst = fp->sclust;						/* start from the first cluster */
      006B6A A8 00            [24]17478 	mov	r0,_bp
      006B6C 08               [12]17479 	inc	r0
      006B6D E5 00            [12]17480 	mov	a,_bp
      006B6F 24 19            [12]17481 	add	a,#0x19
      006B71 F9               [12]17482 	mov	r1,a
      006B72 74 0F            [12]17483 	mov	a,#0x0f
      006B74 26               [12]17484 	add	a,@r0
      006B75 F7               [12]17485 	mov	@r1,a
      006B76 E4               [12]17486 	clr	a
      006B77 08               [12]17487 	inc	r0
      006B78 36               [12]17488 	addc	a,@r0
      006B79 09               [12]17489 	inc	r1
      006B7A F7               [12]17490 	mov	@r1,a
      006B7B 08               [12]17491 	inc	r0
      006B7C 09               [12]17492 	inc	r1
      006B7D E6               [12]17493 	mov	a,@r0
      006B7E F7               [12]17494 	mov	@r1,a
      006B7F E5 00            [12]17495 	mov	a,_bp
      006B81 24 19            [12]17496 	add	a,#0x19
      006B83 F8               [12]17497 	mov	r0,a
      006B84 86 82            [24]17498 	mov	dpl,@r0
      006B86 08               [12]17499 	inc	r0
      006B87 86 83            [24]17500 	mov	dph,@r0
      006B89 08               [12]17501 	inc	r0
      006B8A 86 F0            [24]17502 	mov	b,@r0
      006B8C 12 00 00         [24]17503 	lcall	__gptrget
      006B8F FF               [12]17504 	mov	r7,a
      006B90 A3               [24]17505 	inc	dptr
      006B91 12 00 00         [24]17506 	lcall	__gptrget
      006B94 FE               [12]17507 	mov	r6,a
      006B95 A3               [24]17508 	inc	dptr
      006B96 12 00 00         [24]17509 	lcall	__gptrget
      006B99 FD               [12]17510 	mov	r5,a
      006B9A A3               [24]17511 	inc	dptr
      006B9B 12 00 00         [24]17512 	lcall	__gptrget
      006B9E FC               [12]17513 	mov	r4,a
                                  17514 ;	FATFS\src\ff.c:3188: fp->clust = clst;
      006B9F A8 00            [24]17515 	mov	r0,_bp
      006BA1 08               [12]17516 	inc	r0
      006BA2 E5 00            [12]17517 	mov	a,_bp
      006BA4 24 19            [12]17518 	add	a,#0x19
      006BA6 F9               [12]17519 	mov	r1,a
      006BA7 74 13            [12]17520 	mov	a,#0x13
      006BA9 26               [12]17521 	add	a,@r0
      006BAA F7               [12]17522 	mov	@r1,a
      006BAB E4               [12]17523 	clr	a
      006BAC 08               [12]17524 	inc	r0
      006BAD 36               [12]17525 	addc	a,@r0
      006BAE 09               [12]17526 	inc	r1
      006BAF F7               [12]17527 	mov	@r1,a
      006BB0 08               [12]17528 	inc	r0
      006BB1 09               [12]17529 	inc	r1
      006BB2 E6               [12]17530 	mov	a,@r0
      006BB3 F7               [12]17531 	mov	@r1,a
      006BB4 E5 00            [12]17532 	mov	a,_bp
      006BB6 24 19            [12]17533 	add	a,#0x19
      006BB8 F8               [12]17534 	mov	r0,a
      006BB9 86 82            [24]17535 	mov	dpl,@r0
      006BBB 08               [12]17536 	inc	r0
      006BBC 86 83            [24]17537 	mov	dph,@r0
      006BBE 08               [12]17538 	inc	r0
      006BBF 86 F0            [24]17539 	mov	b,@r0
      006BC1 EF               [12]17540 	mov	a,r7
      006BC2 12 00 00         [24]17541 	lcall	__gptrput
      006BC5 A3               [24]17542 	inc	dptr
      006BC6 EE               [12]17543 	mov	a,r6
      006BC7 12 00 00         [24]17544 	lcall	__gptrput
      006BCA A3               [24]17545 	inc	dptr
      006BCB ED               [12]17546 	mov	a,r5
      006BCC 12 00 00         [24]17547 	lcall	__gptrput
      006BCF A3               [24]17548 	inc	dptr
      006BD0 EC               [12]17549 	mov	a,r4
      006BD1 12 00 00         [24]17550 	lcall	__gptrput
      006BD4                      17551 00138$:
                                  17552 ;	FATFS\src\ff.c:3190: if (clst != 0) {
      006BD4 EF               [12]17553 	mov	a,r7
      006BD5 4E               [12]17554 	orl	a,r6
      006BD6 4D               [12]17555 	orl	a,r5
      006BD7 4C               [12]17556 	orl	a,r4
      006BD8 70 03            [24]17557 	jnz	00333$
      006BDA 02 6E FC         [24]17558 	ljmp	00155$
      006BDD                      17559 00333$:
                                  17560 ;	FATFS\src\ff.c:3191: while (ofs > bcs) {						/* Cluster following loop */
      006BDD                      17561 00145$:
      006BDD E5 00            [12]17562 	mov	a,_bp
      006BDF 24 F9            [12]17563 	add	a,#0xf9
      006BE1 F8               [12]17564 	mov	r0,a
      006BE2 E5 00            [12]17565 	mov	a,_bp
      006BE4 24 1E            [12]17566 	add	a,#0x1e
      006BE6 F9               [12]17567 	mov	r1,a
      006BE7 C3               [12]17568 	clr	c
      006BE8 E7               [12]17569 	mov	a,@r1
      006BE9 96               [12]17570 	subb	a,@r0
      006BEA 09               [12]17571 	inc	r1
      006BEB E7               [12]17572 	mov	a,@r1
      006BEC 08               [12]17573 	inc	r0
      006BED 96               [12]17574 	subb	a,@r0
      006BEE 09               [12]17575 	inc	r1
      006BEF E7               [12]17576 	mov	a,@r1
      006BF0 08               [12]17577 	inc	r0
      006BF1 96               [12]17578 	subb	a,@r0
      006BF2 09               [12]17579 	inc	r1
      006BF3 E7               [12]17580 	mov	a,@r1
      006BF4 08               [12]17581 	inc	r0
      006BF5 96               [12]17582 	subb	a,@r0
      006BF6 40 03            [24]17583 	jc	00334$
      006BF8 02 6D DA         [24]17584 	ljmp	00147$
      006BFB                      17585 00334$:
                                  17586 ;	FATFS\src\ff.c:3200: clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
      006BFB A8 00            [24]17587 	mov	r0,_bp
      006BFD 08               [12]17588 	inc	r0
      006BFE 86 82            [24]17589 	mov	dpl,@r0
      006C00 08               [12]17590 	inc	r0
      006C01 86 83            [24]17591 	mov	dph,@r0
      006C03 08               [12]17592 	inc	r0
      006C04 86 F0            [24]17593 	mov	b,@r0
      006C06 E5 00            [12]17594 	mov	a,_bp
      006C08 24 19            [12]17595 	add	a,#0x19
      006C0A F9               [12]17596 	mov	r1,a
      006C0B 12 00 00         [24]17597 	lcall	__gptrget
      006C0E F7               [12]17598 	mov	@r1,a
      006C0F A3               [24]17599 	inc	dptr
      006C10 12 00 00         [24]17600 	lcall	__gptrget
      006C13 09               [12]17601 	inc	r1
      006C14 F7               [12]17602 	mov	@r1,a
      006C15 A3               [24]17603 	inc	dptr
      006C16 12 00 00         [24]17604 	lcall	__gptrget
      006C19 09               [12]17605 	inc	r1
      006C1A F7               [12]17606 	mov	@r1,a
      006C1B C0 07            [24]17607 	push	ar7
      006C1D C0 06            [24]17608 	push	ar6
      006C1F C0 05            [24]17609 	push	ar5
      006C21 C0 04            [24]17610 	push	ar4
      006C23 E5 00            [12]17611 	mov	a,_bp
      006C25 24 19            [12]17612 	add	a,#0x19
      006C27 F8               [12]17613 	mov	r0,a
      006C28 86 82            [24]17614 	mov	dpl,@r0
      006C2A 08               [12]17615 	inc	r0
      006C2B 86 83            [24]17616 	mov	dph,@r0
      006C2D 08               [12]17617 	inc	r0
      006C2E 86 F0            [24]17618 	mov	b,@r0
      006C30 78 8D            [12]17619 	mov	r0,#_get_fat
      006C32 79 0F            [12]17620 	mov	r1,#(_get_fat >> 8)
      006C34 7A 00            [12]17621 	mov	r2,#(_get_fat >> 16)
      006C36 12 00 00         [24]17622 	lcall	__sdcc_banked_call
      006C39 C8               [12]17623 	xch	a,r0
      006C3A E5 00            [12]17624 	mov	a,_bp
      006C3C 24 19            [12]17625 	add	a,#0x19
      006C3E C8               [12]17626 	xch	a,r0
      006C3F A6 82            [24]17627 	mov	@r0,dpl
      006C41 08               [12]17628 	inc	r0
      006C42 A6 83            [24]17629 	mov	@r0,dph
      006C44 08               [12]17630 	inc	r0
      006C45 A6 F0            [24]17631 	mov	@r0,b
      006C47 08               [12]17632 	inc	r0
      006C48 F6               [12]17633 	mov	@r0,a
      006C49 E5 81            [12]17634 	mov	a,sp
      006C4B 24 FC            [12]17635 	add	a,#0xfc
      006C4D F5 81            [12]17636 	mov	sp,a
      006C4F E5 00            [12]17637 	mov	a,_bp
      006C51 24 19            [12]17638 	add	a,#0x19
      006C53 F8               [12]17639 	mov	r0,a
      006C54 86 07            [24]17640 	mov	ar7,@r0
      006C56 08               [12]17641 	inc	r0
      006C57 86 06            [24]17642 	mov	ar6,@r0
      006C59 08               [12]17643 	inc	r0
      006C5A 86 05            [24]17644 	mov	ar5,@r0
      006C5C 08               [12]17645 	inc	r0
      006C5D 86 04            [24]17646 	mov	ar4,@r0
                                  17647 ;	FATFS\src\ff.c:3201: if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      006C5F BF FF 21         [24]17648 	cjne	r7,#0xff,00141$
      006C62 BE FF 1E         [24]17649 	cjne	r6,#0xff,00141$
      006C65 BD FF 1B         [24]17650 	cjne	r5,#0xff,00141$
      006C68 BC FF 18         [24]17651 	cjne	r4,#0xff,00141$
      006C6B E5 00            [12]17652 	mov	a,_bp
      006C6D 24 08            [12]17653 	add	a,#0x08
      006C6F F8               [12]17654 	mov	r0,a
      006C70 86 82            [24]17655 	mov	dpl,@r0
      006C72 08               [12]17656 	inc	r0
      006C73 86 83            [24]17657 	mov	dph,@r0
      006C75 08               [12]17658 	inc	r0
      006C76 86 F0            [24]17659 	mov	b,@r0
      006C78 74 01            [12]17660 	mov	a,#0x01
      006C7A 12 00 00         [24]17661 	lcall	__gptrput
      006C7D 75 82 01         [24]17662 	mov	dpl,#0x01
      006C80 02 6F A4         [24]17663 	ljmp	00162$
      006C83                      17664 00141$:
                                  17665 ;	FATFS\src\ff.c:3202: if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
      006C83 C3               [12]17666 	clr	c
      006C84 74 01            [12]17667 	mov	a,#0x01
      006C86 9F               [12]17668 	subb	a,r7
      006C87 E4               [12]17669 	clr	a
      006C88 9E               [12]17670 	subb	a,r6
      006C89 E4               [12]17671 	clr	a
      006C8A 9D               [12]17672 	subb	a,r5
      006C8B E4               [12]17673 	clr	a
      006C8C 9C               [12]17674 	subb	a,r4
      006C8D 50 72            [24]17675 	jnc	00142$
      006C8F A8 00            [24]17676 	mov	r0,_bp
      006C91 08               [12]17677 	inc	r0
      006C92 86 82            [24]17678 	mov	dpl,@r0
      006C94 08               [12]17679 	inc	r0
      006C95 86 83            [24]17680 	mov	dph,@r0
      006C97 08               [12]17681 	inc	r0
      006C98 86 F0            [24]17682 	mov	b,@r0
      006C9A E5 00            [12]17683 	mov	a,_bp
      006C9C 24 19            [12]17684 	add	a,#0x19
      006C9E F9               [12]17685 	mov	r1,a
      006C9F 12 00 00         [24]17686 	lcall	__gptrget
      006CA2 F7               [12]17687 	mov	@r1,a
      006CA3 A3               [24]17688 	inc	dptr
      006CA4 12 00 00         [24]17689 	lcall	__gptrget
      006CA7 09               [12]17690 	inc	r1
      006CA8 F7               [12]17691 	mov	@r1,a
      006CA9 A3               [24]17692 	inc	dptr
      006CAA 12 00 00         [24]17693 	lcall	__gptrget
      006CAD 09               [12]17694 	inc	r1
      006CAE F7               [12]17695 	mov	@r1,a
      006CAF E5 00            [12]17696 	mov	a,_bp
      006CB1 24 19            [12]17697 	add	a,#0x19
      006CB3 F8               [12]17698 	mov	r0,a
      006CB4 E5 00            [12]17699 	mov	a,_bp
      006CB6 24 19            [12]17700 	add	a,#0x19
      006CB8 F9               [12]17701 	mov	r1,a
      006CB9 74 0A            [12]17702 	mov	a,#0x0a
      006CBB 26               [12]17703 	add	a,@r0
      006CBC F7               [12]17704 	mov	@r1,a
      006CBD E4               [12]17705 	clr	a
      006CBE 08               [12]17706 	inc	r0
      006CBF 36               [12]17707 	addc	a,@r0
      006CC0 09               [12]17708 	inc	r1
      006CC1 F7               [12]17709 	mov	@r1,a
      006CC2 08               [12]17710 	inc	r0
      006CC3 09               [12]17711 	inc	r1
      006CC4 E6               [12]17712 	mov	a,@r0
      006CC5 F7               [12]17713 	mov	@r1,a
      006CC6 E5 00            [12]17714 	mov	a,_bp
      006CC8 24 19            [12]17715 	add	a,#0x19
      006CCA F8               [12]17716 	mov	r0,a
      006CCB 86 82            [24]17717 	mov	dpl,@r0
      006CCD 08               [12]17718 	inc	r0
      006CCE 86 83            [24]17719 	mov	dph,@r0
      006CD0 08               [12]17720 	inc	r0
      006CD1 86 F0            [24]17721 	mov	b,@r0
      006CD3 E5 00            [12]17722 	mov	a,_bp
      006CD5 24 19            [12]17723 	add	a,#0x19
      006CD7 F9               [12]17724 	mov	r1,a
      006CD8 12 00 00         [24]17725 	lcall	__gptrget
      006CDB F7               [12]17726 	mov	@r1,a
      006CDC A3               [24]17727 	inc	dptr
      006CDD 12 00 00         [24]17728 	lcall	__gptrget
      006CE0 09               [12]17729 	inc	r1
      006CE1 F7               [12]17730 	mov	@r1,a
      006CE2 A3               [24]17731 	inc	dptr
      006CE3 12 00 00         [24]17732 	lcall	__gptrget
      006CE6 09               [12]17733 	inc	r1
      006CE7 F7               [12]17734 	mov	@r1,a
      006CE8 A3               [24]17735 	inc	dptr
      006CE9 12 00 00         [24]17736 	lcall	__gptrget
      006CEC 09               [12]17737 	inc	r1
      006CED F7               [12]17738 	mov	@r1,a
      006CEE E5 00            [12]17739 	mov	a,_bp
      006CF0 24 19            [12]17740 	add	a,#0x19
      006CF2 F8               [12]17741 	mov	r0,a
      006CF3 C3               [12]17742 	clr	c
      006CF4 EF               [12]17743 	mov	a,r7
      006CF5 96               [12]17744 	subb	a,@r0
      006CF6 EE               [12]17745 	mov	a,r6
      006CF7 08               [12]17746 	inc	r0
      006CF8 96               [12]17747 	subb	a,@r0
      006CF9 ED               [12]17748 	mov	a,r5
      006CFA 08               [12]17749 	inc	r0
      006CFB 96               [12]17750 	subb	a,@r0
      006CFC EC               [12]17751 	mov	a,r4
      006CFD 08               [12]17752 	inc	r0
      006CFE 96               [12]17753 	subb	a,@r0
      006CFF 40 18            [24]17754 	jc	00143$
      006D01                      17755 00142$:
      006D01 E5 00            [12]17756 	mov	a,_bp
      006D03 24 08            [12]17757 	add	a,#0x08
      006D05 F8               [12]17758 	mov	r0,a
      006D06 86 82            [24]17759 	mov	dpl,@r0
      006D08 08               [12]17760 	inc	r0
      006D09 86 83            [24]17761 	mov	dph,@r0
      006D0B 08               [12]17762 	inc	r0
      006D0C 86 F0            [24]17763 	mov	b,@r0
      006D0E 74 02            [12]17764 	mov	a,#0x02
      006D10 12 00 00         [24]17765 	lcall	__gptrput
      006D13 75 82 02         [24]17766 	mov	dpl,#0x02
      006D16 02 6F A4         [24]17767 	ljmp	00162$
      006D19                      17768 00143$:
                                  17769 ;	FATFS\src\ff.c:3203: fp->clust = clst;
      006D19 A8 00            [24]17770 	mov	r0,_bp
      006D1B 08               [12]17771 	inc	r0
      006D1C E5 00            [12]17772 	mov	a,_bp
      006D1E 24 19            [12]17773 	add	a,#0x19
      006D20 F9               [12]17774 	mov	r1,a
      006D21 74 13            [12]17775 	mov	a,#0x13
      006D23 26               [12]17776 	add	a,@r0
      006D24 F7               [12]17777 	mov	@r1,a
      006D25 E4               [12]17778 	clr	a
      006D26 08               [12]17779 	inc	r0
      006D27 36               [12]17780 	addc	a,@r0
      006D28 09               [12]17781 	inc	r1
      006D29 F7               [12]17782 	mov	@r1,a
      006D2A 08               [12]17783 	inc	r0
      006D2B 09               [12]17784 	inc	r1
      006D2C E6               [12]17785 	mov	a,@r0
      006D2D F7               [12]17786 	mov	@r1,a
      006D2E E5 00            [12]17787 	mov	a,_bp
      006D30 24 19            [12]17788 	add	a,#0x19
      006D32 F8               [12]17789 	mov	r0,a
      006D33 86 82            [24]17790 	mov	dpl,@r0
      006D35 08               [12]17791 	inc	r0
      006D36 86 83            [24]17792 	mov	dph,@r0
      006D38 08               [12]17793 	inc	r0
      006D39 86 F0            [24]17794 	mov	b,@r0
      006D3B EF               [12]17795 	mov	a,r7
      006D3C 12 00 00         [24]17796 	lcall	__gptrput
      006D3F A3               [24]17797 	inc	dptr
      006D40 EE               [12]17798 	mov	a,r6
      006D41 12 00 00         [24]17799 	lcall	__gptrput
      006D44 A3               [24]17800 	inc	dptr
      006D45 ED               [12]17801 	mov	a,r5
      006D46 12 00 00         [24]17802 	lcall	__gptrput
      006D49 A3               [24]17803 	inc	dptr
      006D4A EC               [12]17804 	mov	a,r4
      006D4B 12 00 00         [24]17805 	lcall	__gptrput
                                  17806 ;	FATFS\src\ff.c:3204: fp->fptr += bcs;
      006D4E E5 00            [12]17807 	mov	a,_bp
      006D50 24 15            [12]17808 	add	a,#0x15
      006D52 F8               [12]17809 	mov	r0,a
      006D53 86 82            [24]17810 	mov	dpl,@r0
      006D55 08               [12]17811 	inc	r0
      006D56 86 83            [24]17812 	mov	dph,@r0
      006D58 08               [12]17813 	inc	r0
      006D59 86 F0            [24]17814 	mov	b,@r0
      006D5B E5 00            [12]17815 	mov	a,_bp
      006D5D 24 19            [12]17816 	add	a,#0x19
      006D5F F9               [12]17817 	mov	r1,a
      006D60 12 00 00         [24]17818 	lcall	__gptrget
      006D63 F7               [12]17819 	mov	@r1,a
      006D64 A3               [24]17820 	inc	dptr
      006D65 12 00 00         [24]17821 	lcall	__gptrget
      006D68 09               [12]17822 	inc	r1
      006D69 F7               [12]17823 	mov	@r1,a
      006D6A A3               [24]17824 	inc	dptr
      006D6B 12 00 00         [24]17825 	lcall	__gptrget
      006D6E 09               [12]17826 	inc	r1
      006D6F F7               [12]17827 	mov	@r1,a
      006D70 A3               [24]17828 	inc	dptr
      006D71 12 00 00         [24]17829 	lcall	__gptrget
      006D74 09               [12]17830 	inc	r1
      006D75 F7               [12]17831 	mov	@r1,a
      006D76 E5 00            [12]17832 	mov	a,_bp
      006D78 24 19            [12]17833 	add	a,#0x19
      006D7A F8               [12]17834 	mov	r0,a
      006D7B E5 00            [12]17835 	mov	a,_bp
      006D7D 24 1E            [12]17836 	add	a,#0x1e
      006D7F F9               [12]17837 	mov	r1,a
      006D80 E7               [12]17838 	mov	a,@r1
      006D81 26               [12]17839 	add	a,@r0
      006D82 F6               [12]17840 	mov	@r0,a
      006D83 09               [12]17841 	inc	r1
      006D84 E7               [12]17842 	mov	a,@r1
      006D85 08               [12]17843 	inc	r0
      006D86 36               [12]17844 	addc	a,@r0
      006D87 F6               [12]17845 	mov	@r0,a
      006D88 09               [12]17846 	inc	r1
      006D89 E7               [12]17847 	mov	a,@r1
      006D8A 08               [12]17848 	inc	r0
      006D8B 36               [12]17849 	addc	a,@r0
      006D8C F6               [12]17850 	mov	@r0,a
      006D8D 09               [12]17851 	inc	r1
      006D8E E7               [12]17852 	mov	a,@r1
      006D8F 08               [12]17853 	inc	r0
      006D90 36               [12]17854 	addc	a,@r0
      006D91 F6               [12]17855 	mov	@r0,a
      006D92 E5 00            [12]17856 	mov	a,_bp
      006D94 24 15            [12]17857 	add	a,#0x15
      006D96 F8               [12]17858 	mov	r0,a
      006D97 86 82            [24]17859 	mov	dpl,@r0
      006D99 08               [12]17860 	inc	r0
      006D9A 86 83            [24]17861 	mov	dph,@r0
      006D9C 08               [12]17862 	inc	r0
      006D9D 86 F0            [24]17863 	mov	b,@r0
      006D9F E5 00            [12]17864 	mov	a,_bp
      006DA1 24 19            [12]17865 	add	a,#0x19
      006DA3 F9               [12]17866 	mov	r1,a
      006DA4 E7               [12]17867 	mov	a,@r1
      006DA5 12 00 00         [24]17868 	lcall	__gptrput
      006DA8 A3               [24]17869 	inc	dptr
      006DA9 09               [12]17870 	inc	r1
      006DAA E7               [12]17871 	mov	a,@r1
      006DAB 12 00 00         [24]17872 	lcall	__gptrput
      006DAE A3               [24]17873 	inc	dptr
      006DAF 09               [12]17874 	inc	r1
      006DB0 E7               [12]17875 	mov	a,@r1
      006DB1 12 00 00         [24]17876 	lcall	__gptrput
      006DB4 A3               [24]17877 	inc	dptr
      006DB5 09               [12]17878 	inc	r1
      006DB6 E7               [12]17879 	mov	a,@r1
      006DB7 12 00 00         [24]17880 	lcall	__gptrput
                                  17881 ;	FATFS\src\ff.c:3205: ofs -= bcs;
      006DBA E5 00            [12]17882 	mov	a,_bp
      006DBC 24 F9            [12]17883 	add	a,#0xf9
      006DBE F8               [12]17884 	mov	r0,a
      006DBF E5 00            [12]17885 	mov	a,_bp
      006DC1 24 1E            [12]17886 	add	a,#0x1e
      006DC3 F9               [12]17887 	mov	r1,a
      006DC4 E6               [12]17888 	mov	a,@r0
      006DC5 C3               [12]17889 	clr	c
      006DC6 97               [12]17890 	subb	a,@r1
      006DC7 F6               [12]17891 	mov	@r0,a
      006DC8 08               [12]17892 	inc	r0
      006DC9 E6               [12]17893 	mov	a,@r0
      006DCA 09               [12]17894 	inc	r1
      006DCB 97               [12]17895 	subb	a,@r1
      006DCC F6               [12]17896 	mov	@r0,a
      006DCD 08               [12]17897 	inc	r0
      006DCE E6               [12]17898 	mov	a,@r0
      006DCF 09               [12]17899 	inc	r1
      006DD0 97               [12]17900 	subb	a,@r1
      006DD1 F6               [12]17901 	mov	@r0,a
      006DD2 08               [12]17902 	inc	r0
      006DD3 E6               [12]17903 	mov	a,@r0
      006DD4 09               [12]17904 	inc	r1
      006DD5 97               [12]17905 	subb	a,@r1
      006DD6 F6               [12]17906 	mov	@r0,a
      006DD7 02 6B DD         [24]17907 	ljmp	00145$
      006DDA                      17908 00147$:
                                  17909 ;	FATFS\src\ff.c:3207: fp->fptr += ofs;
      006DDA E5 00            [12]17910 	mov	a,_bp
      006DDC 24 15            [12]17911 	add	a,#0x15
      006DDE F8               [12]17912 	mov	r0,a
      006DDF 86 82            [24]17913 	mov	dpl,@r0
      006DE1 08               [12]17914 	inc	r0
      006DE2 86 83            [24]17915 	mov	dph,@r0
      006DE4 08               [12]17916 	inc	r0
      006DE5 86 F0            [24]17917 	mov	b,@r0
      006DE7 E5 00            [12]17918 	mov	a,_bp
      006DE9 24 19            [12]17919 	add	a,#0x19
      006DEB F9               [12]17920 	mov	r1,a
      006DEC 12 00 00         [24]17921 	lcall	__gptrget
      006DEF F7               [12]17922 	mov	@r1,a
      006DF0 A3               [24]17923 	inc	dptr
      006DF1 12 00 00         [24]17924 	lcall	__gptrget
      006DF4 09               [12]17925 	inc	r1
      006DF5 F7               [12]17926 	mov	@r1,a
      006DF6 A3               [24]17927 	inc	dptr
      006DF7 12 00 00         [24]17928 	lcall	__gptrget
      006DFA 09               [12]17929 	inc	r1
      006DFB F7               [12]17930 	mov	@r1,a
      006DFC A3               [24]17931 	inc	dptr
      006DFD 12 00 00         [24]17932 	lcall	__gptrget
      006E00 09               [12]17933 	inc	r1
      006E01 F7               [12]17934 	mov	@r1,a
      006E02 E5 00            [12]17935 	mov	a,_bp
      006E04 24 19            [12]17936 	add	a,#0x19
      006E06 F8               [12]17937 	mov	r0,a
      006E07 E5 00            [12]17938 	mov	a,_bp
      006E09 24 F9            [12]17939 	add	a,#0xf9
      006E0B F9               [12]17940 	mov	r1,a
      006E0C E7               [12]17941 	mov	a,@r1
      006E0D 26               [12]17942 	add	a,@r0
      006E0E F6               [12]17943 	mov	@r0,a
      006E0F 09               [12]17944 	inc	r1
      006E10 E7               [12]17945 	mov	a,@r1
      006E11 08               [12]17946 	inc	r0
      006E12 36               [12]17947 	addc	a,@r0
      006E13 F6               [12]17948 	mov	@r0,a
      006E14 09               [12]17949 	inc	r1
      006E15 E7               [12]17950 	mov	a,@r1
      006E16 08               [12]17951 	inc	r0
      006E17 36               [12]17952 	addc	a,@r0
      006E18 F6               [12]17953 	mov	@r0,a
      006E19 09               [12]17954 	inc	r1
      006E1A E7               [12]17955 	mov	a,@r1
      006E1B 08               [12]17956 	inc	r0
      006E1C 36               [12]17957 	addc	a,@r0
      006E1D F6               [12]17958 	mov	@r0,a
      006E1E E5 00            [12]17959 	mov	a,_bp
      006E20 24 15            [12]17960 	add	a,#0x15
      006E22 F8               [12]17961 	mov	r0,a
      006E23 86 82            [24]17962 	mov	dpl,@r0
      006E25 08               [12]17963 	inc	r0
      006E26 86 83            [24]17964 	mov	dph,@r0
      006E28 08               [12]17965 	inc	r0
      006E29 86 F0            [24]17966 	mov	b,@r0
      006E2B E5 00            [12]17967 	mov	a,_bp
      006E2D 24 19            [12]17968 	add	a,#0x19
      006E2F F9               [12]17969 	mov	r1,a
      006E30 E7               [12]17970 	mov	a,@r1
      006E31 12 00 00         [24]17971 	lcall	__gptrput
      006E34 A3               [24]17972 	inc	dptr
      006E35 09               [12]17973 	inc	r1
      006E36 E7               [12]17974 	mov	a,@r1
      006E37 12 00 00         [24]17975 	lcall	__gptrput
      006E3A A3               [24]17976 	inc	dptr
      006E3B 09               [12]17977 	inc	r1
      006E3C E7               [12]17978 	mov	a,@r1
      006E3D 12 00 00         [24]17979 	lcall	__gptrput
      006E40 A3               [24]17980 	inc	dptr
      006E41 09               [12]17981 	inc	r1
      006E42 E7               [12]17982 	mov	a,@r1
      006E43 12 00 00         [24]17983 	lcall	__gptrput
                                  17984 ;	FATFS\src\ff.c:3208: if (ofs % SS(fp->fs)) {
      006E46 E5 00            [12]17985 	mov	a,_bp
      006E48 24 F9            [12]17986 	add	a,#0xf9
      006E4A F8               [12]17987 	mov	r0,a
      006E4B E6               [12]17988 	mov	a,@r0
      006E4C 70 08            [24]17989 	jnz	00339$
      006E4E 08               [12]17990 	inc	r0
      006E4F E6               [12]17991 	mov	a,@r0
      006E50 20 E0 03         [24]17992 	jb	acc.0,00339$
      006E53 02 6E FC         [24]17993 	ljmp	00155$
      006E56                      17994 00339$:
                                  17995 ;	FATFS\src\ff.c:3209: nsect = clust2sect(fp->fs, clst);	/* Current sector */
      006E56 A8 00            [24]17996 	mov	r0,_bp
      006E58 08               [12]17997 	inc	r0
      006E59 86 82            [24]17998 	mov	dpl,@r0
      006E5B 08               [12]17999 	inc	r0
      006E5C 86 83            [24]18000 	mov	dph,@r0
      006E5E 08               [12]18001 	inc	r0
      006E5F 86 F0            [24]18002 	mov	b,@r0
      006E61 E5 00            [12]18003 	mov	a,_bp
      006E63 24 19            [12]18004 	add	a,#0x19
      006E65 F9               [12]18005 	mov	r1,a
      006E66 12 00 00         [24]18006 	lcall	__gptrget
      006E69 F7               [12]18007 	mov	@r1,a
      006E6A A3               [24]18008 	inc	dptr
      006E6B 12 00 00         [24]18009 	lcall	__gptrget
      006E6E 09               [12]18010 	inc	r1
      006E6F F7               [12]18011 	mov	@r1,a
      006E70 A3               [24]18012 	inc	dptr
      006E71 12 00 00         [24]18013 	lcall	__gptrget
      006E74 09               [12]18014 	inc	r1
      006E75 F7               [12]18015 	mov	@r1,a
      006E76 C0 07            [24]18016 	push	ar7
      006E78 C0 06            [24]18017 	push	ar6
      006E7A C0 05            [24]18018 	push	ar5
      006E7C C0 04            [24]18019 	push	ar4
      006E7E E5 00            [12]18020 	mov	a,_bp
      006E80 24 19            [12]18021 	add	a,#0x19
      006E82 F8               [12]18022 	mov	r0,a
      006E83 86 82            [24]18023 	mov	dpl,@r0
      006E85 08               [12]18024 	inc	r0
      006E86 86 83            [24]18025 	mov	dph,@r0
      006E88 08               [12]18026 	inc	r0
      006E89 86 F0            [24]18027 	mov	b,@r0
      006E8B 78 72            [12]18028 	mov	r0,#_clust2sect
      006E8D 79 0E            [12]18029 	mov	r1,#(_clust2sect >> 8)
      006E8F 7A 00            [12]18030 	mov	r2,#(_clust2sect >> 16)
      006E91 12 00 00         [24]18031 	lcall	__sdcc_banked_call
      006E94 AF 82            [24]18032 	mov	r7,dpl
      006E96 AE 83            [24]18033 	mov	r6,dph
      006E98 AD F0            [24]18034 	mov	r5,b
      006E9A FC               [12]18035 	mov	r4,a
      006E9B E5 81            [12]18036 	mov	a,sp
      006E9D 24 FC            [12]18037 	add	a,#0xfc
      006E9F F5 81            [12]18038 	mov	sp,a
                                  18039 ;	FATFS\src\ff.c:3210: if (!nsect) ABORT(fp->fs, FR_INT_ERR);
      006EA1 EF               [12]18040 	mov	a,r7
      006EA2 4E               [12]18041 	orl	a,r6
      006EA3 4D               [12]18042 	orl	a,r5
      006EA4 4C               [12]18043 	orl	a,r4
      006EA5 70 18            [24]18044 	jnz	00149$
      006EA7 E5 00            [12]18045 	mov	a,_bp
      006EA9 24 08            [12]18046 	add	a,#0x08
      006EAB F8               [12]18047 	mov	r0,a
      006EAC 86 82            [24]18048 	mov	dpl,@r0
      006EAE 08               [12]18049 	inc	r0
      006EAF 86 83            [24]18050 	mov	dph,@r0
      006EB1 08               [12]18051 	inc	r0
      006EB2 86 F0            [24]18052 	mov	b,@r0
      006EB4 74 02            [12]18053 	mov	a,#0x02
      006EB6 12 00 00         [24]18054 	lcall	__gptrput
      006EB9 75 82 02         [24]18055 	mov	dpl,#0x02
      006EBC 02 6F A4         [24]18056 	ljmp	00162$
      006EBF                      18057 00149$:
                                  18058 ;	FATFS\src\ff.c:3211: nsect += ofs / SS(fp->fs);
      006EBF E5 00            [12]18059 	mov	a,_bp
      006EC1 24 F9            [12]18060 	add	a,#0xf9
      006EC3 F8               [12]18061 	mov	r0,a
      006EC4 E5 00            [12]18062 	mov	a,_bp
      006EC6 24 19            [12]18063 	add	a,#0x19
      006EC8 F9               [12]18064 	mov	r1,a
      006EC9 08               [12]18065 	inc	r0
      006ECA 08               [12]18066 	inc	r0
      006ECB 08               [12]18067 	inc	r0
      006ECC E6               [12]18068 	mov	a,@r0
      006ECD 09               [12]18069 	inc	r1
      006ECE 09               [12]18070 	inc	r1
      006ECF 09               [12]18071 	inc	r1
      006ED0 77 00            [12]18072 	mov	@r1,#0x00
      006ED2 C3               [12]18073 	clr	c
      006ED3 13               [12]18074 	rrc	a
      006ED4 19               [12]18075 	dec	r1
      006ED5 F7               [12]18076 	mov	@r1,a
      006ED6 18               [12]18077 	dec	r0
      006ED7 E6               [12]18078 	mov	a,@r0
      006ED8 13               [12]18079 	rrc	a
      006ED9 19               [12]18080 	dec	r1
      006EDA F7               [12]18081 	mov	@r1,a
      006EDB 18               [12]18082 	dec	r0
      006EDC E6               [12]18083 	mov	a,@r0
      006EDD 13               [12]18084 	rrc	a
      006EDE 19               [12]18085 	dec	r1
      006EDF F7               [12]18086 	mov	@r1,a
      006EE0 E5 00            [12]18087 	mov	a,_bp
      006EE2 24 19            [12]18088 	add	a,#0x19
      006EE4 F8               [12]18089 	mov	r0,a
      006EE5 E5 00            [12]18090 	mov	a,_bp
      006EE7 24 0E            [12]18091 	add	a,#0x0e
      006EE9 F9               [12]18092 	mov	r1,a
      006EEA E6               [12]18093 	mov	a,@r0
      006EEB 2F               [12]18094 	add	a,r7
      006EEC F7               [12]18095 	mov	@r1,a
      006EED 08               [12]18096 	inc	r0
      006EEE E6               [12]18097 	mov	a,@r0
      006EEF 3E               [12]18098 	addc	a,r6
      006EF0 09               [12]18099 	inc	r1
      006EF1 F7               [12]18100 	mov	@r1,a
      006EF2 08               [12]18101 	inc	r0
      006EF3 E6               [12]18102 	mov	a,@r0
      006EF4 3D               [12]18103 	addc	a,r5
      006EF5 09               [12]18104 	inc	r1
      006EF6 F7               [12]18105 	mov	@r1,a
      006EF7 08               [12]18106 	inc	r0
      006EF8 E6               [12]18107 	mov	a,@r0
      006EF9 3C               [12]18108 	addc	a,r4
      006EFA 09               [12]18109 	inc	r1
      006EFB F7               [12]18110 	mov	@r1,a
      006EFC                      18111 00155$:
                                  18112 ;	FATFS\src\ff.c:3215: if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
      006EFC E5 00            [12]18113 	mov	a,_bp
      006EFE 24 15            [12]18114 	add	a,#0x15
      006F00 F8               [12]18115 	mov	r0,a
      006F01 86 82            [24]18116 	mov	dpl,@r0
      006F03 08               [12]18117 	inc	r0
      006F04 86 83            [24]18118 	mov	dph,@r0
      006F06 08               [12]18119 	inc	r0
      006F07 86 F0            [24]18120 	mov	b,@r0
      006F09 12 00 00         [24]18121 	lcall	__gptrget
      006F0C FF               [12]18122 	mov	r7,a
      006F0D A3               [24]18123 	inc	dptr
      006F0E 12 00 00         [24]18124 	lcall	__gptrget
      006F11 FE               [12]18125 	mov	r6,a
      006F12 A3               [24]18126 	inc	dptr
      006F13 12 00 00         [24]18127 	lcall	__gptrget
      006F16 FD               [12]18128 	mov	r5,a
      006F17 A3               [24]18129 	inc	dptr
      006F18 12 00 00         [24]18130 	lcall	__gptrget
      006F1B FC               [12]18131 	mov	r4,a
      006F1C EF               [12]18132 	mov	a,r7
      006F1D 70 04            [24]18133 	jnz	00341$
      006F1F EE               [12]18134 	mov	a,r6
      006F20 30 E0 7A         [24]18135 	jnb	acc.0,00161$
      006F23                      18136 00341$:
      006F23 A8 00            [24]18137 	mov	r0,_bp
      006F25 08               [12]18138 	inc	r0
      006F26 74 17            [12]18139 	mov	a,#0x17
      006F28 26               [12]18140 	add	a,@r0
      006F29 FF               [12]18141 	mov	r7,a
      006F2A E4               [12]18142 	clr	a
      006F2B 08               [12]18143 	inc	r0
      006F2C 36               [12]18144 	addc	a,@r0
      006F2D FE               [12]18145 	mov	r6,a
      006F2E 08               [12]18146 	inc	r0
      006F2F 86 05            [24]18147 	mov	ar5,@r0
      006F31 8F 82            [24]18148 	mov	dpl,r7
      006F33 8E 83            [24]18149 	mov	dph,r6
      006F35 8D F0            [24]18150 	mov	b,r5
      006F37 E5 00            [12]18151 	mov	a,_bp
      006F39 24 15            [12]18152 	add	a,#0x15
      006F3B F8               [12]18153 	mov	r0,a
      006F3C 12 00 00         [24]18154 	lcall	__gptrget
      006F3F F6               [12]18155 	mov	@r0,a
      006F40 A3               [24]18156 	inc	dptr
      006F41 12 00 00         [24]18157 	lcall	__gptrget
      006F44 08               [12]18158 	inc	r0
      006F45 F6               [12]18159 	mov	@r0,a
      006F46 A3               [24]18160 	inc	dptr
      006F47 12 00 00         [24]18161 	lcall	__gptrget
      006F4A 08               [12]18162 	inc	r0
      006F4B F6               [12]18163 	mov	@r0,a
      006F4C A3               [24]18164 	inc	dptr
      006F4D 12 00 00         [24]18165 	lcall	__gptrget
      006F50 08               [12]18166 	inc	r0
      006F51 F6               [12]18167 	mov	@r0,a
      006F52 E5 00            [12]18168 	mov	a,_bp
      006F54 24 0E            [12]18169 	add	a,#0x0e
      006F56 F8               [12]18170 	mov	r0,a
      006F57 E5 00            [12]18171 	mov	a,_bp
      006F59 24 15            [12]18172 	add	a,#0x15
      006F5B F9               [12]18173 	mov	r1,a
      006F5C 86 F0            [24]18174 	mov	b,@r0
      006F5E E7               [12]18175 	mov	a,@r1
      006F5F B5 F0 1A         [24]18176 	cjne	a,b,00342$
      006F62 08               [12]18177 	inc	r0
      006F63 86 F0            [24]18178 	mov	b,@r0
      006F65 09               [12]18179 	inc	r1
      006F66 E7               [12]18180 	mov	a,@r1
      006F67 B5 F0 12         [24]18181 	cjne	a,b,00342$
      006F6A 08               [12]18182 	inc	r0
      006F6B 86 F0            [24]18183 	mov	b,@r0
      006F6D 09               [12]18184 	inc	r1
      006F6E E7               [12]18185 	mov	a,@r1
      006F6F B5 F0 0A         [24]18186 	cjne	a,b,00342$
      006F72 08               [12]18187 	inc	r0
      006F73 86 F0            [24]18188 	mov	b,@r0
      006F75 09               [12]18189 	inc	r1
      006F76 E7               [12]18190 	mov	a,@r1
      006F77 B5 F0 02         [24]18191 	cjne	a,b,00342$
      006F7A 80 21            [24]18192 	sjmp	00161$
      006F7C                      18193 00342$:
                                  18194 ;	FATFS\src\ff.c:3227: fp->dsect = nsect;
      006F7C 8F 82            [24]18195 	mov	dpl,r7
      006F7E 8E 83            [24]18196 	mov	dph,r6
      006F80 8D F0            [24]18197 	mov	b,r5
      006F82 E5 00            [12]18198 	mov	a,_bp
      006F84 24 0E            [12]18199 	add	a,#0x0e
      006F86 F8               [12]18200 	mov	r0,a
      006F87 E6               [12]18201 	mov	a,@r0
      006F88 12 00 00         [24]18202 	lcall	__gptrput
      006F8B A3               [24]18203 	inc	dptr
      006F8C 08               [12]18204 	inc	r0
      006F8D E6               [12]18205 	mov	a,@r0
      006F8E 12 00 00         [24]18206 	lcall	__gptrput
      006F91 A3               [24]18207 	inc	dptr
      006F92 08               [12]18208 	inc	r0
      006F93 E6               [12]18209 	mov	a,@r0
      006F94 12 00 00         [24]18210 	lcall	__gptrput
      006F97 A3               [24]18211 	inc	dptr
      006F98 08               [12]18212 	inc	r0
      006F99 E6               [12]18213 	mov	a,@r0
      006F9A 12 00 00         [24]18214 	lcall	__gptrput
      006F9D                      18215 00161$:
                                  18216 ;	FATFS\src\ff.c:3237: LEAVE_FF(fp->fs, res);
      006F9D E5 00            [12]18217 	mov	a,_bp
      006F9F 24 1D            [12]18218 	add	a,#0x1d
      006FA1 F8               [12]18219 	mov	r0,a
      006FA2 86 82            [24]18220 	mov	dpl,@r0
      006FA4                      18221 00162$:
                                  18222 ;	FATFS\src\ff.c:3238: }
      006FA4 85 00 81         [24]18223 	mov	sp,_bp
      006FA7 D0 00            [24]18224 	pop	_bp
      006FA9 02 00 00         [24]18225 	ljmp	__sdcc_banked_ret
                                  18226 ;------------------------------------------------------------
                                  18227 ;Allocation info for local variables in function 'f_opendir'
                                  18228 ;------------------------------------------------------------
                                  18229 ;path                      Allocated to stack - _bp -6
                                  18230 ;dp                        Allocated to stack - _bp +4
                                  18231 ;res                       Allocated to stack - _bp +25
                                  18232 ;fs                        Allocated to stack - _bp +22
                                  18233 ;sfn                       Allocated to stack - _bp +7
                                  18234 ;lfn                       Allocated to stack - _bp +19
                                  18235 ;sloc0                     Allocated to stack - _bp +1
                                  18236 ;------------------------------------------------------------
                                  18237 ;	FATFS\src\ff.c:3247: FRESULT f_opendir (
                                  18238 ;	-----------------------------------------
                                  18239 ;	 function f_opendir
                                  18240 ;	-----------------------------------------
      006FAC                      18241 _f_opendir:
      006FAC C0 00            [24]18242 	push	_bp
      006FAE E5 81            [12]18243 	mov	a,sp
      006FB0 F5 00            [12]18244 	mov	_bp,a
      006FB2 24 19            [12]18245 	add	a,#0x19
      006FB4 F5 81            [12]18246 	mov	sp,a
      006FB6 C8               [12]18247 	xch	a,r0
      006FB7 E5 00            [12]18248 	mov	a,_bp
      006FB9 24 04            [12]18249 	add	a,#0x04
      006FBB C8               [12]18250 	xch	a,r0
      006FBC A6 82            [24]18251 	mov	@r0,dpl
      006FBE 08               [12]18252 	inc	r0
      006FBF A6 83            [24]18253 	mov	@r0,dph
      006FC1 08               [12]18254 	inc	r0
      006FC2 A6 F0            [24]18255 	mov	@r0,b
                                  18256 ;	FATFS\src\ff.c:3257: if (!dp) return FR_INVALID_OBJECT;
      006FC4 E5 00            [12]18257 	mov	a,_bp
      006FC6 24 04            [12]18258 	add	a,#0x04
      006FC8 F8               [12]18259 	mov	r0,a
      006FC9 E6               [12]18260 	mov	a,@r0
      006FCA 08               [12]18261 	inc	r0
      006FCB 46               [12]18262 	orl	a,@r0
      006FCC 70 06            [24]18263 	jnz	00102$
      006FCE 75 82 09         [24]18264 	mov	dpl,#0x09
      006FD1 02 72 6C         [24]18265 	ljmp	00120$
      006FD4                      18266 00102$:
                                  18267 ;	FATFS\src\ff.c:3260: res = find_volume(&fs, &path, 0);
      006FD4 E5 00            [12]18268 	mov	a,_bp
      006FD6 24 FA            [12]18269 	add	a,#0xfa
      006FD8 FC               [12]18270 	mov	r4,a
      006FD9 7B 00            [12]18271 	mov	r3,#0x00
      006FDB 7A 40            [12]18272 	mov	r2,#0x40
      006FDD E5 00            [12]18273 	mov	a,_bp
      006FDF 24 16            [12]18274 	add	a,#0x16
      006FE1 FF               [12]18275 	mov	r7,a
      006FE2 7E 00            [12]18276 	mov	r6,#0x00
      006FE4 7D 40            [12]18277 	mov	r5,#0x40
      006FE6 E4               [12]18278 	clr	a
      006FE7 C0 E0            [24]18279 	push	acc
      006FE9 C0 04            [24]18280 	push	ar4
      006FEB C0 03            [24]18281 	push	ar3
      006FED C0 02            [24]18282 	push	ar2
      006FEF 8F 82            [24]18283 	mov	dpl,r7
      006FF1 8E 83            [24]18284 	mov	dph,r6
      006FF3 8D F0            [24]18285 	mov	b,r5
      006FF5 78 29            [12]18286 	mov	r0,#_find_volume
      006FF7 79 42            [12]18287 	mov	r1,#(_find_volume >> 8)
      006FF9 7A 00            [12]18288 	mov	r2,#(_find_volume >> 16)
      006FFB 12 00 00         [24]18289 	lcall	__sdcc_banked_call
      006FFE AF 82            [24]18290 	mov	r7,dpl
      007000 E5 81            [12]18291 	mov	a,sp
      007002 24 FC            [12]18292 	add	a,#0xfc
      007004 F5 81            [12]18293 	mov	sp,a
      007006 E5 00            [12]18294 	mov	a,_bp
      007008 24 19            [12]18295 	add	a,#0x19
      00700A F8               [12]18296 	mov	r0,a
      00700B A6 07            [24]18297 	mov	@r0,ar7
                                  18298 ;	FATFS\src\ff.c:3261: if (res == FR_OK) {
      00700D E5 00            [12]18299 	mov	a,_bp
      00700F 24 19            [12]18300 	add	a,#0x19
      007011 F8               [12]18301 	mov	r0,a
      007012 E6               [12]18302 	mov	a,@r0
      007013 60 03            [24]18303 	jz	00159$
      007015 02 72 44         [24]18304 	ljmp	00117$
      007018                      18305 00159$:
                                  18306 ;	FATFS\src\ff.c:3262: dp->fs = fs;
      007018 E5 00            [12]18307 	mov	a,_bp
      00701A 24 04            [12]18308 	add	a,#0x04
      00701C F8               [12]18309 	mov	r0,a
      00701D 86 82            [24]18310 	mov	dpl,@r0
      00701F 08               [12]18311 	inc	r0
      007020 86 83            [24]18312 	mov	dph,@r0
      007022 08               [12]18313 	inc	r0
      007023 86 F0            [24]18314 	mov	b,@r0
      007025 E5 00            [12]18315 	mov	a,_bp
      007027 24 16            [12]18316 	add	a,#0x16
      007029 F9               [12]18317 	mov	r1,a
      00702A E7               [12]18318 	mov	a,@r1
      00702B 12 00 00         [24]18319 	lcall	__gptrput
      00702E A3               [24]18320 	inc	dptr
      00702F 09               [12]18321 	inc	r1
      007030 E7               [12]18322 	mov	a,@r1
      007031 12 00 00         [24]18323 	lcall	__gptrput
      007034 A3               [24]18324 	inc	dptr
      007035 09               [12]18325 	inc	r1
      007036 E7               [12]18326 	mov	a,@r1
      007037 12 00 00         [24]18327 	lcall	__gptrput
                                  18328 ;	FATFS\src\ff.c:3263: INIT_BUF(*dp);
      00703A 90 02 00         [24]18329 	mov	dptr,#0x0200
      00703D 78 95            [12]18330 	mov	r0,#_ff_memalloc
      00703F 79 0B            [12]18331 	mov	r1,#(_ff_memalloc >> 8)
      007041 7A 00            [12]18332 	mov	r2,#(_ff_memalloc >> 16)
      007043 12 00 00         [24]18333 	lcall	__sdcc_banked_call
      007046 AA 82            [24]18334 	mov	r2,dpl
      007048 AB 83            [24]18335 	mov	r3,dph
      00704A AC F0            [24]18336 	mov	r4,b
      00704C E5 00            [12]18337 	mov	a,_bp
      00704E 24 13            [12]18338 	add	a,#0x13
      007050 F8               [12]18339 	mov	r0,a
      007051 A6 02            [24]18340 	mov	@r0,ar2
      007053 08               [12]18341 	inc	r0
      007054 A6 03            [24]18342 	mov	@r0,ar3
      007056 08               [12]18343 	inc	r0
      007057 A6 04            [24]18344 	mov	@r0,ar4
      007059 E5 00            [12]18345 	mov	a,_bp
      00705B 24 13            [12]18346 	add	a,#0x13
      00705D F8               [12]18347 	mov	r0,a
      00705E E6               [12]18348 	mov	a,@r0
      00705F 08               [12]18349 	inc	r0
      007060 46               [12]18350 	orl	a,@r0
      007061 70 06            [24]18351 	jnz	00104$
      007063 75 82 11         [24]18352 	mov	dpl,#0x11
      007066 02 72 6C         [24]18353 	ljmp	00120$
      007069                      18354 00104$:
      007069 E5 00            [12]18355 	mov	a,_bp
      00706B 24 04            [12]18356 	add	a,#0x04
      00706D F8               [12]18357 	mov	r0,a
      00706E 74 19            [12]18358 	mov	a,#0x19
      007070 26               [12]18359 	add	a,@r0
      007071 FA               [12]18360 	mov	r2,a
      007072 E4               [12]18361 	clr	a
      007073 08               [12]18362 	inc	r0
      007074 36               [12]18363 	addc	a,@r0
      007075 FB               [12]18364 	mov	r3,a
      007076 08               [12]18365 	inc	r0
      007077 86 04            [24]18366 	mov	ar4,@r0
      007079 8A 82            [24]18367 	mov	dpl,r2
      00707B 8B 83            [24]18368 	mov	dph,r3
      00707D 8C F0            [24]18369 	mov	b,r4
      00707F E5 00            [12]18370 	mov	a,_bp
      007081 24 13            [12]18371 	add	a,#0x13
      007083 F8               [12]18372 	mov	r0,a
      007084 E6               [12]18373 	mov	a,@r0
      007085 12 00 00         [24]18374 	lcall	__gptrput
      007088 A3               [24]18375 	inc	dptr
      007089 08               [12]18376 	inc	r0
      00708A E6               [12]18377 	mov	a,@r0
      00708B 12 00 00         [24]18378 	lcall	__gptrput
      00708E A3               [24]18379 	inc	dptr
      00708F 08               [12]18380 	inc	r0
      007090 E6               [12]18381 	mov	a,@r0
      007091 12 00 00         [24]18382 	lcall	__gptrput
      007094 E5 00            [12]18383 	mov	a,_bp
      007096 24 04            [12]18384 	add	a,#0x04
      007098 F8               [12]18385 	mov	r0,a
      007099 74 16            [12]18386 	mov	a,#0x16
      00709B 26               [12]18387 	add	a,@r0
      00709C FA               [12]18388 	mov	r2,a
      00709D E4               [12]18389 	clr	a
      00709E 08               [12]18390 	inc	r0
      00709F 36               [12]18391 	addc	a,@r0
      0070A0 FB               [12]18392 	mov	r3,a
      0070A1 08               [12]18393 	inc	r0
      0070A2 86 04            [24]18394 	mov	ar4,@r0
      0070A4 E5 00            [12]18395 	mov	a,_bp
      0070A6 24 07            [12]18396 	add	a,#0x07
      0070A8 FF               [12]18397 	mov	r7,a
      0070A9 7E 00            [12]18398 	mov	r6,#0x00
      0070AB 7D 40            [12]18399 	mov	r5,#0x40
      0070AD 8A 82            [24]18400 	mov	dpl,r2
      0070AF 8B 83            [24]18401 	mov	dph,r3
      0070B1 8C F0            [24]18402 	mov	b,r4
      0070B3 EF               [12]18403 	mov	a,r7
      0070B4 12 00 00         [24]18404 	lcall	__gptrput
      0070B7 A3               [24]18405 	inc	dptr
      0070B8 EE               [12]18406 	mov	a,r6
      0070B9 12 00 00         [24]18407 	lcall	__gptrput
      0070BC A3               [24]18408 	inc	dptr
      0070BD ED               [12]18409 	mov	a,r5
      0070BE 12 00 00         [24]18410 	lcall	__gptrput
                                  18411 ;	FATFS\src\ff.c:3264: res = follow_path(dp, path);			/* Follow the path to the directory */
      0070C1 E5 00            [12]18412 	mov	a,_bp
      0070C3 24 FA            [12]18413 	add	a,#0xfa
      0070C5 F8               [12]18414 	mov	r0,a
      0070C6 E6               [12]18415 	mov	a,@r0
      0070C7 C0 E0            [24]18416 	push	acc
      0070C9 08               [12]18417 	inc	r0
      0070CA E6               [12]18418 	mov	a,@r0
      0070CB C0 E0            [24]18419 	push	acc
      0070CD 08               [12]18420 	inc	r0
      0070CE E6               [12]18421 	mov	a,@r0
      0070CF C0 E0            [24]18422 	push	acc
      0070D1 E5 00            [12]18423 	mov	a,_bp
      0070D3 24 04            [12]18424 	add	a,#0x04
      0070D5 F8               [12]18425 	mov	r0,a
      0070D6 86 82            [24]18426 	mov	dpl,@r0
      0070D8 08               [12]18427 	inc	r0
      0070D9 86 83            [24]18428 	mov	dph,@r0
      0070DB 08               [12]18429 	inc	r0
      0070DC 86 F0            [24]18430 	mov	b,@r0
      0070DE 78 10            [12]18431 	mov	r0,#_follow_path
      0070E0 79 3B            [12]18432 	mov	r1,#(_follow_path >> 8)
      0070E2 7A 00            [12]18433 	mov	r2,#(_follow_path >> 16)
      0070E4 12 00 00         [24]18434 	lcall	__sdcc_banked_call
      0070E7 AF 82            [24]18435 	mov	r7,dpl
      0070E9 15 81            [12]18436 	dec	sp
      0070EB 15 81            [12]18437 	dec	sp
      0070ED 15 81            [12]18438 	dec	sp
      0070EF E5 00            [12]18439 	mov	a,_bp
      0070F1 24 19            [12]18440 	add	a,#0x19
      0070F3 F8               [12]18441 	mov	r0,a
      0070F4 A6 07            [24]18442 	mov	@r0,ar7
                                  18443 ;	FATFS\src\ff.c:3265: FREE_BUF();
      0070F6 E5 00            [12]18444 	mov	a,_bp
      0070F8 24 13            [12]18445 	add	a,#0x13
      0070FA F8               [12]18446 	mov	r0,a
      0070FB 86 02            [24]18447 	mov	ar2,@r0
      0070FD 08               [12]18448 	inc	r0
      0070FE 86 03            [24]18449 	mov	ar3,@r0
      007100 08               [12]18450 	inc	r0
      007101 86 04            [24]18451 	mov	ar4,@r0
      007103 8A 82            [24]18452 	mov	dpl,r2
      007105 8B 83            [24]18453 	mov	dph,r3
      007107 8C F0            [24]18454 	mov	b,r4
      007109 78 AD            [12]18455 	mov	r0,#_ff_memfree
      00710B 79 0B            [12]18456 	mov	r1,#(_ff_memfree >> 8)
      00710D 7A 00            [12]18457 	mov	r2,#(_ff_memfree >> 16)
      00710F 12 00 00         [24]18458 	lcall	__sdcc_banked_call
                                  18459 ;	FATFS\src\ff.c:3266: if (res == FR_OK) {						/* Follow completed */
      007112 E5 00            [12]18460 	mov	a,_bp
      007114 24 19            [12]18461 	add	a,#0x19
      007116 F8               [12]18462 	mov	r0,a
      007117 E6               [12]18463 	mov	a,@r0
      007118 60 03            [24]18464 	jz	00161$
      00711A 02 72 35         [24]18465 	ljmp	00113$
      00711D                      18466 00161$:
                                  18467 ;	FATFS\src\ff.c:3267: if (dp->dir) {						/* It is not the origin directory itself */
      00711D E5 00            [12]18468 	mov	a,_bp
      00711F 24 04            [12]18469 	add	a,#0x04
      007121 F8               [12]18470 	mov	r0,a
      007122 74 13            [12]18471 	mov	a,#0x13
      007124 26               [12]18472 	add	a,@r0
      007125 FD               [12]18473 	mov	r5,a
      007126 E4               [12]18474 	clr	a
      007127 08               [12]18475 	inc	r0
      007128 36               [12]18476 	addc	a,@r0
      007129 FE               [12]18477 	mov	r6,a
      00712A 08               [12]18478 	inc	r0
      00712B 86 07            [24]18479 	mov	ar7,@r0
      00712D 8D 82            [24]18480 	mov	dpl,r5
      00712F 8E 83            [24]18481 	mov	dph,r6
      007131 8F F0            [24]18482 	mov	b,r7
      007133 12 00 00         [24]18483 	lcall	__gptrget
      007136 FD               [12]18484 	mov	r5,a
      007137 A3               [24]18485 	inc	dptr
      007138 12 00 00         [24]18486 	lcall	__gptrget
      00713B FE               [12]18487 	mov	r6,a
      00713C A3               [24]18488 	inc	dptr
      00713D 12 00 00         [24]18489 	lcall	__gptrget
      007140 FF               [12]18490 	mov	r7,a
      007141 ED               [12]18491 	mov	a,r5
      007142 4E               [12]18492 	orl	a,r6
      007143 70 03            [24]18493 	jnz	00162$
      007145 02 71 C3         [24]18494 	ljmp	00109$
      007148                      18495 00162$:
                                  18496 ;	FATFS\src\ff.c:3268: if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
      007148 74 0B            [12]18497 	mov	a,#0x0b
      00714A 2D               [12]18498 	add	a,r5
      00714B FA               [12]18499 	mov	r2,a
      00714C E4               [12]18500 	clr	a
      00714D 3E               [12]18501 	addc	a,r6
      00714E FB               [12]18502 	mov	r3,a
      00714F 8F 04            [24]18503 	mov	ar4,r7
      007151 8A 82            [24]18504 	mov	dpl,r2
      007153 8B 83            [24]18505 	mov	dph,r3
      007155 8C F0            [24]18506 	mov	b,r4
      007157 12 00 00         [24]18507 	lcall	__gptrget
      00715A FA               [12]18508 	mov	r2,a
      00715B 30 E4 5E         [24]18509 	jnb	acc.4,00106$
                                  18510 ;	FATFS\src\ff.c:3269: dp->sclust = ld_clust(fs, dp->dir);
      00715E E5 00            [12]18511 	mov	a,_bp
      007160 24 04            [12]18512 	add	a,#0x04
      007162 F8               [12]18513 	mov	r0,a
      007163 A9 00            [24]18514 	mov	r1,_bp
      007165 09               [12]18515 	inc	r1
      007166 74 07            [12]18516 	mov	a,#0x07
      007168 26               [12]18517 	add	a,@r0
      007169 F7               [12]18518 	mov	@r1,a
      00716A E4               [12]18519 	clr	a
      00716B 08               [12]18520 	inc	r0
      00716C 36               [12]18521 	addc	a,@r0
      00716D 09               [12]18522 	inc	r1
      00716E F7               [12]18523 	mov	@r1,a
      00716F 08               [12]18524 	inc	r0
      007170 09               [12]18525 	inc	r1
      007171 E6               [12]18526 	mov	a,@r0
      007172 F7               [12]18527 	mov	@r1,a
      007173 C0 05            [24]18528 	push	ar5
      007175 C0 06            [24]18529 	push	ar6
      007177 C0 07            [24]18530 	push	ar7
      007179 E5 00            [12]18531 	mov	a,_bp
      00717B 24 16            [12]18532 	add	a,#0x16
      00717D F8               [12]18533 	mov	r0,a
      00717E 86 82            [24]18534 	mov	dpl,@r0
      007180 08               [12]18535 	inc	r0
      007181 86 83            [24]18536 	mov	dph,@r0
      007183 08               [12]18537 	inc	r0
      007184 86 F0            [24]18538 	mov	b,@r0
      007186 78 4E            [12]18539 	mov	r0,#_ld_clust
      007188 79 1E            [12]18540 	mov	r1,#(_ld_clust >> 8)
      00718A 7A 00            [12]18541 	mov	r2,#(_ld_clust >> 16)
      00718C 12 00 00         [24]18542 	lcall	__sdcc_banked_call
      00718F AE 82            [24]18543 	mov	r6,dpl
      007191 AD 83            [24]18544 	mov	r5,dph
      007193 AC F0            [24]18545 	mov	r4,b
      007195 FF               [12]18546 	mov	r7,a
      007196 15 81            [12]18547 	dec	sp
      007198 15 81            [12]18548 	dec	sp
      00719A 15 81            [12]18549 	dec	sp
      00719C A8 00            [24]18550 	mov	r0,_bp
      00719E 08               [12]18551 	inc	r0
      00719F 86 82            [24]18552 	mov	dpl,@r0
      0071A1 08               [12]18553 	inc	r0
      0071A2 86 83            [24]18554 	mov	dph,@r0
      0071A4 08               [12]18555 	inc	r0
      0071A5 86 F0            [24]18556 	mov	b,@r0
      0071A7 EE               [12]18557 	mov	a,r6
      0071A8 12 00 00         [24]18558 	lcall	__gptrput
      0071AB A3               [24]18559 	inc	dptr
      0071AC ED               [12]18560 	mov	a,r5
      0071AD 12 00 00         [24]18561 	lcall	__gptrput
      0071B0 A3               [24]18562 	inc	dptr
      0071B1 EC               [12]18563 	mov	a,r4
      0071B2 12 00 00         [24]18564 	lcall	__gptrput
      0071B5 A3               [24]18565 	inc	dptr
      0071B6 EF               [12]18566 	mov	a,r7
      0071B7 12 00 00         [24]18567 	lcall	__gptrput
      0071BA 80 07            [24]18568 	sjmp	00109$
      0071BC                      18569 00106$:
                                  18570 ;	FATFS\src\ff.c:3271: res = FR_NO_PATH;
      0071BC E5 00            [12]18571 	mov	a,_bp
      0071BE 24 19            [12]18572 	add	a,#0x19
      0071C0 F8               [12]18573 	mov	r0,a
      0071C1 76 05            [12]18574 	mov	@r0,#0x05
      0071C3                      18575 00109$:
                                  18576 ;	FATFS\src\ff.c:3273: if (res == FR_OK) {
      0071C3 E5 00            [12]18577 	mov	a,_bp
      0071C5 24 19            [12]18578 	add	a,#0x19
      0071C7 F8               [12]18579 	mov	r0,a
      0071C8 E6               [12]18580 	mov	a,@r0
      0071C9 70 6A            [24]18581 	jnz	00113$
                                  18582 ;	FATFS\src\ff.c:3274: dp->id = fs->id;
      0071CB E5 00            [12]18583 	mov	a,_bp
      0071CD 24 04            [12]18584 	add	a,#0x04
      0071CF F8               [12]18585 	mov	r0,a
      0071D0 74 03            [12]18586 	mov	a,#0x03
      0071D2 26               [12]18587 	add	a,@r0
      0071D3 FD               [12]18588 	mov	r5,a
      0071D4 E4               [12]18589 	clr	a
      0071D5 08               [12]18590 	inc	r0
      0071D6 36               [12]18591 	addc	a,@r0
      0071D7 FE               [12]18592 	mov	r6,a
      0071D8 08               [12]18593 	inc	r0
      0071D9 86 07            [24]18594 	mov	ar7,@r0
      0071DB E5 00            [12]18595 	mov	a,_bp
      0071DD 24 16            [12]18596 	add	a,#0x16
      0071DF F8               [12]18597 	mov	r0,a
      0071E0 86 02            [24]18598 	mov	ar2,@r0
      0071E2 08               [12]18599 	inc	r0
      0071E3 86 03            [24]18600 	mov	ar3,@r0
      0071E5 08               [12]18601 	inc	r0
      0071E6 86 04            [24]18602 	mov	ar4,@r0
      0071E8 74 06            [12]18603 	mov	a,#0x06
      0071EA 2A               [12]18604 	add	a,r2
      0071EB FA               [12]18605 	mov	r2,a
      0071EC E4               [12]18606 	clr	a
      0071ED 3B               [12]18607 	addc	a,r3
      0071EE FB               [12]18608 	mov	r3,a
      0071EF 8A 82            [24]18609 	mov	dpl,r2
      0071F1 8B 83            [24]18610 	mov	dph,r3
      0071F3 8C F0            [24]18611 	mov	b,r4
      0071F5 12 00 00         [24]18612 	lcall	__gptrget
      0071F8 FA               [12]18613 	mov	r2,a
      0071F9 A3               [24]18614 	inc	dptr
      0071FA 12 00 00         [24]18615 	lcall	__gptrget
      0071FD FB               [12]18616 	mov	r3,a
      0071FE 8D 82            [24]18617 	mov	dpl,r5
      007200 8E 83            [24]18618 	mov	dph,r6
      007202 8F F0            [24]18619 	mov	b,r7
      007204 EA               [12]18620 	mov	a,r2
      007205 12 00 00         [24]18621 	lcall	__gptrput
      007208 A3               [24]18622 	inc	dptr
      007209 EB               [12]18623 	mov	a,r3
      00720A 12 00 00         [24]18624 	lcall	__gptrput
                                  18625 ;	FATFS\src\ff.c:3275: res = dir_sdi(dp, 0);			/* Rewind directory */
      00720D E4               [12]18626 	clr	a
      00720E C0 E0            [24]18627 	push	acc
      007210 C0 E0            [24]18628 	push	acc
      007212 E5 00            [12]18629 	mov	a,_bp
      007214 24 04            [12]18630 	add	a,#0x04
      007216 F8               [12]18631 	mov	r0,a
      007217 86 82            [24]18632 	mov	dpl,@r0
      007219 08               [12]18633 	inc	r0
      00721A 86 83            [24]18634 	mov	dph,@r0
      00721C 08               [12]18635 	inc	r0
      00721D 86 F0            [24]18636 	mov	b,@r0
      00721F 78 16            [12]18637 	mov	r0,#_dir_sdi
      007221 79 16            [12]18638 	mov	r1,#(_dir_sdi >> 8)
      007223 7A 00            [12]18639 	mov	r2,#(_dir_sdi >> 16)
      007225 12 00 00         [24]18640 	lcall	__sdcc_banked_call
      007228 AF 82            [24]18641 	mov	r7,dpl
      00722A 15 81            [12]18642 	dec	sp
      00722C 15 81            [12]18643 	dec	sp
      00722E E5 00            [12]18644 	mov	a,_bp
      007230 24 19            [12]18645 	add	a,#0x19
      007232 F8               [12]18646 	mov	r0,a
      007233 A6 07            [24]18647 	mov	@r0,ar7
      007235                      18648 00113$:
                                  18649 ;	FATFS\src\ff.c:3289: if (res == FR_NO_FILE) res = FR_NO_PATH;
      007235 E5 00            [12]18650 	mov	a,_bp
      007237 24 19            [12]18651 	add	a,#0x19
      007239 F8               [12]18652 	mov	r0,a
      00723A B6 04 07         [24]18653 	cjne	@r0,#0x04,00117$
      00723D E5 00            [12]18654 	mov	a,_bp
      00723F 24 19            [12]18655 	add	a,#0x19
      007241 F8               [12]18656 	mov	r0,a
      007242 76 05            [12]18657 	mov	@r0,#0x05
      007244                      18658 00117$:
                                  18659 ;	FATFS\src\ff.c:3291: if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
      007244 E5 00            [12]18660 	mov	a,_bp
      007246 24 19            [12]18661 	add	a,#0x19
      007248 F8               [12]18662 	mov	r0,a
      007249 E6               [12]18663 	mov	a,@r0
      00724A 60 19            [24]18664 	jz	00119$
      00724C E5 00            [12]18665 	mov	a,_bp
      00724E 24 04            [12]18666 	add	a,#0x04
      007250 F8               [12]18667 	mov	r0,a
      007251 86 82            [24]18668 	mov	dpl,@r0
      007253 08               [12]18669 	inc	r0
      007254 86 83            [24]18670 	mov	dph,@r0
      007256 08               [12]18671 	inc	r0
      007257 86 F0            [24]18672 	mov	b,@r0
      007259 E4               [12]18673 	clr	a
      00725A 12 00 00         [24]18674 	lcall	__gptrput
      00725D A3               [24]18675 	inc	dptr
      00725E 12 00 00         [24]18676 	lcall	__gptrput
      007261 A3               [24]18677 	inc	dptr
      007262 12 00 00         [24]18678 	lcall	__gptrput
      007265                      18679 00119$:
                                  18680 ;	FATFS\src\ff.c:3293: LEAVE_FF(fs, res);
      007265 E5 00            [12]18681 	mov	a,_bp
      007267 24 19            [12]18682 	add	a,#0x19
      007269 F8               [12]18683 	mov	r0,a
      00726A 86 82            [24]18684 	mov	dpl,@r0
      00726C                      18685 00120$:
                                  18686 ;	FATFS\src\ff.c:3294: }
      00726C 85 00 81         [24]18687 	mov	sp,_bp
      00726F D0 00            [24]18688 	pop	_bp
      007271 02 00 00         [24]18689 	ljmp	__sdcc_banked_ret
                                  18690 ;------------------------------------------------------------
                                  18691 ;Allocation info for local variables in function 'f_closedir'
                                  18692 ;------------------------------------------------------------
                                  18693 ;dp                        Allocated to registers r5 r6 r7 
                                  18694 ;res                       Allocated to registers r3 
                                  18695 ;------------------------------------------------------------
                                  18696 ;	FATFS\src\ff.c:3303: FRESULT f_closedir (
                                  18697 ;	-----------------------------------------
                                  18698 ;	 function f_closedir
                                  18699 ;	-----------------------------------------
      007274                      18700 _f_closedir:
      007274 AD 82            [24]18701 	mov	r5,dpl
      007276 AE 83            [24]18702 	mov	r6,dph
      007278 AF F0            [24]18703 	mov	r7,b
                                  18704 ;	FATFS\src\ff.c:3310: res = validate(dp);
      00727A 8D 02            [24]18705 	mov	ar2,r5
      00727C 8E 03            [24]18706 	mov	ar3,r6
      00727E 8F 04            [24]18707 	mov	ar4,r7
      007280 8A 82            [24]18708 	mov	dpl,r2
      007282 8B 83            [24]18709 	mov	dph,r3
      007284 8C F0            [24]18710 	mov	b,r4
      007286 C0 07            [24]18711 	push	ar7
      007288 C0 06            [24]18712 	push	ar6
      00728A C0 05            [24]18713 	push	ar5
      00728C 78 04            [12]18714 	mov	r0,#_validate
      00728E 79 52            [12]18715 	mov	r1,#(_validate >> 8)
      007290 7A 00            [12]18716 	mov	r2,#(_validate >> 16)
      007292 12 00 00         [24]18717 	lcall	__sdcc_banked_call
      007295 AC 82            [24]18718 	mov	r4,dpl
      007297 D0 05            [24]18719 	pop	ar5
      007299 D0 06            [24]18720 	pop	ar6
      00729B D0 07            [24]18721 	pop	ar7
                                  18722 ;	FATFS\src\ff.c:3311: if (res == FR_OK) {
      00729D EC               [12]18723 	mov	a,r4
      00729E FB               [12]18724 	mov	r3,a
      00729F 70 12            [24]18725 	jnz	00102$
                                  18726 ;	FATFS\src\ff.c:3320: dp->fs = 0;				/* Invalidate directory object */
      0072A1 8D 82            [24]18727 	mov	dpl,r5
      0072A3 8E 83            [24]18728 	mov	dph,r6
      0072A5 8F F0            [24]18729 	mov	b,r7
      0072A7 E4               [12]18730 	clr	a
      0072A8 12 00 00         [24]18731 	lcall	__gptrput
      0072AB A3               [24]18732 	inc	dptr
      0072AC 12 00 00         [24]18733 	lcall	__gptrput
      0072AF A3               [24]18734 	inc	dptr
      0072B0 12 00 00         [24]18735 	lcall	__gptrput
      0072B3                      18736 00102$:
                                  18737 ;	FATFS\src\ff.c:3325: return res;
      0072B3 8B 82            [24]18738 	mov	dpl,r3
                                  18739 ;	FATFS\src\ff.c:3326: }
      0072B5 02 00 00         [24]18740 	ljmp	__sdcc_banked_ret
                                  18741 ;------------------------------------------------------------
                                  18742 ;Allocation info for local variables in function 'f_readdir'
                                  18743 ;------------------------------------------------------------
                                  18744 ;fno                       Allocated to stack - _bp -6
                                  18745 ;dp                        Allocated to stack - _bp +1
                                  18746 ;res                       Allocated to registers r4 
                                  18747 ;sfn                       Allocated to stack - _bp +4
                                  18748 ;lfn                       Allocated to stack - _bp +16
                                  18749 ;sloc0                     Allocated to stack - _bp +20
                                  18750 ;------------------------------------------------------------
                                  18751 ;	FATFS\src\ff.c:3335: FRESULT f_readdir (
                                  18752 ;	-----------------------------------------
                                  18753 ;	 function f_readdir
                                  18754 ;	-----------------------------------------
      0072B8                      18755 _f_readdir:
      0072B8 C0 00            [24]18756 	push	_bp
      0072BA 85 81 00         [24]18757 	mov	_bp,sp
      0072BD C0 82            [24]18758 	push	dpl
      0072BF C0 83            [24]18759 	push	dph
      0072C1 C0 F0            [24]18760 	push	b
      0072C3 E5 81            [12]18761 	mov	a,sp
      0072C5 24 0F            [12]18762 	add	a,#0x0f
      0072C7 F5 81            [12]18763 	mov	sp,a
                                  18764 ;	FATFS\src\ff.c:3343: res = validate(dp);						/* Check validity of the object */
      0072C9 A8 00            [24]18765 	mov	r0,_bp
      0072CB 08               [12]18766 	inc	r0
      0072CC 86 02            [24]18767 	mov	ar2,@r0
      0072CE 08               [12]18768 	inc	r0
      0072CF 86 03            [24]18769 	mov	ar3,@r0
      0072D1 08               [12]18770 	inc	r0
      0072D2 86 04            [24]18771 	mov	ar4,@r0
      0072D4 8A 82            [24]18772 	mov	dpl,r2
      0072D6 8B 83            [24]18773 	mov	dph,r3
      0072D8 8C F0            [24]18774 	mov	b,r4
      0072DA 78 04            [12]18775 	mov	r0,#_validate
      0072DC 79 52            [12]18776 	mov	r1,#(_validate >> 8)
      0072DE 7A 00            [12]18777 	mov	r2,#(_validate >> 16)
      0072E0 12 00 00         [24]18778 	lcall	__sdcc_banked_call
                                  18779 ;	FATFS\src\ff.c:3344: if (res == FR_OK)
      0072E3 E5 82            [12]18780 	mov	a,dpl
      0072E5 FC               [12]18781 	mov	r4,a
      0072E6 60 03            [24]18782 	jz	00140$
      0072E8 02 74 7C         [24]18783 	ljmp	00113$
      0072EB                      18784 00140$:
                                  18785 ;	FATFS\src\ff.c:3346: if (!fno)
      0072EB E5 00            [12]18786 	mov	a,_bp
      0072ED 24 FA            [12]18787 	add	a,#0xfa
      0072EF F8               [12]18788 	mov	r0,a
      0072F0 E6               [12]18789 	mov	a,@r0
      0072F1 08               [12]18790 	inc	r0
      0072F2 46               [12]18791 	orl	a,@r0
                                  18792 ;	FATFS\src\ff.c:3348: res = dir_sdi(dp, 0);			/* Rewind the directory object */
      0072F3 70 23            [24]18793 	jnz	00110$
      0072F5 C0 E0            [24]18794 	push	acc
      0072F7 C0 E0            [24]18795 	push	acc
      0072F9 A8 00            [24]18796 	mov	r0,_bp
      0072FB 08               [12]18797 	inc	r0
      0072FC 86 82            [24]18798 	mov	dpl,@r0
      0072FE 08               [12]18799 	inc	r0
      0072FF 86 83            [24]18800 	mov	dph,@r0
      007301 08               [12]18801 	inc	r0
      007302 86 F0            [24]18802 	mov	b,@r0
      007304 78 16            [12]18803 	mov	r0,#_dir_sdi
      007306 79 16            [12]18804 	mov	r1,#(_dir_sdi >> 8)
      007308 7A 00            [12]18805 	mov	r2,#(_dir_sdi >> 16)
      00730A 12 00 00         [24]18806 	lcall	__sdcc_banked_call
      00730D AB 82            [24]18807 	mov	r3,dpl
      00730F 15 81            [12]18808 	dec	sp
      007311 15 81            [12]18809 	dec	sp
      007313 8B 04            [24]18810 	mov	ar4,r3
      007315 02 74 7C         [24]18811 	ljmp	00113$
      007318                      18812 00110$:
                                  18813 ;	FATFS\src\ff.c:3352: INIT_BUF(*dp);
      007318 90 02 00         [24]18814 	mov	dptr,#0x0200
      00731B 78 95            [12]18815 	mov	r0,#_ff_memalloc
      00731D 79 0B            [12]18816 	mov	r1,#(_ff_memalloc >> 8)
      00731F 7A 00            [12]18817 	mov	r2,#(_ff_memalloc >> 16)
      007321 12 00 00         [24]18818 	lcall	__sdcc_banked_call
      007324 AA 82            [24]18819 	mov	r2,dpl
      007326 AB 83            [24]18820 	mov	r3,dph
      007328 AF F0            [24]18821 	mov	r7,b
      00732A E5 00            [12]18822 	mov	a,_bp
      00732C 24 10            [12]18823 	add	a,#0x10
      00732E F8               [12]18824 	mov	r0,a
      00732F A6 02            [24]18825 	mov	@r0,ar2
      007331 08               [12]18826 	inc	r0
      007332 A6 03            [24]18827 	mov	@r0,ar3
      007334 08               [12]18828 	inc	r0
      007335 A6 07            [24]18829 	mov	@r0,ar7
      007337 E5 00            [12]18830 	mov	a,_bp
      007339 24 10            [12]18831 	add	a,#0x10
      00733B F8               [12]18832 	mov	r0,a
      00733C E6               [12]18833 	mov	a,@r0
      00733D 08               [12]18834 	inc	r0
      00733E 46               [12]18835 	orl	a,@r0
      00733F 70 06            [24]18836 	jnz	00102$
      007341 75 82 11         [24]18837 	mov	dpl,#0x11
      007344 02 74 7E         [24]18838 	ljmp	00114$
      007347                      18839 00102$:
      007347 A8 00            [24]18840 	mov	r0,_bp
      007349 08               [12]18841 	inc	r0
      00734A 74 19            [12]18842 	mov	a,#0x19
      00734C 26               [12]18843 	add	a,@r0
      00734D FA               [12]18844 	mov	r2,a
      00734E E4               [12]18845 	clr	a
      00734F 08               [12]18846 	inc	r0
      007350 36               [12]18847 	addc	a,@r0
      007351 FB               [12]18848 	mov	r3,a
      007352 08               [12]18849 	inc	r0
      007353 86 07            [24]18850 	mov	ar7,@r0
      007355 8A 82            [24]18851 	mov	dpl,r2
      007357 8B 83            [24]18852 	mov	dph,r3
      007359 8F F0            [24]18853 	mov	b,r7
      00735B E5 00            [12]18854 	mov	a,_bp
      00735D 24 10            [12]18855 	add	a,#0x10
      00735F F8               [12]18856 	mov	r0,a
      007360 E6               [12]18857 	mov	a,@r0
      007361 12 00 00         [24]18858 	lcall	__gptrput
      007364 A3               [24]18859 	inc	dptr
      007365 08               [12]18860 	inc	r0
      007366 E6               [12]18861 	mov	a,@r0
      007367 12 00 00         [24]18862 	lcall	__gptrput
      00736A A3               [24]18863 	inc	dptr
      00736B 08               [12]18864 	inc	r0
      00736C E6               [12]18865 	mov	a,@r0
      00736D 12 00 00         [24]18866 	lcall	__gptrput
      007370 A8 00            [24]18867 	mov	r0,_bp
      007372 08               [12]18868 	inc	r0
      007373 74 16            [12]18869 	mov	a,#0x16
      007375 26               [12]18870 	add	a,@r0
      007376 FE               [12]18871 	mov	r6,a
      007377 E4               [12]18872 	clr	a
      007378 08               [12]18873 	inc	r0
      007379 36               [12]18874 	addc	a,@r0
      00737A FD               [12]18875 	mov	r5,a
      00737B 08               [12]18876 	inc	r0
      00737C 86 04            [24]18877 	mov	ar4,@r0
      00737E E5 00            [12]18878 	mov	a,_bp
      007380 24 04            [12]18879 	add	a,#0x04
      007382 FA               [12]18880 	mov	r2,a
      007383 7B 00            [12]18881 	mov	r3,#0x00
      007385 7F 40            [12]18882 	mov	r7,#0x40
      007387 8E 82            [24]18883 	mov	dpl,r6
      007389 8D 83            [24]18884 	mov	dph,r5
      00738B 8C F0            [24]18885 	mov	b,r4
      00738D EA               [12]18886 	mov	a,r2
      00738E 12 00 00         [24]18887 	lcall	__gptrput
      007391 A3               [24]18888 	inc	dptr
      007392 EB               [12]18889 	mov	a,r3
      007393 12 00 00         [24]18890 	lcall	__gptrput
      007396 A3               [24]18891 	inc	dptr
      007397 EF               [12]18892 	mov	a,r7
      007398 12 00 00         [24]18893 	lcall	__gptrput
                                  18894 ;	FATFS\src\ff.c:3353: res = dir_read(dp, 0);			/* Read an item */
      00739B E4               [12]18895 	clr	a
      00739C C0 E0            [24]18896 	push	acc
      00739E C0 E0            [24]18897 	push	acc
      0073A0 A8 00            [24]18898 	mov	r0,_bp
      0073A2 08               [12]18899 	inc	r0
      0073A3 86 82            [24]18900 	mov	dpl,@r0
      0073A5 08               [12]18901 	inc	r0
      0073A6 86 83            [24]18902 	mov	dph,@r0
      0073A8 08               [12]18903 	inc	r0
      0073A9 86 F0            [24]18904 	mov	b,@r0
      0073AB 78 69            [12]18905 	mov	r0,#_dir_read
      0073AD 79 29            [12]18906 	mov	r1,#(_dir_read >> 8)
      0073AF 7A 00            [12]18907 	mov	r2,#(_dir_read >> 16)
      0073B1 12 00 00         [24]18908 	lcall	__sdcc_banked_call
      0073B4 AF 82            [24]18909 	mov	r7,dpl
      0073B6 15 81            [12]18910 	dec	sp
      0073B8 15 81            [12]18911 	dec	sp
      0073BA 8F 04            [24]18912 	mov	ar4,r7
                                  18913 ;	FATFS\src\ff.c:3354: if (res == FR_NO_FILE) 			/* Reached end of directory */
      0073BC BC 04 26         [24]18914 	cjne	r4,#0x04,00104$
                                  18915 ;	FATFS\src\ff.c:3356: dp->sect = 0;
      0073BF A8 00            [24]18916 	mov	r0,_bp
      0073C1 08               [12]18917 	inc	r0
      0073C2 74 0F            [12]18918 	mov	a,#0x0f
      0073C4 26               [12]18919 	add	a,@r0
      0073C5 FD               [12]18920 	mov	r5,a
      0073C6 E4               [12]18921 	clr	a
      0073C7 08               [12]18922 	inc	r0
      0073C8 36               [12]18923 	addc	a,@r0
      0073C9 FE               [12]18924 	mov	r6,a
      0073CA 08               [12]18925 	inc	r0
      0073CB 86 07            [24]18926 	mov	ar7,@r0
      0073CD 8D 82            [24]18927 	mov	dpl,r5
      0073CF 8E 83            [24]18928 	mov	dph,r6
      0073D1 8F F0            [24]18929 	mov	b,r7
      0073D3 E4               [12]18930 	clr	a
      0073D4 12 00 00         [24]18931 	lcall	__gptrput
      0073D7 A3               [24]18932 	inc	dptr
      0073D8 12 00 00         [24]18933 	lcall	__gptrput
      0073DB A3               [24]18934 	inc	dptr
      0073DC 12 00 00         [24]18935 	lcall	__gptrput
      0073DF A3               [24]18936 	inc	dptr
      0073E0 12 00 00         [24]18937 	lcall	__gptrput
                                  18938 ;	FATFS\src\ff.c:3357: res = FR_OK;
      0073E3 7C 00            [12]18939 	mov	r4,#0x00
      0073E5                      18940 00104$:
                                  18941 ;	FATFS\src\ff.c:3359: if (res == FR_OK)
      0073E5 EC               [12]18942 	mov	a,r4
      0073E6 70 74            [24]18943 	jnz	00108$
                                  18944 ;	FATFS\src\ff.c:3361: get_fileinfo(dp, fno);		/* Get the object information */
      0073E8 E5 00            [12]18945 	mov	a,_bp
      0073EA 24 FA            [12]18946 	add	a,#0xfa
      0073EC F8               [12]18947 	mov	r0,a
      0073ED E6               [12]18948 	mov	a,@r0
      0073EE C0 E0            [24]18949 	push	acc
      0073F0 08               [12]18950 	inc	r0
      0073F1 E6               [12]18951 	mov	a,@r0
      0073F2 C0 E0            [24]18952 	push	acc
      0073F4 08               [12]18953 	inc	r0
      0073F5 E6               [12]18954 	mov	a,@r0
      0073F6 C0 E0            [24]18955 	push	acc
      0073F8 A8 00            [24]18956 	mov	r0,_bp
      0073FA 08               [12]18957 	inc	r0
      0073FB 86 82            [24]18958 	mov	dpl,@r0
      0073FD 08               [12]18959 	inc	r0
      0073FE 86 83            [24]18960 	mov	dph,@r0
      007400 08               [12]18961 	inc	r0
      007401 86 F0            [24]18962 	mov	b,@r0
      007403 78 FA            [12]18963 	mov	r0,#_get_fileinfo
      007405 79 2C            [12]18964 	mov	r1,#(_get_fileinfo >> 8)
      007407 7A 00            [12]18965 	mov	r2,#(_get_fileinfo >> 16)
      007409 12 00 00         [24]18966 	lcall	__sdcc_banked_call
      00740C 15 81            [12]18967 	dec	sp
      00740E 15 81            [12]18968 	dec	sp
      007410 15 81            [12]18969 	dec	sp
                                  18970 ;	FATFS\src\ff.c:3362: res = dir_next(dp, 0);		/* Increment index for next */
      007412 E4               [12]18971 	clr	a
      007413 C0 E0            [24]18972 	push	acc
      007415 C0 E0            [24]18973 	push	acc
      007417 A8 00            [24]18974 	mov	r0,_bp
      007419 08               [12]18975 	inc	r0
      00741A 86 82            [24]18976 	mov	dpl,@r0
      00741C 08               [12]18977 	inc	r0
      00741D 86 83            [24]18978 	mov	dph,@r0
      00741F 08               [12]18979 	inc	r0
      007420 86 F0            [24]18980 	mov	b,@r0
      007422 78 74            [12]18981 	mov	r0,#_dir_next
      007424 79 1A            [12]18982 	mov	r1,#(_dir_next >> 8)
      007426 7A 00            [12]18983 	mov	r2,#(_dir_next >> 16)
      007428 12 00 00         [24]18984 	lcall	__sdcc_banked_call
      00742B AF 82            [24]18985 	mov	r7,dpl
      00742D 15 81            [12]18986 	dec	sp
      00742F 15 81            [12]18987 	dec	sp
      007431 8F 04            [24]18988 	mov	ar4,r7
                                  18989 ;	FATFS\src\ff.c:3363: if(res == FR_NO_FILE)
      007433 BC 04 26         [24]18990 	cjne	r4,#0x04,00108$
                                  18991 ;	FATFS\src\ff.c:3365: dp->sect = 0;
      007436 A8 00            [24]18992 	mov	r0,_bp
      007438 08               [12]18993 	inc	r0
      007439 74 0F            [12]18994 	mov	a,#0x0f
      00743B 26               [12]18995 	add	a,@r0
      00743C FD               [12]18996 	mov	r5,a
      00743D E4               [12]18997 	clr	a
      00743E 08               [12]18998 	inc	r0
      00743F 36               [12]18999 	addc	a,@r0
      007440 FE               [12]19000 	mov	r6,a
      007441 08               [12]19001 	inc	r0
      007442 86 07            [24]19002 	mov	ar7,@r0
      007444 8D 82            [24]19003 	mov	dpl,r5
      007446 8E 83            [24]19004 	mov	dph,r6
      007448 8F F0            [24]19005 	mov	b,r7
      00744A E4               [12]19006 	clr	a
      00744B 12 00 00         [24]19007 	lcall	__gptrput
      00744E A3               [24]19008 	inc	dptr
      00744F 12 00 00         [24]19009 	lcall	__gptrput
      007452 A3               [24]19010 	inc	dptr
      007453 12 00 00         [24]19011 	lcall	__gptrput
      007456 A3               [24]19012 	inc	dptr
      007457 12 00 00         [24]19013 	lcall	__gptrput
                                  19014 ;	FATFS\src\ff.c:3366: res = FR_OK;
      00745A 7C 00            [12]19015 	mov	r4,#0x00
      00745C                      19016 00108$:
                                  19017 ;	FATFS\src\ff.c:3369: FREE_BUF();
      00745C E5 00            [12]19018 	mov	a,_bp
      00745E 24 10            [12]19019 	add	a,#0x10
      007460 F8               [12]19020 	mov	r0,a
      007461 86 05            [24]19021 	mov	ar5,@r0
      007463 08               [12]19022 	inc	r0
      007464 86 06            [24]19023 	mov	ar6,@r0
      007466 08               [12]19024 	inc	r0
      007467 86 07            [24]19025 	mov	ar7,@r0
      007469 8D 82            [24]19026 	mov	dpl,r5
      00746B 8E 83            [24]19027 	mov	dph,r6
      00746D 8F F0            [24]19028 	mov	b,r7
      00746F C0 04            [24]19029 	push	ar4
      007471 78 AD            [12]19030 	mov	r0,#_ff_memfree
      007473 79 0B            [12]19031 	mov	r1,#(_ff_memfree >> 8)
      007475 7A 00            [12]19032 	mov	r2,#(_ff_memfree >> 16)
      007477 12 00 00         [24]19033 	lcall	__sdcc_banked_call
      00747A D0 04            [24]19034 	pop	ar4
      00747C                      19035 00113$:
                                  19036 ;	FATFS\src\ff.c:3373: LEAVE_FF(dp->fs, res);
      00747C 8C 82            [24]19037 	mov	dpl,r4
      00747E                      19038 00114$:
                                  19039 ;	FATFS\src\ff.c:3374: }
      00747E 85 00 81         [24]19040 	mov	sp,_bp
      007481 D0 00            [24]19041 	pop	_bp
      007483 02 00 00         [24]19042 	ljmp	__sdcc_banked_ret
                                  19043 ;------------------------------------------------------------
                                  19044 ;Allocation info for local variables in function 'f_stat'
                                  19045 ;------------------------------------------------------------
                                  19046 ;fno                       Allocated to stack - _bp -6
                                  19047 ;path                      Allocated to stack - _bp +1
                                  19048 ;res                       Allocated to stack - _bp +4
                                  19049 ;dj                        Allocated to stack - _bp +8
                                  19050 ;sfn                       Allocated to stack - _bp +38
                                  19051 ;lfn                       Allocated to stack - _bp +5
                                  19052 ;------------------------------------------------------------
                                  19053 ;	FATFS\src\ff.c:3383: FRESULT f_stat (
                                  19054 ;	-----------------------------------------
                                  19055 ;	 function f_stat
                                  19056 ;	-----------------------------------------
      007486                      19057 _f_stat:
      007486 C0 00            [24]19058 	push	_bp
      007488 85 81 00         [24]19059 	mov	_bp,sp
      00748B C0 82            [24]19060 	push	dpl
      00748D C0 83            [24]19061 	push	dph
      00748F C0 F0            [24]19062 	push	b
      007491 E5 81            [12]19063 	mov	a,sp
      007493 24 2E            [12]19064 	add	a,#0x2e
      007495 F5 81            [12]19065 	mov	sp,a
                                  19066 ;	FATFS\src\ff.c:3394: res = find_volume(&dj.fs, &path, 0);
      007497 AF 00            [24]19067 	mov	r7,_bp
      007499 0F               [12]19068 	inc	r7
      00749A 7E 00            [12]19069 	mov	r6,#0x00
      00749C 7D 40            [12]19070 	mov	r5,#0x40
      00749E E5 00            [12]19071 	mov	a,_bp
      0074A0 24 08            [12]19072 	add	a,#0x08
      0074A2 FC               [12]19073 	mov	r4,a
      0074A3 7B 00            [12]19074 	mov	r3,#0x00
      0074A5 7A 40            [12]19075 	mov	r2,#0x40
      0074A7 E4               [12]19076 	clr	a
      0074A8 C0 E0            [24]19077 	push	acc
      0074AA C0 07            [24]19078 	push	ar7
      0074AC C0 06            [24]19079 	push	ar6
      0074AE C0 05            [24]19080 	push	ar5
      0074B0 8C 82            [24]19081 	mov	dpl,r4
      0074B2 8B 83            [24]19082 	mov	dph,r3
      0074B4 8A F0            [24]19083 	mov	b,r2
      0074B6 78 29            [12]19084 	mov	r0,#_find_volume
      0074B8 79 42            [12]19085 	mov	r1,#(_find_volume >> 8)
      0074BA 7A 00            [12]19086 	mov	r2,#(_find_volume >> 16)
      0074BC 12 00 00         [24]19087 	lcall	__sdcc_banked_call
      0074BF AF 82            [24]19088 	mov	r7,dpl
      0074C1 E5 81            [12]19089 	mov	a,sp
      0074C3 24 FC            [12]19090 	add	a,#0xfc
      0074C5 F5 81            [12]19091 	mov	sp,a
      0074C7 E5 00            [12]19092 	mov	a,_bp
      0074C9 24 04            [12]19093 	add	a,#0x04
      0074CB F8               [12]19094 	mov	r0,a
      0074CC A6 07            [24]19095 	mov	@r0,ar7
                                  19096 ;	FATFS\src\ff.c:3395: if (res == FR_OK) {
      0074CE E5 00            [12]19097 	mov	a,_bp
      0074D0 24 04            [12]19098 	add	a,#0x04
      0074D2 F8               [12]19099 	mov	r0,a
      0074D3 E6               [12]19100 	mov	a,@r0
      0074D4 60 03            [24]19101 	jz	00134$
      0074D6 02 75 DA         [24]19102 	ljmp	00111$
      0074D9                      19103 00134$:
                                  19104 ;	FATFS\src\ff.c:3396: INIT_BUF(dj);
      0074D9 90 02 00         [24]19105 	mov	dptr,#0x0200
      0074DC 78 95            [12]19106 	mov	r0,#_ff_memalloc
      0074DE 79 0B            [12]19107 	mov	r1,#(_ff_memalloc >> 8)
      0074E0 7A 00            [12]19108 	mov	r2,#(_ff_memalloc >> 16)
      0074E2 12 00 00         [24]19109 	lcall	__sdcc_banked_call
      0074E5 AC 82            [24]19110 	mov	r4,dpl
      0074E7 AD 83            [24]19111 	mov	r5,dph
      0074E9 AE F0            [24]19112 	mov	r6,b
      0074EB E5 00            [12]19113 	mov	a,_bp
      0074ED 24 05            [12]19114 	add	a,#0x05
      0074EF F8               [12]19115 	mov	r0,a
      0074F0 A6 04            [24]19116 	mov	@r0,ar4
      0074F2 08               [12]19117 	inc	r0
      0074F3 A6 05            [24]19118 	mov	@r0,ar5
      0074F5 08               [12]19119 	inc	r0
      0074F6 A6 06            [24]19120 	mov	@r0,ar6
      0074F8 E5 00            [12]19121 	mov	a,_bp
      0074FA 24 05            [12]19122 	add	a,#0x05
      0074FC F8               [12]19123 	mov	r0,a
      0074FD E6               [12]19124 	mov	a,@r0
      0074FE 08               [12]19125 	inc	r0
      0074FF 46               [12]19126 	orl	a,@r0
      007500 70 06            [24]19127 	jnz	00102$
      007502 75 82 11         [24]19128 	mov	dpl,#0x11
      007505 02 75 E1         [24]19129 	ljmp	00112$
      007508                      19130 00102$:
      007508 E5 00            [12]19131 	mov	a,_bp
      00750A 24 08            [12]19132 	add	a,#0x08
      00750C FB               [12]19133 	mov	r3,a
      00750D 24 19            [12]19134 	add	a,#0x19
      00750F F8               [12]19135 	mov	r0,a
      007510 E5 00            [12]19136 	mov	a,_bp
      007512 24 05            [12]19137 	add	a,#0x05
      007514 F9               [12]19138 	mov	r1,a
      007515 E7               [12]19139 	mov	a,@r1
      007516 F6               [12]19140 	mov	@r0,a
      007517 08               [12]19141 	inc	r0
      007518 09               [12]19142 	inc	r1
      007519 E7               [12]19143 	mov	a,@r1
      00751A F6               [12]19144 	mov	@r0,a
      00751B 08               [12]19145 	inc	r0
      00751C 09               [12]19146 	inc	r1
      00751D E7               [12]19147 	mov	a,@r1
      00751E F6               [12]19148 	mov	@r0,a
      00751F 74 16            [12]19149 	mov	a,#0x16
      007521 2B               [12]19150 	add	a,r3
      007522 F9               [12]19151 	mov	r1,a
      007523 E5 00            [12]19152 	mov	a,_bp
      007525 24 26            [12]19153 	add	a,#0x26
      007527 FA               [12]19154 	mov	r2,a
      007528 7D 00            [12]19155 	mov	r5,#0x00
      00752A 7E 40            [12]19156 	mov	r6,#0x40
      00752C A7 02            [24]19157 	mov	@r1,ar2
      00752E 09               [12]19158 	inc	r1
      00752F A7 05            [24]19159 	mov	@r1,ar5
      007531 09               [12]19160 	inc	r1
      007532 A7 06            [24]19161 	mov	@r1,ar6
                                  19162 ;	FATFS\src\ff.c:3397: res = follow_path(&dj, path);	/* Follow the file path */
      007534 8B 06            [24]19163 	mov	ar6,r3
      007536 7D 00            [12]19164 	mov	r5,#0x00
      007538 7C 40            [12]19165 	mov	r4,#0x40
      00753A C0 03            [24]19166 	push	ar3
      00753C A8 00            [24]19167 	mov	r0,_bp
      00753E 08               [12]19168 	inc	r0
      00753F E6               [12]19169 	mov	a,@r0
      007540 C0 E0            [24]19170 	push	acc
      007542 08               [12]19171 	inc	r0
      007543 E6               [12]19172 	mov	a,@r0
      007544 C0 E0            [24]19173 	push	acc
      007546 08               [12]19174 	inc	r0
      007547 E6               [12]19175 	mov	a,@r0
      007548 C0 E0            [24]19176 	push	acc
      00754A 8E 82            [24]19177 	mov	dpl,r6
      00754C 8D 83            [24]19178 	mov	dph,r5
      00754E 8C F0            [24]19179 	mov	b,r4
      007550 78 10            [12]19180 	mov	r0,#_follow_path
      007552 79 3B            [12]19181 	mov	r1,#(_follow_path >> 8)
      007554 7A 00            [12]19182 	mov	r2,#(_follow_path >> 16)
      007556 12 00 00         [24]19183 	lcall	__sdcc_banked_call
      007559 AE 82            [24]19184 	mov	r6,dpl
      00755B 15 81            [12]19185 	dec	sp
      00755D 15 81            [12]19186 	dec	sp
      00755F 15 81            [12]19187 	dec	sp
      007561 D0 03            [24]19188 	pop	ar3
      007563 E5 00            [12]19189 	mov	a,_bp
      007565 24 04            [12]19190 	add	a,#0x04
      007567 F8               [12]19191 	mov	r0,a
      007568 A6 06            [24]19192 	mov	@r0,ar6
                                  19193 ;	FATFS\src\ff.c:3398: if (res == FR_OK) {				/* Follow completed */
      00756A E5 00            [12]19194 	mov	a,_bp
      00756C 24 04            [12]19195 	add	a,#0x04
      00756E F8               [12]19196 	mov	r0,a
      00756F E6               [12]19197 	mov	a,@r0
      007570 70 4C            [24]19198 	jnz	00109$
                                  19199 ;	FATFS\src\ff.c:3399: if (dj.dir) {		/* Found an object */
      007572 74 13            [12]19200 	mov	a,#0x13
      007574 2B               [12]19201 	add	a,r3
      007575 F9               [12]19202 	mov	r1,a
      007576 87 02            [24]19203 	mov	ar2,@r1
      007578 09               [12]19204 	inc	r1
      007579 87 06            [24]19205 	mov	ar6,@r1
      00757B 09               [12]19206 	inc	r1
      00757C 87 07            [24]19207 	mov	ar7,@r1
      00757E EA               [12]19208 	mov	a,r2
      00757F 4E               [12]19209 	orl	a,r6
      007580 60 35            [24]19210 	jz	00106$
                                  19211 ;	FATFS\src\ff.c:3400: if (fno) get_fileinfo(&dj, fno);
      007582 E5 00            [12]19212 	mov	a,_bp
      007584 24 FA            [12]19213 	add	a,#0xfa
      007586 F8               [12]19214 	mov	r0,a
      007587 E6               [12]19215 	mov	a,@r0
      007588 08               [12]19216 	inc	r0
      007589 46               [12]19217 	orl	a,@r0
      00758A 60 32            [24]19218 	jz	00109$
      00758C 7F 00            [12]19219 	mov	r7,#0x00
      00758E 7E 40            [12]19220 	mov	r6,#0x40
      007590 E5 00            [12]19221 	mov	a,_bp
      007592 24 FA            [12]19222 	add	a,#0xfa
      007594 F8               [12]19223 	mov	r0,a
      007595 E6               [12]19224 	mov	a,@r0
      007596 C0 E0            [24]19225 	push	acc
      007598 08               [12]19226 	inc	r0
      007599 E6               [12]19227 	mov	a,@r0
      00759A C0 E0            [24]19228 	push	acc
      00759C 08               [12]19229 	inc	r0
      00759D E6               [12]19230 	mov	a,@r0
      00759E C0 E0            [24]19231 	push	acc
      0075A0 8B 82            [24]19232 	mov	dpl,r3
      0075A2 8F 83            [24]19233 	mov	dph,r7
      0075A4 8E F0            [24]19234 	mov	b,r6
      0075A6 78 FA            [12]19235 	mov	r0,#_get_fileinfo
      0075A8 79 2C            [12]19236 	mov	r1,#(_get_fileinfo >> 8)
      0075AA 7A 00            [12]19237 	mov	r2,#(_get_fileinfo >> 16)
      0075AC 12 00 00         [24]19238 	lcall	__sdcc_banked_call
      0075AF 15 81            [12]19239 	dec	sp
      0075B1 15 81            [12]19240 	dec	sp
      0075B3 15 81            [12]19241 	dec	sp
      0075B5 80 07            [24]19242 	sjmp	00109$
      0075B7                      19243 00106$:
                                  19244 ;	FATFS\src\ff.c:3402: res = FR_INVALID_NAME;
      0075B7 E5 00            [12]19245 	mov	a,_bp
      0075B9 24 04            [12]19246 	add	a,#0x04
      0075BB F8               [12]19247 	mov	r0,a
      0075BC 76 06            [12]19248 	mov	@r0,#0x06
      0075BE                      19249 00109$:
                                  19250 ;	FATFS\src\ff.c:3405: FREE_BUF();
      0075BE E5 00            [12]19251 	mov	a,_bp
      0075C0 24 05            [12]19252 	add	a,#0x05
      0075C2 F8               [12]19253 	mov	r0,a
      0075C3 86 04            [24]19254 	mov	ar4,@r0
      0075C5 08               [12]19255 	inc	r0
      0075C6 86 05            [24]19256 	mov	ar5,@r0
      0075C8 08               [12]19257 	inc	r0
      0075C9 86 06            [24]19258 	mov	ar6,@r0
      0075CB 8C 82            [24]19259 	mov	dpl,r4
      0075CD 8D 83            [24]19260 	mov	dph,r5
      0075CF 8E F0            [24]19261 	mov	b,r6
      0075D1 78 AD            [12]19262 	mov	r0,#_ff_memfree
      0075D3 79 0B            [12]19263 	mov	r1,#(_ff_memfree >> 8)
      0075D5 7A 00            [12]19264 	mov	r2,#(_ff_memfree >> 16)
      0075D7 12 00 00         [24]19265 	lcall	__sdcc_banked_call
      0075DA                      19266 00111$:
                                  19267 ;	FATFS\src\ff.c:3408: LEAVE_FF(dj.fs, res);
      0075DA E5 00            [12]19268 	mov	a,_bp
      0075DC 24 04            [12]19269 	add	a,#0x04
      0075DE F8               [12]19270 	mov	r0,a
      0075DF 86 82            [24]19271 	mov	dpl,@r0
      0075E1                      19272 00112$:
                                  19273 ;	FATFS\src\ff.c:3409: }
      0075E1 85 00 81         [24]19274 	mov	sp,_bp
      0075E4 D0 00            [24]19275 	pop	_bp
      0075E6 02 00 00         [24]19276 	ljmp	__sdcc_banked_ret
                                  19277 ;------------------------------------------------------------
                                  19278 ;Allocation info for local variables in function 'f_getlabel'
                                  19279 ;------------------------------------------------------------
                                  19280 ;label                     Allocated to stack - _bp -6
                                  19281 ;sn                        Allocated to stack - _bp -9
                                  19282 ;path                      Allocated to stack - _bp +11
                                  19283 ;res                       Allocated to stack - _bp +14
                                  19284 ;dj                        Allocated to stack - _bp +15
                                  19285 ;i                         Allocated to registers 
                                  19286 ;j                         Allocated to registers r4 r3 
                                  19287 ;sloc0                     Allocated to stack - _bp +8
                                  19288 ;sloc1                     Allocated to stack - _bp +1
                                  19289 ;sloc2                     Allocated to stack - _bp +4
                                  19290 ;------------------------------------------------------------
                                  19291 ;	FATFS\src\ff.c:3854: FRESULT f_getlabel (
                                  19292 ;	-----------------------------------------
                                  19293 ;	 function f_getlabel
                                  19294 ;	-----------------------------------------
      0075E9                      19295 _f_getlabel:
      0075E9 C0 00            [24]19296 	push	_bp
      0075EB E5 81            [12]19297 	mov	a,sp
      0075ED F5 00            [12]19298 	mov	_bp,a
      0075EF 24 2C            [12]19299 	add	a,#0x2c
      0075F1 F5 81            [12]19300 	mov	sp,a
      0075F3 C8               [12]19301 	xch	a,r0
      0075F4 E5 00            [12]19302 	mov	a,_bp
      0075F6 24 0B            [12]19303 	add	a,#0x0b
      0075F8 C8               [12]19304 	xch	a,r0
      0075F9 A6 82            [24]19305 	mov	@r0,dpl
      0075FB 08               [12]19306 	inc	r0
      0075FC A6 83            [24]19307 	mov	@r0,dph
      0075FE 08               [12]19308 	inc	r0
      0075FF A6 F0            [24]19309 	mov	@r0,b
                                  19310 ;	FATFS\src\ff.c:3866: res = find_volume(&dj.fs, &path, 0);
      007601 E5 00            [12]19311 	mov	a,_bp
      007603 24 0B            [12]19312 	add	a,#0x0b
      007605 FF               [12]19313 	mov	r7,a
      007606 7E 00            [12]19314 	mov	r6,#0x00
      007608 7D 40            [12]19315 	mov	r5,#0x40
      00760A E5 00            [12]19316 	mov	a,_bp
      00760C 24 0F            [12]19317 	add	a,#0x0f
      00760E F9               [12]19318 	mov	r1,a
      00760F FC               [12]19319 	mov	r4,a
      007610 7B 00            [12]19320 	mov	r3,#0x00
      007612 7A 40            [12]19321 	mov	r2,#0x40
      007614 C0 01            [24]19322 	push	ar1
      007616 E4               [12]19323 	clr	a
      007617 C0 E0            [24]19324 	push	acc
      007619 C0 07            [24]19325 	push	ar7
      00761B C0 06            [24]19326 	push	ar6
      00761D C0 05            [24]19327 	push	ar5
      00761F 8C 82            [24]19328 	mov	dpl,r4
      007621 8B 83            [24]19329 	mov	dph,r3
      007623 8A F0            [24]19330 	mov	b,r2
      007625 78 29            [12]19331 	mov	r0,#_find_volume
      007627 79 42            [12]19332 	mov	r1,#(_find_volume >> 8)
      007629 7A 00            [12]19333 	mov	r2,#(_find_volume >> 16)
      00762B 12 00 00         [24]19334 	lcall	__sdcc_banked_call
      00762E AF 82            [24]19335 	mov	r7,dpl
      007630 E5 81            [12]19336 	mov	a,sp
      007632 24 FC            [12]19337 	add	a,#0xfc
      007634 F5 81            [12]19338 	mov	sp,a
      007636 D0 01            [24]19339 	pop	ar1
      007638 E5 00            [12]19340 	mov	a,_bp
      00763A 24 0E            [12]19341 	add	a,#0x0e
      00763C F8               [12]19342 	mov	r0,a
      00763D A6 07            [24]19343 	mov	@r0,ar7
                                  19344 ;	FATFS\src\ff.c:3869: if (res == FR_OK && label) {
      00763F E5 00            [12]19345 	mov	a,_bp
      007641 24 0E            [12]19346 	add	a,#0x0e
      007643 F8               [12]19347 	mov	r0,a
      007644 E6               [12]19348 	mov	a,@r0
      007645 60 03            [24]19349 	jz	00169$
      007647 02 77 8D         [24]19350 	ljmp	00113$
      00764A                      19351 00169$:
      00764A E5 00            [12]19352 	mov	a,_bp
      00764C 24 FA            [12]19353 	add	a,#0xfa
      00764E F8               [12]19354 	mov	r0,a
      00764F E6               [12]19355 	mov	a,@r0
      007650 08               [12]19356 	inc	r0
      007651 46               [12]19357 	orl	a,@r0
      007652 70 03            [24]19358 	jnz	00170$
      007654 02 77 8D         [24]19359 	ljmp	00113$
      007657                      19360 00170$:
                                  19361 ;	FATFS\src\ff.c:3870: dj.sclust = 0;					/* Open root directory */
      007657 E5 00            [12]19362 	mov	a,_bp
      007659 24 0F            [12]19363 	add	a,#0x0f
      00765B FE               [12]19364 	mov	r6,a
      00765C 24 07            [12]19365 	add	a,#0x07
      00765E F8               [12]19366 	mov	r0,a
      00765F 76 00            [12]19367 	mov	@r0,#0x00
      007661 08               [12]19368 	inc	r0
      007662 76 00            [12]19369 	mov	@r0,#0x00
      007664 08               [12]19370 	inc	r0
      007665 76 00            [12]19371 	mov	@r0,#0x00
      007667 08               [12]19372 	inc	r0
      007668 76 00            [12]19373 	mov	@r0,#0x00
                                  19374 ;	FATFS\src\ff.c:3871: res = dir_sdi(&dj, 0);
      00766A 8E 05            [24]19375 	mov	ar5,r6
      00766C 7C 00            [12]19376 	mov	r4,#0x00
      00766E 7B 40            [12]19377 	mov	r3,#0x40
      007670 C0 06            [24]19378 	push	ar6
      007672 C0 01            [24]19379 	push	ar1
      007674 E4               [12]19380 	clr	a
      007675 C0 E0            [24]19381 	push	acc
      007677 C0 E0            [24]19382 	push	acc
      007679 8D 82            [24]19383 	mov	dpl,r5
      00767B 8C 83            [24]19384 	mov	dph,r4
      00767D 8B F0            [24]19385 	mov	b,r3
      00767F 78 16            [12]19386 	mov	r0,#_dir_sdi
      007681 79 16            [12]19387 	mov	r1,#(_dir_sdi >> 8)
      007683 7A 00            [12]19388 	mov	r2,#(_dir_sdi >> 16)
      007685 12 00 00         [24]19389 	lcall	__sdcc_banked_call
      007688 AD 82            [24]19390 	mov	r5,dpl
      00768A 15 81            [12]19391 	dec	sp
      00768C 15 81            [12]19392 	dec	sp
      00768E D0 01            [24]19393 	pop	ar1
      007690 D0 06            [24]19394 	pop	ar6
      007692 E5 00            [12]19395 	mov	a,_bp
      007694 24 0E            [12]19396 	add	a,#0x0e
      007696 F8               [12]19397 	mov	r0,a
      007697 A6 05            [24]19398 	mov	@r0,ar5
                                  19399 ;	FATFS\src\ff.c:3872: if (res == FR_OK) {
      007699 E5 00            [12]19400 	mov	a,_bp
      00769B 24 0E            [12]19401 	add	a,#0x0e
      00769D F8               [12]19402 	mov	r0,a
      00769E E6               [12]19403 	mov	a,@r0
      00769F 60 03            [24]19404 	jz	00171$
      0076A1 02 77 8D         [24]19405 	ljmp	00113$
      0076A4                      19406 00171$:
                                  19407 ;	FATFS\src\ff.c:3873: res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
      0076A4 8E 05            [24]19408 	mov	ar5,r6
      0076A6 7C 00            [12]19409 	mov	r4,#0x00
      0076A8 7B 40            [12]19410 	mov	r3,#0x40
      0076AA C0 06            [24]19411 	push	ar6
      0076AC C0 01            [24]19412 	push	ar1
      0076AE 74 01            [12]19413 	mov	a,#0x01
      0076B0 C0 E0            [24]19414 	push	acc
      0076B2 E4               [12]19415 	clr	a
      0076B3 C0 E0            [24]19416 	push	acc
      0076B5 8D 82            [24]19417 	mov	dpl,r5
      0076B7 8C 83            [24]19418 	mov	dph,r4
      0076B9 8B F0            [24]19419 	mov	b,r3
      0076BB 78 69            [12]19420 	mov	r0,#_dir_read
      0076BD 79 29            [12]19421 	mov	r1,#(_dir_read >> 8)
      0076BF 7A 00            [12]19422 	mov	r2,#(_dir_read >> 16)
      0076C1 12 00 00         [24]19423 	lcall	__sdcc_banked_call
      0076C4 AD 82            [24]19424 	mov	r5,dpl
      0076C6 15 81            [12]19425 	dec	sp
      0076C8 15 81            [12]19426 	dec	sp
      0076CA D0 01            [24]19427 	pop	ar1
      0076CC D0 06            [24]19428 	pop	ar6
      0076CE E5 00            [12]19429 	mov	a,_bp
      0076D0 24 0E            [12]19430 	add	a,#0x0e
      0076D2 F8               [12]19431 	mov	r0,a
      0076D3 A6 05            [24]19432 	mov	@r0,ar5
                                  19433 ;	FATFS\src\ff.c:3874: if (res == FR_OK) {			/* A volume label is exist */
      0076D5 E5 00            [12]19434 	mov	a,_bp
      0076D7 24 0E            [12]19435 	add	a,#0x0e
      0076D9 F8               [12]19436 	mov	r0,a
      0076DA E6               [12]19437 	mov	a,@r0
      0076DB 60 03            [24]19438 	jz	00172$
      0076DD 02 77 67         [24]19439 	ljmp	00107$
      0076E0                      19440 00172$:
                                  19441 ;	FATFS\src\ff.c:3885: mem_cpy(label, dj.dir, 11);
      0076E0 C0 01            [24]19442 	push	ar1
      0076E2 74 13            [12]19443 	mov	a,#0x13
      0076E4 2E               [12]19444 	add	a,r6
      0076E5 F8               [12]19445 	mov	r0,a
      0076E6 86 04            [24]19446 	mov	ar4,@r0
      0076E8 08               [12]19447 	inc	r0
      0076E9 86 05            [24]19448 	mov	ar5,@r0
      0076EB 08               [12]19449 	inc	r0
      0076EC 86 06            [24]19450 	mov	ar6,@r0
      0076EE E5 00            [12]19451 	mov	a,_bp
      0076F0 24 FA            [12]19452 	add	a,#0xfa
      0076F2 F8               [12]19453 	mov	r0,a
      0076F3 86 02            [24]19454 	mov	ar2,@r0
      0076F5 08               [12]19455 	inc	r0
      0076F6 86 03            [24]19456 	mov	ar3,@r0
      0076F8 08               [12]19457 	inc	r0
      0076F9 86 07            [24]19458 	mov	ar7,@r0
      0076FB C0 01            [24]19459 	push	ar1
      0076FD 74 0B            [12]19460 	mov	a,#0x0b
      0076FF C0 E0            [24]19461 	push	acc
      007701 E4               [12]19462 	clr	a
      007702 C0 E0            [24]19463 	push	acc
      007704 C0 04            [24]19464 	push	ar4
      007706 C0 05            [24]19465 	push	ar5
      007708 C0 06            [24]19466 	push	ar6
      00770A 8A 82            [24]19467 	mov	dpl,r2
      00770C 8B 83            [24]19468 	mov	dph,r3
      00770E 8F F0            [24]19469 	mov	b,r7
      007710 78 B9            [12]19470 	mov	r0,#_mem_cpy
      007712 79 0B            [12]19471 	mov	r1,#(_mem_cpy >> 8)
      007714 7A 00            [12]19472 	mov	r2,#(_mem_cpy >> 16)
      007716 12 00 00         [24]19473 	lcall	__sdcc_banked_call
      007719 E5 81            [12]19474 	mov	a,sp
      00771B 24 FB            [12]19475 	add	a,#0xfb
      00771D F5 81            [12]19476 	mov	sp,a
      00771F D0 01            [24]19477 	pop	ar1
                                  19478 ;	FATFS\src\ff.c:3888: do {
      007721 7C 0B            [12]19479 	mov	r4,#0x0b
      007723 7B 00            [12]19480 	mov	r3,#0x00
                                  19481 ;	FATFS\src\ff.c:3909: LEAVE_FF(dj.fs, res);
      007725 D0 01            [24]19482 	pop	ar1
                                  19483 ;	FATFS\src\ff.c:3888: do {
      007727                      19484 00103$:
                                  19485 ;	FATFS\src\ff.c:3889: label[j] = 0;
      007727 E5 00            [12]19486 	mov	a,_bp
      007729 24 FA            [12]19487 	add	a,#0xfa
      00772B F8               [12]19488 	mov	r0,a
      00772C EC               [12]19489 	mov	a,r4
      00772D 26               [12]19490 	add	a,@r0
      00772E FD               [12]19491 	mov	r5,a
      00772F EB               [12]19492 	mov	a,r3
      007730 08               [12]19493 	inc	r0
      007731 36               [12]19494 	addc	a,@r0
      007732 FE               [12]19495 	mov	r6,a
      007733 08               [12]19496 	inc	r0
      007734 86 07            [24]19497 	mov	ar7,@r0
      007736 8D 82            [24]19498 	mov	dpl,r5
      007738 8E 83            [24]19499 	mov	dph,r6
      00773A 8F F0            [24]19500 	mov	b,r7
      00773C E4               [12]19501 	clr	a
      00773D 12 00 00         [24]19502 	lcall	__gptrput
                                  19503 ;	FATFS\src\ff.c:3890: if (!j) break;
      007740 EC               [12]19504 	mov	a,r4
      007741 4B               [12]19505 	orl	a,r3
      007742 60 23            [24]19506 	jz	00107$
                                  19507 ;	FATFS\src\ff.c:3891: } while (label[--j] == ' ');
      007744 1C               [12]19508 	dec	r4
      007745 BC FF 01         [24]19509 	cjne	r4,#0xff,00174$
      007748 1B               [12]19510 	dec	r3
      007749                      19511 00174$:
      007749 E5 00            [12]19512 	mov	a,_bp
      00774B 24 FA            [12]19513 	add	a,#0xfa
      00774D F8               [12]19514 	mov	r0,a
      00774E EC               [12]19515 	mov	a,r4
      00774F 26               [12]19516 	add	a,@r0
      007750 FD               [12]19517 	mov	r5,a
      007751 EB               [12]19518 	mov	a,r3
      007752 08               [12]19519 	inc	r0
      007753 36               [12]19520 	addc	a,@r0
      007754 FE               [12]19521 	mov	r6,a
      007755 08               [12]19522 	inc	r0
      007756 86 07            [24]19523 	mov	ar7,@r0
      007758 8D 82            [24]19524 	mov	dpl,r5
      00775A 8E 83            [24]19525 	mov	dph,r6
      00775C 8F F0            [24]19526 	mov	b,r7
      00775E 12 00 00         [24]19527 	lcall	__gptrget
      007761 FD               [12]19528 	mov	r5,a
      007762 BD 20 02         [24]19529 	cjne	r5,#0x20,00175$
      007765 80 C0            [24]19530 	sjmp	00103$
      007767                      19531 00175$:
      007767                      19532 00107$:
                                  19533 ;	FATFS\src\ff.c:3893: if (res == FR_NO_FILE) {	/* No label, return nul string */
      007767 E5 00            [12]19534 	mov	a,_bp
      007769 24 0E            [12]19535 	add	a,#0x0e
      00776B F8               [12]19536 	mov	r0,a
      00776C B6 04 1E         [24]19537 	cjne	@r0,#0x04,00113$
                                  19538 ;	FATFS\src\ff.c:3894: label[0] = 0;
      00776F E5 00            [12]19539 	mov	a,_bp
      007771 24 FA            [12]19540 	add	a,#0xfa
      007773 F8               [12]19541 	mov	r0,a
      007774 86 05            [24]19542 	mov	ar5,@r0
      007776 08               [12]19543 	inc	r0
      007777 86 06            [24]19544 	mov	ar6,@r0
      007779 08               [12]19545 	inc	r0
      00777A 86 07            [24]19546 	mov	ar7,@r0
      00777C 8D 82            [24]19547 	mov	dpl,r5
      00777E 8E 83            [24]19548 	mov	dph,r6
      007780 8F F0            [24]19549 	mov	b,r7
      007782 E4               [12]19550 	clr	a
      007783 12 00 00         [24]19551 	lcall	__gptrput
                                  19552 ;	FATFS\src\ff.c:3895: res = FR_OK;
      007786 E5 00            [12]19553 	mov	a,_bp
      007788 24 0E            [12]19554 	add	a,#0x0e
      00778A F8               [12]19555 	mov	r0,a
      00778B 76 00            [12]19556 	mov	@r0,#0x00
      00778D                      19557 00113$:
                                  19558 ;	FATFS\src\ff.c:3901: if (res == FR_OK && sn) {
      00778D E5 00            [12]19559 	mov	a,_bp
      00778F 24 0E            [12]19560 	add	a,#0x0e
      007791 F8               [12]19561 	mov	r0,a
      007792 E6               [12]19562 	mov	a,@r0
      007793 60 03            [24]19563 	jz	00178$
      007795 02 79 4E         [24]19564 	ljmp	00118$
      007798                      19565 00178$:
      007798 E5 00            [12]19566 	mov	a,_bp
      00779A 24 F7            [12]19567 	add	a,#0xf7
      00779C F8               [12]19568 	mov	r0,a
      00779D E6               [12]19569 	mov	a,@r0
      00779E 08               [12]19570 	inc	r0
      00779F 46               [12]19571 	orl	a,@r0
      0077A0 70 03            [24]19572 	jnz	00179$
      0077A2 02 79 4E         [24]19573 	ljmp	00118$
      0077A5                      19574 00179$:
                                  19575 ;	FATFS\src\ff.c:3902: res = move_window(dj.fs, dj.fs->volbase);
      0077A5 E5 00            [12]19576 	mov	a,_bp
      0077A7 24 08            [12]19577 	add	a,#0x08
      0077A9 F8               [12]19578 	mov	r0,a
      0077AA E7               [12]19579 	mov	a,@r1
      0077AB F6               [12]19580 	mov	@r0,a
      0077AC 09               [12]19581 	inc	r1
      0077AD E7               [12]19582 	mov	a,@r1
      0077AE 08               [12]19583 	inc	r0
      0077AF F6               [12]19584 	mov	@r0,a
      0077B0 09               [12]19585 	inc	r1
      0077B1 E7               [12]19586 	mov	a,@r1
      0077B2 08               [12]19587 	inc	r0
      0077B3 F6               [12]19588 	mov	@r0,a
      0077B4 19               [12]19589 	dec	r1
      0077B5 19               [12]19590 	dec	r1
      0077B6 E5 00            [12]19591 	mov	a,_bp
      0077B8 24 08            [12]19592 	add	a,#0x08
      0077BA F8               [12]19593 	mov	r0,a
      0077BB 74 12            [12]19594 	mov	a,#0x12
      0077BD 26               [12]19595 	add	a,@r0
      0077BE FA               [12]19596 	mov	r2,a
      0077BF E4               [12]19597 	clr	a
      0077C0 08               [12]19598 	inc	r0
      0077C1 36               [12]19599 	addc	a,@r0
      0077C2 FB               [12]19600 	mov	r3,a
      0077C3 08               [12]19601 	inc	r0
      0077C4 86 04            [24]19602 	mov	ar4,@r0
      0077C6 C0 01            [24]19603 	push	ar1
      0077C8 8A 82            [24]19604 	mov	dpl,r2
      0077CA 8B 83            [24]19605 	mov	dph,r3
      0077CC 8C F0            [24]19606 	mov	b,r4
      0077CE 12 00 00         [24]19607 	lcall	__gptrget
      0077D1 FA               [12]19608 	mov	r2,a
      0077D2 A3               [24]19609 	inc	dptr
      0077D3 12 00 00         [24]19610 	lcall	__gptrget
      0077D6 FB               [12]19611 	mov	r3,a
      0077D7 A3               [24]19612 	inc	dptr
      0077D8 12 00 00         [24]19613 	lcall	__gptrget
      0077DB FC               [12]19614 	mov	r4,a
      0077DC A3               [24]19615 	inc	dptr
      0077DD 12 00 00         [24]19616 	lcall	__gptrget
      0077E0 FF               [12]19617 	mov	r7,a
      0077E1 C0 01            [24]19618 	push	ar1
      0077E3 C0 02            [24]19619 	push	ar2
      0077E5 C0 03            [24]19620 	push	ar3
      0077E7 C0 04            [24]19621 	push	ar4
      0077E9 C0 07            [24]19622 	push	ar7
      0077EB E5 00            [12]19623 	mov	a,_bp
      0077ED 24 08            [12]19624 	add	a,#0x08
      0077EF F8               [12]19625 	mov	r0,a
      0077F0 86 82            [24]19626 	mov	dpl,@r0
      0077F2 08               [12]19627 	inc	r0
      0077F3 86 83            [24]19628 	mov	dph,@r0
      0077F5 08               [12]19629 	inc	r0
      0077F6 86 F0            [24]19630 	mov	b,@r0
      0077F8 78 7C            [12]19631 	mov	r0,#_move_window
      0077FA 79 0D            [12]19632 	mov	r1,#(_move_window >> 8)
      0077FC 7A 00            [12]19633 	mov	r2,#(_move_window >> 16)
      0077FE 12 00 00         [24]19634 	lcall	__sdcc_banked_call
      007801 AF 82            [24]19635 	mov	r7,dpl
      007803 E5 81            [12]19636 	mov	a,sp
      007805 24 FC            [12]19637 	add	a,#0xfc
      007807 F5 81            [12]19638 	mov	sp,a
      007809 D0 01            [24]19639 	pop	ar1
      00780B E5 00            [12]19640 	mov	a,_bp
      00780D 24 0E            [12]19641 	add	a,#0x0e
      00780F F8               [12]19642 	mov	r0,a
      007810 A6 07            [24]19643 	mov	@r0,ar7
                                  19644 ;	FATFS\src\ff.c:3903: if (res == FR_OK) {
      007812 D0 01            [24]19645 	pop	ar1
      007814 E5 00            [12]19646 	mov	a,_bp
      007816 24 0E            [12]19647 	add	a,#0x0e
      007818 F8               [12]19648 	mov	r0,a
      007819 E6               [12]19649 	mov	a,@r0
      00781A 60 03            [24]19650 	jz	00180$
      00781C 02 79 4E         [24]19651 	ljmp	00118$
      00781F                      19652 00180$:
                                  19653 ;	FATFS\src\ff.c:3904: i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
      00781F 87 05            [24]19654 	mov	ar5,@r1
      007821 09               [12]19655 	inc	r1
      007822 87 06            [24]19656 	mov	ar6,@r1
      007824 09               [12]19657 	inc	r1
      007825 87 07            [24]19658 	mov	ar7,@r1
      007827 19               [12]19659 	dec	r1
      007828 19               [12]19660 	dec	r1
      007829 8D 82            [24]19661 	mov	dpl,r5
      00782B 8E 83            [24]19662 	mov	dph,r6
      00782D 8F F0            [24]19663 	mov	b,r7
      00782F 12 00 00         [24]19664 	lcall	__gptrget
      007832 FD               [12]19665 	mov	r5,a
      007833 BD 03 06         [24]19666 	cjne	r5,#0x03,00122$
      007836 7D 43            [12]19667 	mov	r5,#0x43
      007838 7C 00            [12]19668 	mov	r4,#0x00
      00783A 80 04            [24]19669 	sjmp	00123$
      00783C                      19670 00122$:
      00783C 7D 27            [12]19671 	mov	r5,#0x27
      00783E 7C 00            [12]19672 	mov	r4,#0x00
      007840                      19673 00123$:
                                  19674 ;	FATFS\src\ff.c:3905: *sn = LD_DWORD(&dj.fs->win[i]);
      007840 E5 00            [12]19675 	mov	a,_bp
      007842 24 F7            [12]19676 	add	a,#0xf7
      007844 F8               [12]19677 	mov	r0,a
      007845 C0 01            [24]19678 	push	ar1
      007847 E5 00            [12]19679 	mov	a,_bp
      007849 24 08            [12]19680 	add	a,#0x08
      00784B F9               [12]19681 	mov	r1,a
      00784C E6               [12]19682 	mov	a,@r0
      00784D F7               [12]19683 	mov	@r1,a
      00784E 08               [12]19684 	inc	r0
      00784F 09               [12]19685 	inc	r1
      007850 E6               [12]19686 	mov	a,@r0
      007851 F7               [12]19687 	mov	@r1,a
      007852 08               [12]19688 	inc	r0
      007853 09               [12]19689 	inc	r1
      007854 E6               [12]19690 	mov	a,@r0
      007855 F7               [12]19691 	mov	@r1,a
      007856 D0 01            [24]19692 	pop	ar1
      007858 87 02            [24]19693 	mov	ar2,@r1
      00785A 09               [12]19694 	inc	r1
      00785B 87 06            [24]19695 	mov	ar6,@r1
      00785D 09               [12]19696 	inc	r1
      00785E 87 07            [24]19697 	mov	ar7,@r1
      007860 74 26            [12]19698 	mov	a,#0x26
      007862 2A               [12]19699 	add	a,r2
      007863 FA               [12]19700 	mov	r2,a
      007864 E4               [12]19701 	clr	a
      007865 3E               [12]19702 	addc	a,r6
      007866 FE               [12]19703 	mov	r6,a
      007867 A8 00            [24]19704 	mov	r0,_bp
      007869 08               [12]19705 	inc	r0
      00786A ED               [12]19706 	mov	a,r5
      00786B 2A               [12]19707 	add	a,r2
      00786C F6               [12]19708 	mov	@r0,a
      00786D EC               [12]19709 	mov	a,r4
      00786E 3E               [12]19710 	addc	a,r6
      00786F 08               [12]19711 	inc	r0
      007870 F6               [12]19712 	mov	@r0,a
      007871 08               [12]19713 	inc	r0
      007872 A6 07            [24]19714 	mov	@r0,ar7
      007874 A8 00            [24]19715 	mov	r0,_bp
      007876 08               [12]19716 	inc	r0
      007877 74 03            [12]19717 	mov	a,#0x03
      007879 26               [12]19718 	add	a,@r0
      00787A FB               [12]19719 	mov	r3,a
      00787B E4               [12]19720 	clr	a
      00787C 08               [12]19721 	inc	r0
      00787D 36               [12]19722 	addc	a,@r0
      00787E FC               [12]19723 	mov	r4,a
      00787F 08               [12]19724 	inc	r0
      007880 86 05            [24]19725 	mov	ar5,@r0
      007882 8B 82            [24]19726 	mov	dpl,r3
      007884 8C 83            [24]19727 	mov	dph,r4
      007886 8D F0            [24]19728 	mov	b,r5
      007888 12 00 00         [24]19729 	lcall	__gptrget
      00788B FB               [12]19730 	mov	r3,a
      00788C E4               [12]19731 	clr	a
      00788D E5 00            [12]19732 	mov	a,_bp
      00788F 24 04            [12]19733 	add	a,#0x04
      007891 F8               [12]19734 	mov	r0,a
      007892 08               [12]19735 	inc	r0
      007893 08               [12]19736 	inc	r0
      007894 08               [12]19737 	inc	r0
      007895 A6 03            [24]19738 	mov	@r0,ar3
      007897 18               [12]19739 	dec	r0
      007898 18               [12]19740 	dec	r0
      007899 18               [12]19741 	dec	r0
      00789A 76 00            [12]19742 	mov	@r0,#0x00
      00789C 08               [12]19743 	inc	r0
      00789D 76 00            [12]19744 	mov	@r0,#0x00
      00789F 08               [12]19745 	inc	r0
      0078A0 76 00            [12]19746 	mov	@r0,#0x00
      0078A2 A8 00            [24]19747 	mov	r0,_bp
      0078A4 08               [12]19748 	inc	r0
      0078A5 74 02            [12]19749 	mov	a,#0x02
      0078A7 26               [12]19750 	add	a,@r0
      0078A8 FA               [12]19751 	mov	r2,a
      0078A9 E4               [12]19752 	clr	a
      0078AA 08               [12]19753 	inc	r0
      0078AB 36               [12]19754 	addc	a,@r0
      0078AC FE               [12]19755 	mov	r6,a
      0078AD 08               [12]19756 	inc	r0
      0078AE 86 07            [24]19757 	mov	ar7,@r0
      0078B0 8A 82            [24]19758 	mov	dpl,r2
      0078B2 8E 83            [24]19759 	mov	dph,r6
      0078B4 8F F0            [24]19760 	mov	b,r7
      0078B6 12 00 00         [24]19761 	lcall	__gptrget
      0078B9 FA               [12]19762 	mov	r2,a
      0078BA 7F 00            [12]19763 	mov	r7,#0x00
      0078BC 8F 05            [24]19764 	mov	ar5,r7
      0078BE 8A 06            [24]19765 	mov	ar6,r2
      0078C0 E4               [12]19766 	clr	a
      0078C1 FA               [12]19767 	mov	r2,a
      0078C2 FF               [12]19768 	mov	r7,a
      0078C3 E5 00            [12]19769 	mov	a,_bp
      0078C5 24 04            [12]19770 	add	a,#0x04
      0078C7 F8               [12]19771 	mov	r0,a
      0078C8 EA               [12]19772 	mov	a,r2
      0078C9 46               [12]19773 	orl	a,@r0
      0078CA F6               [12]19774 	mov	@r0,a
      0078CB EF               [12]19775 	mov	a,r7
      0078CC 08               [12]19776 	inc	r0
      0078CD 46               [12]19777 	orl	a,@r0
      0078CE F6               [12]19778 	mov	@r0,a
      0078CF EE               [12]19779 	mov	a,r6
      0078D0 08               [12]19780 	inc	r0
      0078D1 46               [12]19781 	orl	a,@r0
      0078D2 F6               [12]19782 	mov	@r0,a
      0078D3 ED               [12]19783 	mov	a,r5
      0078D4 08               [12]19784 	inc	r0
      0078D5 46               [12]19785 	orl	a,@r0
      0078D6 F6               [12]19786 	mov	@r0,a
      0078D7 A8 00            [24]19787 	mov	r0,_bp
      0078D9 08               [12]19788 	inc	r0
      0078DA 74 01            [12]19789 	mov	a,#0x01
      0078DC 26               [12]19790 	add	a,@r0
      0078DD FB               [12]19791 	mov	r3,a
      0078DE E4               [12]19792 	clr	a
      0078DF 08               [12]19793 	inc	r0
      0078E0 36               [12]19794 	addc	a,@r0
      0078E1 FC               [12]19795 	mov	r4,a
      0078E2 08               [12]19796 	inc	r0
      0078E3 86 07            [24]19797 	mov	ar7,@r0
      0078E5 8B 82            [24]19798 	mov	dpl,r3
      0078E7 8C 83            [24]19799 	mov	dph,r4
      0078E9 8F F0            [24]19800 	mov	b,r7
      0078EB 12 00 00         [24]19801 	lcall	__gptrget
      0078EE FF               [12]19802 	mov	r7,a
      0078EF E4               [12]19803 	clr	a
      0078F0 FB               [12]19804 	mov	r3,a
      0078F1 FE               [12]19805 	mov	r6,a
      0078F2 FD               [12]19806 	mov	r5,a
      0078F3 E5 00            [12]19807 	mov	a,_bp
      0078F5 24 04            [12]19808 	add	a,#0x04
      0078F7 F8               [12]19809 	mov	r0,a
      0078F8 EB               [12]19810 	mov	a,r3
      0078F9 46               [12]19811 	orl	a,@r0
      0078FA F6               [12]19812 	mov	@r0,a
      0078FB EF               [12]19813 	mov	a,r7
      0078FC 08               [12]19814 	inc	r0
      0078FD 46               [12]19815 	orl	a,@r0
      0078FE F6               [12]19816 	mov	@r0,a
      0078FF EE               [12]19817 	mov	a,r6
      007900 08               [12]19818 	inc	r0
      007901 46               [12]19819 	orl	a,@r0
      007902 F6               [12]19820 	mov	@r0,a
      007903 ED               [12]19821 	mov	a,r5
      007904 08               [12]19822 	inc	r0
      007905 46               [12]19823 	orl	a,@r0
      007906 F6               [12]19824 	mov	@r0,a
      007907 A8 00            [24]19825 	mov	r0,_bp
      007909 08               [12]19826 	inc	r0
      00790A 86 82            [24]19827 	mov	dpl,@r0
      00790C 08               [12]19828 	inc	r0
      00790D 86 83            [24]19829 	mov	dph,@r0
      00790F 08               [12]19830 	inc	r0
      007910 86 F0            [24]19831 	mov	b,@r0
      007912 12 00 00         [24]19832 	lcall	__gptrget
      007915 FA               [12]19833 	mov	r2,a
      007916 E4               [12]19834 	clr	a
      007917 FC               [12]19835 	mov	r4,a
      007918 FE               [12]19836 	mov	r6,a
      007919 FF               [12]19837 	mov	r7,a
      00791A E5 00            [12]19838 	mov	a,_bp
      00791C 24 04            [12]19839 	add	a,#0x04
      00791E F8               [12]19840 	mov	r0,a
      00791F E6               [12]19841 	mov	a,@r0
      007920 42 02            [12]19842 	orl	ar2,a
      007922 08               [12]19843 	inc	r0
      007923 E6               [12]19844 	mov	a,@r0
      007924 42 04            [12]19845 	orl	ar4,a
      007926 08               [12]19846 	inc	r0
      007927 E6               [12]19847 	mov	a,@r0
      007928 42 06            [12]19848 	orl	ar6,a
      00792A 08               [12]19849 	inc	r0
      00792B E6               [12]19850 	mov	a,@r0
      00792C 42 07            [12]19851 	orl	ar7,a
      00792E E5 00            [12]19852 	mov	a,_bp
      007930 24 08            [12]19853 	add	a,#0x08
      007932 F8               [12]19854 	mov	r0,a
      007933 86 82            [24]19855 	mov	dpl,@r0
      007935 08               [12]19856 	inc	r0
      007936 86 83            [24]19857 	mov	dph,@r0
      007938 08               [12]19858 	inc	r0
      007939 86 F0            [24]19859 	mov	b,@r0
      00793B EA               [12]19860 	mov	a,r2
      00793C 12 00 00         [24]19861 	lcall	__gptrput
      00793F A3               [24]19862 	inc	dptr
      007940 EC               [12]19863 	mov	a,r4
      007941 12 00 00         [24]19864 	lcall	__gptrput
      007944 A3               [24]19865 	inc	dptr
      007945 EE               [12]19866 	mov	a,r6
      007946 12 00 00         [24]19867 	lcall	__gptrput
      007949 A3               [24]19868 	inc	dptr
      00794A EF               [12]19869 	mov	a,r7
      00794B 12 00 00         [24]19870 	lcall	__gptrput
      00794E                      19871 00118$:
                                  19872 ;	FATFS\src\ff.c:3909: LEAVE_FF(dj.fs, res);
      00794E E5 00            [12]19873 	mov	a,_bp
      007950 24 0E            [12]19874 	add	a,#0x0e
      007952 F8               [12]19875 	mov	r0,a
      007953 86 82            [24]19876 	mov	dpl,@r0
                                  19877 ;	FATFS\src\ff.c:3910: }
      007955 85 00 81         [24]19878 	mov	sp,_bp
      007958 D0 00            [24]19879 	pop	_bp
      00795A 02 00 00         [24]19880 	ljmp	__sdcc_banked_ret
                                  19881 ;------------------------------------------------------------
                                  19882 ;Allocation info for local variables in function 'f_gets'
                                  19883 ;------------------------------------------------------------
                                  19884 ;len                       Allocated to stack - _bp -5
                                  19885 ;fp                        Allocated to stack - _bp -8
                                  19886 ;buff                      Allocated to stack - _bp +1
                                  19887 ;n                         Allocated to stack - _bp +7
                                  19888 ;c                         Allocated to registers r7 
                                  19889 ;p                         Allocated to stack - _bp +4
                                  19890 ;s                         Allocated to stack - _bp +9
                                  19891 ;rc                        Allocated to stack - _bp +11
                                  19892 ;sloc0                     Allocated to stack - _bp +14
                                  19893 ;------------------------------------------------------------
                                  19894 ;	FATFS\src\ff.c:4395: TCHAR* f_gets (
                                  19895 ;	-----------------------------------------
                                  19896 ;	 function f_gets
                                  19897 ;	-----------------------------------------
      00795D                      19898 _f_gets:
      00795D C0 00            [24]19899 	push	_bp
      00795F 85 81 00         [24]19900 	mov	_bp,sp
      007962 C0 82            [24]19901 	push	dpl
      007964 C0 83            [24]19902 	push	dph
      007966 C0 F0            [24]19903 	push	b
      007968 E5 81            [12]19904 	mov	a,sp
      00796A 24 09            [12]19905 	add	a,#0x09
      00796C F5 81            [12]19906 	mov	sp,a
                                  19907 ;	FATFS\src\ff.c:4407: while (n < len - 1) {	/* Read characters until buffer gets filled */
      00796E E5 00            [12]19908 	mov	a,_bp
      007970 24 FB            [12]19909 	add	a,#0xfb
      007972 F8               [12]19910 	mov	r0,a
      007973 E6               [12]19911 	mov	a,@r0
      007974 24 FF            [12]19912 	add	a,#0xff
      007976 FB               [12]19913 	mov	r3,a
      007977 08               [12]19914 	inc	r0
      007978 E6               [12]19915 	mov	a,@r0
      007979 34 FF            [12]19916 	addc	a,#0xff
      00797B FC               [12]19917 	mov	r4,a
      00797C A8 00            [24]19918 	mov	r0,_bp
      00797E 08               [12]19919 	inc	r0
      00797F E5 00            [12]19920 	mov	a,_bp
      007981 24 04            [12]19921 	add	a,#0x04
      007983 F9               [12]19922 	mov	r1,a
      007984 E6               [12]19923 	mov	a,@r0
      007985 F7               [12]19924 	mov	@r1,a
      007986 08               [12]19925 	inc	r0
      007987 09               [12]19926 	inc	r1
      007988 E6               [12]19927 	mov	a,@r0
      007989 F7               [12]19928 	mov	@r1,a
      00798A 08               [12]19929 	inc	r0
      00798B 09               [12]19930 	inc	r1
      00798C E6               [12]19931 	mov	a,@r0
      00798D F7               [12]19932 	mov	@r1,a
      00798E E5 00            [12]19933 	mov	a,_bp
      007990 24 07            [12]19934 	add	a,#0x07
      007992 F8               [12]19935 	mov	r0,a
      007993 E4               [12]19936 	clr	a
      007994 F6               [12]19937 	mov	@r0,a
      007995 08               [12]19938 	inc	r0
      007996 F6               [12]19939 	mov	@r0,a
      007997                      19940 00108$:
      007997 E5 00            [12]19941 	mov	a,_bp
      007999 24 07            [12]19942 	add	a,#0x07
      00799B F8               [12]19943 	mov	r0,a
      00799C C3               [12]19944 	clr	c
      00799D E6               [12]19945 	mov	a,@r0
      00799E 9B               [12]19946 	subb	a,r3
      00799F 08               [12]19947 	inc	r0
      0079A0 E6               [12]19948 	mov	a,@r0
      0079A1 64 80            [12]19949 	xrl	a,#0x80
      0079A3 8C F0            [24]19950 	mov	b,r4
      0079A5 63 F0 80         [24]19951 	xrl	b,#0x80
      0079A8 95 F0            [12]19952 	subb	a,b
      0079AA 40 03            [24]19953 	jc	00132$
      0079AC 02 7A 47         [24]19954 	ljmp	00110$
      0079AF                      19955 00132$:
                                  19956 ;	FATFS\src\ff.c:4452: f_read(fp, s, 1, &rc);
      0079AF C0 03            [24]19957 	push	ar3
      0079B1 C0 04            [24]19958 	push	ar4
      0079B3 E5 00            [12]19959 	mov	a,_bp
      0079B5 24 0B            [12]19960 	add	a,#0x0b
      0079B7 FA               [12]19961 	mov	r2,a
      0079B8 7C 00            [12]19962 	mov	r4,#0x00
      0079BA 7E 40            [12]19963 	mov	r6,#0x40
      0079BC E5 00            [12]19964 	mov	a,_bp
      0079BE 24 09            [12]19965 	add	a,#0x09
      0079C0 F9               [12]19966 	mov	r1,a
      0079C1 FB               [12]19967 	mov	r3,a
      0079C2 7D 00            [12]19968 	mov	r5,#0x00
      0079C4 7F 40            [12]19969 	mov	r7,#0x40
      0079C6 C0 04            [24]19970 	push	ar4
      0079C8 C0 03            [24]19971 	push	ar3
      0079CA C0 01            [24]19972 	push	ar1
      0079CC C0 02            [24]19973 	push	ar2
      0079CE C0 04            [24]19974 	push	ar4
      0079D0 C0 06            [24]19975 	push	ar6
      0079D2 74 01            [12]19976 	mov	a,#0x01
      0079D4 C0 E0            [24]19977 	push	acc
      0079D6 E4               [12]19978 	clr	a
      0079D7 C0 E0            [24]19979 	push	acc
      0079D9 C0 03            [24]19980 	push	ar3
      0079DB C0 05            [24]19981 	push	ar5
      0079DD C0 07            [24]19982 	push	ar7
      0079DF E5 00            [12]19983 	mov	a,_bp
      0079E1 24 F8            [12]19984 	add	a,#0xf8
      0079E3 F8               [12]19985 	mov	r0,a
      0079E4 86 82            [24]19986 	mov	dpl,@r0
      0079E6 08               [12]19987 	inc	r0
      0079E7 86 83            [24]19988 	mov	dph,@r0
      0079E9 08               [12]19989 	inc	r0
      0079EA 86 F0            [24]19990 	mov	b,@r0
      0079EC 78 32            [12]19991 	mov	r0,#_f_read
      0079EE 79 58            [12]19992 	mov	r1,#(_f_read >> 8)
      0079F0 7A 00            [12]19993 	mov	r2,#(_f_read >> 16)
      0079F2 12 00 00         [24]19994 	lcall	__sdcc_banked_call
      0079F5 E5 81            [12]19995 	mov	a,sp
      0079F7 24 F8            [12]19996 	add	a,#0xf8
      0079F9 F5 81            [12]19997 	mov	sp,a
      0079FB D0 01            [24]19998 	pop	ar1
      0079FD D0 03            [24]19999 	pop	ar3
      0079FF D0 04            [24]20000 	pop	ar4
                                  20001 ;	FATFS\src\ff.c:4453: if (rc != 1) break;
      007A01 E5 00            [12]20002 	mov	a,_bp
      007A03 24 0B            [12]20003 	add	a,#0x0b
      007A05 F8               [12]20004 	mov	r0,a
      007A06 B6 01 06         [24]20005 	cjne	@r0,#0x01,00133$
      007A09 08               [12]20006 	inc	r0
      007A0A B6 00 02         [24]20007 	cjne	@r0,#0x00,00133$
      007A0D 80 06            [24]20008 	sjmp	00134$
      007A0F                      20009 00133$:
      007A0F D0 04            [24]20010 	pop	ar4
      007A11 D0 03            [24]20011 	pop	ar3
      007A13 80 32            [24]20012 	sjmp	00110$
      007A15                      20013 00134$:
      007A15 D0 04            [24]20014 	pop	ar4
      007A17 D0 03            [24]20015 	pop	ar3
                                  20016 ;	FATFS\src\ff.c:4454: c = s[0];
      007A19 87 07            [24]20017 	mov	ar7,@r1
                                  20018 ;	FATFS\src\ff.c:4457: *p++ = c;
      007A1B E5 00            [12]20019 	mov	a,_bp
      007A1D 24 04            [12]20020 	add	a,#0x04
      007A1F F8               [12]20021 	mov	r0,a
      007A20 86 82            [24]20022 	mov	dpl,@r0
      007A22 08               [12]20023 	inc	r0
      007A23 86 83            [24]20024 	mov	dph,@r0
      007A25 08               [12]20025 	inc	r0
      007A26 86 F0            [24]20026 	mov	b,@r0
      007A28 EF               [12]20027 	mov	a,r7
      007A29 12 00 00         [24]20028 	lcall	__gptrput
      007A2C A3               [24]20029 	inc	dptr
      007A2D 18               [12]20030 	dec	r0
      007A2E 18               [12]20031 	dec	r0
      007A2F A6 82            [24]20032 	mov	@r0,dpl
      007A31 08               [12]20033 	inc	r0
      007A32 A6 83            [24]20034 	mov	@r0,dph
                                  20035 ;	FATFS\src\ff.c:4458: n++;
      007A34 E5 00            [12]20036 	mov	a,_bp
      007A36 24 07            [12]20037 	add	a,#0x07
      007A38 F8               [12]20038 	mov	r0,a
      007A39 06               [12]20039 	inc	@r0
      007A3A B6 00 02         [24]20040 	cjne	@r0,#0x00,00135$
      007A3D 08               [12]20041 	inc	r0
      007A3E 06               [12]20042 	inc	@r0
      007A3F                      20043 00135$:
                                  20044 ;	FATFS\src\ff.c:4459: if (c == '\n') break;		/* Break on EOL */
      007A3F BF 0A 02         [24]20045 	cjne	r7,#0x0a,00136$
      007A42 80 03            [24]20046 	sjmp	00137$
      007A44                      20047 00136$:
      007A44 02 79 97         [24]20048 	ljmp	00108$
      007A47                      20049 00137$:
      007A47                      20050 00110$:
                                  20051 ;	FATFS\src\ff.c:4461: *p = 0;
      007A47 E5 00            [12]20052 	mov	a,_bp
      007A49 24 04            [12]20053 	add	a,#0x04
      007A4B F8               [12]20054 	mov	r0,a
      007A4C 86 82            [24]20055 	mov	dpl,@r0
      007A4E 08               [12]20056 	inc	r0
      007A4F 86 83            [24]20057 	mov	dph,@r0
      007A51 08               [12]20058 	inc	r0
      007A52 86 F0            [24]20059 	mov	b,@r0
      007A54 E4               [12]20060 	clr	a
      007A55 12 00 00         [24]20061 	lcall	__gptrput
                                  20062 ;	FATFS\src\ff.c:4462: return n ? buff : 0;			/* When no data read (eof or error), return with error. */
      007A58 E5 00            [12]20063 	mov	a,_bp
      007A5A 24 07            [12]20064 	add	a,#0x07
      007A5C F8               [12]20065 	mov	r0,a
      007A5D E6               [12]20066 	mov	a,@r0
      007A5E 08               [12]20067 	inc	r0
      007A5F 46               [12]20068 	orl	a,@r0
      007A60 60 0D            [24]20069 	jz	00113$
      007A62 A8 00            [24]20070 	mov	r0,_bp
      007A64 08               [12]20071 	inc	r0
      007A65 86 05            [24]20072 	mov	ar5,@r0
      007A67 08               [12]20073 	inc	r0
      007A68 86 06            [24]20074 	mov	ar6,@r0
      007A6A 08               [12]20075 	inc	r0
      007A6B 86 07            [24]20076 	mov	ar7,@r0
      007A6D 80 06            [24]20077 	sjmp	00114$
      007A6F                      20078 00113$:
      007A6F 7D 00            [12]20079 	mov	r5,#0x00
      007A71 7E 00            [12]20080 	mov	r6,#0x00
      007A73 7F 00            [12]20081 	mov	r7,#0x00
      007A75                      20082 00114$:
      007A75 8D 82            [24]20083 	mov	dpl,r5
      007A77 8E 83            [24]20084 	mov	dph,r6
      007A79 8F F0            [24]20085 	mov	b,r7
                                  20086 ;	FATFS\src\ff.c:4463: }
      007A7B 85 00 81         [24]20087 	mov	sp,_bp
      007A7E D0 00            [24]20088 	pop	_bp
      007A80 02 00 00         [24]20089 	ljmp	__sdcc_banked_ret
                                  20090 	.area CSEG    (CODE)
                                  20091 	.area CONST   (CODE)
      00848A                      20092 _ExCvt:
      00848A 80                   20093 	.db #0x80	; 128
      00848B 9A                   20094 	.db #0x9a	; 154
      00848C 90                   20095 	.db #0x90	; 144
      00848D 41                   20096 	.db #0x41	; 65	'A'
      00848E 8E                   20097 	.db #0x8e	; 142
      00848F 41                   20098 	.db #0x41	; 65	'A'
      008490 8F                   20099 	.db #0x8f	; 143
      008491 80                   20100 	.db #0x80	; 128
      008492 45                   20101 	.db #0x45	; 69	'E'
      008493 45                   20102 	.db #0x45	; 69	'E'
      008494 45                   20103 	.db #0x45	; 69	'E'
      008495 49                   20104 	.db #0x49	; 73	'I'
      008496 49                   20105 	.db #0x49	; 73	'I'
      008497 49                   20106 	.db #0x49	; 73	'I'
      008498 8E                   20107 	.db #0x8e	; 142
      008499 8F                   20108 	.db #0x8f	; 143
      00849A 90                   20109 	.db #0x90	; 144
      00849B 92                   20110 	.db #0x92	; 146
      00849C 92                   20111 	.db #0x92	; 146
      00849D 4F                   20112 	.db #0x4f	; 79	'O'
      00849E 99                   20113 	.db #0x99	; 153
      00849F 4F                   20114 	.db #0x4f	; 79	'O'
      0084A0 55                   20115 	.db #0x55	; 85	'U'
      0084A1 55                   20116 	.db #0x55	; 85	'U'
      0084A2 59                   20117 	.db #0x59	; 89	'Y'
      0084A3 99                   20118 	.db #0x99	; 153
      0084A4 9A                   20119 	.db #0x9a	; 154
      0084A5 9B                   20120 	.db #0x9b	; 155
      0084A6 9C                   20121 	.db #0x9c	; 156
      0084A7 9D                   20122 	.db #0x9d	; 157
      0084A8 9E                   20123 	.db #0x9e	; 158
      0084A9 9F                   20124 	.db #0x9f	; 159
      0084AA 41                   20125 	.db #0x41	; 65	'A'
      0084AB 49                   20126 	.db #0x49	; 73	'I'
      0084AC 4F                   20127 	.db #0x4f	; 79	'O'
      0084AD 55                   20128 	.db #0x55	; 85	'U'
      0084AE A5                   20129 	.db #0xa5	; 165
      0084AF A5                   20130 	.db #0xa5	; 165
      0084B0 A6                   20131 	.db #0xa6	; 166
      0084B1 A7                   20132 	.db #0xa7	; 167
      0084B2 A8                   20133 	.db #0xa8	; 168
      0084B3 A9                   20134 	.db #0xa9	; 169
      0084B4 AA                   20135 	.db #0xaa	; 170
      0084B5 AB                   20136 	.db #0xab	; 171
      0084B6 AC                   20137 	.db #0xac	; 172
      0084B7 21                   20138 	.db #0x21	; 33
      0084B8 AE                   20139 	.db #0xae	; 174
      0084B9 AF                   20140 	.db #0xaf	; 175
      0084BA B0                   20141 	.db #0xb0	; 176
      0084BB B1                   20142 	.db #0xb1	; 177
      0084BC B2                   20143 	.db #0xb2	; 178
      0084BD B3                   20144 	.db #0xb3	; 179
      0084BE B4                   20145 	.db #0xb4	; 180
      0084BF B5                   20146 	.db #0xb5	; 181
      0084C0 B6                   20147 	.db #0xb6	; 182
      0084C1 B7                   20148 	.db #0xb7	; 183
      0084C2 B8                   20149 	.db #0xb8	; 184
      0084C3 B9                   20150 	.db #0xb9	; 185
      0084C4 BA                   20151 	.db #0xba	; 186
      0084C5 BB                   20152 	.db #0xbb	; 187
      0084C6 BC                   20153 	.db #0xbc	; 188
      0084C7 BD                   20154 	.db #0xbd	; 189
      0084C8 BE                   20155 	.db #0xbe	; 190
      0084C9 BF                   20156 	.db #0xbf	; 191
      0084CA C0                   20157 	.db #0xc0	; 192
      0084CB C1                   20158 	.db #0xc1	; 193
      0084CC C2                   20159 	.db #0xc2	; 194
      0084CD C3                   20160 	.db #0xc3	; 195
      0084CE C4                   20161 	.db #0xc4	; 196
      0084CF C5                   20162 	.db #0xc5	; 197
      0084D0 C6                   20163 	.db #0xc6	; 198
      0084D1 C7                   20164 	.db #0xc7	; 199
      0084D2 C8                   20165 	.db #0xc8	; 200
      0084D3 C9                   20166 	.db #0xc9	; 201
      0084D4 CA                   20167 	.db #0xca	; 202
      0084D5 CB                   20168 	.db #0xcb	; 203
      0084D6 CC                   20169 	.db #0xcc	; 204
      0084D7 CD                   20170 	.db #0xcd	; 205
      0084D8 CE                   20171 	.db #0xce	; 206
      0084D9 CF                   20172 	.db #0xcf	; 207
      0084DA D0                   20173 	.db #0xd0	; 208
      0084DB D1                   20174 	.db #0xd1	; 209
      0084DC D2                   20175 	.db #0xd2	; 210
      0084DD D3                   20176 	.db #0xd3	; 211
      0084DE D4                   20177 	.db #0xd4	; 212
      0084DF D5                   20178 	.db #0xd5	; 213
      0084E0 D6                   20179 	.db #0xd6	; 214
      0084E1 D7                   20180 	.db #0xd7	; 215
      0084E2 D8                   20181 	.db #0xd8	; 216
      0084E3 D9                   20182 	.db #0xd9	; 217
      0084E4 DA                   20183 	.db #0xda	; 218
      0084E5 DB                   20184 	.db #0xdb	; 219
      0084E6 DC                   20185 	.db #0xdc	; 220
      0084E7 DD                   20186 	.db #0xdd	; 221
      0084E8 DE                   20187 	.db #0xde	; 222
      0084E9 DF                   20188 	.db #0xdf	; 223
      0084EA E0                   20189 	.db #0xe0	; 224
      0084EB E1                   20190 	.db #0xe1	; 225
      0084EC E2                   20191 	.db #0xe2	; 226
      0084ED E3                   20192 	.db #0xe3	; 227
      0084EE E4                   20193 	.db #0xe4	; 228
      0084EF E5                   20194 	.db #0xe5	; 229
      0084F0 E6                   20195 	.db #0xe6	; 230
      0084F1 E7                   20196 	.db #0xe7	; 231
      0084F2 E8                   20197 	.db #0xe8	; 232
      0084F3 E9                   20198 	.db #0xe9	; 233
      0084F4 EA                   20199 	.db #0xea	; 234
      0084F5 EB                   20200 	.db #0xeb	; 235
      0084F6 EC                   20201 	.db #0xec	; 236
      0084F7 ED                   20202 	.db #0xed	; 237
      0084F8 EE                   20203 	.db #0xee	; 238
      0084F9 EF                   20204 	.db #0xef	; 239
      0084FA F0                   20205 	.db #0xf0	; 240
      0084FB F1                   20206 	.db #0xf1	; 241
      0084FC F2                   20207 	.db #0xf2	; 242
      0084FD F3                   20208 	.db #0xf3	; 243
      0084FE F4                   20209 	.db #0xf4	; 244
      0084FF F5                   20210 	.db #0xf5	; 245
      008500 F6                   20211 	.db #0xf6	; 246
      008501 F7                   20212 	.db #0xf7	; 247
      008502 F8                   20213 	.db #0xf8	; 248
      008503 F9                   20214 	.db #0xf9	; 249
      008504 FA                   20215 	.db #0xfa	; 250
      008505 FB                   20216 	.db #0xfb	; 251
      008506 FC                   20217 	.db #0xfc	; 252
      008507 FD                   20218 	.db #0xfd	; 253
      008508 FE                   20219 	.db #0xfe	; 254
      008509 FF                   20220 	.db #0xff	; 255
      00850A                      20221 _LfnOfs:
      00850A 01                   20222 	.db #0x01	; 1
      00850B 03                   20223 	.db #0x03	; 3
      00850C 05                   20224 	.db #0x05	; 5
      00850D 07                   20225 	.db #0x07	; 7
      00850E 09                   20226 	.db #0x09	; 9
      00850F 0E                   20227 	.db #0x0e	; 14
      008510 10                   20228 	.db #0x10	; 16
      008511 12                   20229 	.db #0x12	; 18
      008512 14                   20230 	.db #0x14	; 20
      008513 16                   20231 	.db #0x16	; 22
      008514 18                   20232 	.db #0x18	; 24
      008515 1C                   20233 	.db #0x1c	; 28
      008516 1E                   20234 	.db #0x1e	; 30
      008517                      20235 ___str_0:
      008517 22                   20236 	.db 0x22
      008518 2A 3A 3C 3E 3F 7C    20237 	.ascii "*:<>?|"
      00851E 7F                   20238 	.db 0x7f
      00851F 00                   20239 	.db 0x00
      008520                      20240 ___str_1:
      008520 2B 2C 3B 3D 5B 5D    20241 	.ascii "+,;=[]"
      008526 00                   20242 	.db 0x00
                                  20243 	.area XINIT   (CODE)
                                  20244 	.area CABS    (ABS,CODE)
