                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module ff
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _get_fat
                                     12 	.globl _clust2sect
                                     13 	.globl _disk_read
                                     14 	.globl _disk_status
                                     15 	.globl _disk_initialize
                                     16 	.globl _ff_memfree
                                     17 	.globl _ff_memalloc
                                     18 	.globl _ff_wtoupper
                                     19 	.globl _ff_convert
                                     20 	.globl _f_gets_PARM_3
                                     21 	.globl _f_gets_PARM_2
                                     22 	.globl _f_getlabel_PARM_3
                                     23 	.globl _f_getlabel_PARM_2
                                     24 	.globl _f_stat_PARM_2
                                     25 	.globl _f_readdir_PARM_2
                                     26 	.globl _f_opendir_PARM_2
                                     27 	.globl _f_lseek_PARM_2
                                     28 	.globl _f_read_PARM_4
                                     29 	.globl _f_read_PARM_3
                                     30 	.globl _f_read_PARM_2
                                     31 	.globl _f_open_PARM_3
                                     32 	.globl _f_open_PARM_2
                                     33 	.globl _f_mount_PARM_3
                                     34 	.globl _f_mount_PARM_2
                                     35 	.globl _get_fat_PARM_2
                                     36 	.globl _clust2sect_PARM_2
                                     37 	.globl _f_mount
                                     38 	.globl _f_open
                                     39 	.globl _f_read
                                     40 	.globl _f_close
                                     41 	.globl _f_lseek
                                     42 	.globl _f_opendir
                                     43 	.globl _f_closedir
                                     44 	.globl _f_readdir
                                     45 	.globl _f_stat
                                     46 	.globl _f_getlabel
                                     47 	.globl _f_gets
                                     48 ;--------------------------------------------------------
                                     49 ; special function registers
                                     50 ;--------------------------------------------------------
                                     51 	.area RSEG    (ABS,DATA)
      000000                         52 	.org 0x0000
                                     53 ;--------------------------------------------------------
                                     54 ; special function bits
                                     55 ;--------------------------------------------------------
                                     56 	.area RSEG    (ABS,DATA)
      000000                         57 	.org 0x0000
                                     58 ;--------------------------------------------------------
                                     59 ; overlayable register banks
                                     60 ;--------------------------------------------------------
                                     61 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         62 	.ds 8
                                     63 ;--------------------------------------------------------
                                     64 ; internal ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area DSEG    (DATA)
                           000000    67 Lff.move_window$sloc0$0_1$0==.
      000000                         68 _move_window_sloc0_1_0:
      000000                         69 	.ds 3
                           000003    70 Lff.move_window$sloc1$0_1$0==.
      000003                         71 _move_window_sloc1_1_0:
      000003                         72 	.ds 4
                           000007    73 Lff.clust2sect$sloc0$0_1$0==.
      000007                         74 _clust2sect_sloc0_1_0:
      000007                         75 	.ds 4
                           00000B    76 Lff.get_fat$sloc0$0_1$0==.
      00000B                         77 _get_fat_sloc0_1_0:
      00000B                         78 	.ds 3
                           00000E    79 Lff.get_fat$sloc1$0_1$0==.
      00000E                         80 _get_fat_sloc1_1_0:
      00000E                         81 	.ds 4
                           000012    82 Lff.get_fat$sloc2$0_1$0==.
      000012                         83 _get_fat_sloc2_1_0:
      000012                         84 	.ds 2
                           000014    85 Lff.get_fat$sloc3$0_1$0==.
      000014                         86 _get_fat_sloc3_1_0:
      000014                         87 	.ds 4
                           000018    88 Lff.dir_sdi$sloc0$0_1$0==.
      000018                         89 _dir_sdi_sloc0_1_0:
      000018                         90 	.ds 4
                           00001C    91 Lff.dir_sdi$sloc1$0_1$0==.
      00001C                         92 _dir_sdi_sloc1_1_0:
      00001C                         93 	.ds 2
                           00001E    94 Lff.dir_sdi$sloc2$0_1$0==.
      00001E                         95 _dir_sdi_sloc2_1_0:
      00001E                         96 	.ds 3
                           000021    97 Lff.dir_next$sloc0$0_1$0==.
      000021                         98 _dir_next_sloc0_1_0:
      000021                         99 	.ds 4
                           000025   100 Lff.dir_next$sloc1$0_1$0==.
      000025                        101 _dir_next_sloc1_1_0:
      000025                        102 	.ds 2
                           000027   103 Lff.dir_next$sloc2$0_1$0==.
      000027                        104 _dir_next_sloc2_1_0:
      000027                        105 	.ds 3
                           00002A   106 Lff.dir_next$sloc3$0_1$0==.
      00002A                        107 _dir_next_sloc3_1_0:
      00002A                        108 	.ds 4
                           00002E   109 Lff.dir_next$sloc4$0_1$0==.
      00002E                        110 _dir_next_sloc4_1_0:
      00002E                        111 	.ds 3
                           000031   112 Lff.cmp_lfn$sloc0$0_1$0==.
      000031                        113 _cmp_lfn_sloc0_1_0:
      000031                        114 	.ds 2
                           000033   115 Lff.cmp_lfn$sloc1$0_1$0==.
      000033                        116 _cmp_lfn_sloc1_1_0:
      000033                        117 	.ds 3
                           000036   118 Lff.cmp_lfn$sloc2$0_1$0==.
      000036                        119 _cmp_lfn_sloc2_1_0:
      000036                        120 	.ds 2
                           000038   121 Lff.cmp_lfn$sloc3$0_1$0==.
      000038                        122 _cmp_lfn_sloc3_1_0:
      000038                        123 	.ds 3
                           00003B   124 Lff.pick_lfn$sloc0$0_1$0==.
      00003B                        125 _pick_lfn_sloc0_1_0:
      00003B                        126 	.ds 2
                           00003D   127 Lff.pick_lfn$sloc1$0_1$0==.
      00003D                        128 _pick_lfn_sloc1_1_0:
      00003D                        129 	.ds 3
                           000040   130 Lff.pick_lfn$sloc2$0_1$0==.
      000040                        131 _pick_lfn_sloc2_1_0:
      000040                        132 	.ds 2
                           000042   133 Lff.gen_numname$sloc0$0_1$0==.
      000042                        134 _gen_numname_sloc0_1_0:
      000042                        135 	.ds 4
                           000046   136 Lff.gen_numname$sloc1$0_1$0==.
      000046                        137 _gen_numname_sloc1_1_0:
      000046                        138 	.ds 2
                           000048   139 Lff.dir_find$sloc0$0_1$0==.
      000048                        140 _dir_find_sloc0_1_0:
      000048                        141 	.ds 3
                           00004B   142 Lff.dir_find$sloc1$0_1$0==.
      00004B                        143 _dir_find_sloc1_1_0:
      00004B                        144 	.ds 3
                           00004E   145 Lff.dir_find$sloc2$0_1$0==.
      00004E                        146 _dir_find_sloc2_1_0:
      00004E                        147 	.ds 3
                           000051   148 Lff.dir_find$sloc3$0_1$0==.
      000051                        149 _dir_find_sloc3_1_0:
      000051                        150 	.ds 3
                           000054   151 Lff.dir_find$sloc4$0_1$0==.
      000054                        152 _dir_find_sloc4_1_0:
      000054                        153 	.ds 3
                           000057   154 Lff.dir_find$sloc5$0_1$0==.
      000057                        155 _dir_find_sloc5_1_0:
      000057                        156 	.ds 3
                           00005A   157 Lff.dir_find$sloc6$0_1$0==.
      00005A                        158 _dir_find_sloc6_1_0:
      00005A                        159 	.ds 1
                           00005B   160 Lff.dir_find$sloc7$0_1$0==.
      00005B                        161 _dir_find_sloc7_1_0:
      00005B                        162 	.ds 3
                           00005E   163 Lff.dir_read$sloc0$0_1$0==.
      00005E                        164 _dir_read_sloc0_1_0:
      00005E                        165 	.ds 3
                           000061   166 Lff.dir_read$sloc1$0_1$0==.
      000061                        167 _dir_read_sloc1_1_0:
      000061                        168 	.ds 4
                           000065   169 Lff.dir_read$sloc2$0_1$0==.
      000065                        170 _dir_read_sloc2_1_0:
      000065                        171 	.ds 3
                           000068   172 Lff.dir_read$sloc3$0_1$0==.
      000068                        173 _dir_read_sloc3_1_0:
      000068                        174 	.ds 3
                           00006B   175 Lff.dir_read$sloc4$0_1$0==.
      00006B                        176 _dir_read_sloc4_1_0:
      00006B                        177 	.ds 1
                           00006C   178 Lff.get_fileinfo$sloc0$0_1$0==.
      00006C                        179 _get_fileinfo_sloc0_1_0:
      00006C                        180 	.ds 3
                           00006F   181 Lff.get_fileinfo$sloc1$0_1$0==.
      00006F                        182 _get_fileinfo_sloc1_1_0:
      00006F                        183 	.ds 1
                           000070   184 Lff.get_fileinfo$sloc2$0_1$0==.
      000070                        185 _get_fileinfo_sloc2_1_0:
      000070                        186 	.ds 3
                           000073   187 Lff.get_fileinfo$sloc3$0_1$0==.
      000073                        188 _get_fileinfo_sloc3_1_0:
      000073                        189 	.ds 4
                           000077   190 Lff.create_name$sloc0$0_1$0==.
      000077                        191 _create_name_sloc0_1_0:
      000077                        192 	.ds 3
                           00007A   193 Lff.create_name$sloc1$0_1$0==.
      00007A                        194 _create_name_sloc1_1_0:
      00007A                        195 	.ds 3
                           00007D   196 Lff.create_name$sloc2$0_1$0==.
      00007D                        197 _create_name_sloc2_1_0:
      00007D                        198 	.ds 2
                           00007F   199 Lff.create_name$sloc3$0_1$0==.
      00007F                        200 _create_name_sloc3_1_0:
      00007F                        201 	.ds 2
                           000081   202 Lff.follow_path$sloc0$0_1$0==.
      000081                        203 _follow_path_sloc0_1_0:
      000081                        204 	.ds 1
                           000082   205 Lff.follow_path$sloc1$0_1$0==.
      000082                        206 _follow_path_sloc1_1_0:
      000082                        207 	.ds 3
                           000085   208 Lff.check_fs$sloc0$0_1$0==.
      000085                        209 _check_fs_sloc0_1_0:
      000085                        210 	.ds 3
                           000088   211 Lff.check_fs$sloc1$0_1$0==.
      000088                        212 _check_fs_sloc1_1_0:
      000088                        213 	.ds 4
                           00008C   214 Lff.check_fs$sloc2$0_1$0==.
      00008C                        215 _check_fs_sloc2_1_0:
      00008C                        216 	.ds 4
                           000090   217 Lff.find_volume$sloc0$0_1$0==.
      000090                        218 _find_volume_sloc0_1_0:
      000090                        219 	.ds 3
                           000093   220 Lff.find_volume$sloc1$0_1$0==.
      000093                        221 _find_volume_sloc1_1_0:
      000093                        222 	.ds 2
                           000095   223 Lff.find_volume$sloc2$0_1$0==.
      000095                        224 _find_volume_sloc2_1_0:
      000095                        225 	.ds 2
                           000097   226 Lff.find_volume$sloc3$0_1$0==.
      000097                        227 _find_volume_sloc3_1_0:
      000097                        228 	.ds 4
                           00009B   229 Lff.find_volume$sloc4$0_1$0==.
      00009B                        230 _find_volume_sloc4_1_0:
      00009B                        231 	.ds 4
                           00009F   232 Lff.find_volume$sloc5$0_1$0==.
      00009F                        233 _find_volume_sloc5_1_0:
      00009F                        234 	.ds 3
                           0000A2   235 Lff.find_volume$sloc6$0_1$0==.
      0000A2                        236 _find_volume_sloc6_1_0:
      0000A2                        237 	.ds 4
                           0000A6   238 Lff.find_volume$sloc7$0_1$0==.
      0000A6                        239 _find_volume_sloc7_1_0:
      0000A6                        240 	.ds 4
                           0000AA   241 Lff.find_volume$sloc8$0_1$0==.
      0000AA                        242 _find_volume_sloc8_1_0:
      0000AA                        243 	.ds 4
                           0000AE   244 Lff.find_volume$sloc9$0_1$0==.
      0000AE                        245 _find_volume_sloc9_1_0:
      0000AE                        246 	.ds 4
                           0000B2   247 Lff.validate$sloc0$0_1$0==.
      0000B2                        248 _validate_sloc0_1_0:
      0000B2                        249 	.ds 3
                           0000B5   250 Lff.f_open$sloc0$0_1$0==.
      0000B5                        251 _f_open_sloc0_1_0:
      0000B5                        252 	.ds 3
                           0000B8   253 Lff.f_open$sloc1$0_1$0==.
      0000B8                        254 _f_open_sloc1_1_0:
      0000B8                        255 	.ds 3
                           0000BB   256 Lff.f_open$sloc2$0_1$0==.
      0000BB                        257 _f_open_sloc2_1_0:
      0000BB                        258 	.ds 4
                           0000BF   259 Lff.f_read$sloc0$0_1$0==.
      0000BF                        260 _f_read_sloc0_1_0:
      0000BF                        261 	.ds 3
                           0000C2   262 Lff.f_read$sloc1$0_1$0==.
      0000C2                        263 _f_read_sloc1_1_0:
      0000C2                        264 	.ds 4
                           0000C6   265 Lff.f_read$sloc2$0_1$0==.
      0000C6                        266 _f_read_sloc2_1_0:
      0000C6                        267 	.ds 3
                           0000C9   268 Lff.f_read$sloc3$0_1$0==.
      0000C9                        269 _f_read_sloc3_1_0:
      0000C9                        270 	.ds 3
                           0000CC   271 Lff.f_read$sloc4$0_1$0==.
      0000CC                        272 _f_read_sloc4_1_0:
      0000CC                        273 	.ds 4
                           0000D0   274 Lff.f_read$sloc5$0_1$0==.
      0000D0                        275 _f_read_sloc5_1_0:
      0000D0                        276 	.ds 3
                           0000D3   277 Lff.f_read$sloc6$0_1$0==.
      0000D3                        278 _f_read_sloc6_1_0:
      0000D3                        279 	.ds 4
                           0000D7   280 Lff.f_read$sloc7$0_1$0==.
      0000D7                        281 _f_read_sloc7_1_0:
      0000D7                        282 	.ds 3
                           0000DA   283 Lff.f_read$sloc8$0_1$0==.
      0000DA                        284 _f_read_sloc8_1_0:
      0000DA                        285 	.ds 3
                           0000DD   286 Lff.f_read$sloc9$0_1$0==.
      0000DD                        287 _f_read_sloc9_1_0:
      0000DD                        288 	.ds 3
                           0000E0   289 Lff.f_lseek$sloc0$0_1$0==.
      0000E0                        290 _f_lseek_sloc0_1_0:
      0000E0                        291 	.ds 4
                           0000E4   292 Lff.f_lseek$sloc1$0_1$0==.
      0000E4                        293 _f_lseek_sloc1_1_0:
      0000E4                        294 	.ds 4
                           0000E8   295 Lff.f_lseek$sloc2$0_1$0==.
      0000E8                        296 _f_lseek_sloc2_1_0:
      0000E8                        297 	.ds 3
                           0000EB   298 Lff.f_lseek$sloc3$0_1$0==.
      0000EB                        299 _f_lseek_sloc3_1_0:
      0000EB                        300 	.ds 4
                           0000EF   301 Lff.f_lseek$sloc4$0_1$0==.
      0000EF                        302 _f_lseek_sloc4_1_0:
      0000EF                        303 	.ds 4
                           0000F3   304 Lff.f_lseek$sloc5$0_1$0==.
      0000F3                        305 _f_lseek_sloc5_1_0:
      0000F3                        306 	.ds 3
                           0000F6   307 Lff.f_lseek$sloc6$0_1$0==.
      0000F6                        308 _f_lseek_sloc6_1_0:
      0000F6                        309 	.ds 4
                           0000FA   310 Lff.f_opendir$sloc0$0_1$0==.
      0000FA                        311 _f_opendir_sloc0_1_0:
      0000FA                        312 	.ds 3
                           0000FD   313 Lff.f_readdir$sloc0$0_1$0==.
      0000FD                        314 _f_readdir_sloc0_1_0:
      0000FD                        315 	.ds 3
                           000100   316 Lff.f_getlabel$sloc0$0_1$0==.
      000100                        317 _f_getlabel_sloc0_1_0:
      000100                        318 	.ds 3
                           000103   319 Lff.f_getlabel$sloc1$0_1$0==.
      000103                        320 _f_getlabel_sloc1_1_0:
      000103                        321 	.ds 4
                                    322 ;--------------------------------------------------------
                                    323 ; overlayable items in internal ram 
                                    324 ;--------------------------------------------------------
                                    325 	.area	OSEG    (OVR,DATA)
                           000000   326 Lff.mem_cpy$sloc0$0_1$0==.
      000000                        327 _mem_cpy_sloc0_1_0:
      000000                        328 	.ds 2
                                    329 	.area	OSEG    (OVR,DATA)
                           000000   330 Lff.mem_set$sloc0$0_1$0==.
      000000                        331 _mem_set_sloc0_1_0:
      000000                        332 	.ds 2
                                    333 	.area	OSEG    (OVR,DATA)
                           000000   334 Lff.mem_cmp$sloc0$0_1$0==.
      000000                        335 _mem_cmp_sloc0_1_0:
      000000                        336 	.ds 2
                           000002   337 Lff.mem_cmp$sloc1$0_1$0==.
      000002                        338 _mem_cmp_sloc1_1_0:
      000002                        339 	.ds 2
                                    340 	.area	OSEG    (OVR,DATA)
                           000000   341 Lff.ld_clust$sloc0$0_1$0==.
      000000                        342 _ld_clust_sloc0_1_0:
      000000                        343 	.ds 3
                           000003   344 Lff.ld_clust$sloc1$0_1$0==.
      000003                        345 _ld_clust_sloc1_1_0:
      000003                        346 	.ds 4
                                    347 	.area	OSEG    (OVR,DATA)
                           000000   348 Lff.get_ldnumber$sloc0$0_1$0==.
      000000                        349 _get_ldnumber_sloc0_1_0:
      000000                        350 	.ds 3
                           000003   351 Lff.get_ldnumber$sloc1$0_1$0==.
      000003                        352 _get_ldnumber_sloc1_1_0:
      000003                        353 	.ds 2
                                    354 ;--------------------------------------------------------
                                    355 ; indirectly addressable internal ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area ISEG    (DATA)
                                    358 ;--------------------------------------------------------
                                    359 ; absolute internal ram data
                                    360 ;--------------------------------------------------------
                                    361 	.area IABS    (ABS,DATA)
                                    362 	.area IABS    (ABS,DATA)
                                    363 ;--------------------------------------------------------
                                    364 ; bit data
                                    365 ;--------------------------------------------------------
                                    366 	.area BSEG    (BIT)
                                    367 ;--------------------------------------------------------
                                    368 ; paged external ram data
                                    369 ;--------------------------------------------------------
                                    370 	.area PSEG    (PAG,XDATA)
                                    371 ;--------------------------------------------------------
                                    372 ; external ram data
                                    373 ;--------------------------------------------------------
                                    374 	.area XSEG    (XDATA)
                           000000   375 Fff$FatFs$0_0$0==.
      000000                        376 _FatFs:
      000000                        377 	.ds 6
                           000006   378 Fff$Fsid$0_0$0==.
      000006                        379 _Fsid:
      000006                        380 	.ds 2
                           000008   381 Lff.mem_cpy$src$1_0$41==.
      000008                        382 _mem_cpy_PARM_2:
      000008                        383 	.ds 3
                           00000B   384 Lff.mem_cpy$cnt$1_0$41==.
      00000B                        385 _mem_cpy_PARM_3:
      00000B                        386 	.ds 2
                           00000D   387 Lff.mem_cpy$dst$1_0$41==.
      00000D                        388 _mem_cpy_dst_65536_41:
      00000D                        389 	.ds 3
                           000010   390 Lff.mem_set$val$1_0$43==.
      000010                        391 _mem_set_PARM_2:
      000010                        392 	.ds 2
                           000012   393 Lff.mem_set$cnt$1_0$43==.
      000012                        394 _mem_set_PARM_3:
      000012                        395 	.ds 2
                           000014   396 Lff.mem_set$dst$1_0$43==.
      000014                        397 _mem_set_dst_65536_43:
      000014                        398 	.ds 3
                           000017   399 Lff.mem_cmp$src$1_0$45==.
      000017                        400 _mem_cmp_PARM_2:
      000017                        401 	.ds 3
                           00001A   402 Lff.mem_cmp$cnt$1_0$45==.
      00001A                        403 _mem_cmp_PARM_3:
      00001A                        404 	.ds 2
                           00001C   405 Lff.mem_cmp$dst$1_0$45==.
      00001C                        406 _mem_cmp_dst_65536_45:
      00001C                        407 	.ds 3
                           00001F   408 Lff.mem_cmp$r$1_0$46==.
      00001F                        409 _mem_cmp_r_65536_46:
      00001F                        410 	.ds 2
                           000021   411 Lff.chk_chr$chr$1_0$47==.
      000021                        412 _chk_chr_PARM_2:
      000021                        413 	.ds 2
                           000023   414 Lff.chk_chr$str$1_0$47==.
      000023                        415 _chk_chr_str_65536_47:
      000023                        416 	.ds 3
                           000026   417 Lff.move_window$sector$1_0$49==.
      000026                        418 _move_window_PARM_2:
      000026                        419 	.ds 4
                           00002A   420 Lff.move_window$fs$1_0$49==.
      00002A                        421 _move_window_fs_65536_49:
      00002A                        422 	.ds 3
                           00002D   423 Lff.clust2sect$clst$1_0$52==.
      00002D                        424 _clust2sect_PARM_2:
      00002D                        425 	.ds 4
                           000031   426 Lff.clust2sect$fs$1_0$52==.
      000031                        427 _clust2sect_fs_65536_52:
      000031                        428 	.ds 3
                           000034   429 Lff.get_fat$clst$1_0$54==.
      000034                        430 _get_fat_PARM_2:
      000034                        431 	.ds 4
                           000038   432 Lff.get_fat$fs$1_0$54==.
      000038                        433 _get_fat_fs_65536_54:
      000038                        434 	.ds 3
                           00003B   435 Lff.clmt_clust$ofs$1_0$57==.
      00003B                        436 _clmt_clust_PARM_2:
      00003B                        437 	.ds 4
                           00003F   438 Lff.clmt_clust$fp$1_0$57==.
      00003F                        439 _clmt_clust_fp_65536_57:
      00003F                        440 	.ds 3
                           000042   441 Lff.clmt_clust$cl$1_0$58==.
      000042                        442 _clmt_clust_cl_65536_58:
      000042                        443 	.ds 4
                           000046   444 Lff.clmt_clust$tbl$1_0$58==.
      000046                        445 _clmt_clust_tbl_65536_58:
      000046                        446 	.ds 3
                           000049   447 Lff.dir_sdi$idx$1_0$61==.
      000049                        448 _dir_sdi_PARM_2:
      000049                        449 	.ds 2
                           00004B   450 Lff.dir_sdi$dp$1_0$61==.
      00004B                        451 _dir_sdi_dp_65536_61:
      00004B                        452 	.ds 3
                           00004E   453 Lff.dir_sdi$clst$1_0$62==.
      00004E                        454 _dir_sdi_clst_65536_62:
      00004E                        455 	.ds 4
                           000052   456 Lff.dir_sdi$sect$1_0$62==.
      000052                        457 _dir_sdi_sect_65536_62:
      000052                        458 	.ds 4
                           000056   459 Lff.dir_next$stretch$1_0$66==.
      000056                        460 _dir_next_PARM_2:
      000056                        461 	.ds 2
                           000058   462 Lff.dir_next$dp$1_0$66==.
      000058                        463 _dir_next_dp_65536_66:
      000058                        464 	.ds 3
                           00005B   465 Lff.ld_clust$dir$1_0$73==.
      00005B                        466 _ld_clust_PARM_2:
      00005B                        467 	.ds 3
                           00005E   468 Lff.ld_clust$fs$1_0$73==.
      00005E                        469 _ld_clust_fs_65536_73:
      00005E                        470 	.ds 3
                           000061   471 Lff.ld_clust$cl$1_0$74==.
      000061                        472 _ld_clust_cl_65536_74:
      000061                        473 	.ds 4
                           000065   474 Lff.cmp_lfn$dir$1_0$75==.
      000065                        475 _cmp_lfn_PARM_2:
      000065                        476 	.ds 3
                           000068   477 Lff.cmp_lfn$lfnbuf$1_0$75==.
      000068                        478 _cmp_lfn_lfnbuf_65536_75:
      000068                        479 	.ds 3
                           00006B   480 Lff.cmp_lfn$i$1_0$76==.
      00006B                        481 _cmp_lfn_i_65536_76:
      00006B                        482 	.ds 2
                           00006D   483 Lff.cmp_lfn$wc$1_0$76==.
      00006D                        484 _cmp_lfn_wc_65536_76:
      00006D                        485 	.ds 2
                           00006F   486 Lff.pick_lfn$dir$1_0$80==.
      00006F                        487 _pick_lfn_PARM_2:
      00006F                        488 	.ds 3
                           000072   489 Lff.pick_lfn$lfnbuf$1_0$80==.
      000072                        490 _pick_lfn_lfnbuf_65536_80:
      000072                        491 	.ds 3
                           000075   492 Lff.pick_lfn$i$1_0$81==.
      000075                        493 _pick_lfn_i_65536_81:
      000075                        494 	.ds 2
                           000077   495 Lff.pick_lfn$wc$1_0$81==.
      000077                        496 _pick_lfn_wc_65536_81:
      000077                        497 	.ds 2
                           000079   498 Lff.gen_numname$src$1_0$86==.
      000079                        499 _gen_numname_PARM_2:
      000079                        500 	.ds 3
                           00007C   501 Lff.gen_numname$lfn$1_0$86==.
      00007C                        502 _gen_numname_PARM_3:
      00007C                        503 	.ds 3
                           00007F   504 Lff.gen_numname$seq$1_0$86==.
      00007F                        505 _gen_numname_PARM_4:
      00007F                        506 	.ds 2
                           000081   507 Lff.gen_numname$dst$1_0$86==.
      000081                        508 _gen_numname_dst_65536_86:
      000081                        509 	.ds 3
                           000084   510 Lff.gen_numname$ns$1_0$87==.
      000084                        511 _gen_numname_ns_65536_87:
      000084                        512 	.ds 8
                           00008C   513 Lff.gen_numname$c$1_0$87==.
      00008C                        514 _gen_numname_c_65536_87:
      00008C                        515 	.ds 1
                           00008D   516 Lff.gen_numname$i$1_0$87==.
      00008D                        517 _gen_numname_i_65536_87:
      00008D                        518 	.ds 2
                           00008F   519 Lff.gen_numname$wc$2_0$88==.
      00008F                        520 _gen_numname_wc_131072_88:
      00008F                        521 	.ds 2
                           000091   522 Lff.gen_numname$sr$2_0$88==.
      000091                        523 _gen_numname_sr_131072_88:
      000091                        524 	.ds 4
                           000095   525 Lff.sum_sfn$dir$1_0$97==.
      000095                        526 _sum_sfn_dir_65536_97:
      000095                        527 	.ds 3
                           000098   528 Lff.sum_sfn$sum$1_0$98==.
      000098                        529 _sum_sfn_sum_65536_98:
      000098                        530 	.ds 1
                           000099   531 Lff.dir_find$dp$1_0$99==.
      000099                        532 _dir_find_dp_65536_99:
      000099                        533 	.ds 3
                           00009C   534 Lff.dir_find$res$1_0$100==.
      00009C                        535 _dir_find_res_65536_100:
      00009C                        536 	.ds 1
                           00009D   537 Lff.dir_find$c$1_0$100==.
      00009D                        538 _dir_find_c_65536_100:
      00009D                        539 	.ds 1
                           00009E   540 Lff.dir_find$ord$1_0$100==.
      00009E                        541 _dir_find_ord_65536_100:
      00009E                        542 	.ds 1
                           00009F   543 Lff.dir_find$sum$1_0$100==.
      00009F                        544 _dir_find_sum_65536_100:
      00009F                        545 	.ds 1
                           0000A0   546 Lff.dir_read$vol$1_0$109==.
      0000A0                        547 _dir_read_PARM_2:
      0000A0                        548 	.ds 2
                           0000A2   549 Lff.dir_read$dp$1_0$109==.
      0000A2                        550 _dir_read_dp_65536_109:
      0000A2                        551 	.ds 3
                           0000A5   552 Lff.dir_read$res$1_0$110==.
      0000A5                        553 _dir_read_res_65536_110:
      0000A5                        554 	.ds 1
                           0000A6   555 Lff.dir_read$c$1_0$110==.
      0000A6                        556 _dir_read_c_65536_110:
      0000A6                        557 	.ds 1
                           0000A7   558 Lff.dir_read$ord$1_0$110==.
      0000A7                        559 _dir_read_ord_65536_110:
      0000A7                        560 	.ds 1
                           0000A8   561 Lff.dir_read$sum$1_0$110==.
      0000A8                        562 _dir_read_sum_65536_110:
      0000A8                        563 	.ds 1
                           0000A9   564 Lff.get_fileinfo$fno$1_0$118==.
      0000A9                        565 _get_fileinfo_PARM_2:
      0000A9                        566 	.ds 3
                           0000AC   567 Lff.get_fileinfo$dp$1_0$118==.
      0000AC                        568 _get_fileinfo_dp_65536_118:
      0000AC                        569 	.ds 3
                           0000AF   570 Lff.get_fileinfo$i$1_0$119==.
      0000AF                        571 _get_fileinfo_i_65536_119:
      0000AF                        572 	.ds 2
                           0000B1   573 Lff.get_fileinfo$p$1_0$119==.
      0000B1                        574 _get_fileinfo_p_65536_119:
      0000B1                        575 	.ds 3
                           0000B4   576 Lff.get_fileinfo$c$1_0$119==.
      0000B4                        577 _get_fileinfo_c_65536_119:
      0000B4                        578 	.ds 1
                           0000B5   579 Lff.create_name$path$1_0$127==.
      0000B5                        580 _create_name_PARM_2:
      0000B5                        581 	.ds 3
                           0000B8   582 Lff.create_name$dp$1_0$127==.
      0000B8                        583 _create_name_dp_65536_127:
      0000B8                        584 	.ds 3
                           0000BB   585 Lff.create_name$b$1_0$128==.
      0000BB                        586 _create_name_b_65536_128:
      0000BB                        587 	.ds 1
                           0000BC   588 Lff.create_name$cf$1_0$128==.
      0000BC                        589 _create_name_cf_65536_128:
      0000BC                        590 	.ds 1
                           0000BD   591 Lff.create_name$w$1_0$128==.
      0000BD                        592 _create_name_w_65536_128:
      0000BD                        593 	.ds 2
                           0000BF   594 Lff.create_name$i$1_0$128==.
      0000BF                        595 _create_name_i_65536_128:
      0000BF                        596 	.ds 2
                           0000C1   597 Lff.create_name$ni$1_0$128==.
      0000C1                        598 _create_name_ni_65536_128:
      0000C1                        599 	.ds 2
                           0000C3   600 Lff.create_name$si$1_0$128==.
      0000C3                        601 _create_name_si_65536_128:
      0000C3                        602 	.ds 2
                           0000C5   603 Lff.create_name$di$1_0$128==.
      0000C5                        604 _create_name_di_65536_128:
      0000C5                        605 	.ds 2
                           0000C7   606 Lff.create_name$p$1_0$128==.
      0000C7                        607 _create_name_p_65536_128:
      0000C7                        608 	.ds 3
                           0000CA   609 Lff.follow_path$path$1_0$150==.
      0000CA                        610 _follow_path_PARM_2:
      0000CA                        611 	.ds 3
                           0000CD   612 Lff.follow_path$dp$1_0$150==.
      0000CD                        613 _follow_path_dp_65536_150:
      0000CD                        614 	.ds 3
                           0000D0   615 Lff.follow_path$res$1_0$151==.
      0000D0                        616 _follow_path_res_65536_151:
      0000D0                        617 	.ds 1
                           0000D1   618 Lff.get_ldnumber$path$1_0$161==.
      0000D1                        619 _get_ldnumber_path_65536_161:
      0000D1                        620 	.ds 3
                           0000D4   621 Lff.get_ldnumber$vol$1_0$162==.
      0000D4                        622 _get_ldnumber_vol_65536_162:
      0000D4                        623 	.ds 2
                           0000D6   624 Lff.check_fs$sect$1_0$169==.
      0000D6                        625 _check_fs_PARM_2:
      0000D6                        626 	.ds 4
                           0000DA   627 Lff.check_fs$fs$1_0$169==.
      0000DA                        628 _check_fs_fs_65536_169:
      0000DA                        629 	.ds 3
                           0000DD   630 Lff.find_volume$path$1_0$171==.
      0000DD                        631 _find_volume_PARM_2:
      0000DD                        632 	.ds 3
                           0000E0   633 Lff.find_volume$wmode$1_0$171==.
      0000E0                        634 _find_volume_PARM_3:
      0000E0                        635 	.ds 1
                           0000E1   636 Lff.find_volume$rfs$1_0$171==.
      0000E1                        637 _find_volume_rfs_65536_171:
      0000E1                        638 	.ds 3
                           0000E4   639 Lff.find_volume$fmt$1_0$172==.
      0000E4                        640 _find_volume_fmt_65536_172:
      0000E4                        641 	.ds 1
                           0000E5   642 Lff.find_volume$bsect$1_0$172==.
      0000E5                        643 _find_volume_bsect_65536_172:
      0000E5                        644 	.ds 4
                           0000E9   645 Lff.find_volume$fasize$1_0$172==.
      0000E9                        646 _find_volume_fasize_65536_172:
      0000E9                        647 	.ds 4
                           0000ED   648 Lff.find_volume$tsect$1_0$172==.
      0000ED                        649 _find_volume_tsect_65536_172:
      0000ED                        650 	.ds 4
                           0000F1   651 Lff.find_volume$szbfat$1_0$172==.
      0000F1                        652 _find_volume_szbfat_65536_172:
      0000F1                        653 	.ds 4
                           0000F5   654 Lff.find_volume$br$2_0$175==.
      0000F5                        655 _find_volume_br_131072_175:
      0000F5                        656 	.ds 16
                           000105   657 Lff.validate$obj$1_0$181==.
      000105                        658 _validate_obj_65536_181:
      000105                        659 	.ds 3
                           000108   660 Lff.f_mount$path$1_0$183==.
      000108                        661 _f_mount_PARM_2:
      000108                        662 	.ds 3
                           00010B   663 Lff.f_mount$opt$1_0$183==.
      00010B                        664 _f_mount_PARM_3:
      00010B                        665 	.ds 1
                           00010C   666 Lff.f_mount$fs$1_0$183==.
      00010C                        667 _f_mount_fs_65536_183:
      00010C                        668 	.ds 3
                           00010F   669 Lff.f_mount$rp$1_0$184==.
      00010F                        670 _f_mount_rp_65536_184:
      00010F                        671 	.ds 3
                           000112   672 Lff.f_open$path$1_0$187==.
      000112                        673 _f_open_PARM_2:
      000112                        674 	.ds 3
                           000115   675 Lff.f_open$mode$1_0$187==.
      000115                        676 _f_open_PARM_3:
      000115                        677 	.ds 1
                           000116   678 Lff.f_open$fp$1_0$187==.
      000116                        679 _f_open_fp_65536_187:
      000116                        680 	.ds 3
                           000119   681 Lff.f_open$res$1_0$188==.
      000119                        682 _f_open_res_65536_188:
      000119                        683 	.ds 1
                           00011A   684 Lff.f_open$dj$1_0$188==.
      00011A                        685 _f_open_dj_65536_188:
      00011A                        686 	.ds 30
                           000138   687 Lff.f_open$dir$1_0$188==.
      000138                        688 _f_open_dir_65536_188:
      000138                        689 	.ds 3
                           00013B   690 Lff.f_open$sfn$1_0$188==.
      00013B                        691 _f_open_sfn_65536_188:
      00013B                        692 	.ds 12
                           000147   693 Lff.f_read$buff$1_0$195==.
      000147                        694 _f_read_PARM_2:
      000147                        695 	.ds 3
                           00014A   696 Lff.f_read$btr$1_0$195==.
      00014A                        697 _f_read_PARM_3:
      00014A                        698 	.ds 2
                           00014C   699 Lff.f_read$br$1_0$195==.
      00014C                        700 _f_read_PARM_4:
      00014C                        701 	.ds 3
                           00014F   702 Lff.f_read$fp$1_0$195==.
      00014F                        703 _f_read_fp_65536_195:
      00014F                        704 	.ds 3
                           000152   705 Lff.f_read$clst$1_0$196==.
      000152                        706 _f_read_clst_65536_196:
      000152                        707 	.ds 4
                           000156   708 Lff.f_read$rcnt$1_0$196==.
      000156                        709 _f_read_rcnt_65536_196:
      000156                        710 	.ds 2
                           000158   711 Lff.f_read$cc$1_0$196==.
      000158                        712 _f_read_cc_65536_196:
      000158                        713 	.ds 2
                           00015A   714 Lff.f_read$rbuff$1_0$196==.
      00015A                        715 _f_read_rbuff_65536_196:
      00015A                        716 	.ds 3
                           00015D   717 Lff.f_close$fp$1_0$209==.
      00015D                        718 _f_close_fp_65536_209:
      00015D                        719 	.ds 3
                           000160   720 Lff.f_lseek$ofs$1_0$213==.
      000160                        721 _f_lseek_PARM_2:
      000160                        722 	.ds 4
                           000164   723 Lff.f_lseek$fp$1_0$213==.
      000164                        724 _f_lseek_fp_65536_213:
      000164                        725 	.ds 3
                           000167   726 Lff.f_lseek$res$1_0$214==.
      000167                        727 _f_lseek_res_65536_214:
      000167                        728 	.ds 1
                           000168   729 Lff.f_lseek$cl$2_0$215==.
      000168                        730 _f_lseek_cl_131072_215:
      000168                        731 	.ds 4
                           00016C   732 Lff.f_lseek$pcl$2_0$215==.
      00016C                        733 _f_lseek_pcl_131072_215:
      00016C                        734 	.ds 4
                           000170   735 Lff.f_lseek$tcl$2_0$215==.
      000170                        736 _f_lseek_tcl_131072_215:
      000170                        737 	.ds 4
                           000174   738 Lff.f_lseek$ulen$2_0$215==.
      000174                        739 _f_lseek_ulen_131072_215:
      000174                        740 	.ds 4
                           000178   741 Lff.f_lseek$tbl$2_0$215==.
      000178                        742 _f_lseek_tbl_131072_215:
      000178                        743 	.ds 3
                           00017B   744 Lff.f_lseek$clst$2_0$227==.
      00017B                        745 _f_lseek_clst_131072_227:
      00017B                        746 	.ds 4
                           00017F   747 Lff.f_lseek$nsect$2_0$227==.
      00017F                        748 _f_lseek_nsect_131072_227:
      00017F                        749 	.ds 4
                           000183   750 Lff.f_opendir$path$1_0$238==.
      000183                        751 _f_opendir_PARM_2:
      000183                        752 	.ds 3
                           000186   753 Lff.f_opendir$dp$1_0$238==.
      000186                        754 _f_opendir_dp_65536_238:
      000186                        755 	.ds 3
                           000189   756 Lff.f_opendir$res$1_0$239==.
      000189                        757 _f_opendir_res_65536_239:
      000189                        758 	.ds 1
                           00018A   759 Lff.f_opendir$fs$1_0$239==.
      00018A                        760 _f_opendir_fs_65536_239:
      00018A                        761 	.ds 3
                           00018D   762 Lff.f_opendir$sfn$1_0$239==.
      00018D                        763 _f_opendir_sfn_65536_239:
      00018D                        764 	.ds 12
                           000199   765 Lff.f_closedir$dp$1_0$245==.
      000199                        766 _f_closedir_dp_65536_245:
      000199                        767 	.ds 3
                           00019C   768 Lff.f_readdir$fno$1_0$248==.
      00019C                        769 _f_readdir_PARM_2:
      00019C                        770 	.ds 3
                           00019F   771 Lff.f_readdir$dp$1_0$248==.
      00019F                        772 _f_readdir_dp_65536_248:
      00019F                        773 	.ds 3
                           0001A2   774 Lff.f_readdir$res$1_0$249==.
      0001A2                        775 _f_readdir_res_65536_249:
      0001A2                        776 	.ds 1
                           0001A3   777 Lff.f_readdir$sfn$1_0$249==.
      0001A3                        778 _f_readdir_sfn_65536_249:
      0001A3                        779 	.ds 12
                           0001AF   780 Lff.f_stat$fno$1_0$257==.
      0001AF                        781 _f_stat_PARM_2:
      0001AF                        782 	.ds 3
                           0001B2   783 Lff.f_stat$path$1_0$257==.
      0001B2                        784 _f_stat_path_65536_257:
      0001B2                        785 	.ds 3
                           0001B5   786 Lff.f_stat$res$1_0$258==.
      0001B5                        787 _f_stat_res_65536_258:
      0001B5                        788 	.ds 1
                           0001B6   789 Lff.f_stat$dj$1_0$258==.
      0001B6                        790 _f_stat_dj_65536_258:
      0001B6                        791 	.ds 30
                           0001D4   792 Lff.f_stat$sfn$1_0$258==.
      0001D4                        793 _f_stat_sfn_65536_258:
      0001D4                        794 	.ds 12
                           0001E0   795 Lff.f_getlabel$label$1_0$264==.
      0001E0                        796 _f_getlabel_PARM_2:
      0001E0                        797 	.ds 3
                           0001E3   798 Lff.f_getlabel$sn$1_0$264==.
      0001E3                        799 _f_getlabel_PARM_3:
      0001E3                        800 	.ds 3
                           0001E6   801 Lff.f_getlabel$path$1_0$264==.
      0001E6                        802 _f_getlabel_path_65536_264:
      0001E6                        803 	.ds 3
                           0001E9   804 Lff.f_getlabel$res$1_0$265==.
      0001E9                        805 _f_getlabel_res_65536_265:
      0001E9                        806 	.ds 1
                           0001EA   807 Lff.f_getlabel$dj$1_0$265==.
      0001EA                        808 _f_getlabel_dj_65536_265:
      0001EA                        809 	.ds 30
                           000208   810 Lff.f_gets$len$1_0$273==.
      000208                        811 _f_gets_PARM_2:
      000208                        812 	.ds 2
                           00020A   813 Lff.f_gets$fp$1_0$273==.
      00020A                        814 _f_gets_PARM_3:
      00020A                        815 	.ds 3
                           00020D   816 Lff.f_gets$buff$1_0$273==.
      00020D                        817 _f_gets_buff_65536_273:
      00020D                        818 	.ds 3
                           000210   819 Lff.f_gets$s$1_0$274==.
      000210                        820 _f_gets_s_65536_274:
      000210                        821 	.ds 2
                           000212   822 Lff.f_gets$rc$1_0$274==.
      000212                        823 _f_gets_rc_65536_274:
      000212                        824 	.ds 2
                                    825 ;--------------------------------------------------------
                                    826 ; absolute external ram data
                                    827 ;--------------------------------------------------------
                                    828 	.area XABS    (ABS,XDATA)
                                    829 ;--------------------------------------------------------
                                    830 ; external initialized ram data
                                    831 ;--------------------------------------------------------
                                    832 	.area XISEG   (XDATA)
                                    833 	.area HOME    (CODE)
                                    834 	.area GSINIT0 (CODE)
                                    835 	.area GSINIT1 (CODE)
                                    836 	.area GSINIT2 (CODE)
                                    837 	.area GSINIT3 (CODE)
                                    838 	.area GSINIT4 (CODE)
                                    839 	.area GSINIT5 (CODE)
                                    840 	.area GSINIT  (CODE)
                                    841 	.area GSFINAL (CODE)
                                    842 	.area CSEG    (CODE)
                                    843 ;--------------------------------------------------------
                                    844 ; global & static initialisations
                                    845 ;--------------------------------------------------------
                                    846 	.area HOME    (CODE)
                                    847 	.area GSINIT  (CODE)
                                    848 	.area GSFINAL (CODE)
                                    849 	.area GSINIT  (CODE)
                                    850 ;--------------------------------------------------------
                                    851 ; Home
                                    852 ;--------------------------------------------------------
                                    853 	.area HOME    (CODE)
                                    854 	.area HOME    (CODE)
                                    855 ;--------------------------------------------------------
                                    856 ; code
                                    857 ;--------------------------------------------------------
                                    858 	.area CSEG    (CODE)
                                    859 ;------------------------------------------------------------
                                    860 ;Allocation info for local variables in function 'mem_cpy'
                                    861 ;------------------------------------------------------------
                                    862 ;src                       Allocated with name '_mem_cpy_PARM_2'
                                    863 ;cnt                       Allocated with name '_mem_cpy_PARM_3'
                                    864 ;dst                       Allocated with name '_mem_cpy_dst_65536_41'
                                    865 ;d                         Allocated with name '_mem_cpy_d_65536_42'
                                    866 ;s                         Allocated with name '_mem_cpy_s_65536_42'
                                    867 ;sloc0                     Allocated with name '_mem_cpy_sloc0_1_0'
                                    868 ;------------------------------------------------------------
                           000000   869 	Fff$mem_cpy$0$0 ==.
                           000000   870 	C$ff.c$560$0_0$42 ==.
                                    871 ;	FATFS\src\ff.c:560: void mem_cpy (void* dst, const void* src, UINT cnt) {
                                    872 ;	-----------------------------------------
                                    873 ;	 function mem_cpy
                                    874 ;	-----------------------------------------
      000000                        875 _mem_cpy:
                           000007   876 	ar7 = 0x07
                           000006   877 	ar6 = 0x06
                           000005   878 	ar5 = 0x05
                           000004   879 	ar4 = 0x04
                           000003   880 	ar3 = 0x03
                           000002   881 	ar2 = 0x02
                           000001   882 	ar1 = 0x01
                           000000   883 	ar0 = 0x00
      000000 AF F0            [24]  884 	mov	r7,b
      000002 AE 83            [24]  885 	mov	r6,dph
      000004 E5 82            [12]  886 	mov	a,dpl
      000006 90r00r0D         [24]  887 	mov	dptr,#_mem_cpy_dst_65536_41
      000009 F0               [24]  888 	movx	@dptr,a
      00000A EE               [12]  889 	mov	a,r6
      00000B A3               [24]  890 	inc	dptr
      00000C F0               [24]  891 	movx	@dptr,a
      00000D EF               [12]  892 	mov	a,r7
      00000E A3               [24]  893 	inc	dptr
      00000F F0               [24]  894 	movx	@dptr,a
                           000010   895 	C$ff.c$561$1_0$42 ==.
                                    896 ;	FATFS\src\ff.c:561: BYTE *d = (BYTE*)dst;
      000010 90r00r0D         [24]  897 	mov	dptr,#_mem_cpy_dst_65536_41
      000013 E0               [24]  898 	movx	a,@dptr
      000014 FD               [12]  899 	mov	r5,a
      000015 A3               [24]  900 	inc	dptr
      000016 E0               [24]  901 	movx	a,@dptr
      000017 FE               [12]  902 	mov	r6,a
      000018 A3               [24]  903 	inc	dptr
      000019 E0               [24]  904 	movx	a,@dptr
      00001A FF               [12]  905 	mov	r7,a
                           00001B   906 	C$ff.c$562$1_0$42 ==.
                                    907 ;	FATFS\src\ff.c:562: const BYTE *s = (const BYTE*)src;
      00001B 90r00r08         [24]  908 	mov	dptr,#_mem_cpy_PARM_2
      00001E E0               [24]  909 	movx	a,@dptr
      00001F FA               [12]  910 	mov	r2,a
      000020 A3               [24]  911 	inc	dptr
      000021 E0               [24]  912 	movx	a,@dptr
      000022 FB               [12]  913 	mov	r3,a
      000023 A3               [24]  914 	inc	dptr
      000024 E0               [24]  915 	movx	a,@dptr
      000025 FC               [12]  916 	mov	r4,a
                           000026   917 	C$ff.c$571$1_0$42 ==.
                                    918 ;	FATFS\src\ff.c:571: while (cnt--)
      000026 90r00r0B         [24]  919 	mov	dptr,#_mem_cpy_PARM_3
      000029 E0               [24]  920 	movx	a,@dptr
      00002A F5*00            [12]  921 	mov	_mem_cpy_sloc0_1_0,a
      00002C A3               [24]  922 	inc	dptr
      00002D E0               [24]  923 	movx	a,@dptr
      00002E F5*01            [12]  924 	mov	(_mem_cpy_sloc0_1_0 + 1),a
      000030                        925 00101$:
      000030 A8*00            [24]  926 	mov	r0,_mem_cpy_sloc0_1_0
      000032 A9*01            [24]  927 	mov	r1,(_mem_cpy_sloc0_1_0 + 1)
      000034 15*00            [12]  928 	dec	_mem_cpy_sloc0_1_0
      000036 74 FF            [12]  929 	mov	a,#0xff
      000038 B5*00 02         [24]  930 	cjne	a,_mem_cpy_sloc0_1_0,00115$
      00003B 15*01            [12]  931 	dec	(_mem_cpy_sloc0_1_0 + 1)
      00003D                        932 00115$:
      00003D E8               [12]  933 	mov	a,r0
      00003E 49               [12]  934 	orl	a,r1
      00003F 60 20            [24]  935 	jz	00104$
                           000041   936 	C$ff.c$572$1_0$42 ==.
                                    937 ;	FATFS\src\ff.c:572: *d++ = *s++;
      000041 8A 82            [24]  938 	mov	dpl,r2
      000043 8B 83            [24]  939 	mov	dph,r3
      000045 8C F0            [24]  940 	mov	b,r4
      000047 12r00r00         [24]  941 	lcall	__gptrget
      00004A F9               [12]  942 	mov	r1,a
      00004B A3               [24]  943 	inc	dptr
      00004C AA 82            [24]  944 	mov	r2,dpl
      00004E AB 83            [24]  945 	mov	r3,dph
      000050 8D 82            [24]  946 	mov	dpl,r5
      000052 8E 83            [24]  947 	mov	dph,r6
      000054 8F F0            [24]  948 	mov	b,r7
      000056 E9               [12]  949 	mov	a,r1
      000057 12r00r00         [24]  950 	lcall	__gptrput
      00005A A3               [24]  951 	inc	dptr
      00005B AD 82            [24]  952 	mov	r5,dpl
      00005D AE 83            [24]  953 	mov	r6,dph
      00005F 80 CF            [24]  954 	sjmp	00101$
      000061                        955 00104$:
                           000061   956 	C$ff.c$573$1_0$42 ==.
                                    957 ;	FATFS\src\ff.c:573: }
                           000061   958 	C$ff.c$573$1_0$42 ==.
                           000061   959 	XFff$mem_cpy$0$0 ==.
      000061 02r00r00         [24]  960 	ljmp	__sdcc_banked_ret
                                    961 ;------------------------------------------------------------
                                    962 ;Allocation info for local variables in function 'mem_set'
                                    963 ;------------------------------------------------------------
                                    964 ;val                       Allocated with name '_mem_set_PARM_2'
                                    965 ;cnt                       Allocated with name '_mem_set_PARM_3'
                                    966 ;dst                       Allocated with name '_mem_set_dst_65536_43'
                                    967 ;d                         Allocated with name '_mem_set_d_65536_44'
                                    968 ;sloc0                     Allocated with name '_mem_set_sloc0_1_0'
                                    969 ;------------------------------------------------------------
                           000064   970 	Fff$mem_set$0$0 ==.
                           000064   971 	C$ff.c$577$1_0$44 ==.
                                    972 ;	FATFS\src\ff.c:577: void mem_set (void* dst, int val, UINT cnt) {
                                    973 ;	-----------------------------------------
                                    974 ;	 function mem_set
                                    975 ;	-----------------------------------------
      000064                        976 _mem_set:
      000064 AF F0            [24]  977 	mov	r7,b
      000066 AE 83            [24]  978 	mov	r6,dph
      000068 E5 82            [12]  979 	mov	a,dpl
      00006A 90r00r14         [24]  980 	mov	dptr,#_mem_set_dst_65536_43
      00006D F0               [24]  981 	movx	@dptr,a
      00006E EE               [12]  982 	mov	a,r6
      00006F A3               [24]  983 	inc	dptr
      000070 F0               [24]  984 	movx	@dptr,a
      000071 EF               [12]  985 	mov	a,r7
      000072 A3               [24]  986 	inc	dptr
      000073 F0               [24]  987 	movx	@dptr,a
                           000074   988 	C$ff.c$578$1_0$44 ==.
                                    989 ;	FATFS\src\ff.c:578: BYTE *d = (BYTE*)dst;
      000074 90r00r14         [24]  990 	mov	dptr,#_mem_set_dst_65536_43
      000077 E0               [24]  991 	movx	a,@dptr
      000078 FD               [12]  992 	mov	r5,a
      000079 A3               [24]  993 	inc	dptr
      00007A E0               [24]  994 	movx	a,@dptr
      00007B FE               [12]  995 	mov	r6,a
      00007C A3               [24]  996 	inc	dptr
      00007D E0               [24]  997 	movx	a,@dptr
      00007E FF               [12]  998 	mov	r7,a
                           00007F   999 	C$ff.c$580$1_0$44 ==.
                                   1000 ;	FATFS\src\ff.c:580: while (cnt--)
      00007F 90r00r10         [24] 1001 	mov	dptr,#_mem_set_PARM_2
      000082 E0               [24] 1002 	movx	a,@dptr
      000083 F5*00            [12] 1003 	mov	_mem_set_sloc0_1_0,a
      000085 A3               [24] 1004 	inc	dptr
      000086 E0               [24] 1005 	movx	a,@dptr
      000087 F5*01            [12] 1006 	mov	(_mem_set_sloc0_1_0 + 1),a
      000089 90r00r12         [24] 1007 	mov	dptr,#_mem_set_PARM_3
      00008C E0               [24] 1008 	movx	a,@dptr
      00008D F9               [12] 1009 	mov	r1,a
      00008E A3               [24] 1010 	inc	dptr
      00008F E0               [24] 1011 	movx	a,@dptr
      000090 FA               [12] 1012 	mov	r2,a
      000091                       1013 00101$:
      000091 89 00            [24] 1014 	mov	ar0,r1
      000093 8A 04            [24] 1015 	mov	ar4,r2
      000095 19               [12] 1016 	dec	r1
      000096 B9 FF 01         [24] 1017 	cjne	r1,#0xff,00115$
      000099 1A               [12] 1018 	dec	r2
      00009A                       1019 00115$:
      00009A E8               [12] 1020 	mov	a,r0
      00009B 4C               [12] 1021 	orl	a,r4
      00009C 60 13            [24] 1022 	jz	00104$
                           00009E  1023 	C$ff.c$581$1_0$44 ==.
                                   1024 ;	FATFS\src\ff.c:581: *d++ = (BYTE)val;
      00009E AB*00            [24] 1025 	mov	r3,_mem_set_sloc0_1_0
      0000A0 8D 82            [24] 1026 	mov	dpl,r5
      0000A2 8E 83            [24] 1027 	mov	dph,r6
      0000A4 8F F0            [24] 1028 	mov	b,r7
      0000A6 EB               [12] 1029 	mov	a,r3
      0000A7 12r00r00         [24] 1030 	lcall	__gptrput
      0000AA A3               [24] 1031 	inc	dptr
      0000AB AD 82            [24] 1032 	mov	r5,dpl
      0000AD AE 83            [24] 1033 	mov	r6,dph
      0000AF 80 E0            [24] 1034 	sjmp	00101$
      0000B1                       1035 00104$:
                           0000B1  1036 	C$ff.c$582$1_0$44 ==.
                                   1037 ;	FATFS\src\ff.c:582: }
                           0000B1  1038 	C$ff.c$582$1_0$44 ==.
                           0000B1  1039 	XFff$mem_set$0$0 ==.
      0000B1 02r00r00         [24] 1040 	ljmp	__sdcc_banked_ret
                                   1041 ;------------------------------------------------------------
                                   1042 ;Allocation info for local variables in function 'mem_cmp'
                                   1043 ;------------------------------------------------------------
                                   1044 ;src                       Allocated with name '_mem_cmp_PARM_2'
                                   1045 ;cnt                       Allocated with name '_mem_cmp_PARM_3'
                                   1046 ;dst                       Allocated with name '_mem_cmp_dst_65536_45'
                                   1047 ;d                         Allocated with name '_mem_cmp_d_65536_46'
                                   1048 ;s                         Allocated with name '_mem_cmp_s_65536_46'
                                   1049 ;r                         Allocated with name '_mem_cmp_r_65536_46'
                                   1050 ;sloc0                     Allocated with name '_mem_cmp_sloc0_1_0'
                                   1051 ;sloc1                     Allocated with name '_mem_cmp_sloc1_1_0'
                                   1052 ;------------------------------------------------------------
                           0000B4  1053 	Fff$mem_cmp$0$0 ==.
                           0000B4  1054 	C$ff.c$586$1_0$46 ==.
                                   1055 ;	FATFS\src\ff.c:586: int mem_cmp (const void* dst, const void* src, UINT cnt) {
                                   1056 ;	-----------------------------------------
                                   1057 ;	 function mem_cmp
                                   1058 ;	-----------------------------------------
      0000B4                       1059 _mem_cmp:
      0000B4 AF F0            [24] 1060 	mov	r7,b
      0000B6 AE 83            [24] 1061 	mov	r6,dph
      0000B8 E5 82            [12] 1062 	mov	a,dpl
      0000BA 90r00r1C         [24] 1063 	mov	dptr,#_mem_cmp_dst_65536_45
      0000BD F0               [24] 1064 	movx	@dptr,a
      0000BE EE               [12] 1065 	mov	a,r6
      0000BF A3               [24] 1066 	inc	dptr
      0000C0 F0               [24] 1067 	movx	@dptr,a
      0000C1 EF               [12] 1068 	mov	a,r7
      0000C2 A3               [24] 1069 	inc	dptr
      0000C3 F0               [24] 1070 	movx	@dptr,a
                           0000C4  1071 	C$ff.c$587$1_0$46 ==.
                                   1072 ;	FATFS\src\ff.c:587: const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
      0000C4 90r00r1C         [24] 1073 	mov	dptr,#_mem_cmp_dst_65536_45
      0000C7 E0               [24] 1074 	movx	a,@dptr
      0000C8 FD               [12] 1075 	mov	r5,a
      0000C9 A3               [24] 1076 	inc	dptr
      0000CA E0               [24] 1077 	movx	a,@dptr
      0000CB FE               [12] 1078 	mov	r6,a
      0000CC A3               [24] 1079 	inc	dptr
      0000CD E0               [24] 1080 	movx	a,@dptr
      0000CE FF               [12] 1081 	mov	r7,a
      0000CF 90r00r17         [24] 1082 	mov	dptr,#_mem_cmp_PARM_2
      0000D2 E0               [24] 1083 	movx	a,@dptr
      0000D3 FA               [12] 1084 	mov	r2,a
      0000D4 A3               [24] 1085 	inc	dptr
      0000D5 E0               [24] 1086 	movx	a,@dptr
      0000D6 FB               [12] 1087 	mov	r3,a
      0000D7 A3               [24] 1088 	inc	dptr
      0000D8 E0               [24] 1089 	movx	a,@dptr
      0000D9 FC               [12] 1090 	mov	r4,a
                           0000DA  1091 	C$ff.c$588$1_0$46 ==.
                                   1092 ;	FATFS\src\ff.c:588: int r = 0;
      0000DA 90r00r1F         [24] 1093 	mov	dptr,#_mem_cmp_r_65536_46
      0000DD E4               [12] 1094 	clr	a
      0000DE F0               [24] 1095 	movx	@dptr,a
      0000DF A3               [24] 1096 	inc	dptr
      0000E0 F0               [24] 1097 	movx	@dptr,a
                           0000E1  1098 	C$ff.c$590$1_0$46 ==.
                                   1099 ;	FATFS\src\ff.c:590: while (cnt-- && (r = *d++ - *s++) == 0) ;
      0000E1 90r00r1A         [24] 1100 	mov	dptr,#_mem_cmp_PARM_3
      0000E4 E0               [24] 1101 	movx	a,@dptr
      0000E5 F5*00            [12] 1102 	mov	_mem_cmp_sloc0_1_0,a
      0000E7 A3               [24] 1103 	inc	dptr
      0000E8 E0               [24] 1104 	movx	a,@dptr
      0000E9 F5*01            [12] 1105 	mov	(_mem_cmp_sloc0_1_0 + 1),a
      0000EB                       1106 00102$:
      0000EB A8*00            [24] 1107 	mov	r0,_mem_cmp_sloc0_1_0
      0000ED A9*01            [24] 1108 	mov	r1,(_mem_cmp_sloc0_1_0 + 1)
      0000EF 15*00            [12] 1109 	dec	_mem_cmp_sloc0_1_0
      0000F1 74 FF            [12] 1110 	mov	a,#0xff
      0000F3 B5*00 02         [24] 1111 	cjne	a,_mem_cmp_sloc0_1_0,00116$
      0000F6 15*01            [12] 1112 	dec	(_mem_cmp_sloc0_1_0 + 1)
      0000F8                       1113 00116$:
      0000F8 E8               [12] 1114 	mov	a,r0
      0000F9 49               [12] 1115 	orl	a,r1
      0000FA 60 3C            [24] 1116 	jz	00104$
      0000FC 8D 82            [24] 1117 	mov	dpl,r5
      0000FE 8E 83            [24] 1118 	mov	dph,r6
      000100 8F F0            [24] 1119 	mov	b,r7
      000102 12r00r00         [24] 1120 	lcall	__gptrget
      000105 F9               [12] 1121 	mov	r1,a
      000106 A3               [24] 1122 	inc	dptr
      000107 AD 82            [24] 1123 	mov	r5,dpl
      000109 AE 83            [24] 1124 	mov	r6,dph
      00010B 89*02            [24] 1125 	mov	_mem_cmp_sloc1_1_0,r1
      00010D 75*03 00         [24] 1126 	mov	(_mem_cmp_sloc1_1_0 + 1),#0x00
      000110 8A 82            [24] 1127 	mov	dpl,r2
      000112 8B 83            [24] 1128 	mov	dph,r3
      000114 8C F0            [24] 1129 	mov	b,r4
      000116 12r00r00         [24] 1130 	lcall	__gptrget
      000119 F9               [12] 1131 	mov	r1,a
      00011A A3               [24] 1132 	inc	dptr
      00011B AA 82            [24] 1133 	mov	r2,dpl
      00011D AB 83            [24] 1134 	mov	r3,dph
      00011F 89 00            [24] 1135 	mov	ar0,r1
      000121 79 00            [12] 1136 	mov	r1,#0x00
      000123 E5*02            [12] 1137 	mov	a,_mem_cmp_sloc1_1_0
      000125 C3               [12] 1138 	clr	c
      000126 98               [12] 1139 	subb	a,r0
      000127 F8               [12] 1140 	mov	r0,a
      000128 E5*03            [12] 1141 	mov	a,(_mem_cmp_sloc1_1_0 + 1)
      00012A 99               [12] 1142 	subb	a,r1
      00012B F9               [12] 1143 	mov	r1,a
      00012C 90r00r1F         [24] 1144 	mov	dptr,#_mem_cmp_r_65536_46
      00012F E8               [12] 1145 	mov	a,r0
      000130 F0               [24] 1146 	movx	@dptr,a
      000131 E9               [12] 1147 	mov	a,r1
      000132 A3               [24] 1148 	inc	dptr
      000133 F0               [24] 1149 	movx	@dptr,a
      000134 E8               [12] 1150 	mov	a,r0
      000135 49               [12] 1151 	orl	a,r1
      000136 60 B3            [24] 1152 	jz	00102$
      000138                       1153 00104$:
                           000138  1154 	C$ff.c$591$1_0$46 ==.
                                   1155 ;	FATFS\src\ff.c:591: return r;
      000138 90r00r1F         [24] 1156 	mov	dptr,#_mem_cmp_r_65536_46
      00013B E0               [24] 1157 	movx	a,@dptr
      00013C FE               [12] 1158 	mov	r6,a
      00013D A3               [24] 1159 	inc	dptr
      00013E E0               [24] 1160 	movx	a,@dptr
      00013F FF               [12] 1161 	mov	r7,a
      000140 8E 82            [24] 1162 	mov	dpl,r6
      000142 8F 83            [24] 1163 	mov	dph,r7
                           000144  1164 	C$ff.c$592$1_0$46 ==.
                                   1165 ;	FATFS\src\ff.c:592: }
                           000144  1166 	C$ff.c$592$1_0$46 ==.
                           000144  1167 	XFff$mem_cmp$0$0 ==.
      000144 02r00r00         [24] 1168 	ljmp	__sdcc_banked_ret
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'chk_chr'
                                   1171 ;------------------------------------------------------------
                                   1172 ;chr                       Allocated with name '_chk_chr_PARM_2'
                                   1173 ;str                       Allocated with name '_chk_chr_str_65536_47'
                                   1174 ;------------------------------------------------------------
                           000147  1175 	Fff$chk_chr$0$0 ==.
                           000147  1176 	C$ff.c$596$1_0$48 ==.
                                   1177 ;	FATFS\src\ff.c:596: int chk_chr (const char* str, int chr) {
                                   1178 ;	-----------------------------------------
                                   1179 ;	 function chk_chr
                                   1180 ;	-----------------------------------------
      000147                       1181 _chk_chr:
      000147 AF F0            [24] 1182 	mov	r7,b
      000149 AE 83            [24] 1183 	mov	r6,dph
      00014B E5 82            [12] 1184 	mov	a,dpl
      00014D 90r00r23         [24] 1185 	mov	dptr,#_chk_chr_str_65536_47
      000150 F0               [24] 1186 	movx	@dptr,a
      000151 EE               [12] 1187 	mov	a,r6
      000152 A3               [24] 1188 	inc	dptr
      000153 F0               [24] 1189 	movx	@dptr,a
      000154 EF               [12] 1190 	mov	a,r7
      000155 A3               [24] 1191 	inc	dptr
      000156 F0               [24] 1192 	movx	@dptr,a
                           000157  1193 	C$ff.c$597$1_0$48 ==.
                                   1194 ;	FATFS\src\ff.c:597: while (*str && *str != chr) str++;
      000157 90r00r21         [24] 1195 	mov	dptr,#_chk_chr_PARM_2
      00015A E0               [24] 1196 	movx	a,@dptr
      00015B FE               [12] 1197 	mov	r6,a
      00015C A3               [24] 1198 	inc	dptr
      00015D E0               [24] 1199 	movx	a,@dptr
      00015E FF               [12] 1200 	mov	r7,a
      00015F 90r00r23         [24] 1201 	mov	dptr,#_chk_chr_str_65536_47
      000162 E0               [24] 1202 	movx	a,@dptr
      000163 FB               [12] 1203 	mov	r3,a
      000164 A3               [24] 1204 	inc	dptr
      000165 E0               [24] 1205 	movx	a,@dptr
      000166 FC               [12] 1206 	mov	r4,a
      000167 A3               [24] 1207 	inc	dptr
      000168 E0               [24] 1208 	movx	a,@dptr
      000169 FD               [12] 1209 	mov	r5,a
      00016A                       1210 00102$:
      00016A 8B 82            [24] 1211 	mov	dpl,r3
      00016C 8C 83            [24] 1212 	mov	dph,r4
      00016E 8D F0            [24] 1213 	mov	b,r5
      000170 12r00r00         [24] 1214 	lcall	__gptrget
      000173 FA               [12] 1215 	mov	r2,a
      000174 60 20            [24] 1216 	jz	00110$
      000176 8A 01            [24] 1217 	mov	ar1,r2
      000178 7A 00            [12] 1218 	mov	r2,#0x00
      00017A E9               [12] 1219 	mov	a,r1
      00017B B5 06 06         [24] 1220 	cjne	a,ar6,00121$
      00017E EA               [12] 1221 	mov	a,r2
      00017F B5 07 02         [24] 1222 	cjne	a,ar7,00121$
      000182 80 12            [24] 1223 	sjmp	00110$
      000184                       1224 00121$:
      000184 0B               [12] 1225 	inc	r3
      000185 BB 00 01         [24] 1226 	cjne	r3,#0x00,00122$
      000188 0C               [12] 1227 	inc	r4
      000189                       1228 00122$:
      000189 90r00r23         [24] 1229 	mov	dptr,#_chk_chr_str_65536_47
      00018C EB               [12] 1230 	mov	a,r3
      00018D F0               [24] 1231 	movx	@dptr,a
      00018E EC               [12] 1232 	mov	a,r4
      00018F A3               [24] 1233 	inc	dptr
      000190 F0               [24] 1234 	movx	@dptr,a
      000191 ED               [12] 1235 	mov	a,r5
      000192 A3               [24] 1236 	inc	dptr
      000193 F0               [24] 1237 	movx	@dptr,a
      000194 80 D4            [24] 1238 	sjmp	00102$
      000196                       1239 00110$:
      000196 90r00r23         [24] 1240 	mov	dptr,#_chk_chr_str_65536_47
      000199 EB               [12] 1241 	mov	a,r3
      00019A F0               [24] 1242 	movx	@dptr,a
      00019B EC               [12] 1243 	mov	a,r4
      00019C A3               [24] 1244 	inc	dptr
      00019D F0               [24] 1245 	movx	@dptr,a
      00019E ED               [12] 1246 	mov	a,r5
      00019F A3               [24] 1247 	inc	dptr
      0001A0 F0               [24] 1248 	movx	@dptr,a
                           0001A1  1249 	C$ff.c$598$1_0$48 ==.
                                   1250 ;	FATFS\src\ff.c:598: return *str;
      0001A1 8B 82            [24] 1251 	mov	dpl,r3
      0001A3 8C 83            [24] 1252 	mov	dph,r4
      0001A5 8D F0            [24] 1253 	mov	b,r5
      0001A7 12r00r00         [24] 1254 	lcall	__gptrget
      0001AA FB               [12] 1255 	mov	r3,a
      0001AB 7F 00            [12] 1256 	mov	r7,#0x00
      0001AD 8B 82            [24] 1257 	mov	dpl,r3
      0001AF 8F 83            [24] 1258 	mov	dph,r7
                           0001B1  1259 	C$ff.c$599$1_0$48 ==.
                                   1260 ;	FATFS\src\ff.c:599: }
                           0001B1  1261 	C$ff.c$599$1_0$48 ==.
                           0001B1  1262 	XFff$chk_chr$0$0 ==.
      0001B1 02r00r00         [24] 1263 	ljmp	__sdcc_banked_ret
                                   1264 ;------------------------------------------------------------
                                   1265 ;Allocation info for local variables in function 'move_window'
                                   1266 ;------------------------------------------------------------
                                   1267 ;sloc0                     Allocated with name '_move_window_sloc0_1_0'
                                   1268 ;sloc1                     Allocated with name '_move_window_sloc1_1_0'
                                   1269 ;sector                    Allocated with name '_move_window_PARM_2'
                                   1270 ;fs                        Allocated with name '_move_window_fs_65536_49'
                                   1271 ;------------------------------------------------------------
                           0001B4  1272 	Fff$move_window$0$0 ==.
                           0001B4  1273 	C$ff.c$779$1_0$50 ==.
                                   1274 ;	FATFS\src\ff.c:779: FRESULT move_window (
                                   1275 ;	-----------------------------------------
                                   1276 ;	 function move_window
                                   1277 ;	-----------------------------------------
      0001B4                       1278 _move_window:
      0001B4 AF F0            [24] 1279 	mov	r7,b
      0001B6 AE 83            [24] 1280 	mov	r6,dph
      0001B8 E5 82            [12] 1281 	mov	a,dpl
      0001BA 90r00r2A         [24] 1282 	mov	dptr,#_move_window_fs_65536_49
      0001BD F0               [24] 1283 	movx	@dptr,a
      0001BE EE               [12] 1284 	mov	a,r6
      0001BF A3               [24] 1285 	inc	dptr
      0001C0 F0               [24] 1286 	movx	@dptr,a
      0001C1 EF               [12] 1287 	mov	a,r7
      0001C2 A3               [24] 1288 	inc	dptr
      0001C3 F0               [24] 1289 	movx	@dptr,a
                           0001C4  1290 	C$ff.c$784$1_0$50 ==.
                                   1291 ;	FATFS\src\ff.c:784: if (sector != fs->winsect) {	/* Changed current window */
      0001C4 90r00r2A         [24] 1292 	mov	dptr,#_move_window_fs_65536_49
      0001C7 E0               [24] 1293 	movx	a,@dptr
      0001C8 FD               [12] 1294 	mov	r5,a
      0001C9 A3               [24] 1295 	inc	dptr
      0001CA E0               [24] 1296 	movx	a,@dptr
      0001CB FE               [12] 1297 	mov	r6,a
      0001CC A3               [24] 1298 	inc	dptr
      0001CD E0               [24] 1299 	movx	a,@dptr
      0001CE FF               [12] 1300 	mov	r7,a
      0001CF 74 22            [12] 1301 	mov	a,#0x22
      0001D1 2D               [12] 1302 	add	a,r5
      0001D2 F5*00            [12] 1303 	mov	_move_window_sloc0_1_0,a
      0001D4 E4               [12] 1304 	clr	a
      0001D5 3E               [12] 1305 	addc	a,r6
      0001D6 F5*01            [12] 1306 	mov	(_move_window_sloc0_1_0 + 1),a
      0001D8 8F*02            [24] 1307 	mov	(_move_window_sloc0_1_0 + 2),r7
      0001DA 85*00 82         [24] 1308 	mov	dpl,_move_window_sloc0_1_0
      0001DD 85*01 83         [24] 1309 	mov	dph,(_move_window_sloc0_1_0 + 1)
      0001E0 85*02 F0         [24] 1310 	mov	b,(_move_window_sloc0_1_0 + 2)
      0001E3 12r00r00         [24] 1311 	lcall	__gptrget
      0001E6 F8               [12] 1312 	mov	r0,a
      0001E7 A3               [24] 1313 	inc	dptr
      0001E8 12r00r00         [24] 1314 	lcall	__gptrget
      0001EB F9               [12] 1315 	mov	r1,a
      0001EC A3               [24] 1316 	inc	dptr
      0001ED 12r00r00         [24] 1317 	lcall	__gptrget
      0001F0 FB               [12] 1318 	mov	r3,a
      0001F1 A3               [24] 1319 	inc	dptr
      0001F2 12r00r00         [24] 1320 	lcall	__gptrget
      0001F5 FC               [12] 1321 	mov	r4,a
      0001F6 90r00r26         [24] 1322 	mov	dptr,#_move_window_PARM_2
      0001F9 E0               [24] 1323 	movx	a,@dptr
      0001FA F5*03            [12] 1324 	mov	_move_window_sloc1_1_0,a
      0001FC A3               [24] 1325 	inc	dptr
      0001FD E0               [24] 1326 	movx	a,@dptr
      0001FE F5*04            [12] 1327 	mov	(_move_window_sloc1_1_0 + 1),a
      000200 A3               [24] 1328 	inc	dptr
      000201 E0               [24] 1329 	movx	a,@dptr
      000202 F5*05            [12] 1330 	mov	(_move_window_sloc1_1_0 + 2),a
      000204 A3               [24] 1331 	inc	dptr
      000205 E0               [24] 1332 	movx	a,@dptr
      000206 F5*06            [12] 1333 	mov	(_move_window_sloc1_1_0 + 3),a
      000208 E8               [12] 1334 	mov	a,r0
      000209 B5*03 0E         [24] 1335 	cjne	a,_move_window_sloc1_1_0,00115$
      00020C E9               [12] 1336 	mov	a,r1
      00020D B5*04 0A         [24] 1337 	cjne	a,(_move_window_sloc1_1_0 + 1),00115$
      000210 EB               [12] 1338 	mov	a,r3
      000211 B5*05 06         [24] 1339 	cjne	a,(_move_window_sloc1_1_0 + 2),00115$
      000214 EC               [12] 1340 	mov	a,r4
      000215 B5*06 02         [24] 1341 	cjne	a,(_move_window_sloc1_1_0 + 3),00115$
      000218 80 70            [24] 1342 	sjmp	00104$
      00021A                       1343 00115$:
                           00021A  1344 	C$ff.c$789$2_0$51 ==.
                                   1345 ;	FATFS\src\ff.c:789: if (disk_read(fs->drv, fs->win, sector, 1))
      00021A 74 01            [12] 1346 	mov	a,#0x01
      00021C 2D               [12] 1347 	add	a,r5
      00021D FA               [12] 1348 	mov	r2,a
      00021E E4               [12] 1349 	clr	a
      00021F 3E               [12] 1350 	addc	a,r6
      000220 FB               [12] 1351 	mov	r3,a
      000221 8F 04            [24] 1352 	mov	ar4,r7
      000223 8A 82            [24] 1353 	mov	dpl,r2
      000225 8B 83            [24] 1354 	mov	dph,r3
      000227 8C F0            [24] 1355 	mov	b,r4
      000229 12r00r00         [24] 1356 	lcall	__gptrget
      00022C FA               [12] 1357 	mov	r2,a
      00022D 90r00r00         [24] 1358 	mov	dptr,#_disk_read_PARM_2
      000230 74 26            [12] 1359 	mov	a,#0x26
      000232 2D               [12] 1360 	add	a,r5
      000233 F0               [24] 1361 	movx	@dptr,a
      000234 E4               [12] 1362 	clr	a
      000235 3E               [12] 1363 	addc	a,r6
      000236 A3               [24] 1364 	inc	dptr
      000237 F0               [24] 1365 	movx	@dptr,a
      000238 EF               [12] 1366 	mov	a,r7
      000239 A3               [24] 1367 	inc	dptr
      00023A F0               [24] 1368 	movx	@dptr,a
      00023B 90r00r00         [24] 1369 	mov	dptr,#_disk_read_PARM_3
      00023E E5*03            [12] 1370 	mov	a,_move_window_sloc1_1_0
      000240 F0               [24] 1371 	movx	@dptr,a
      000241 E5*04            [12] 1372 	mov	a,(_move_window_sloc1_1_0 + 1)
      000243 A3               [24] 1373 	inc	dptr
      000244 F0               [24] 1374 	movx	@dptr,a
      000245 E5*05            [12] 1375 	mov	a,(_move_window_sloc1_1_0 + 2)
      000247 A3               [24] 1376 	inc	dptr
      000248 F0               [24] 1377 	movx	@dptr,a
      000249 E5*06            [12] 1378 	mov	a,(_move_window_sloc1_1_0 + 3)
      00024B A3               [24] 1379 	inc	dptr
      00024C F0               [24] 1380 	movx	@dptr,a
      00024D 90r00r00         [24] 1381 	mov	dptr,#_disk_read_PARM_4
      000250 74 01            [12] 1382 	mov	a,#0x01
      000252 F0               [24] 1383 	movx	@dptr,a
      000253 E4               [12] 1384 	clr	a
      000254 A3               [24] 1385 	inc	dptr
      000255 F0               [24] 1386 	movx	@dptr,a
      000256 8A 82            [24] 1387 	mov	dpl,r2
      000258 78r00            [12] 1388 	mov	r0,#_disk_read
      00025A 79s00            [12] 1389 	mov	r1,#(_disk_read >> 8)
      00025C 7As00            [12] 1390 	mov	r2,#(_disk_read >> 16)
      00025E 12r00r00         [24] 1391 	lcall	__sdcc_banked_call
      000261 E5 82            [12] 1392 	mov	a,dpl
      000263 60 05            [24] 1393 	jz	00102$
                           000265  1394 	C$ff.c$790$2_0$51 ==.
                                   1395 ;	FATFS\src\ff.c:790: return FR_DISK_ERR;
      000265 75 82 01         [24] 1396 	mov	dpl,#0x01
      000268 80 23            [24] 1397 	sjmp	00105$
      00026A                       1398 00102$:
                           00026A  1399 	C$ff.c$791$2_0$51 ==.
                                   1400 ;	FATFS\src\ff.c:791: fs->winsect = sector;
      00026A 85*00 82         [24] 1401 	mov	dpl,_move_window_sloc0_1_0
      00026D 85*01 83         [24] 1402 	mov	dph,(_move_window_sloc0_1_0 + 1)
      000270 85*02 F0         [24] 1403 	mov	b,(_move_window_sloc0_1_0 + 2)
      000273 E5*03            [12] 1404 	mov	a,_move_window_sloc1_1_0
      000275 12r00r00         [24] 1405 	lcall	__gptrput
      000278 A3               [24] 1406 	inc	dptr
      000279 E5*04            [12] 1407 	mov	a,(_move_window_sloc1_1_0 + 1)
      00027B 12r00r00         [24] 1408 	lcall	__gptrput
      00027E A3               [24] 1409 	inc	dptr
      00027F E5*05            [12] 1410 	mov	a,(_move_window_sloc1_1_0 + 2)
      000281 12r00r00         [24] 1411 	lcall	__gptrput
      000284 A3               [24] 1412 	inc	dptr
      000285 E5*06            [12] 1413 	mov	a,(_move_window_sloc1_1_0 + 3)
      000287 12r00r00         [24] 1414 	lcall	__gptrput
      00028A                       1415 00104$:
                           00028A  1416 	C$ff.c$794$1_0$50 ==.
                                   1417 ;	FATFS\src\ff.c:794: return FR_OK;
      00028A 75 82 00         [24] 1418 	mov	dpl,#0x00
      00028D                       1419 00105$:
                           00028D  1420 	C$ff.c$795$1_0$50 ==.
                                   1421 ;	FATFS\src\ff.c:795: }
                           00028D  1422 	C$ff.c$795$1_0$50 ==.
                           00028D  1423 	XFff$move_window$0$0 ==.
      00028D 02r00r00         [24] 1424 	ljmp	__sdcc_banked_ret
                                   1425 ;------------------------------------------------------------
                                   1426 ;Allocation info for local variables in function 'clust2sect'
                                   1427 ;------------------------------------------------------------
                                   1428 ;sloc0                     Allocated with name '_clust2sect_sloc0_1_0'
                                   1429 ;clst                      Allocated with name '_clust2sect_PARM_2'
                                   1430 ;fs                        Allocated with name '_clust2sect_fs_65536_52'
                                   1431 ;------------------------------------------------------------
                           000290  1432 	G$clust2sect$0$0 ==.
                           000290  1433 	C$ff.c$845$1_0$53 ==.
                                   1434 ;	FATFS\src\ff.c:845: DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
                                   1435 ;	-----------------------------------------
                                   1436 ;	 function clust2sect
                                   1437 ;	-----------------------------------------
      000290                       1438 _clust2sect:
      000290 AF F0            [24] 1439 	mov	r7,b
      000292 AE 83            [24] 1440 	mov	r6,dph
      000294 E5 82            [12] 1441 	mov	a,dpl
      000296 90r00r31         [24] 1442 	mov	dptr,#_clust2sect_fs_65536_52
      000299 F0               [24] 1443 	movx	@dptr,a
      00029A EE               [12] 1444 	mov	a,r6
      00029B A3               [24] 1445 	inc	dptr
      00029C F0               [24] 1446 	movx	@dptr,a
      00029D EF               [12] 1447 	mov	a,r7
      00029E A3               [24] 1448 	inc	dptr
      00029F F0               [24] 1449 	movx	@dptr,a
                           0002A0  1450 	C$ff.c$850$1_0$53 ==.
                                   1451 ;	FATFS\src\ff.c:850: clst -= 2;
      0002A0 90r00r2D         [24] 1452 	mov	dptr,#_clust2sect_PARM_2
      0002A3 E0               [24] 1453 	movx	a,@dptr
      0002A4 FC               [12] 1454 	mov	r4,a
      0002A5 A3               [24] 1455 	inc	dptr
      0002A6 E0               [24] 1456 	movx	a,@dptr
      0002A7 FD               [12] 1457 	mov	r5,a
      0002A8 A3               [24] 1458 	inc	dptr
      0002A9 E0               [24] 1459 	movx	a,@dptr
      0002AA FE               [12] 1460 	mov	r6,a
      0002AB A3               [24] 1461 	inc	dptr
      0002AC E0               [24] 1462 	movx	a,@dptr
      0002AD FF               [12] 1463 	mov	r7,a
      0002AE EC               [12] 1464 	mov	a,r4
      0002AF 24 FE            [12] 1465 	add	a,#0xfe
      0002B1 FC               [12] 1466 	mov	r4,a
      0002B2 ED               [12] 1467 	mov	a,r5
      0002B3 34 FF            [12] 1468 	addc	a,#0xff
      0002B5 FD               [12] 1469 	mov	r5,a
      0002B6 EE               [12] 1470 	mov	a,r6
      0002B7 34 FF            [12] 1471 	addc	a,#0xff
      0002B9 FE               [12] 1472 	mov	r6,a
      0002BA EF               [12] 1473 	mov	a,r7
      0002BB 34 FF            [12] 1474 	addc	a,#0xff
      0002BD FF               [12] 1475 	mov	r7,a
      0002BE 90r00r2D         [24] 1476 	mov	dptr,#_clust2sect_PARM_2
      0002C1 EC               [12] 1477 	mov	a,r4
      0002C2 F0               [24] 1478 	movx	@dptr,a
      0002C3 ED               [12] 1479 	mov	a,r5
      0002C4 A3               [24] 1480 	inc	dptr
      0002C5 F0               [24] 1481 	movx	@dptr,a
      0002C6 EE               [12] 1482 	mov	a,r6
      0002C7 A3               [24] 1483 	inc	dptr
      0002C8 F0               [24] 1484 	movx	@dptr,a
      0002C9 EF               [12] 1485 	mov	a,r7
      0002CA A3               [24] 1486 	inc	dptr
      0002CB F0               [24] 1487 	movx	@dptr,a
                           0002CC  1488 	C$ff.c$851$1_0$53 ==.
                                   1489 ;	FATFS\src\ff.c:851: if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
      0002CC 90r00r31         [24] 1490 	mov	dptr,#_clust2sect_fs_65536_52
      0002CF E0               [24] 1491 	movx	a,@dptr
      0002D0 FF               [12] 1492 	mov	r7,a
      0002D1 A3               [24] 1493 	inc	dptr
      0002D2 E0               [24] 1494 	movx	a,@dptr
      0002D3 FD               [12] 1495 	mov	r5,a
      0002D4 A3               [24] 1496 	inc	dptr
      0002D5 E0               [24] 1497 	movx	a,@dptr
      0002D6 FE               [12] 1498 	mov	r6,a
      0002D7 74 0A            [12] 1499 	mov	a,#0x0a
      0002D9 2F               [12] 1500 	add	a,r7
      0002DA FC               [12] 1501 	mov	r4,a
      0002DB E4               [12] 1502 	clr	a
      0002DC 3D               [12] 1503 	addc	a,r5
      0002DD FA               [12] 1504 	mov	r2,a
      0002DE 8E 03            [24] 1505 	mov	ar3,r6
      0002E0 8C 82            [24] 1506 	mov	dpl,r4
      0002E2 8A 83            [24] 1507 	mov	dph,r2
      0002E4 8B F0            [24] 1508 	mov	b,r3
      0002E6 12r00r00         [24] 1509 	lcall	__gptrget
      0002E9 F9               [12] 1510 	mov	r1,a
      0002EA A3               [24] 1511 	inc	dptr
      0002EB 12r00r00         [24] 1512 	lcall	__gptrget
      0002EE FA               [12] 1513 	mov	r2,a
      0002EF A3               [24] 1514 	inc	dptr
      0002F0 12r00r00         [24] 1515 	lcall	__gptrget
      0002F3 FB               [12] 1516 	mov	r3,a
      0002F4 A3               [24] 1517 	inc	dptr
      0002F5 12r00r00         [24] 1518 	lcall	__gptrget
      0002F8 FC               [12] 1519 	mov	r4,a
      0002F9 E9               [12] 1520 	mov	a,r1
      0002FA 24 FE            [12] 1521 	add	a,#0xfe
      0002FC F9               [12] 1522 	mov	r1,a
      0002FD EA               [12] 1523 	mov	a,r2
      0002FE 34 FF            [12] 1524 	addc	a,#0xff
      000300 FA               [12] 1525 	mov	r2,a
      000301 EB               [12] 1526 	mov	a,r3
      000302 34 FF            [12] 1527 	addc	a,#0xff
      000304 FB               [12] 1528 	mov	r3,a
      000305 EC               [12] 1529 	mov	a,r4
      000306 34 FF            [12] 1530 	addc	a,#0xff
      000308 FC               [12] 1531 	mov	r4,a
      000309 90r00r2D         [24] 1532 	mov	dptr,#_clust2sect_PARM_2
      00030C E0               [24] 1533 	movx	a,@dptr
      00030D F5*07            [12] 1534 	mov	_clust2sect_sloc0_1_0,a
      00030F A3               [24] 1535 	inc	dptr
      000310 E0               [24] 1536 	movx	a,@dptr
      000311 F5*08            [12] 1537 	mov	(_clust2sect_sloc0_1_0 + 1),a
      000313 A3               [24] 1538 	inc	dptr
      000314 E0               [24] 1539 	movx	a,@dptr
      000315 F5*09            [12] 1540 	mov	(_clust2sect_sloc0_1_0 + 2),a
      000317 A3               [24] 1541 	inc	dptr
      000318 E0               [24] 1542 	movx	a,@dptr
      000319 F5*0A            [12] 1543 	mov	(_clust2sect_sloc0_1_0 + 3),a
      00031B C3               [12] 1544 	clr	c
      00031C E5*07            [12] 1545 	mov	a,_clust2sect_sloc0_1_0
      00031E 99               [12] 1546 	subb	a,r1
      00031F E5*08            [12] 1547 	mov	a,(_clust2sect_sloc0_1_0 + 1)
      000321 9A               [12] 1548 	subb	a,r2
      000322 E5*09            [12] 1549 	mov	a,(_clust2sect_sloc0_1_0 + 2)
      000324 9B               [12] 1550 	subb	a,r3
      000325 E5*0A            [12] 1551 	mov	a,(_clust2sect_sloc0_1_0 + 3)
      000327 9C               [12] 1552 	subb	a,r4
      000328 40 08            [24] 1553 	jc	00102$
      00032A 90 00 00         [24] 1554 	mov	dptr,#(0x00&0x00ff)
      00032D E4               [12] 1555 	clr	a
      00032E F5 F0            [12] 1556 	mov	b,a
      000330 80 70            [24] 1557 	sjmp	00103$
      000332                       1558 00102$:
                           000332  1559 	C$ff.c$852$1_0$53 ==.
                                   1560 ;	FATFS\src\ff.c:852: return clst * fs->csize + fs->database;
      000332 74 02            [12] 1561 	mov	a,#0x02
      000334 2F               [12] 1562 	add	a,r7
      000335 FA               [12] 1563 	mov	r2,a
      000336 E4               [12] 1564 	clr	a
      000337 3D               [12] 1565 	addc	a,r5
      000338 FB               [12] 1566 	mov	r3,a
      000339 8E 04            [24] 1567 	mov	ar4,r6
      00033B 8A 82            [24] 1568 	mov	dpl,r2
      00033D 8B 83            [24] 1569 	mov	dph,r3
      00033F 8C F0            [24] 1570 	mov	b,r4
      000341 12r00r00         [24] 1571 	lcall	__gptrget
      000344 90r00r00         [24] 1572 	mov	dptr,#__mullong_PARM_2
      000347 F0               [24] 1573 	movx	@dptr,a
      000348 E4               [12] 1574 	clr	a
      000349 A3               [24] 1575 	inc	dptr
      00034A F0               [24] 1576 	movx	@dptr,a
      00034B A3               [24] 1577 	inc	dptr
      00034C F0               [24] 1578 	movx	@dptr,a
      00034D A3               [24] 1579 	inc	dptr
      00034E F0               [24] 1580 	movx	@dptr,a
      00034F 85*07 82         [24] 1581 	mov	dpl,_clust2sect_sloc0_1_0
      000352 85*08 83         [24] 1582 	mov	dph,(_clust2sect_sloc0_1_0 + 1)
      000355 85*09 F0         [24] 1583 	mov	b,(_clust2sect_sloc0_1_0 + 2)
      000358 E5*0A            [12] 1584 	mov	a,(_clust2sect_sloc0_1_0 + 3)
      00035A C0 07            [24] 1585 	push	ar7
      00035C C0 06            [24] 1586 	push	ar6
      00035E C0 05            [24] 1587 	push	ar5
      000360 12r00r00         [24] 1588 	lcall	__mullong
      000363 A9 82            [24] 1589 	mov	r1,dpl
      000365 AA 83            [24] 1590 	mov	r2,dph
      000367 AB F0            [24] 1591 	mov	r3,b
      000369 FC               [12] 1592 	mov	r4,a
      00036A D0 05            [24] 1593 	pop	ar5
      00036C D0 06            [24] 1594 	pop	ar6
      00036E D0 07            [24] 1595 	pop	ar7
      000370 74 1E            [12] 1596 	mov	a,#0x1e
      000372 2F               [12] 1597 	add	a,r7
      000373 FF               [12] 1598 	mov	r7,a
      000374 E4               [12] 1599 	clr	a
      000375 3D               [12] 1600 	addc	a,r5
      000376 FD               [12] 1601 	mov	r5,a
      000377 8F 82            [24] 1602 	mov	dpl,r7
      000379 8D 83            [24] 1603 	mov	dph,r5
      00037B 8E F0            [24] 1604 	mov	b,r6
      00037D 12r00r00         [24] 1605 	lcall	__gptrget
      000380 F8               [12] 1606 	mov	r0,a
      000381 A3               [24] 1607 	inc	dptr
      000382 12r00r00         [24] 1608 	lcall	__gptrget
      000385 FD               [12] 1609 	mov	r5,a
      000386 A3               [24] 1610 	inc	dptr
      000387 12r00r00         [24] 1611 	lcall	__gptrget
      00038A FE               [12] 1612 	mov	r6,a
      00038B A3               [24] 1613 	inc	dptr
      00038C 12r00r00         [24] 1614 	lcall	__gptrget
      00038F FF               [12] 1615 	mov	r7,a
      000390 E8               [12] 1616 	mov	a,r0
      000391 29               [12] 1617 	add	a,r1
      000392 F9               [12] 1618 	mov	r1,a
      000393 ED               [12] 1619 	mov	a,r5
      000394 3A               [12] 1620 	addc	a,r2
      000395 FA               [12] 1621 	mov	r2,a
      000396 EE               [12] 1622 	mov	a,r6
      000397 3B               [12] 1623 	addc	a,r3
      000398 FB               [12] 1624 	mov	r3,a
      000399 EF               [12] 1625 	mov	a,r7
      00039A 3C               [12] 1626 	addc	a,r4
      00039B FC               [12] 1627 	mov	r4,a
      00039C 89 82            [24] 1628 	mov	dpl,r1
      00039E 8A 83            [24] 1629 	mov	dph,r2
      0003A0 8B F0            [24] 1630 	mov	b,r3
      0003A2                       1631 00103$:
                           0003A2  1632 	C$ff.c$853$1_0$53 ==.
                                   1633 ;	FATFS\src\ff.c:853: }
                           0003A2  1634 	C$ff.c$853$1_0$53 ==.
                           0003A2  1635 	XG$clust2sect$0$0 ==.
      0003A2 02r00r00         [24] 1636 	ljmp	__sdcc_banked_ret
                                   1637 ;------------------------------------------------------------
                                   1638 ;Allocation info for local variables in function 'get_fat'
                                   1639 ;------------------------------------------------------------
                                   1640 ;sloc0                     Allocated with name '_get_fat_sloc0_1_0'
                                   1641 ;sloc1                     Allocated with name '_get_fat_sloc1_1_0'
                                   1642 ;sloc2                     Allocated with name '_get_fat_sloc2_1_0'
                                   1643 ;sloc3                     Allocated with name '_get_fat_sloc3_1_0'
                                   1644 ;clst                      Allocated with name '_get_fat_PARM_2'
                                   1645 ;fs                        Allocated with name '_get_fat_fs_65536_54'
                                   1646 ;wc                        Allocated with name '_get_fat_wc_65536_55'
                                   1647 ;bc                        Allocated with name '_get_fat_bc_65536_55'
                                   1648 ;p                         Allocated with name '_get_fat_p_65536_55'
                                   1649 ;------------------------------------------------------------
                           0003A5  1650 	G$get_fat$0$0 ==.
                           0003A5  1651 	C$ff.c$863$1_0$55 ==.
                                   1652 ;	FATFS\src\ff.c:863: DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
                                   1653 ;	-----------------------------------------
                                   1654 ;	 function get_fat
                                   1655 ;	-----------------------------------------
      0003A5                       1656 _get_fat:
      0003A5 AF F0            [24] 1657 	mov	r7,b
      0003A7 AE 83            [24] 1658 	mov	r6,dph
      0003A9 E5 82            [12] 1659 	mov	a,dpl
      0003AB 90r00r38         [24] 1660 	mov	dptr,#_get_fat_fs_65536_54
      0003AE F0               [24] 1661 	movx	@dptr,a
      0003AF EE               [12] 1662 	mov	a,r6
      0003B0 A3               [24] 1663 	inc	dptr
      0003B1 F0               [24] 1664 	movx	@dptr,a
      0003B2 EF               [12] 1665 	mov	a,r7
      0003B3 A3               [24] 1666 	inc	dptr
      0003B4 F0               [24] 1667 	movx	@dptr,a
                           0003B5  1668 	C$ff.c$872$1_0$55 ==.
                                   1669 ;	FATFS\src\ff.c:872: if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
      0003B5 90r00r34         [24] 1670 	mov	dptr,#_get_fat_PARM_2
      0003B8 E0               [24] 1671 	movx	a,@dptr
      0003B9 FC               [12] 1672 	mov	r4,a
      0003BA A3               [24] 1673 	inc	dptr
      0003BB E0               [24] 1674 	movx	a,@dptr
      0003BC FD               [12] 1675 	mov	r5,a
      0003BD A3               [24] 1676 	inc	dptr
      0003BE E0               [24] 1677 	movx	a,@dptr
      0003BF FE               [12] 1678 	mov	r6,a
      0003C0 A3               [24] 1679 	inc	dptr
      0003C1 E0               [24] 1680 	movx	a,@dptr
      0003C2 FF               [12] 1681 	mov	r7,a
      0003C3 C3               [12] 1682 	clr	c
      0003C4 EC               [12] 1683 	mov	a,r4
      0003C5 94 02            [12] 1684 	subb	a,#0x02
      0003C7 ED               [12] 1685 	mov	a,r5
      0003C8 94 00            [12] 1686 	subb	a,#0x00
      0003CA EE               [12] 1687 	mov	a,r6
      0003CB 94 00            [12] 1688 	subb	a,#0x00
      0003CD EF               [12] 1689 	mov	a,r7
      0003CE 94 00            [12] 1690 	subb	a,#0x00
      0003D0 40 3D            [24] 1691 	jc	00101$
      0003D2 90r00r38         [24] 1692 	mov	dptr,#_get_fat_fs_65536_54
      0003D5 E0               [24] 1693 	movx	a,@dptr
      0003D6 F5*0B            [12] 1694 	mov	_get_fat_sloc0_1_0,a
      0003D8 A3               [24] 1695 	inc	dptr
      0003D9 E0               [24] 1696 	movx	a,@dptr
      0003DA F5*0C            [12] 1697 	mov	(_get_fat_sloc0_1_0 + 1),a
      0003DC A3               [24] 1698 	inc	dptr
      0003DD E0               [24] 1699 	movx	a,@dptr
      0003DE F5*0D            [12] 1700 	mov	(_get_fat_sloc0_1_0 + 2),a
      0003E0 74 0A            [12] 1701 	mov	a,#0x0a
      0003E2 25*0B            [12] 1702 	add	a,_get_fat_sloc0_1_0
      0003E4 F8               [12] 1703 	mov	r0,a
      0003E5 E4               [12] 1704 	clr	a
      0003E6 35*0C            [12] 1705 	addc	a,(_get_fat_sloc0_1_0 + 1)
      0003E8 FB               [12] 1706 	mov	r3,a
      0003E9 AA*0D            [24] 1707 	mov	r2,(_get_fat_sloc0_1_0 + 2)
      0003EB 88 82            [24] 1708 	mov	dpl,r0
      0003ED 8B 83            [24] 1709 	mov	dph,r3
      0003EF 8A F0            [24] 1710 	mov	b,r2
      0003F1 12r00r00         [24] 1711 	lcall	__gptrget
      0003F4 F8               [12] 1712 	mov	r0,a
      0003F5 A3               [24] 1713 	inc	dptr
      0003F6 12r00r00         [24] 1714 	lcall	__gptrget
      0003F9 F9               [12] 1715 	mov	r1,a
      0003FA A3               [24] 1716 	inc	dptr
      0003FB 12r00r00         [24] 1717 	lcall	__gptrget
      0003FE FA               [12] 1718 	mov	r2,a
      0003FF A3               [24] 1719 	inc	dptr
      000400 12r00r00         [24] 1720 	lcall	__gptrget
      000403 FB               [12] 1721 	mov	r3,a
      000404 C3               [12] 1722 	clr	c
      000405 EC               [12] 1723 	mov	a,r4
      000406 98               [12] 1724 	subb	a,r0
      000407 ED               [12] 1725 	mov	a,r5
      000408 99               [12] 1726 	subb	a,r1
      000409 EE               [12] 1727 	mov	a,r6
      00040A 9A               [12] 1728 	subb	a,r2
      00040B EF               [12] 1729 	mov	a,r7
      00040C 9B               [12] 1730 	subb	a,r3
      00040D 40 09            [24] 1731 	jc	00102$
      00040F                       1732 00101$:
                           00040F  1733 	C$ff.c$873$1_0$55 ==.
                                   1734 ;	FATFS\src\ff.c:873: return 1;
      00040F 90 00 01         [24] 1735 	mov	dptr,#(0x01&0x00ff)
      000412 E4               [12] 1736 	clr	a
      000413 F5 F0            [12] 1737 	mov	b,a
      000415 02r00r00         [24] 1738 	ljmp	__sdcc_banked_ret
      000418                       1739 00102$:
                           000418  1740 	C$ff.c$875$1_0$55 ==.
                                   1741 ;	FATFS\src\ff.c:875: switch (fs->fs_type) {
      000418 85*0B 82         [24] 1742 	mov	dpl,_get_fat_sloc0_1_0
      00041B 85*0C 83         [24] 1743 	mov	dph,(_get_fat_sloc0_1_0 + 1)
      00041E 85*0D F0         [24] 1744 	mov	b,(_get_fat_sloc0_1_0 + 2)
      000421 12r00r00         [24] 1745 	lcall	__gptrget
      000424 FB               [12] 1746 	mov	r3,a
      000425 BB 01 02         [24] 1747 	cjne	r3,#0x01,00159$
      000428 80 0F            [24] 1748 	sjmp	00104$
      00042A                       1749 00159$:
      00042A BB 02 03         [24] 1750 	cjne	r3,#0x02,00160$
      00042D 02r05rF3         [24] 1751 	ljmp	00109$
      000430                       1752 00160$:
      000430 BB 03 03         [24] 1753 	cjne	r3,#0x03,00161$
      000433 02r06rCA         [24] 1754 	ljmp	00112$
      000436                       1755 00161$:
      000436 02r08r11         [24] 1756 	ljmp	00115$
                           000439  1757 	C$ff.c$876$2_0$56 ==.
                                   1758 ;	FATFS\src\ff.c:876: case FS_FAT12 :
      000439                       1759 00104$:
                           000439  1760 	C$ff.c$877$2_0$56 ==.
                                   1761 ;	FATFS\src\ff.c:877: bc = (UINT)clst; bc += bc / 2;
      000439 8C 02            [24] 1762 	mov	ar2,r4
      00043B 8D 03            [24] 1763 	mov	ar3,r5
      00043D 8A 00            [24] 1764 	mov	ar0,r2
      00043F EB               [12] 1765 	mov	a,r3
      000440 C3               [12] 1766 	clr	c
      000441 13               [12] 1767 	rrc	a
      000442 C8               [12] 1768 	xch	a,r0
      000443 13               [12] 1769 	rrc	a
      000444 C8               [12] 1770 	xch	a,r0
      000445 F9               [12] 1771 	mov	r1,a
      000446 E8               [12] 1772 	mov	a,r0
      000447 2A               [12] 1773 	add	a,r2
      000448 FA               [12] 1774 	mov	r2,a
      000449 E9               [12] 1775 	mov	a,r1
      00044A 3B               [12] 1776 	addc	a,r3
      00044B FB               [12] 1777 	mov	r3,a
                           00044C  1778 	C$ff.c$878$1_0$55 ==.
                                   1779 ;	FATFS\src\ff.c:878: if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
      00044C C0 04            [24] 1780 	push	ar4
      00044E C0 05            [24] 1781 	push	ar5
      000450 C0 06            [24] 1782 	push	ar6
      000452 C0 07            [24] 1783 	push	ar7
      000454 74 16            [12] 1784 	mov	a,#0x16
      000456 25*0B            [12] 1785 	add	a,_get_fat_sloc0_1_0
      000458 F8               [12] 1786 	mov	r0,a
      000459 E4               [12] 1787 	clr	a
      00045A 35*0C            [12] 1788 	addc	a,(_get_fat_sloc0_1_0 + 1)
      00045C F9               [12] 1789 	mov	r1,a
      00045D AF*0D            [24] 1790 	mov	r7,(_get_fat_sloc0_1_0 + 2)
      00045F 88 82            [24] 1791 	mov	dpl,r0
      000461 89 83            [24] 1792 	mov	dph,r1
      000463 8F F0            [24] 1793 	mov	b,r7
      000465 12r00r00         [24] 1794 	lcall	__gptrget
      000468 F5*0E            [12] 1795 	mov	_get_fat_sloc1_1_0,a
      00046A A3               [24] 1796 	inc	dptr
      00046B 12r00r00         [24] 1797 	lcall	__gptrget
      00046E F5*0F            [12] 1798 	mov	(_get_fat_sloc1_1_0 + 1),a
      000470 A3               [24] 1799 	inc	dptr
      000471 12r00r00         [24] 1800 	lcall	__gptrget
      000474 F5*10            [12] 1801 	mov	(_get_fat_sloc1_1_0 + 2),a
      000476 A3               [24] 1802 	inc	dptr
      000477 12r00r00         [24] 1803 	lcall	__gptrget
      00047A F5*11            [12] 1804 	mov	(_get_fat_sloc1_1_0 + 3),a
      00047C EB               [12] 1805 	mov	a,r3
      00047D C3               [12] 1806 	clr	c
      00047E 13               [12] 1807 	rrc	a
      00047F FC               [12] 1808 	mov	r4,a
      000480 7D 00            [12] 1809 	mov	r5,#0x00
      000482 7E 00            [12] 1810 	mov	r6,#0x00
      000484 7F 00            [12] 1811 	mov	r7,#0x00
      000486 90r00r26         [24] 1812 	mov	dptr,#_move_window_PARM_2
      000489 EC               [12] 1813 	mov	a,r4
      00048A 25*0E            [12] 1814 	add	a,_get_fat_sloc1_1_0
      00048C F0               [24] 1815 	movx	@dptr,a
      00048D ED               [12] 1816 	mov	a,r5
      00048E 35*0F            [12] 1817 	addc	a,(_get_fat_sloc1_1_0 + 1)
      000490 A3               [24] 1818 	inc	dptr
      000491 F0               [24] 1819 	movx	@dptr,a
      000492 EE               [12] 1820 	mov	a,r6
      000493 35*10            [12] 1821 	addc	a,(_get_fat_sloc1_1_0 + 2)
      000495 A3               [24] 1822 	inc	dptr
      000496 F0               [24] 1823 	movx	@dptr,a
      000497 EF               [12] 1824 	mov	a,r7
      000498 35*11            [12] 1825 	addc	a,(_get_fat_sloc1_1_0 + 3)
      00049A A3               [24] 1826 	inc	dptr
      00049B F0               [24] 1827 	movx	@dptr,a
      00049C 85*0B 82         [24] 1828 	mov	dpl,_get_fat_sloc0_1_0
      00049F 85*0C 83         [24] 1829 	mov	dph,(_get_fat_sloc0_1_0 + 1)
      0004A2 85*0D F0         [24] 1830 	mov	b,(_get_fat_sloc0_1_0 + 2)
      0004A5 C0 07            [24] 1831 	push	ar7
      0004A7 C0 06            [24] 1832 	push	ar6
      0004A9 C0 05            [24] 1833 	push	ar5
      0004AB C0 04            [24] 1834 	push	ar4
      0004AD C0 03            [24] 1835 	push	ar3
      0004AF C0 02            [24] 1836 	push	ar2
      0004B1 78rB4            [12] 1837 	mov	r0,#_move_window
      0004B3 79s01            [12] 1838 	mov	r1,#(_move_window >> 8)
      0004B5 7As00            [12] 1839 	mov	r2,#(_move_window >> 16)
      0004B7 12r00r00         [24] 1840 	lcall	__sdcc_banked_call
      0004BA E5 82            [12] 1841 	mov	a,dpl
      0004BC D0 02            [24] 1842 	pop	ar2
      0004BE D0 03            [24] 1843 	pop	ar3
      0004C0 D0 04            [24] 1844 	pop	ar4
      0004C2 D0 05            [24] 1845 	pop	ar5
      0004C4 D0 06            [24] 1846 	pop	ar6
      0004C6 D0 07            [24] 1847 	pop	ar7
      0004C8 D0 07            [24] 1848 	pop	ar7
      0004CA D0 06            [24] 1849 	pop	ar6
      0004CC D0 05            [24] 1850 	pop	ar5
      0004CE D0 04            [24] 1851 	pop	ar4
      0004D0 60 03            [24] 1852 	jz	00162$
      0004D2 02r08r19         [24] 1853 	ljmp	00116$
      0004D5                       1854 00162$:
                           0004D5  1855 	C$ff.c$879$1_0$55 ==.
                                   1856 ;	FATFS\src\ff.c:879: wc = fs->win[bc % SS(fs)]; bc++;
      0004D5 C0 04            [24] 1857 	push	ar4
      0004D7 C0 05            [24] 1858 	push	ar5
      0004D9 C0 06            [24] 1859 	push	ar6
      0004DB C0 07            [24] 1860 	push	ar7
      0004DD 90r00r38         [24] 1861 	mov	dptr,#_get_fat_fs_65536_54
      0004E0 E0               [24] 1862 	movx	a,@dptr
      0004E1 F8               [12] 1863 	mov	r0,a
      0004E2 A3               [24] 1864 	inc	dptr
      0004E3 E0               [24] 1865 	movx	a,@dptr
      0004E4 F9               [12] 1866 	mov	r1,a
      0004E5 A3               [24] 1867 	inc	dptr
      0004E6 E0               [24] 1868 	movx	a,@dptr
      0004E7 FF               [12] 1869 	mov	r7,a
      0004E8 74 26            [12] 1870 	mov	a,#0x26
      0004EA 28               [12] 1871 	add	a,r0
      0004EB F5*0E            [12] 1872 	mov	_get_fat_sloc1_1_0,a
      0004ED E4               [12] 1873 	clr	a
      0004EE 39               [12] 1874 	addc	a,r1
      0004EF F5*0F            [12] 1875 	mov	(_get_fat_sloc1_1_0 + 1),a
      0004F1 8F*10            [24] 1876 	mov	(_get_fat_sloc1_1_0 + 2),r7
      0004F3 8A 05            [24] 1877 	mov	ar5,r2
      0004F5 74 01            [12] 1878 	mov	a,#0x01
      0004F7 5B               [12] 1879 	anl	a,r3
      0004F8 FE               [12] 1880 	mov	r6,a
      0004F9 ED               [12] 1881 	mov	a,r5
      0004FA 25*0E            [12] 1882 	add	a,_get_fat_sloc1_1_0
      0004FC FD               [12] 1883 	mov	r5,a
      0004FD EE               [12] 1884 	mov	a,r6
      0004FE 35*0F            [12] 1885 	addc	a,(_get_fat_sloc1_1_0 + 1)
      000500 FE               [12] 1886 	mov	r6,a
      000501 AC*10            [24] 1887 	mov	r4,(_get_fat_sloc1_1_0 + 2)
      000503 8D 82            [24] 1888 	mov	dpl,r5
      000505 8E 83            [24] 1889 	mov	dph,r6
      000507 8C F0            [24] 1890 	mov	b,r4
      000509 12r00r00         [24] 1891 	lcall	__gptrget
      00050C FD               [12] 1892 	mov	r5,a
      00050D 8D*0E            [24] 1893 	mov	_get_fat_sloc1_1_0,r5
      00050F 75*0F 00         [24] 1894 	mov	(_get_fat_sloc1_1_0 + 1),#0x00
      000512 74 01            [12] 1895 	mov	a,#0x01
      000514 2A               [12] 1896 	add	a,r2
      000515 F5*12            [12] 1897 	mov	_get_fat_sloc2_1_0,a
      000517 E4               [12] 1898 	clr	a
      000518 3B               [12] 1899 	addc	a,r3
      000519 F5*13            [12] 1900 	mov	(_get_fat_sloc2_1_0 + 1),a
                           00051B  1901 	C$ff.c$880$2_0$56 ==.
                                   1902 ;	FATFS\src\ff.c:880: if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
      00051B 74 16            [12] 1903 	mov	a,#0x16
      00051D 28               [12] 1904 	add	a,r0
      00051E FC               [12] 1905 	mov	r4,a
      00051F E4               [12] 1906 	clr	a
      000520 39               [12] 1907 	addc	a,r1
      000521 FD               [12] 1908 	mov	r5,a
      000522 8F 06            [24] 1909 	mov	ar6,r7
      000524 8C 82            [24] 1910 	mov	dpl,r4
      000526 8D 83            [24] 1911 	mov	dph,r5
      000528 8E F0            [24] 1912 	mov	b,r6
      00052A 12r00r00         [24] 1913 	lcall	__gptrget
      00052D F5*14            [12] 1914 	mov	_get_fat_sloc3_1_0,a
      00052F A3               [24] 1915 	inc	dptr
      000530 12r00r00         [24] 1916 	lcall	__gptrget
      000533 F5*15            [12] 1917 	mov	(_get_fat_sloc3_1_0 + 1),a
      000535 A3               [24] 1918 	inc	dptr
      000536 12r00r00         [24] 1919 	lcall	__gptrget
      000539 F5*16            [12] 1920 	mov	(_get_fat_sloc3_1_0 + 2),a
      00053B A3               [24] 1921 	inc	dptr
      00053C 12r00r00         [24] 1922 	lcall	__gptrget
      00053F F5*17            [12] 1923 	mov	(_get_fat_sloc3_1_0 + 3),a
      000541 E5*13            [12] 1924 	mov	a,(_get_fat_sloc2_1_0 + 1)
      000543 C3               [12] 1925 	clr	c
      000544 13               [12] 1926 	rrc	a
      000545 FA               [12] 1927 	mov	r2,a
      000546 7E 00            [12] 1928 	mov	r6,#0x00
      000548 7D 00            [12] 1929 	mov	r5,#0x00
      00054A 7C 00            [12] 1930 	mov	r4,#0x00
      00054C 90r00r26         [24] 1931 	mov	dptr,#_move_window_PARM_2
      00054F EA               [12] 1932 	mov	a,r2
      000550 25*14            [12] 1933 	add	a,_get_fat_sloc3_1_0
      000552 F0               [24] 1934 	movx	@dptr,a
      000553 EE               [12] 1935 	mov	a,r6
      000554 35*15            [12] 1936 	addc	a,(_get_fat_sloc3_1_0 + 1)
      000556 A3               [24] 1937 	inc	dptr
      000557 F0               [24] 1938 	movx	@dptr,a
      000558 ED               [12] 1939 	mov	a,r5
      000559 35*16            [12] 1940 	addc	a,(_get_fat_sloc3_1_0 + 2)
      00055B A3               [24] 1941 	inc	dptr
      00055C F0               [24] 1942 	movx	@dptr,a
      00055D EC               [12] 1943 	mov	a,r4
      00055E 35*17            [12] 1944 	addc	a,(_get_fat_sloc3_1_0 + 3)
      000560 A3               [24] 1945 	inc	dptr
      000561 F0               [24] 1946 	movx	@dptr,a
      000562 88 82            [24] 1947 	mov	dpl,r0
      000564 89 83            [24] 1948 	mov	dph,r1
      000566 8F F0            [24] 1949 	mov	b,r7
      000568 C0 07            [24] 1950 	push	ar7
      00056A C0 06            [24] 1951 	push	ar6
      00056C C0 05            [24] 1952 	push	ar5
      00056E C0 04            [24] 1953 	push	ar4
      000570 78rB4            [12] 1954 	mov	r0,#_move_window
      000572 79s01            [12] 1955 	mov	r1,#(_move_window >> 8)
      000574 7As00            [12] 1956 	mov	r2,#(_move_window >> 16)
      000576 12r00r00         [24] 1957 	lcall	__sdcc_banked_call
      000579 E5 82            [12] 1958 	mov	a,dpl
      00057B D0 04            [24] 1959 	pop	ar4
      00057D D0 05            [24] 1960 	pop	ar5
      00057F D0 06            [24] 1961 	pop	ar6
      000581 D0 07            [24] 1962 	pop	ar7
      000583 D0 07            [24] 1963 	pop	ar7
      000585 D0 06            [24] 1964 	pop	ar6
      000587 D0 05            [24] 1965 	pop	ar5
      000589 D0 04            [24] 1966 	pop	ar4
      00058B 60 03            [24] 1967 	jz	00163$
      00058D 02r08r19         [24] 1968 	ljmp	00116$
      000590                       1969 00163$:
                           000590  1970 	C$ff.c$881$2_0$56 ==.
                                   1971 ;	FATFS\src\ff.c:881: wc |= fs->win[bc % SS(fs)] << 8;
      000590 90r00r38         [24] 1972 	mov	dptr,#_get_fat_fs_65536_54
      000593 E0               [24] 1973 	movx	a,@dptr
      000594 F9               [12] 1974 	mov	r1,a
      000595 A3               [24] 1975 	inc	dptr
      000596 E0               [24] 1976 	movx	a,@dptr
      000597 FA               [12] 1977 	mov	r2,a
      000598 A3               [24] 1978 	inc	dptr
      000599 E0               [24] 1979 	movx	a,@dptr
      00059A FB               [12] 1980 	mov	r3,a
      00059B 74 26            [12] 1981 	mov	a,#0x26
      00059D 29               [12] 1982 	add	a,r1
      00059E F5*14            [12] 1983 	mov	_get_fat_sloc3_1_0,a
      0005A0 E4               [12] 1984 	clr	a
      0005A1 3A               [12] 1985 	addc	a,r2
      0005A2 F5*15            [12] 1986 	mov	(_get_fat_sloc3_1_0 + 1),a
      0005A4 8B*16            [24] 1987 	mov	(_get_fat_sloc3_1_0 + 2),r3
      0005A6 A8*12            [24] 1988 	mov	r0,_get_fat_sloc2_1_0
      0005A8 74 01            [12] 1989 	mov	a,#0x01
      0005AA 55*13            [12] 1990 	anl	a,(_get_fat_sloc2_1_0 + 1)
      0005AC FB               [12] 1991 	mov	r3,a
      0005AD E8               [12] 1992 	mov	a,r0
      0005AE 25*14            [12] 1993 	add	a,_get_fat_sloc3_1_0
      0005B0 F8               [12] 1994 	mov	r0,a
      0005B1 EB               [12] 1995 	mov	a,r3
      0005B2 35*15            [12] 1996 	addc	a,(_get_fat_sloc3_1_0 + 1)
      0005B4 FB               [12] 1997 	mov	r3,a
      0005B5 AA*16            [24] 1998 	mov	r2,(_get_fat_sloc3_1_0 + 2)
      0005B7 88 82            [24] 1999 	mov	dpl,r0
      0005B9 8B 83            [24] 2000 	mov	dph,r3
      0005BB 8A F0            [24] 2001 	mov	b,r2
      0005BD 12r00r00         [24] 2002 	lcall	__gptrget
      0005C0 FB               [12] 2003 	mov	r3,a
      0005C1 E4               [12] 2004 	clr	a
      0005C2 45*0E            [12] 2005 	orl	a,_get_fat_sloc1_1_0
      0005C4 FA               [12] 2006 	mov	r2,a
      0005C5 EB               [12] 2007 	mov	a,r3
      0005C6 45*0F            [12] 2008 	orl	a,(_get_fat_sloc1_1_0 + 1)
      0005C8 FB               [12] 2009 	mov	r3,a
                           0005C9  2010 	C$ff.c$882$2_0$56 ==.
                                   2011 ;	FATFS\src\ff.c:882: return clst & 1 ? wc >> 4 : (wc & 0xFFF);
      0005C9 EC               [12] 2012 	mov	a,r4
      0005CA 30 E0 12         [24] 2013 	jnb	acc.0,00119$
      0005CD 8A 00            [24] 2014 	mov	ar0,r2
      0005CF EB               [12] 2015 	mov	a,r3
      0005D0 C4               [12] 2016 	swap	a
      0005D1 C8               [12] 2017 	xch	a,r0
      0005D2 C4               [12] 2018 	swap	a
      0005D3 54 0F            [12] 2019 	anl	a,#0x0f
      0005D5 68               [12] 2020 	xrl	a,r0
      0005D6 C8               [12] 2021 	xch	a,r0
      0005D7 54 0F            [12] 2022 	anl	a,#0x0f
      0005D9 C8               [12] 2023 	xch	a,r0
      0005DA 68               [12] 2024 	xrl	a,r0
      0005DB C8               [12] 2025 	xch	a,r0
      0005DC F9               [12] 2026 	mov	r1,a
      0005DD 80 06            [24] 2027 	sjmp	00120$
      0005DF                       2028 00119$:
      0005DF 8A 00            [24] 2029 	mov	ar0,r2
      0005E1 74 0F            [12] 2030 	mov	a,#0x0f
      0005E3 5B               [12] 2031 	anl	a,r3
      0005E4 F9               [12] 2032 	mov	r1,a
      0005E5                       2033 00120$:
      0005E5 7B 00            [12] 2034 	mov	r3,#0x00
      0005E7 7A 00            [12] 2035 	mov	r2,#0x00
      0005E9 88 82            [24] 2036 	mov	dpl,r0
      0005EB 89 83            [24] 2037 	mov	dph,r1
      0005ED 8B F0            [24] 2038 	mov	b,r3
      0005EF EA               [12] 2039 	mov	a,r2
      0005F0 02r00r00         [24] 2040 	ljmp	__sdcc_banked_ret
                           0005F3  2041 	C$ff.c$884$2_0$56 ==.
                                   2042 ;	FATFS\src\ff.c:884: case FS_FAT16 :
      0005F3                       2043 00109$:
                           0005F3  2044 	C$ff.c$885$2_0$56 ==.
                                   2045 ;	FATFS\src\ff.c:885: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
      0005F3 74 16            [12] 2046 	mov	a,#0x16
      0005F5 25*0B            [12] 2047 	add	a,_get_fat_sloc0_1_0
      0005F7 FB               [12] 2048 	mov	r3,a
      0005F8 E4               [12] 2049 	clr	a
      0005F9 35*0C            [12] 2050 	addc	a,(_get_fat_sloc0_1_0 + 1)
      0005FB F9               [12] 2051 	mov	r1,a
      0005FC AA*0D            [24] 2052 	mov	r2,(_get_fat_sloc0_1_0 + 2)
      0005FE 8B 82            [24] 2053 	mov	dpl,r3
      000600 89 83            [24] 2054 	mov	dph,r1
      000602 8A F0            [24] 2055 	mov	b,r2
      000604 12r00r00         [24] 2056 	lcall	__gptrget
      000607 F5*14            [12] 2057 	mov	_get_fat_sloc3_1_0,a
      000609 A3               [24] 2058 	inc	dptr
      00060A 12r00r00         [24] 2059 	lcall	__gptrget
      00060D F5*15            [12] 2060 	mov	(_get_fat_sloc3_1_0 + 1),a
      00060F A3               [24] 2061 	inc	dptr
      000610 12r00r00         [24] 2062 	lcall	__gptrget
      000613 F5*16            [12] 2063 	mov	(_get_fat_sloc3_1_0 + 2),a
      000615 A3               [24] 2064 	inc	dptr
      000616 12r00r00         [24] 2065 	lcall	__gptrget
      000619 F5*17            [12] 2066 	mov	(_get_fat_sloc3_1_0 + 3),a
      00061B 8D 00            [24] 2067 	mov	ar0,r5
      00061D 8E 01            [24] 2068 	mov	ar1,r6
      00061F 8F 02            [24] 2069 	mov	ar2,r7
      000621 7B 00            [12] 2070 	mov	r3,#0x00
      000623 90r00r26         [24] 2071 	mov	dptr,#_move_window_PARM_2
      000626 E8               [12] 2072 	mov	a,r0
      000627 25*14            [12] 2073 	add	a,_get_fat_sloc3_1_0
      000629 F0               [24] 2074 	movx	@dptr,a
      00062A E9               [12] 2075 	mov	a,r1
      00062B 35*15            [12] 2076 	addc	a,(_get_fat_sloc3_1_0 + 1)
      00062D A3               [24] 2077 	inc	dptr
      00062E F0               [24] 2078 	movx	@dptr,a
      00062F EA               [12] 2079 	mov	a,r2
      000630 35*16            [12] 2080 	addc	a,(_get_fat_sloc3_1_0 + 2)
      000632 A3               [24] 2081 	inc	dptr
      000633 F0               [24] 2082 	movx	@dptr,a
      000634 EB               [12] 2083 	mov	a,r3
      000635 35*17            [12] 2084 	addc	a,(_get_fat_sloc3_1_0 + 3)
      000637 A3               [24] 2085 	inc	dptr
      000638 F0               [24] 2086 	movx	@dptr,a
      000639 85*0B 82         [24] 2087 	mov	dpl,_get_fat_sloc0_1_0
      00063C 85*0C 83         [24] 2088 	mov	dph,(_get_fat_sloc0_1_0 + 1)
      00063F 85*0D F0         [24] 2089 	mov	b,(_get_fat_sloc0_1_0 + 2)
      000642 C0 07            [24] 2090 	push	ar7
      000644 C0 06            [24] 2091 	push	ar6
      000646 C0 05            [24] 2092 	push	ar5
      000648 C0 04            [24] 2093 	push	ar4
      00064A 78rB4            [12] 2094 	mov	r0,#_move_window
      00064C 79s01            [12] 2095 	mov	r1,#(_move_window >> 8)
      00064E 7As00            [12] 2096 	mov	r2,#(_move_window >> 16)
      000650 12r00r00         [24] 2097 	lcall	__sdcc_banked_call
      000653 E5 82            [12] 2098 	mov	a,dpl
      000655 D0 04            [24] 2099 	pop	ar4
      000657 D0 05            [24] 2100 	pop	ar5
      000659 D0 06            [24] 2101 	pop	ar6
      00065B D0 07            [24] 2102 	pop	ar7
      00065D 60 03            [24] 2103 	jz	00165$
      00065F 02r08r19         [24] 2104 	ljmp	00116$
      000662                       2105 00165$:
                           000662  2106 	C$ff.c$886$2_0$56 ==.
                                   2107 ;	FATFS\src\ff.c:886: p = &fs->win[clst * 2 % SS(fs)];
      000662 90r00r38         [24] 2108 	mov	dptr,#_get_fat_fs_65536_54
      000665 E0               [24] 2109 	movx	a,@dptr
      000666 F9               [12] 2110 	mov	r1,a
      000667 A3               [24] 2111 	inc	dptr
      000668 E0               [24] 2112 	movx	a,@dptr
      000669 FA               [12] 2113 	mov	r2,a
      00066A A3               [24] 2114 	inc	dptr
      00066B E0               [24] 2115 	movx	a,@dptr
      00066C FB               [12] 2116 	mov	r3,a
      00066D 74 26            [12] 2117 	mov	a,#0x26
      00066F 29               [12] 2118 	add	a,r1
      000670 F5*14            [12] 2119 	mov	_get_fat_sloc3_1_0,a
      000672 E4               [12] 2120 	clr	a
      000673 3A               [12] 2121 	addc	a,r2
      000674 F5*15            [12] 2122 	mov	(_get_fat_sloc3_1_0 + 1),a
      000676 8B*16            [24] 2123 	mov	(_get_fat_sloc3_1_0 + 2),r3
      000678 EC               [12] 2124 	mov	a,r4
      000679 2C               [12] 2125 	add	a,r4
      00067A F8               [12] 2126 	mov	r0,a
      00067B ED               [12] 2127 	mov	a,r5
      00067C 33               [12] 2128 	rlc	a
      00067D F9               [12] 2129 	mov	r1,a
      00067E EE               [12] 2130 	mov	a,r6
      00067F 33               [12] 2131 	rlc	a
      000680 EF               [12] 2132 	mov	a,r7
      000681 33               [12] 2133 	rlc	a
      000682 53 01 01         [24] 2134 	anl	ar1,#0x01
      000685 E4               [12] 2135 	clr	a
      000686 E8               [12] 2136 	mov	a,r0
      000687 25*14            [12] 2137 	add	a,_get_fat_sloc3_1_0
      000689 F5*14            [12] 2138 	mov	_get_fat_sloc3_1_0,a
      00068B E9               [12] 2139 	mov	a,r1
      00068C 35*15            [12] 2140 	addc	a,(_get_fat_sloc3_1_0 + 1)
      00068E F5*15            [12] 2141 	mov	(_get_fat_sloc3_1_0 + 1),a
                           000690  2142 	C$ff.c$887$2_0$56 ==.
                                   2143 ;	FATFS\src\ff.c:887: return LD_WORD(p);
      000690 74 01            [12] 2144 	mov	a,#0x01
      000692 25*14            [12] 2145 	add	a,_get_fat_sloc3_1_0
      000694 F9               [12] 2146 	mov	r1,a
      000695 E4               [12] 2147 	clr	a
      000696 35*15            [12] 2148 	addc	a,(_get_fat_sloc3_1_0 + 1)
      000698 FA               [12] 2149 	mov	r2,a
      000699 AB*16            [24] 2150 	mov	r3,(_get_fat_sloc3_1_0 + 2)
      00069B 89 82            [24] 2151 	mov	dpl,r1
      00069D 8A 83            [24] 2152 	mov	dph,r2
      00069F 8B F0            [24] 2153 	mov	b,r3
      0006A1 12r00r00         [24] 2154 	lcall	__gptrget
      0006A4 FB               [12] 2155 	mov	r3,a
      0006A5 79 00            [12] 2156 	mov	r1,#0x00
      0006A7 85*14 82         [24] 2157 	mov	dpl,_get_fat_sloc3_1_0
      0006AA 85*15 83         [24] 2158 	mov	dph,(_get_fat_sloc3_1_0 + 1)
      0006AD 85*16 F0         [24] 2159 	mov	b,(_get_fat_sloc3_1_0 + 2)
      0006B0 12r00r00         [24] 2160 	lcall	__gptrget
      0006B3 7A 00            [12] 2161 	mov	r2,#0x00
      0006B5 42 01            [12] 2162 	orl	ar1,a
      0006B7 EA               [12] 2163 	mov	a,r2
      0006B8 42 03            [12] 2164 	orl	ar3,a
      0006BA 8B 00            [24] 2165 	mov	ar0,r3
      0006BC 7A 00            [12] 2166 	mov	r2,#0x00
      0006BE 7B 00            [12] 2167 	mov	r3,#0x00
      0006C0 89 82            [24] 2168 	mov	dpl,r1
      0006C2 88 83            [24] 2169 	mov	dph,r0
      0006C4 8A F0            [24] 2170 	mov	b,r2
      0006C6 EB               [12] 2171 	mov	a,r3
      0006C7 02r00r00         [24] 2172 	ljmp	__sdcc_banked_ret
                           0006CA  2173 	C$ff.c$889$2_0$56 ==.
                                   2174 ;	FATFS\src\ff.c:889: case FS_FAT32 :
      0006CA                       2175 00112$:
                           0006CA  2176 	C$ff.c$890$2_0$56 ==.
                                   2177 ;	FATFS\src\ff.c:890: if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
      0006CA 74 16            [12] 2178 	mov	a,#0x16
      0006CC 25*0B            [12] 2179 	add	a,_get_fat_sloc0_1_0
      0006CE FB               [12] 2180 	mov	r3,a
      0006CF E4               [12] 2181 	clr	a
      0006D0 35*0C            [12] 2182 	addc	a,(_get_fat_sloc0_1_0 + 1)
      0006D2 F9               [12] 2183 	mov	r1,a
      0006D3 AA*0D            [24] 2184 	mov	r2,(_get_fat_sloc0_1_0 + 2)
      0006D5 8B 82            [24] 2185 	mov	dpl,r3
      0006D7 89 83            [24] 2186 	mov	dph,r1
      0006D9 8A F0            [24] 2187 	mov	b,r2
      0006DB 12r00r00         [24] 2188 	lcall	__gptrget
      0006DE F5*14            [12] 2189 	mov	_get_fat_sloc3_1_0,a
      0006E0 A3               [24] 2190 	inc	dptr
      0006E1 12r00r00         [24] 2191 	lcall	__gptrget
      0006E4 F5*15            [12] 2192 	mov	(_get_fat_sloc3_1_0 + 1),a
      0006E6 A3               [24] 2193 	inc	dptr
      0006E7 12r00r00         [24] 2194 	lcall	__gptrget
      0006EA F5*16            [12] 2195 	mov	(_get_fat_sloc3_1_0 + 2),a
      0006EC A3               [24] 2196 	inc	dptr
      0006ED 12r00r00         [24] 2197 	lcall	__gptrget
      0006F0 F5*17            [12] 2198 	mov	(_get_fat_sloc3_1_0 + 3),a
      0006F2 8C 00            [24] 2199 	mov	ar0,r4
      0006F4 ED               [12] 2200 	mov	a,r5
      0006F5 A2 E7            [12] 2201 	mov	c,acc.7
      0006F7 C8               [12] 2202 	xch	a,r0
      0006F8 33               [12] 2203 	rlc	a
      0006F9 C8               [12] 2204 	xch	a,r0
      0006FA 33               [12] 2205 	rlc	a
      0006FB C8               [12] 2206 	xch	a,r0
      0006FC 54 01            [12] 2207 	anl	a,#0x01
      0006FE F9               [12] 2208 	mov	r1,a
      0006FF EE               [12] 2209 	mov	a,r6
      000700 2E               [12] 2210 	add	a,r6
      000701 49               [12] 2211 	orl	a,r1
      000702 F9               [12] 2212 	mov	r1,a
      000703 8E 02            [24] 2213 	mov	ar2,r6
      000705 EF               [12] 2214 	mov	a,r7
      000706 A2 E7            [12] 2215 	mov	c,acc.7
      000708 CA               [12] 2216 	xch	a,r2
      000709 33               [12] 2217 	rlc	a
      00070A CA               [12] 2218 	xch	a,r2
      00070B 33               [12] 2219 	rlc	a
      00070C CA               [12] 2220 	xch	a,r2
      00070D 54 01            [12] 2221 	anl	a,#0x01
      00070F FB               [12] 2222 	mov	r3,a
      000710 90r00r26         [24] 2223 	mov	dptr,#_move_window_PARM_2
      000713 E8               [12] 2224 	mov	a,r0
      000714 25*14            [12] 2225 	add	a,_get_fat_sloc3_1_0
      000716 F0               [24] 2226 	movx	@dptr,a
      000717 E9               [12] 2227 	mov	a,r1
      000718 35*15            [12] 2228 	addc	a,(_get_fat_sloc3_1_0 + 1)
      00071A A3               [24] 2229 	inc	dptr
      00071B F0               [24] 2230 	movx	@dptr,a
      00071C EA               [12] 2231 	mov	a,r2
      00071D 35*16            [12] 2232 	addc	a,(_get_fat_sloc3_1_0 + 2)
      00071F A3               [24] 2233 	inc	dptr
      000720 F0               [24] 2234 	movx	@dptr,a
      000721 EB               [12] 2235 	mov	a,r3
      000722 35*17            [12] 2236 	addc	a,(_get_fat_sloc3_1_0 + 3)
      000724 A3               [24] 2237 	inc	dptr
      000725 F0               [24] 2238 	movx	@dptr,a
      000726 85*0B 82         [24] 2239 	mov	dpl,_get_fat_sloc0_1_0
      000729 85*0C 83         [24] 2240 	mov	dph,(_get_fat_sloc0_1_0 + 1)
      00072C 85*0D F0         [24] 2241 	mov	b,(_get_fat_sloc0_1_0 + 2)
      00072F C0 07            [24] 2242 	push	ar7
      000731 C0 06            [24] 2243 	push	ar6
      000733 C0 05            [24] 2244 	push	ar5
      000735 C0 04            [24] 2245 	push	ar4
      000737 78rB4            [12] 2246 	mov	r0,#_move_window
      000739 79s01            [12] 2247 	mov	r1,#(_move_window >> 8)
      00073B 7As00            [12] 2248 	mov	r2,#(_move_window >> 16)
      00073D 12r00r00         [24] 2249 	lcall	__sdcc_banked_call
      000740 E5 82            [12] 2250 	mov	a,dpl
      000742 D0 04            [24] 2251 	pop	ar4
      000744 D0 05            [24] 2252 	pop	ar5
      000746 D0 06            [24] 2253 	pop	ar6
      000748 D0 07            [24] 2254 	pop	ar7
      00074A 60 03            [24] 2255 	jz	00166$
      00074C 02r08r19         [24] 2256 	ljmp	00116$
      00074F                       2257 00166$:
                           00074F  2258 	C$ff.c$891$2_0$56 ==.
                                   2259 ;	FATFS\src\ff.c:891: p = &fs->win[clst * 4 % SS(fs)];
      00074F 90r00r38         [24] 2260 	mov	dptr,#_get_fat_fs_65536_54
      000752 E0               [24] 2261 	movx	a,@dptr
      000753 F9               [12] 2262 	mov	r1,a
      000754 A3               [24] 2263 	inc	dptr
      000755 E0               [24] 2264 	movx	a,@dptr
      000756 FA               [12] 2265 	mov	r2,a
      000757 A3               [24] 2266 	inc	dptr
      000758 E0               [24] 2267 	movx	a,@dptr
      000759 FB               [12] 2268 	mov	r3,a
      00075A 74 26            [12] 2269 	mov	a,#0x26
      00075C 29               [12] 2270 	add	a,r1
      00075D F9               [12] 2271 	mov	r1,a
      00075E E4               [12] 2272 	clr	a
      00075F 3A               [12] 2273 	addc	a,r2
      000760 FA               [12] 2274 	mov	r2,a
      000761 EC               [12] 2275 	mov	a,r4
      000762 2C               [12] 2276 	add	a,r4
      000763 FC               [12] 2277 	mov	r4,a
      000764 ED               [12] 2278 	mov	a,r5
      000765 33               [12] 2279 	rlc	a
      000766 FD               [12] 2280 	mov	r5,a
      000767 EE               [12] 2281 	mov	a,r6
      000768 33               [12] 2282 	rlc	a
      000769 FE               [12] 2283 	mov	r6,a
      00076A EF               [12] 2284 	mov	a,r7
      00076B 33               [12] 2285 	rlc	a
      00076C FF               [12] 2286 	mov	r7,a
      00076D EC               [12] 2287 	mov	a,r4
      00076E 2C               [12] 2288 	add	a,r4
      00076F FC               [12] 2289 	mov	r4,a
      000770 ED               [12] 2290 	mov	a,r5
      000771 33               [12] 2291 	rlc	a
      000772 FD               [12] 2292 	mov	r5,a
      000773 EE               [12] 2293 	mov	a,r6
      000774 33               [12] 2294 	rlc	a
      000775 EF               [12] 2295 	mov	a,r7
      000776 33               [12] 2296 	rlc	a
      000777 53 05 01         [24] 2297 	anl	ar5,#0x01
      00077A E4               [12] 2298 	clr	a
      00077B EC               [12] 2299 	mov	a,r4
      00077C 29               [12] 2300 	add	a,r1
      00077D F9               [12] 2301 	mov	r1,a
      00077E ED               [12] 2302 	mov	a,r5
      00077F 3A               [12] 2303 	addc	a,r2
      000780 FA               [12] 2304 	mov	r2,a
                           000781  2305 	C$ff.c$892$2_0$56 ==.
                                   2306 ;	FATFS\src\ff.c:892: return LD_DWORD(p) & 0x0FFFFFFF;
      000781 74 03            [12] 2307 	mov	a,#0x03
      000783 29               [12] 2308 	add	a,r1
      000784 FD               [12] 2309 	mov	r5,a
      000785 E4               [12] 2310 	clr	a
      000786 3A               [12] 2311 	addc	a,r2
      000787 FE               [12] 2312 	mov	r6,a
      000788 8B 07            [24] 2313 	mov	ar7,r3
      00078A 8D 82            [24] 2314 	mov	dpl,r5
      00078C 8E 83            [24] 2315 	mov	dph,r6
      00078E 8F F0            [24] 2316 	mov	b,r7
      000790 12r00r00         [24] 2317 	lcall	__gptrget
      000793 FD               [12] 2318 	mov	r5,a
      000794 7F 00            [12] 2319 	mov	r7,#0x00
      000796 8D*17            [24] 2320 	mov	(_get_fat_sloc3_1_0 + 3),r5
                                   2321 ;	1-genFromRTrack replaced	mov	_get_fat_sloc3_1_0,#0x00
      000798 8F*14            [24] 2322 	mov	_get_fat_sloc3_1_0,r7
                                   2323 ;	1-genFromRTrack replaced	mov	(_get_fat_sloc3_1_0 + 1),#0x00
      00079A 8F*15            [24] 2324 	mov	(_get_fat_sloc3_1_0 + 1),r7
                                   2325 ;	1-genFromRTrack replaced	mov	(_get_fat_sloc3_1_0 + 2),#0x00
      00079C 8F*16            [24] 2326 	mov	(_get_fat_sloc3_1_0 + 2),r7
      00079E 74 02            [12] 2327 	mov	a,#0x02
      0007A0 29               [12] 2328 	add	a,r1
      0007A1 F8               [12] 2329 	mov	r0,a
      0007A2 E4               [12] 2330 	clr	a
      0007A3 3A               [12] 2331 	addc	a,r2
      0007A4 FE               [12] 2332 	mov	r6,a
      0007A5 8B 07            [24] 2333 	mov	ar7,r3
      0007A7 88 82            [24] 2334 	mov	dpl,r0
      0007A9 8E 83            [24] 2335 	mov	dph,r6
      0007AB 8F F0            [24] 2336 	mov	b,r7
      0007AD 12r00r00         [24] 2337 	lcall	__gptrget
      0007B0 F8               [12] 2338 	mov	r0,a
      0007B1 7F 00            [12] 2339 	mov	r7,#0x00
      0007B3 8F 05            [24] 2340 	mov	ar5,r7
      0007B5 88 06            [24] 2341 	mov	ar6,r0
      0007B7 E4               [12] 2342 	clr	a
      0007B8 FF               [12] 2343 	mov	r7,a
      0007B9 42*14            [12] 2344 	orl	_get_fat_sloc3_1_0,a
      0007BB EF               [12] 2345 	mov	a,r7
      0007BC 42*15            [12] 2346 	orl	(_get_fat_sloc3_1_0 + 1),a
      0007BE EE               [12] 2347 	mov	a,r6
      0007BF 42*16            [12] 2348 	orl	(_get_fat_sloc3_1_0 + 2),a
      0007C1 ED               [12] 2349 	mov	a,r5
      0007C2 42*17            [12] 2350 	orl	(_get_fat_sloc3_1_0 + 3),a
      0007C4 74 01            [12] 2351 	mov	a,#0x01
      0007C6 29               [12] 2352 	add	a,r1
      0007C7 FC               [12] 2353 	mov	r4,a
      0007C8 E4               [12] 2354 	clr	a
      0007C9 3A               [12] 2355 	addc	a,r2
      0007CA FE               [12] 2356 	mov	r6,a
      0007CB 8B 07            [24] 2357 	mov	ar7,r3
      0007CD 8C 82            [24] 2358 	mov	dpl,r4
      0007CF 8E 83            [24] 2359 	mov	dph,r6
      0007D1 8F F0            [24] 2360 	mov	b,r7
      0007D3 12r00r00         [24] 2361 	lcall	__gptrget
      0007D6 FF               [12] 2362 	mov	r7,a
      0007D7 E4               [12] 2363 	clr	a
      0007D8 FC               [12] 2364 	mov	r4,a
      0007D9 FE               [12] 2365 	mov	r6,a
      0007DA FD               [12] 2366 	mov	r5,a
      0007DB E5*14            [12] 2367 	mov	a,_get_fat_sloc3_1_0
      0007DD 42 04            [12] 2368 	orl	ar4,a
      0007DF E5*15            [12] 2369 	mov	a,(_get_fat_sloc3_1_0 + 1)
      0007E1 42 07            [12] 2370 	orl	ar7,a
      0007E3 E5*16            [12] 2371 	mov	a,(_get_fat_sloc3_1_0 + 2)
      0007E5 42 06            [12] 2372 	orl	ar6,a
      0007E7 E5*17            [12] 2373 	mov	a,(_get_fat_sloc3_1_0 + 3)
      0007E9 42 05            [12] 2374 	orl	ar5,a
      0007EB 89 82            [24] 2375 	mov	dpl,r1
      0007ED 8A 83            [24] 2376 	mov	dph,r2
      0007EF 8B F0            [24] 2377 	mov	b,r3
      0007F1 12r00r00         [24] 2378 	lcall	__gptrget
      0007F4 F8               [12] 2379 	mov	r0,a
      0007F5 E4               [12] 2380 	clr	a
      0007F6 F9               [12] 2381 	mov	r1,a
      0007F7 FA               [12] 2382 	mov	r2,a
      0007F8 FB               [12] 2383 	mov	r3,a
      0007F9 E8               [12] 2384 	mov	a,r0
      0007FA 42 04            [12] 2385 	orl	ar4,a
      0007FC E9               [12] 2386 	mov	a,r1
      0007FD 42 07            [12] 2387 	orl	ar7,a
      0007FF EA               [12] 2388 	mov	a,r2
      000800 42 06            [12] 2389 	orl	ar6,a
      000802 EB               [12] 2390 	mov	a,r3
      000803 42 05            [12] 2391 	orl	ar5,a
      000805 53 05 0F         [24] 2392 	anl	ar5,#0x0f
      000808 8C 82            [24] 2393 	mov	dpl,r4
      00080A 8F 83            [24] 2394 	mov	dph,r7
      00080C 8E F0            [24] 2395 	mov	b,r6
      00080E ED               [12] 2396 	mov	a,r5
                           00080F  2397 	C$ff.c$894$2_0$56 ==.
                                   2398 ;	FATFS\src\ff.c:894: default:
      00080F 80 0F            [24] 2399 	sjmp	00117$
      000811                       2400 00115$:
                           000811  2401 	C$ff.c$895$2_0$56 ==.
                                   2402 ;	FATFS\src\ff.c:895: return 1;
      000811 90 00 01         [24] 2403 	mov	dptr,#(0x01&0x00ff)
      000814 E4               [12] 2404 	clr	a
      000815 F5 F0            [12] 2405 	mov	b,a
                           000817  2406 	C$ff.c$896$1_0$55 ==.
                                   2407 ;	FATFS\src\ff.c:896: }
      000817 80 07            [24] 2408 	sjmp	00117$
      000819                       2409 00116$:
                           000819  2410 	C$ff.c$898$1_0$55 ==.
                                   2411 ;	FATFS\src\ff.c:898: return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
      000819 90 FF FF         [24] 2412 	mov	dptr,#0xffff
      00081C 74 FF            [12] 2413 	mov	a,#0xff
      00081E F5 F0            [12] 2414 	mov	b,a
      000820                       2415 00117$:
                           000820  2416 	C$ff.c$899$1_0$55 ==.
                                   2417 ;	FATFS\src\ff.c:899: }
                           000820  2418 	C$ff.c$899$1_0$55 ==.
                           000820  2419 	XG$get_fat$0$0 ==.
      000820 02r00r00         [24] 2420 	ljmp	__sdcc_banked_ret
                                   2421 ;------------------------------------------------------------
                                   2422 ;Allocation info for local variables in function 'clmt_clust'
                                   2423 ;------------------------------------------------------------
                                   2424 ;ofs                       Allocated with name '_clmt_clust_PARM_2'
                                   2425 ;fp                        Allocated with name '_clmt_clust_fp_65536_57'
                                   2426 ;cl                        Allocated with name '_clmt_clust_cl_65536_58'
                                   2427 ;ncl                       Allocated with name '_clmt_clust_ncl_65536_58'
                                   2428 ;tbl                       Allocated with name '_clmt_clust_tbl_65536_58'
                                   2429 ;------------------------------------------------------------
                           000823  2430 	Fff$clmt_clust$0$0 ==.
                           000823  2431 	C$ff.c$1087$1_0$58 ==.
                                   2432 ;	FATFS\src\ff.c:1087: DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
                                   2433 ;	-----------------------------------------
                                   2434 ;	 function clmt_clust
                                   2435 ;	-----------------------------------------
      000823                       2436 _clmt_clust:
      000823 AF F0            [24] 2437 	mov	r7,b
      000825 AE 83            [24] 2438 	mov	r6,dph
      000827 E5 82            [12] 2439 	mov	a,dpl
      000829 90r00r3F         [24] 2440 	mov	dptr,#_clmt_clust_fp_65536_57
      00082C F0               [24] 2441 	movx	@dptr,a
      00082D EE               [12] 2442 	mov	a,r6
      00082E A3               [24] 2443 	inc	dptr
      00082F F0               [24] 2444 	movx	@dptr,a
      000830 EF               [12] 2445 	mov	a,r7
      000831 A3               [24] 2446 	inc	dptr
      000832 F0               [24] 2447 	movx	@dptr,a
                           000833  2448 	C$ff.c$1095$1_0$58 ==.
                                   2449 ;	FATFS\src\ff.c:1095: tbl = fp->cltbl + 1;	/* Top of CLMT */
      000833 90r00r3F         [24] 2450 	mov	dptr,#_clmt_clust_fp_65536_57
      000836 E0               [24] 2451 	movx	a,@dptr
      000837 FD               [12] 2452 	mov	r5,a
      000838 A3               [24] 2453 	inc	dptr
      000839 E0               [24] 2454 	movx	a,@dptr
      00083A FE               [12] 2455 	mov	r6,a
      00083B A3               [24] 2456 	inc	dptr
      00083C E0               [24] 2457 	movx	a,@dptr
      00083D FF               [12] 2458 	mov	r7,a
      00083E 74 1B            [12] 2459 	mov	a,#0x1b
      000840 2D               [12] 2460 	add	a,r5
      000841 FA               [12] 2461 	mov	r2,a
      000842 E4               [12] 2462 	clr	a
      000843 3E               [12] 2463 	addc	a,r6
      000844 FB               [12] 2464 	mov	r3,a
      000845 8F 04            [24] 2465 	mov	ar4,r7
      000847 8A 82            [24] 2466 	mov	dpl,r2
      000849 8B 83            [24] 2467 	mov	dph,r3
      00084B 8C F0            [24] 2468 	mov	b,r4
      00084D 12r00r00         [24] 2469 	lcall	__gptrget
      000850 FA               [12] 2470 	mov	r2,a
      000851 A3               [24] 2471 	inc	dptr
      000852 12r00r00         [24] 2472 	lcall	__gptrget
      000855 FB               [12] 2473 	mov	r3,a
      000856 A3               [24] 2474 	inc	dptr
      000857 12r00r00         [24] 2475 	lcall	__gptrget
      00085A FC               [12] 2476 	mov	r4,a
      00085B 90r00r46         [24] 2477 	mov	dptr,#_clmt_clust_tbl_65536_58
      00085E 74 04            [12] 2478 	mov	a,#0x04
      000860 2A               [12] 2479 	add	a,r2
      000861 F0               [24] 2480 	movx	@dptr,a
      000862 E4               [12] 2481 	clr	a
      000863 3B               [12] 2482 	addc	a,r3
      000864 A3               [24] 2483 	inc	dptr
      000865 F0               [24] 2484 	movx	@dptr,a
      000866 EC               [12] 2485 	mov	a,r4
      000867 A3               [24] 2486 	inc	dptr
      000868 F0               [24] 2487 	movx	@dptr,a
                           000869  2488 	C$ff.c$1096$1_0$58 ==.
                                   2489 ;	FATFS\src\ff.c:1096: cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
      000869 90r00r3B         [24] 2490 	mov	dptr,#_clmt_clust_PARM_2
      00086C E0               [24] 2491 	movx	a,@dptr
      00086D A3               [24] 2492 	inc	dptr
      00086E E0               [24] 2493 	movx	a,@dptr
      00086F FA               [12] 2494 	mov	r2,a
      000870 A3               [24] 2495 	inc	dptr
      000871 E0               [24] 2496 	movx	a,@dptr
      000872 FB               [12] 2497 	mov	r3,a
      000873 A3               [24] 2498 	inc	dptr
      000874 E0               [24] 2499 	movx	a,@dptr
      000875 7C 00            [12] 2500 	mov	r4,#0x00
      000877 C3               [12] 2501 	clr	c
      000878 13               [12] 2502 	rrc	a
      000879 CB               [12] 2503 	xch	a,r3
      00087A 13               [12] 2504 	rrc	a
      00087B CA               [12] 2505 	xch	a,r2
      00087C 13               [12] 2506 	rrc	a
      00087D F9               [12] 2507 	mov	r1,a
      00087E 8D 82            [24] 2508 	mov	dpl,r5
      000880 8E 83            [24] 2509 	mov	dph,r6
      000882 8F F0            [24] 2510 	mov	b,r7
      000884 12r00r00         [24] 2511 	lcall	__gptrget
      000887 FD               [12] 2512 	mov	r5,a
      000888 A3               [24] 2513 	inc	dptr
      000889 12r00r00         [24] 2514 	lcall	__gptrget
      00088C FE               [12] 2515 	mov	r6,a
      00088D A3               [24] 2516 	inc	dptr
      00088E 12r00r00         [24] 2517 	lcall	__gptrget
      000891 FF               [12] 2518 	mov	r7,a
      000892 74 02            [12] 2519 	mov	a,#0x02
      000894 2D               [12] 2520 	add	a,r5
      000895 FD               [12] 2521 	mov	r5,a
      000896 E4               [12] 2522 	clr	a
      000897 3E               [12] 2523 	addc	a,r6
      000898 FE               [12] 2524 	mov	r6,a
      000899 8D 82            [24] 2525 	mov	dpl,r5
      00089B 8E 83            [24] 2526 	mov	dph,r6
      00089D 8F F0            [24] 2527 	mov	b,r7
      00089F 12r00r00         [24] 2528 	lcall	__gptrget
      0008A2 90r00r00         [24] 2529 	mov	dptr,#__divulong_PARM_2
      0008A5 F0               [24] 2530 	movx	@dptr,a
      0008A6 E4               [12] 2531 	clr	a
      0008A7 A3               [24] 2532 	inc	dptr
      0008A8 F0               [24] 2533 	movx	@dptr,a
      0008A9 A3               [24] 2534 	inc	dptr
      0008AA F0               [24] 2535 	movx	@dptr,a
      0008AB A3               [24] 2536 	inc	dptr
      0008AC F0               [24] 2537 	movx	@dptr,a
      0008AD 89 82            [24] 2538 	mov	dpl,r1
      0008AF 8A 83            [24] 2539 	mov	dph,r2
      0008B1 8B F0            [24] 2540 	mov	b,r3
      0008B3 EC               [12] 2541 	mov	a,r4
      0008B4 12r00r00         [24] 2542 	lcall	__divulong
      0008B7 AC 82            [24] 2543 	mov	r4,dpl
      0008B9 AD 83            [24] 2544 	mov	r5,dph
      0008BB AE F0            [24] 2545 	mov	r6,b
      0008BD FF               [12] 2546 	mov	r7,a
      0008BE 90r00r42         [24] 2547 	mov	dptr,#_clmt_clust_cl_65536_58
      0008C1 EC               [12] 2548 	mov	a,r4
      0008C2 F0               [24] 2549 	movx	@dptr,a
      0008C3 ED               [12] 2550 	mov	a,r5
      0008C4 A3               [24] 2551 	inc	dptr
      0008C5 F0               [24] 2552 	movx	@dptr,a
      0008C6 EE               [12] 2553 	mov	a,r6
      0008C7 A3               [24] 2554 	inc	dptr
      0008C8 F0               [24] 2555 	movx	@dptr,a
      0008C9 EF               [12] 2556 	mov	a,r7
      0008CA A3               [24] 2557 	inc	dptr
      0008CB F0               [24] 2558 	movx	@dptr,a
      0008CC                       2559 00106$:
                           0008CC  2560 	C$ff.c$1098$3_0$60 ==.
                                   2561 ;	FATFS\src\ff.c:1098: ncl = *tbl++;			/* Number of cluters in the fragment */
      0008CC 90r00r46         [24] 2562 	mov	dptr,#_clmt_clust_tbl_65536_58
      0008CF E0               [24] 2563 	movx	a,@dptr
      0008D0 FD               [12] 2564 	mov	r5,a
      0008D1 A3               [24] 2565 	inc	dptr
      0008D2 E0               [24] 2566 	movx	a,@dptr
      0008D3 FE               [12] 2567 	mov	r6,a
      0008D4 A3               [24] 2568 	inc	dptr
      0008D5 E0               [24] 2569 	movx	a,@dptr
      0008D6 FF               [12] 2570 	mov	r7,a
      0008D7 8D 82            [24] 2571 	mov	dpl,r5
      0008D9 8E 83            [24] 2572 	mov	dph,r6
      0008DB 8F F0            [24] 2573 	mov	b,r7
      0008DD 12r00r00         [24] 2574 	lcall	__gptrget
      0008E0 F9               [12] 2575 	mov	r1,a
      0008E1 A3               [24] 2576 	inc	dptr
      0008E2 12r00r00         [24] 2577 	lcall	__gptrget
      0008E5 FA               [12] 2578 	mov	r2,a
      0008E6 A3               [24] 2579 	inc	dptr
      0008E7 12r00r00         [24] 2580 	lcall	__gptrget
      0008EA FB               [12] 2581 	mov	r3,a
      0008EB A3               [24] 2582 	inc	dptr
      0008EC 12r00r00         [24] 2583 	lcall	__gptrget
      0008EF FC               [12] 2584 	mov	r4,a
      0008F0 90r00r46         [24] 2585 	mov	dptr,#_clmt_clust_tbl_65536_58
      0008F3 74 04            [12] 2586 	mov	a,#0x04
      0008F5 2D               [12] 2587 	add	a,r5
      0008F6 F0               [24] 2588 	movx	@dptr,a
      0008F7 E4               [12] 2589 	clr	a
      0008F8 3E               [12] 2590 	addc	a,r6
      0008F9 A3               [24] 2591 	inc	dptr
      0008FA F0               [24] 2592 	movx	@dptr,a
      0008FB EF               [12] 2593 	mov	a,r7
      0008FC A3               [24] 2594 	inc	dptr
      0008FD F0               [24] 2595 	movx	@dptr,a
                           0008FE  2596 	C$ff.c$1099$3_0$60 ==.
                                   2597 ;	FATFS\src\ff.c:1099: if (!ncl) return 0;		/* End of table? (error) */
      0008FE E9               [12] 2598 	mov	a,r1
      0008FF 4A               [12] 2599 	orl	a,r2
      000900 4B               [12] 2600 	orl	a,r3
      000901 4C               [12] 2601 	orl	a,r4
      000902 70 08            [24] 2602 	jnz	00102$
      000904 90 00 00         [24] 2603 	mov	dptr,#(0x00&0x00ff)
      000907 E4               [12] 2604 	clr	a
      000908 F5 F0            [12] 2605 	mov	b,a
      00090A 80 70            [24] 2606 	sjmp	00108$
      00090C                       2607 00102$:
                           00090C  2608 	C$ff.c$1100$3_0$60 ==.
                                   2609 ;	FATFS\src\ff.c:1100: if (cl < ncl) break;	/* In this fragment? */
      00090C 90r00r42         [24] 2610 	mov	dptr,#_clmt_clust_cl_65536_58
      00090F E0               [24] 2611 	movx	a,@dptr
      000910 F8               [12] 2612 	mov	r0,a
      000911 A3               [24] 2613 	inc	dptr
      000912 E0               [24] 2614 	movx	a,@dptr
      000913 FD               [12] 2615 	mov	r5,a
      000914 A3               [24] 2616 	inc	dptr
      000915 E0               [24] 2617 	movx	a,@dptr
      000916 FE               [12] 2618 	mov	r6,a
      000917 A3               [24] 2619 	inc	dptr
      000918 E0               [24] 2620 	movx	a,@dptr
      000919 FF               [12] 2621 	mov	r7,a
      00091A C3               [12] 2622 	clr	c
      00091B E8               [12] 2623 	mov	a,r0
      00091C 99               [12] 2624 	subb	a,r1
      00091D ED               [12] 2625 	mov	a,r5
      00091E 9A               [12] 2626 	subb	a,r2
      00091F EE               [12] 2627 	mov	a,r6
      000920 9B               [12] 2628 	subb	a,r3
      000921 EF               [12] 2629 	mov	a,r7
      000922 9C               [12] 2630 	subb	a,r4
      000923 40 21            [24] 2631 	jc	00105$
                           000925  2632 	C$ff.c$1101$3_0$60 ==.
                                   2633 ;	FATFS\src\ff.c:1101: cl -= ncl; tbl++;		/* Next fragment */
      000925 90r00r42         [24] 2634 	mov	dptr,#_clmt_clust_cl_65536_58
      000928 E8               [12] 2635 	mov	a,r0
      000929 C3               [12] 2636 	clr	c
      00092A 99               [12] 2637 	subb	a,r1
      00092B F0               [24] 2638 	movx	@dptr,a
      00092C ED               [12] 2639 	mov	a,r5
      00092D 9A               [12] 2640 	subb	a,r2
      00092E A3               [24] 2641 	inc	dptr
      00092F F0               [24] 2642 	movx	@dptr,a
      000930 EE               [12] 2643 	mov	a,r6
      000931 9B               [12] 2644 	subb	a,r3
      000932 A3               [24] 2645 	inc	dptr
      000933 F0               [24] 2646 	movx	@dptr,a
      000934 EF               [12] 2647 	mov	a,r7
      000935 9C               [12] 2648 	subb	a,r4
      000936 A3               [24] 2649 	inc	dptr
      000937 F0               [24] 2650 	movx	@dptr,a
      000938 90r00r46         [24] 2651 	mov	dptr,#_clmt_clust_tbl_65536_58
      00093B E0               [24] 2652 	movx	a,@dptr
      00093C 24 04            [12] 2653 	add	a,#0x04
      00093E F0               [24] 2654 	movx	@dptr,a
      00093F A3               [24] 2655 	inc	dptr
      000940 E0               [24] 2656 	movx	a,@dptr
      000941 34 00            [12] 2657 	addc	a,#0x00
      000943 F0               [24] 2658 	movx	@dptr,a
      000944 80 86            [24] 2659 	sjmp	00106$
      000946                       2660 00105$:
                           000946  2661 	C$ff.c$1103$1_0$58 ==.
                                   2662 ;	FATFS\src\ff.c:1103: return cl + *tbl;	/* Return the cluster number */
      000946 90r00r46         [24] 2663 	mov	dptr,#_clmt_clust_tbl_65536_58
      000949 E0               [24] 2664 	movx	a,@dptr
      00094A FC               [12] 2665 	mov	r4,a
      00094B A3               [24] 2666 	inc	dptr
      00094C E0               [24] 2667 	movx	a,@dptr
      00094D FA               [12] 2668 	mov	r2,a
      00094E A3               [24] 2669 	inc	dptr
      00094F E0               [24] 2670 	movx	a,@dptr
      000950 FB               [12] 2671 	mov	r3,a
      000951 8C 82            [24] 2672 	mov	dpl,r4
      000953 8A 83            [24] 2673 	mov	dph,r2
      000955 8B F0            [24] 2674 	mov	b,r3
      000957 12r00r00         [24] 2675 	lcall	__gptrget
      00095A F9               [12] 2676 	mov	r1,a
      00095B A3               [24] 2677 	inc	dptr
      00095C 12r00r00         [24] 2678 	lcall	__gptrget
      00095F FA               [12] 2679 	mov	r2,a
      000960 A3               [24] 2680 	inc	dptr
      000961 12r00r00         [24] 2681 	lcall	__gptrget
      000964 FB               [12] 2682 	mov	r3,a
      000965 A3               [24] 2683 	inc	dptr
      000966 12r00r00         [24] 2684 	lcall	__gptrget
      000969 FC               [12] 2685 	mov	r4,a
      00096A E9               [12] 2686 	mov	a,r1
      00096B 28               [12] 2687 	add	a,r0
      00096C F8               [12] 2688 	mov	r0,a
      00096D EA               [12] 2689 	mov	a,r2
      00096E 3D               [12] 2690 	addc	a,r5
      00096F FD               [12] 2691 	mov	r5,a
      000970 EB               [12] 2692 	mov	a,r3
      000971 3E               [12] 2693 	addc	a,r6
      000972 FE               [12] 2694 	mov	r6,a
      000973 EC               [12] 2695 	mov	a,r4
      000974 3F               [12] 2696 	addc	a,r7
      000975 FF               [12] 2697 	mov	r7,a
      000976 88 82            [24] 2698 	mov	dpl,r0
      000978 8D 83            [24] 2699 	mov	dph,r5
      00097A 8E F0            [24] 2700 	mov	b,r6
      00097C                       2701 00108$:
                           00097C  2702 	C$ff.c$1104$1_0$58 ==.
                                   2703 ;	FATFS\src\ff.c:1104: }
                           00097C  2704 	C$ff.c$1104$1_0$58 ==.
                           00097C  2705 	XFff$clmt_clust$0$0 ==.
      00097C 02r00r00         [24] 2706 	ljmp	__sdcc_banked_ret
                                   2707 ;------------------------------------------------------------
                                   2708 ;Allocation info for local variables in function 'dir_sdi'
                                   2709 ;------------------------------------------------------------
                                   2710 ;sloc0                     Allocated with name '_dir_sdi_sloc0_1_0'
                                   2711 ;sloc1                     Allocated with name '_dir_sdi_sloc1_1_0'
                                   2712 ;sloc2                     Allocated with name '_dir_sdi_sloc2_1_0'
                                   2713 ;idx                       Allocated with name '_dir_sdi_PARM_2'
                                   2714 ;dp                        Allocated with name '_dir_sdi_dp_65536_61'
                                   2715 ;clst                      Allocated with name '_dir_sdi_clst_65536_62'
                                   2716 ;sect                      Allocated with name '_dir_sdi_sect_65536_62'
                                   2717 ;ic                        Allocated with name '_dir_sdi_ic_65536_62'
                                   2718 ;------------------------------------------------------------
                           00097F  2719 	Fff$dir_sdi$0$0 ==.
                           00097F  2720 	C$ff.c$1115$1_0$62 ==.
                                   2721 ;	FATFS\src\ff.c:1115: FRESULT dir_sdi (
                                   2722 ;	-----------------------------------------
                                   2723 ;	 function dir_sdi
                                   2724 ;	-----------------------------------------
      00097F                       2725 _dir_sdi:
      00097F AF F0            [24] 2726 	mov	r7,b
      000981 AE 83            [24] 2727 	mov	r6,dph
      000983 E5 82            [12] 2728 	mov	a,dpl
      000985 90r00r4B         [24] 2729 	mov	dptr,#_dir_sdi_dp_65536_61
      000988 F0               [24] 2730 	movx	@dptr,a
      000989 EE               [12] 2731 	mov	a,r6
      00098A A3               [24] 2732 	inc	dptr
      00098B F0               [24] 2733 	movx	@dptr,a
      00098C EF               [12] 2734 	mov	a,r7
      00098D A3               [24] 2735 	inc	dptr
      00098E F0               [24] 2736 	movx	@dptr,a
                           00098F  2737 	C$ff.c$1124$1_0$62 ==.
                                   2738 ;	FATFS\src\ff.c:1124: dp->index = (WORD)idx;	/* Current index */
      00098F 90r00r4B         [24] 2739 	mov	dptr,#_dir_sdi_dp_65536_61
      000992 E0               [24] 2740 	movx	a,@dptr
      000993 FD               [12] 2741 	mov	r5,a
      000994 A3               [24] 2742 	inc	dptr
      000995 E0               [24] 2743 	movx	a,@dptr
      000996 FE               [12] 2744 	mov	r6,a
      000997 A3               [24] 2745 	inc	dptr
      000998 E0               [24] 2746 	movx	a,@dptr
      000999 FF               [12] 2747 	mov	r7,a
      00099A 74 05            [12] 2748 	mov	a,#0x05
      00099C 2D               [12] 2749 	add	a,r5
      00099D FA               [12] 2750 	mov	r2,a
      00099E E4               [12] 2751 	clr	a
      00099F 3E               [12] 2752 	addc	a,r6
      0009A0 FB               [12] 2753 	mov	r3,a
      0009A1 8F 04            [24] 2754 	mov	ar4,r7
      0009A3 90r00r49         [24] 2755 	mov	dptr,#_dir_sdi_PARM_2
      0009A6 E0               [24] 2756 	movx	a,@dptr
      0009A7 F8               [12] 2757 	mov	r0,a
      0009A8 A3               [24] 2758 	inc	dptr
      0009A9 E0               [24] 2759 	movx	a,@dptr
      0009AA F9               [12] 2760 	mov	r1,a
      0009AB 8A 82            [24] 2761 	mov	dpl,r2
      0009AD 8B 83            [24] 2762 	mov	dph,r3
      0009AF 8C F0            [24] 2763 	mov	b,r4
      0009B1 E8               [12] 2764 	mov	a,r0
      0009B2 12r00r00         [24] 2765 	lcall	__gptrput
      0009B5 A3               [24] 2766 	inc	dptr
      0009B6 E9               [12] 2767 	mov	a,r1
      0009B7 12r00r00         [24] 2768 	lcall	__gptrput
                           0009BA  2769 	C$ff.c$1125$1_0$62 ==.
                                   2770 ;	FATFS\src\ff.c:1125: clst = dp->sclust;		/* Table start cluster (0:root) */
      0009BA 74 07            [12] 2771 	mov	a,#0x07
      0009BC 2D               [12] 2772 	add	a,r5
      0009BD FA               [12] 2773 	mov	r2,a
      0009BE E4               [12] 2774 	clr	a
      0009BF 3E               [12] 2775 	addc	a,r6
      0009C0 FB               [12] 2776 	mov	r3,a
      0009C1 8F 04            [24] 2777 	mov	ar4,r7
      0009C3 8A 82            [24] 2778 	mov	dpl,r2
      0009C5 8B 83            [24] 2779 	mov	dph,r3
      0009C7 8C F0            [24] 2780 	mov	b,r4
      0009C9 12r00r00         [24] 2781 	lcall	__gptrget
      0009CC F5*18            [12] 2782 	mov	_dir_sdi_sloc0_1_0,a
      0009CE A3               [24] 2783 	inc	dptr
      0009CF 12r00r00         [24] 2784 	lcall	__gptrget
      0009D2 F5*19            [12] 2785 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      0009D4 A3               [24] 2786 	inc	dptr
      0009D5 12r00r00         [24] 2787 	lcall	__gptrget
      0009D8 F5*1A            [12] 2788 	mov	(_dir_sdi_sloc0_1_0 + 2),a
      0009DA A3               [24] 2789 	inc	dptr
      0009DB 12r00r00         [24] 2790 	lcall	__gptrget
      0009DE F5*1B            [12] 2791 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      0009E0 90r00r4E         [24] 2792 	mov	dptr,#_dir_sdi_clst_65536_62
      0009E3 E5*18            [12] 2793 	mov	a,_dir_sdi_sloc0_1_0
      0009E5 F0               [24] 2794 	movx	@dptr,a
      0009E6 E5*19            [12] 2795 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      0009E8 A3               [24] 2796 	inc	dptr
      0009E9 F0               [24] 2797 	movx	@dptr,a
      0009EA E5*1A            [12] 2798 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      0009EC A3               [24] 2799 	inc	dptr
      0009ED F0               [24] 2800 	movx	@dptr,a
      0009EE E5*1B            [12] 2801 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      0009F0 A3               [24] 2802 	inc	dptr
      0009F1 F0               [24] 2803 	movx	@dptr,a
                           0009F2  2804 	C$ff.c$1126$1_0$62 ==.
                                   2805 ;	FATFS\src\ff.c:1126: if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
      0009F2 74 01            [12] 2806 	mov	a,#0x01
      0009F4 B5*18 0C         [24] 2807 	cjne	a,_dir_sdi_sloc0_1_0,00164$
      0009F7 14               [12] 2808 	dec	a
      0009F8 B5*19 08         [24] 2809 	cjne	a,(_dir_sdi_sloc0_1_0 + 1),00164$
      0009FB B5*1A 05         [24] 2810 	cjne	a,(_dir_sdi_sloc0_1_0 + 2),00164$
      0009FE B5*1B 02         [24] 2811 	cjne	a,(_dir_sdi_sloc0_1_0 + 3),00164$
      000A01 80 4D            [24] 2812 	sjmp	00101$
      000A03                       2813 00164$:
      000A03 C0 00            [24] 2814 	push	ar0
      000A05 C0 01            [24] 2815 	push	ar1
      000A07 8D 82            [24] 2816 	mov	dpl,r5
      000A09 8E 83            [24] 2817 	mov	dph,r6
      000A0B 8F F0            [24] 2818 	mov	b,r7
      000A0D 12r00r00         [24] 2819 	lcall	__gptrget
      000A10 FD               [12] 2820 	mov	r5,a
      000A11 A3               [24] 2821 	inc	dptr
      000A12 12r00r00         [24] 2822 	lcall	__gptrget
      000A15 FE               [12] 2823 	mov	r6,a
      000A16 A3               [24] 2824 	inc	dptr
      000A17 12r00r00         [24] 2825 	lcall	__gptrget
      000A1A FF               [12] 2826 	mov	r7,a
      000A1B 74 0A            [12] 2827 	mov	a,#0x0a
      000A1D 2D               [12] 2828 	add	a,r5
      000A1E FC               [12] 2829 	mov	r4,a
      000A1F E4               [12] 2830 	clr	a
      000A20 3E               [12] 2831 	addc	a,r6
      000A21 FA               [12] 2832 	mov	r2,a
      000A22 8F 03            [24] 2833 	mov	ar3,r7
      000A24 8C 82            [24] 2834 	mov	dpl,r4
      000A26 8A 83            [24] 2835 	mov	dph,r2
      000A28 8B F0            [24] 2836 	mov	b,r3
      000A2A 12r00r00         [24] 2837 	lcall	__gptrget
      000A2D F9               [12] 2838 	mov	r1,a
      000A2E A3               [24] 2839 	inc	dptr
      000A2F 12r00r00         [24] 2840 	lcall	__gptrget
      000A32 FA               [12] 2841 	mov	r2,a
      000A33 A3               [24] 2842 	inc	dptr
      000A34 12r00r00         [24] 2843 	lcall	__gptrget
      000A37 FB               [12] 2844 	mov	r3,a
      000A38 A3               [24] 2845 	inc	dptr
      000A39 12r00r00         [24] 2846 	lcall	__gptrget
      000A3C FC               [12] 2847 	mov	r4,a
      000A3D C3               [12] 2848 	clr	c
      000A3E E5*18            [12] 2849 	mov	a,_dir_sdi_sloc0_1_0
      000A40 99               [12] 2850 	subb	a,r1
      000A41 E5*19            [12] 2851 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      000A43 9A               [12] 2852 	subb	a,r2
      000A44 E5*1A            [12] 2853 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      000A46 9B               [12] 2854 	subb	a,r3
      000A47 E5*1B            [12] 2855 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      000A49 9C               [12] 2856 	subb	a,r4
      000A4A D0 01            [24] 2857 	pop	ar1
      000A4C D0 00            [24] 2858 	pop	ar0
      000A4E 40 06            [24] 2859 	jc	00102$
      000A50                       2860 00101$:
                           000A50  2861 	C$ff.c$1127$1_0$62 ==.
                                   2862 ;	FATFS\src\ff.c:1127: return FR_INT_ERR;
      000A50 75 82 02         [24] 2863 	mov	dpl,#0x02
      000A53 02r00r00         [24] 2864 	ljmp	__sdcc_banked_ret
      000A56                       2865 00102$:
                           000A56  2866 	C$ff.c$1128$1_0$62 ==.
                                   2867 ;	FATFS\src\ff.c:1128: if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
      000A56 E5*18            [12] 2868 	mov	a,_dir_sdi_sloc0_1_0
      000A58 45*19            [12] 2869 	orl	a,(_dir_sdi_sloc0_1_0 + 1)
      000A5A 45*1A            [12] 2870 	orl	a,(_dir_sdi_sloc0_1_0 + 2)
      000A5C 45*1B            [12] 2871 	orl	a,(_dir_sdi_sloc0_1_0 + 3)
      000A5E 70 3B            [24] 2872 	jnz	00105$
      000A60 8D 82            [24] 2873 	mov	dpl,r5
      000A62 8E 83            [24] 2874 	mov	dph,r6
      000A64 8F F0            [24] 2875 	mov	b,r7
      000A66 12r00r00         [24] 2876 	lcall	__gptrget
      000A69 FC               [12] 2877 	mov	r4,a
      000A6A BC 03 2E         [24] 2878 	cjne	r4,#0x03,00105$
                           000A6D  2879 	C$ff.c$1129$1_0$62 ==.
                                   2880 ;	FATFS\src\ff.c:1129: clst = dp->fs->dirbase;
      000A6D 74 1A            [12] 2881 	mov	a,#0x1a
      000A6F 2D               [12] 2882 	add	a,r5
      000A70 FD               [12] 2883 	mov	r5,a
      000A71 E4               [12] 2884 	clr	a
      000A72 3E               [12] 2885 	addc	a,r6
      000A73 FE               [12] 2886 	mov	r6,a
      000A74 8D 82            [24] 2887 	mov	dpl,r5
      000A76 8E 83            [24] 2888 	mov	dph,r6
      000A78 8F F0            [24] 2889 	mov	b,r7
      000A7A 12r00r00         [24] 2890 	lcall	__gptrget
      000A7D FD               [12] 2891 	mov	r5,a
      000A7E A3               [24] 2892 	inc	dptr
      000A7F 12r00r00         [24] 2893 	lcall	__gptrget
      000A82 FE               [12] 2894 	mov	r6,a
      000A83 A3               [24] 2895 	inc	dptr
      000A84 12r00r00         [24] 2896 	lcall	__gptrget
      000A87 FF               [12] 2897 	mov	r7,a
      000A88 A3               [24] 2898 	inc	dptr
      000A89 12r00r00         [24] 2899 	lcall	__gptrget
      000A8C FC               [12] 2900 	mov	r4,a
      000A8D 90r00r4E         [24] 2901 	mov	dptr,#_dir_sdi_clst_65536_62
      000A90 ED               [12] 2902 	mov	a,r5
      000A91 F0               [24] 2903 	movx	@dptr,a
      000A92 EE               [12] 2904 	mov	a,r6
      000A93 A3               [24] 2905 	inc	dptr
      000A94 F0               [24] 2906 	movx	@dptr,a
      000A95 EF               [12] 2907 	mov	a,r7
      000A96 A3               [24] 2908 	inc	dptr
      000A97 F0               [24] 2909 	movx	@dptr,a
      000A98 EC               [12] 2910 	mov	a,r4
      000A99 A3               [24] 2911 	inc	dptr
      000A9A F0               [24] 2912 	movx	@dptr,a
      000A9B                       2913 00105$:
                           000A9B  2914 	C$ff.c$1131$1_0$62 ==.
                                   2915 ;	FATFS\src\ff.c:1131: if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
      000A9B 90r00r4E         [24] 2916 	mov	dptr,#_dir_sdi_clst_65536_62
      000A9E E0               [24] 2917 	movx	a,@dptr
      000A9F F5 F0            [12] 2918 	mov	b,a
      000AA1 A3               [24] 2919 	inc	dptr
      000AA2 E0               [24] 2920 	movx	a,@dptr
      000AA3 42 F0            [12] 2921 	orl	b,a
      000AA5 A3               [24] 2922 	inc	dptr
      000AA6 E0               [24] 2923 	movx	a,@dptr
      000AA7 42 F0            [12] 2924 	orl	b,a
      000AA9 A3               [24] 2925 	inc	dptr
      000AAA E0               [24] 2926 	movx	a,@dptr
      000AAB 45 F0            [12] 2927 	orl	a,b
      000AAD 70 75            [24] 2928 	jnz	00118$
                           000AAF  2929 	C$ff.c$1132$2_0$63 ==.
                                   2930 ;	FATFS\src\ff.c:1132: if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
      000AAF 90r00r4B         [24] 2931 	mov	dptr,#_dir_sdi_dp_65536_61
      000AB2 E0               [24] 2932 	movx	a,@dptr
      000AB3 FD               [12] 2933 	mov	r5,a
      000AB4 A3               [24] 2934 	inc	dptr
      000AB5 E0               [24] 2935 	movx	a,@dptr
      000AB6 FE               [12] 2936 	mov	r6,a
      000AB7 A3               [24] 2937 	inc	dptr
      000AB8 E0               [24] 2938 	movx	a,@dptr
      000AB9 FF               [12] 2939 	mov	r7,a
      000ABA 8D 82            [24] 2940 	mov	dpl,r5
      000ABC 8E 83            [24] 2941 	mov	dph,r6
      000ABE 8F F0            [24] 2942 	mov	b,r7
      000AC0 12r00r00         [24] 2943 	lcall	__gptrget
      000AC3 FD               [12] 2944 	mov	r5,a
      000AC4 A3               [24] 2945 	inc	dptr
      000AC5 12r00r00         [24] 2946 	lcall	__gptrget
      000AC8 FE               [12] 2947 	mov	r6,a
      000AC9 A3               [24] 2948 	inc	dptr
      000ACA 12r00r00         [24] 2949 	lcall	__gptrget
      000ACD FF               [12] 2950 	mov	r7,a
      000ACE 74 08            [12] 2951 	mov	a,#0x08
      000AD0 2D               [12] 2952 	add	a,r5
      000AD1 FA               [12] 2953 	mov	r2,a
      000AD2 E4               [12] 2954 	clr	a
      000AD3 3E               [12] 2955 	addc	a,r6
      000AD4 FB               [12] 2956 	mov	r3,a
      000AD5 8F 04            [24] 2957 	mov	ar4,r7
      000AD7 8A 82            [24] 2958 	mov	dpl,r2
      000AD9 8B 83            [24] 2959 	mov	dph,r3
      000ADB 8C F0            [24] 2960 	mov	b,r4
      000ADD 12r00r00         [24] 2961 	lcall	__gptrget
      000AE0 FA               [12] 2962 	mov	r2,a
      000AE1 A3               [24] 2963 	inc	dptr
      000AE2 12r00r00         [24] 2964 	lcall	__gptrget
      000AE5 FB               [12] 2965 	mov	r3,a
      000AE6 C3               [12] 2966 	clr	c
      000AE7 E8               [12] 2967 	mov	a,r0
      000AE8 9A               [12] 2968 	subb	a,r2
      000AE9 E9               [12] 2969 	mov	a,r1
      000AEA 9B               [12] 2970 	subb	a,r3
      000AEB 40 06            [24] 2971 	jc	00108$
                           000AED  2972 	C$ff.c$1133$2_0$63 ==.
                                   2973 ;	FATFS\src\ff.c:1133: return FR_INT_ERR;
      000AED 75 82 02         [24] 2974 	mov	dpl,#0x02
      000AF0 02r00r00         [24] 2975 	ljmp	__sdcc_banked_ret
      000AF3                       2976 00108$:
                           000AF3  2977 	C$ff.c$1134$2_0$63 ==.
                                   2978 ;	FATFS\src\ff.c:1134: sect = dp->fs->dirbase;
      000AF3 74 1A            [12] 2979 	mov	a,#0x1a
      000AF5 2D               [12] 2980 	add	a,r5
      000AF6 FD               [12] 2981 	mov	r5,a
      000AF7 E4               [12] 2982 	clr	a
      000AF8 3E               [12] 2983 	addc	a,r6
      000AF9 FE               [12] 2984 	mov	r6,a
      000AFA 8D 82            [24] 2985 	mov	dpl,r5
      000AFC 8E 83            [24] 2986 	mov	dph,r6
      000AFE 8F F0            [24] 2987 	mov	b,r7
      000B00 12r00r00         [24] 2988 	lcall	__gptrget
      000B03 FD               [12] 2989 	mov	r5,a
      000B04 A3               [24] 2990 	inc	dptr
      000B05 12r00r00         [24] 2991 	lcall	__gptrget
      000B08 FE               [12] 2992 	mov	r6,a
      000B09 A3               [24] 2993 	inc	dptr
      000B0A 12r00r00         [24] 2994 	lcall	__gptrget
      000B0D FF               [12] 2995 	mov	r7,a
      000B0E A3               [24] 2996 	inc	dptr
      000B0F 12r00r00         [24] 2997 	lcall	__gptrget
      000B12 FC               [12] 2998 	mov	r4,a
      000B13 90r00r52         [24] 2999 	mov	dptr,#_dir_sdi_sect_65536_62
      000B16 ED               [12] 3000 	mov	a,r5
      000B17 F0               [24] 3001 	movx	@dptr,a
      000B18 EE               [12] 3002 	mov	a,r6
      000B19 A3               [24] 3003 	inc	dptr
      000B1A F0               [24] 3004 	movx	@dptr,a
      000B1B EF               [12] 3005 	mov	a,r7
      000B1C A3               [24] 3006 	inc	dptr
      000B1D F0               [24] 3007 	movx	@dptr,a
      000B1E EC               [12] 3008 	mov	a,r4
      000B1F A3               [24] 3009 	inc	dptr
      000B20 F0               [24] 3010 	movx	@dptr,a
      000B21 02r0CrF1         [24] 3011 	ljmp	00119$
      000B24                       3012 00118$:
                           000B24  3013 	C$ff.c$1137$2_0$64 ==.
                                   3014 ;	FATFS\src\ff.c:1137: ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
      000B24 90r00r4B         [24] 3015 	mov	dptr,#_dir_sdi_dp_65536_61
      000B27 E0               [24] 3016 	movx	a,@dptr
      000B28 FD               [12] 3017 	mov	r5,a
      000B29 A3               [24] 3018 	inc	dptr
      000B2A E0               [24] 3019 	movx	a,@dptr
      000B2B FE               [12] 3020 	mov	r6,a
      000B2C A3               [24] 3021 	inc	dptr
      000B2D E0               [24] 3022 	movx	a,@dptr
      000B2E FF               [12] 3023 	mov	r7,a
      000B2F 8D 82            [24] 3024 	mov	dpl,r5
      000B31 8E 83            [24] 3025 	mov	dph,r6
      000B33 8F F0            [24] 3026 	mov	b,r7
      000B35 12r00r00         [24] 3027 	lcall	__gptrget
      000B38 FD               [12] 3028 	mov	r5,a
      000B39 A3               [24] 3029 	inc	dptr
      000B3A 12r00r00         [24] 3030 	lcall	__gptrget
      000B3D FE               [12] 3031 	mov	r6,a
      000B3E A3               [24] 3032 	inc	dptr
      000B3F 12r00r00         [24] 3033 	lcall	__gptrget
      000B42 FF               [12] 3034 	mov	r7,a
      000B43 74 02            [12] 3035 	mov	a,#0x02
      000B45 2D               [12] 3036 	add	a,r5
      000B46 FD               [12] 3037 	mov	r5,a
      000B47 E4               [12] 3038 	clr	a
      000B48 3E               [12] 3039 	addc	a,r6
      000B49 FE               [12] 3040 	mov	r6,a
      000B4A 8D 82            [24] 3041 	mov	dpl,r5
      000B4C 8E 83            [24] 3042 	mov	dph,r6
      000B4E 8F F0            [24] 3043 	mov	b,r7
      000B50 12r00r00         [24] 3044 	lcall	__gptrget
      000B53 FD               [12] 3045 	mov	r5,a
      000B54 7F 00            [12] 3046 	mov	r7,#0x00
      000B56 8D*1C            [24] 3047 	mov	_dir_sdi_sloc1_1_0,r5
      000B58 EF               [12] 3048 	mov	a,r7
      000B59 C4               [12] 3049 	swap	a
      000B5A 54 F0            [12] 3050 	anl	a,#0xf0
      000B5C C5*1C            [12] 3051 	xch	a,_dir_sdi_sloc1_1_0
      000B5E C4               [12] 3052 	swap	a
      000B5F C5*1C            [12] 3053 	xch	a,_dir_sdi_sloc1_1_0
      000B61 65*1C            [12] 3054 	xrl	a,_dir_sdi_sloc1_1_0
      000B63 C5*1C            [12] 3055 	xch	a,_dir_sdi_sloc1_1_0
      000B65 54 F0            [12] 3056 	anl	a,#0xf0
      000B67 C5*1C            [12] 3057 	xch	a,_dir_sdi_sloc1_1_0
      000B69 65*1C            [12] 3058 	xrl	a,_dir_sdi_sloc1_1_0
      000B6B F5*1D            [12] 3059 	mov	(_dir_sdi_sloc1_1_0 + 1),a
                           000B6D  3060 	C$ff.c$1138$2_0$64 ==.
                                   3061 ;	FATFS\src\ff.c:1138: while (idx >= ic) {	/* Follow cluster chain */
      000B6D                       3062 00114$:
      000B6D 90r00r49         [24] 3063 	mov	dptr,#_dir_sdi_PARM_2
      000B70 E0               [24] 3064 	movx	a,@dptr
      000B71 FC               [12] 3065 	mov	r4,a
      000B72 A3               [24] 3066 	inc	dptr
      000B73 E0               [24] 3067 	movx	a,@dptr
      000B74 FD               [12] 3068 	mov	r5,a
      000B75 C3               [12] 3069 	clr	c
      000B76 EC               [12] 3070 	mov	a,r4
      000B77 95*1C            [12] 3071 	subb	a,_dir_sdi_sloc1_1_0
      000B79 ED               [12] 3072 	mov	a,r5
      000B7A 95*1D            [12] 3073 	subb	a,(_dir_sdi_sloc1_1_0 + 1)
      000B7C 50 03            [24] 3074 	jnc	00171$
      000B7E 02r0Cr92         [24] 3075 	ljmp	00116$
      000B81                       3076 00171$:
                           000B81  3077 	C$ff.c$1139$1_0$62 ==.
                                   3078 ;	FATFS\src\ff.c:1139: clst = get_fat(dp->fs, clst);				/* Get next cluster */
      000B81 C0 04            [24] 3079 	push	ar4
      000B83 C0 05            [24] 3080 	push	ar5
      000B85 90r00r4B         [24] 3081 	mov	dptr,#_dir_sdi_dp_65536_61
      000B88 E0               [24] 3082 	movx	a,@dptr
      000B89 F9               [12] 3083 	mov	r1,a
      000B8A A3               [24] 3084 	inc	dptr
      000B8B E0               [24] 3085 	movx	a,@dptr
      000B8C FA               [12] 3086 	mov	r2,a
      000B8D A3               [24] 3087 	inc	dptr
      000B8E E0               [24] 3088 	movx	a,@dptr
      000B8F FB               [12] 3089 	mov	r3,a
      000B90 89 82            [24] 3090 	mov	dpl,r1
      000B92 8A 83            [24] 3091 	mov	dph,r2
      000B94 8B F0            [24] 3092 	mov	b,r3
      000B96 12r00r00         [24] 3093 	lcall	__gptrget
      000B99 F5*18            [12] 3094 	mov	_dir_sdi_sloc0_1_0,a
      000B9B A3               [24] 3095 	inc	dptr
      000B9C 12r00r00         [24] 3096 	lcall	__gptrget
      000B9F F5*19            [12] 3097 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      000BA1 A3               [24] 3098 	inc	dptr
      000BA2 12r00r00         [24] 3099 	lcall	__gptrget
      000BA5 F5*1A            [12] 3100 	mov	(_dir_sdi_sloc0_1_0 + 2),a
      000BA7 90r00r4E         [24] 3101 	mov	dptr,#_dir_sdi_clst_65536_62
      000BAA E0               [24] 3102 	movx	a,@dptr
      000BAB F8               [12] 3103 	mov	r0,a
      000BAC A3               [24] 3104 	inc	dptr
      000BAD E0               [24] 3105 	movx	a,@dptr
      000BAE FC               [12] 3106 	mov	r4,a
      000BAF A3               [24] 3107 	inc	dptr
      000BB0 E0               [24] 3108 	movx	a,@dptr
      000BB1 FD               [12] 3109 	mov	r5,a
      000BB2 A3               [24] 3110 	inc	dptr
      000BB3 E0               [24] 3111 	movx	a,@dptr
      000BB4 FF               [12] 3112 	mov	r7,a
      000BB5 90r00r34         [24] 3113 	mov	dptr,#_get_fat_PARM_2
      000BB8 E8               [12] 3114 	mov	a,r0
      000BB9 F0               [24] 3115 	movx	@dptr,a
      000BBA EC               [12] 3116 	mov	a,r4
      000BBB A3               [24] 3117 	inc	dptr
      000BBC F0               [24] 3118 	movx	@dptr,a
      000BBD ED               [12] 3119 	mov	a,r5
      000BBE A3               [24] 3120 	inc	dptr
      000BBF F0               [24] 3121 	movx	@dptr,a
      000BC0 EF               [12] 3122 	mov	a,r7
      000BC1 A3               [24] 3123 	inc	dptr
      000BC2 F0               [24] 3124 	movx	@dptr,a
      000BC3 85*18 82         [24] 3125 	mov	dpl,_dir_sdi_sloc0_1_0
      000BC6 85*19 83         [24] 3126 	mov	dph,(_dir_sdi_sloc0_1_0 + 1)
      000BC9 85*1A F0         [24] 3127 	mov	b,(_dir_sdi_sloc0_1_0 + 2)
      000BCC C0 05            [24] 3128 	push	ar5
      000BCE C0 04            [24] 3129 	push	ar4
      000BD0 C0 03            [24] 3130 	push	ar3
      000BD2 C0 02            [24] 3131 	push	ar2
      000BD4 C0 01            [24] 3132 	push	ar1
      000BD6 78rA5            [12] 3133 	mov	r0,#_get_fat
      000BD8 79s03            [12] 3134 	mov	r1,#(_get_fat >> 8)
      000BDA 7As00            [12] 3135 	mov	r2,#(_get_fat >> 16)
      000BDC 12r00r00         [24] 3136 	lcall	__sdcc_banked_call
      000BDF 85 82*18         [24] 3137 	mov	_dir_sdi_sloc0_1_0,dpl
      000BE2 85 83*19         [24] 3138 	mov	(_dir_sdi_sloc0_1_0 + 1),dph
      000BE5 85 F0*1A         [24] 3139 	mov	(_dir_sdi_sloc0_1_0 + 2),b
      000BE8 F5*1B            [12] 3140 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      000BEA D0 01            [24] 3141 	pop	ar1
      000BEC D0 02            [24] 3142 	pop	ar2
      000BEE D0 03            [24] 3143 	pop	ar3
      000BF0 D0 04            [24] 3144 	pop	ar4
      000BF2 D0 05            [24] 3145 	pop	ar5
      000BF4 90r00r4E         [24] 3146 	mov	dptr,#_dir_sdi_clst_65536_62
      000BF7 E5*18            [12] 3147 	mov	a,_dir_sdi_sloc0_1_0
      000BF9 F0               [24] 3148 	movx	@dptr,a
      000BFA E5*19            [12] 3149 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      000BFC A3               [24] 3150 	inc	dptr
      000BFD F0               [24] 3151 	movx	@dptr,a
      000BFE E5*1A            [12] 3152 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      000C00 A3               [24] 3153 	inc	dptr
      000C01 F0               [24] 3154 	movx	@dptr,a
      000C02 E5*1B            [12] 3155 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      000C04 A3               [24] 3156 	inc	dptr
      000C05 F0               [24] 3157 	movx	@dptr,a
                           000C06  3158 	C$ff.c$1140$3_0$65 ==.
                                   3159 ;	FATFS\src\ff.c:1140: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
      000C06 74 FF            [12] 3160 	mov	a,#0xff
      000C08 B5*18 0B         [24] 3161 	cjne	a,_dir_sdi_sloc0_1_0,00172$
      000C0B B5*19 08         [24] 3162 	cjne	a,(_dir_sdi_sloc0_1_0 + 1),00172$
      000C0E B5*1A 05         [24] 3163 	cjne	a,(_dir_sdi_sloc0_1_0 + 2),00172$
      000C11 B5*1B 02         [24] 3164 	cjne	a,(_dir_sdi_sloc0_1_0 + 3),00172$
      000C14 80 06            [24] 3165 	sjmp	00173$
      000C16                       3166 00172$:
      000C16 D0 05            [24] 3167 	pop	ar5
      000C18 D0 04            [24] 3168 	pop	ar4
      000C1A 80 0A            [24] 3169 	sjmp	00110$
      000C1C                       3170 00173$:
      000C1C D0 05            [24] 3171 	pop	ar5
      000C1E D0 04            [24] 3172 	pop	ar4
      000C20 75 82 01         [24] 3173 	mov	dpl,#0x01
      000C23 02r00r00         [24] 3174 	ljmp	__sdcc_banked_ret
      000C26                       3175 00110$:
                           000C26  3176 	C$ff.c$1141$3_0$65 ==.
                                   3177 ;	FATFS\src\ff.c:1141: if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
      000C26 C3               [12] 3178 	clr	c
      000C27 E5*18            [12] 3179 	mov	a,_dir_sdi_sloc0_1_0
      000C29 94 02            [12] 3180 	subb	a,#0x02
      000C2B E5*19            [12] 3181 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      000C2D 94 00            [12] 3182 	subb	a,#0x00
      000C2F E5*1A            [12] 3183 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      000C31 94 00            [12] 3184 	subb	a,#0x00
      000C33 E5*1B            [12] 3185 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      000C35 94 00            [12] 3186 	subb	a,#0x00
      000C37 40 43            [24] 3187 	jc	00111$
      000C39 89 82            [24] 3188 	mov	dpl,r1
      000C3B 8A 83            [24] 3189 	mov	dph,r2
      000C3D 8B F0            [24] 3190 	mov	b,r3
      000C3F 12r00r00         [24] 3191 	lcall	__gptrget
      000C42 F9               [12] 3192 	mov	r1,a
      000C43 A3               [24] 3193 	inc	dptr
      000C44 12r00r00         [24] 3194 	lcall	__gptrget
      000C47 FA               [12] 3195 	mov	r2,a
      000C48 A3               [24] 3196 	inc	dptr
      000C49 12r00r00         [24] 3197 	lcall	__gptrget
      000C4C FB               [12] 3198 	mov	r3,a
      000C4D 74 0A            [12] 3199 	mov	a,#0x0a
      000C4F 29               [12] 3200 	add	a,r1
      000C50 F9               [12] 3201 	mov	r1,a
      000C51 E4               [12] 3202 	clr	a
      000C52 3A               [12] 3203 	addc	a,r2
      000C53 FA               [12] 3204 	mov	r2,a
      000C54 89 82            [24] 3205 	mov	dpl,r1
      000C56 8A 83            [24] 3206 	mov	dph,r2
      000C58 8B F0            [24] 3207 	mov	b,r3
      000C5A 12r00r00         [24] 3208 	lcall	__gptrget
      000C5D F9               [12] 3209 	mov	r1,a
      000C5E A3               [24] 3210 	inc	dptr
      000C5F 12r00r00         [24] 3211 	lcall	__gptrget
      000C62 FA               [12] 3212 	mov	r2,a
      000C63 A3               [24] 3213 	inc	dptr
      000C64 12r00r00         [24] 3214 	lcall	__gptrget
      000C67 FB               [12] 3215 	mov	r3,a
      000C68 A3               [24] 3216 	inc	dptr
      000C69 12r00r00         [24] 3217 	lcall	__gptrget
      000C6C FF               [12] 3218 	mov	r7,a
      000C6D C3               [12] 3219 	clr	c
      000C6E E5*18            [12] 3220 	mov	a,_dir_sdi_sloc0_1_0
      000C70 99               [12] 3221 	subb	a,r1
      000C71 E5*19            [12] 3222 	mov	a,(_dir_sdi_sloc0_1_0 + 1)
      000C73 9A               [12] 3223 	subb	a,r2
      000C74 E5*1A            [12] 3224 	mov	a,(_dir_sdi_sloc0_1_0 + 2)
      000C76 9B               [12] 3225 	subb	a,r3
      000C77 E5*1B            [12] 3226 	mov	a,(_dir_sdi_sloc0_1_0 + 3)
      000C79 9F               [12] 3227 	subb	a,r7
      000C7A 40 06            [24] 3228 	jc	00112$
      000C7C                       3229 00111$:
                           000C7C  3230 	C$ff.c$1142$3_0$65 ==.
                                   3231 ;	FATFS\src\ff.c:1142: return FR_INT_ERR;
      000C7C 75 82 02         [24] 3232 	mov	dpl,#0x02
      000C7F 02r00r00         [24] 3233 	ljmp	__sdcc_banked_ret
      000C82                       3234 00112$:
                           000C82  3235 	C$ff.c$1143$3_0$65 ==.
                                   3236 ;	FATFS\src\ff.c:1143: idx -= ic;
      000C82 90r00r49         [24] 3237 	mov	dptr,#_dir_sdi_PARM_2
      000C85 EC               [12] 3238 	mov	a,r4
      000C86 C3               [12] 3239 	clr	c
      000C87 95*1C            [12] 3240 	subb	a,_dir_sdi_sloc1_1_0
      000C89 F0               [24] 3241 	movx	@dptr,a
      000C8A ED               [12] 3242 	mov	a,r5
      000C8B 95*1D            [12] 3243 	subb	a,(_dir_sdi_sloc1_1_0 + 1)
      000C8D A3               [24] 3244 	inc	dptr
      000C8E F0               [24] 3245 	movx	@dptr,a
      000C8F 02r0Br6D         [24] 3246 	ljmp	00114$
      000C92                       3247 00116$:
                           000C92  3248 	C$ff.c$1145$2_0$64 ==.
                                   3249 ;	FATFS\src\ff.c:1145: sect = clust2sect(dp->fs, clst);
      000C92 90r00r4B         [24] 3250 	mov	dptr,#_dir_sdi_dp_65536_61
      000C95 E0               [24] 3251 	movx	a,@dptr
      000C96 FD               [12] 3252 	mov	r5,a
      000C97 A3               [24] 3253 	inc	dptr
      000C98 E0               [24] 3254 	movx	a,@dptr
      000C99 FE               [12] 3255 	mov	r6,a
      000C9A A3               [24] 3256 	inc	dptr
      000C9B E0               [24] 3257 	movx	a,@dptr
      000C9C FF               [12] 3258 	mov	r7,a
      000C9D 8D 82            [24] 3259 	mov	dpl,r5
      000C9F 8E 83            [24] 3260 	mov	dph,r6
      000CA1 8F F0            [24] 3261 	mov	b,r7
      000CA3 12r00r00         [24] 3262 	lcall	__gptrget
      000CA6 FD               [12] 3263 	mov	r5,a
      000CA7 A3               [24] 3264 	inc	dptr
      000CA8 12r00r00         [24] 3265 	lcall	__gptrget
      000CAB FE               [12] 3266 	mov	r6,a
      000CAC A3               [24] 3267 	inc	dptr
      000CAD 12r00r00         [24] 3268 	lcall	__gptrget
      000CB0 FF               [12] 3269 	mov	r7,a
      000CB1 90r00r4E         [24] 3270 	mov	dptr,#_dir_sdi_clst_65536_62
      000CB4 E0               [24] 3271 	movx	a,@dptr
      000CB5 F9               [12] 3272 	mov	r1,a
      000CB6 A3               [24] 3273 	inc	dptr
      000CB7 E0               [24] 3274 	movx	a,@dptr
      000CB8 FA               [12] 3275 	mov	r2,a
      000CB9 A3               [24] 3276 	inc	dptr
      000CBA E0               [24] 3277 	movx	a,@dptr
      000CBB FB               [12] 3278 	mov	r3,a
      000CBC A3               [24] 3279 	inc	dptr
      000CBD E0               [24] 3280 	movx	a,@dptr
      000CBE FC               [12] 3281 	mov	r4,a
      000CBF 90r00r2D         [24] 3282 	mov	dptr,#_clust2sect_PARM_2
      000CC2 E9               [12] 3283 	mov	a,r1
      000CC3 F0               [24] 3284 	movx	@dptr,a
      000CC4 EA               [12] 3285 	mov	a,r2
      000CC5 A3               [24] 3286 	inc	dptr
      000CC6 F0               [24] 3287 	movx	@dptr,a
      000CC7 EB               [12] 3288 	mov	a,r3
      000CC8 A3               [24] 3289 	inc	dptr
      000CC9 F0               [24] 3290 	movx	@dptr,a
      000CCA EC               [12] 3291 	mov	a,r4
      000CCB A3               [24] 3292 	inc	dptr
      000CCC F0               [24] 3293 	movx	@dptr,a
      000CCD 8D 82            [24] 3294 	mov	dpl,r5
      000CCF 8E 83            [24] 3295 	mov	dph,r6
      000CD1 8F F0            [24] 3296 	mov	b,r7
      000CD3 78r90            [12] 3297 	mov	r0,#_clust2sect
      000CD5 79s02            [12] 3298 	mov	r1,#(_clust2sect >> 8)
      000CD7 7As00            [12] 3299 	mov	r2,#(_clust2sect >> 16)
      000CD9 12r00r00         [24] 3300 	lcall	__sdcc_banked_call
      000CDC AC 82            [24] 3301 	mov	r4,dpl
      000CDE AD 83            [24] 3302 	mov	r5,dph
      000CE0 AE F0            [24] 3303 	mov	r6,b
      000CE2 FF               [12] 3304 	mov	r7,a
      000CE3 90r00r52         [24] 3305 	mov	dptr,#_dir_sdi_sect_65536_62
      000CE6 EC               [12] 3306 	mov	a,r4
      000CE7 F0               [24] 3307 	movx	@dptr,a
      000CE8 ED               [12] 3308 	mov	a,r5
      000CE9 A3               [24] 3309 	inc	dptr
      000CEA F0               [24] 3310 	movx	@dptr,a
      000CEB EE               [12] 3311 	mov	a,r6
      000CEC A3               [24] 3312 	inc	dptr
      000CED F0               [24] 3313 	movx	@dptr,a
      000CEE EF               [12] 3314 	mov	a,r7
      000CEF A3               [24] 3315 	inc	dptr
      000CF0 F0               [24] 3316 	movx	@dptr,a
      000CF1                       3317 00119$:
                           000CF1  3318 	C$ff.c$1147$1_0$62 ==.
                                   3319 ;	FATFS\src\ff.c:1147: dp->clust = clst;	/* Current cluster# */
      000CF1 90r00r4B         [24] 3320 	mov	dptr,#_dir_sdi_dp_65536_61
      000CF4 E0               [24] 3321 	movx	a,@dptr
      000CF5 FD               [12] 3322 	mov	r5,a
      000CF6 A3               [24] 3323 	inc	dptr
      000CF7 E0               [24] 3324 	movx	a,@dptr
      000CF8 FE               [12] 3325 	mov	r6,a
      000CF9 A3               [24] 3326 	inc	dptr
      000CFA E0               [24] 3327 	movx	a,@dptr
      000CFB FF               [12] 3328 	mov	r7,a
      000CFC 74 0B            [12] 3329 	mov	a,#0x0b
      000CFE 2D               [12] 3330 	add	a,r5
      000CFF F5*18            [12] 3331 	mov	_dir_sdi_sloc0_1_0,a
      000D01 E4               [12] 3332 	clr	a
      000D02 3E               [12] 3333 	addc	a,r6
      000D03 F5*19            [12] 3334 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      000D05 8F*1A            [24] 3335 	mov	(_dir_sdi_sloc0_1_0 + 2),r7
      000D07 90r00r4E         [24] 3336 	mov	dptr,#_dir_sdi_clst_65536_62
      000D0A E0               [24] 3337 	movx	a,@dptr
      000D0B F8               [12] 3338 	mov	r0,a
      000D0C A3               [24] 3339 	inc	dptr
      000D0D E0               [24] 3340 	movx	a,@dptr
      000D0E FB               [12] 3341 	mov	r3,a
      000D0F A3               [24] 3342 	inc	dptr
      000D10 E0               [24] 3343 	movx	a,@dptr
      000D11 F9               [12] 3344 	mov	r1,a
      000D12 A3               [24] 3345 	inc	dptr
      000D13 E0               [24] 3346 	movx	a,@dptr
      000D14 FC               [12] 3347 	mov	r4,a
      000D15 85*18 82         [24] 3348 	mov	dpl,_dir_sdi_sloc0_1_0
      000D18 85*19 83         [24] 3349 	mov	dph,(_dir_sdi_sloc0_1_0 + 1)
      000D1B 85*1A F0         [24] 3350 	mov	b,(_dir_sdi_sloc0_1_0 + 2)
      000D1E E8               [12] 3351 	mov	a,r0
      000D1F 12r00r00         [24] 3352 	lcall	__gptrput
      000D22 A3               [24] 3353 	inc	dptr
      000D23 EB               [12] 3354 	mov	a,r3
      000D24 12r00r00         [24] 3355 	lcall	__gptrput
      000D27 A3               [24] 3356 	inc	dptr
      000D28 E9               [12] 3357 	mov	a,r1
      000D29 12r00r00         [24] 3358 	lcall	__gptrput
      000D2C A3               [24] 3359 	inc	dptr
      000D2D EC               [12] 3360 	mov	a,r4
      000D2E 12r00r00         [24] 3361 	lcall	__gptrput
                           000D31  3362 	C$ff.c$1148$1_0$62 ==.
                                   3363 ;	FATFS\src\ff.c:1148: if (!sect) return FR_INT_ERR;
      000D31 90r00r52         [24] 3364 	mov	dptr,#_dir_sdi_sect_65536_62
      000D34 E0               [24] 3365 	movx	a,@dptr
      000D35 F5*18            [12] 3366 	mov	_dir_sdi_sloc0_1_0,a
      000D37 A3               [24] 3367 	inc	dptr
      000D38 E0               [24] 3368 	movx	a,@dptr
      000D39 F5*19            [12] 3369 	mov	(_dir_sdi_sloc0_1_0 + 1),a
      000D3B A3               [24] 3370 	inc	dptr
      000D3C E0               [24] 3371 	movx	a,@dptr
      000D3D F5*1A            [12] 3372 	mov	(_dir_sdi_sloc0_1_0 + 2),a
      000D3F A3               [24] 3373 	inc	dptr
      000D40 E0               [24] 3374 	movx	a,@dptr
      000D41 F5*1B            [12] 3375 	mov	(_dir_sdi_sloc0_1_0 + 3),a
      000D43 90r00r52         [24] 3376 	mov	dptr,#_dir_sdi_sect_65536_62
      000D46 E0               [24] 3377 	movx	a,@dptr
      000D47 F5 F0            [12] 3378 	mov	b,a
      000D49 A3               [24] 3379 	inc	dptr
      000D4A E0               [24] 3380 	movx	a,@dptr
      000D4B 42 F0            [12] 3381 	orl	b,a
      000D4D A3               [24] 3382 	inc	dptr
      000D4E E0               [24] 3383 	movx	a,@dptr
      000D4F 42 F0            [12] 3384 	orl	b,a
      000D51 A3               [24] 3385 	inc	dptr
      000D52 E0               [24] 3386 	movx	a,@dptr
      000D53 45 F0            [12] 3387 	orl	a,b
      000D55 70 06            [24] 3388 	jnz	00121$
      000D57 75 82 02         [24] 3389 	mov	dpl,#0x02
      000D5A 02r00r00         [24] 3390 	ljmp	__sdcc_banked_ret
      000D5D                       3391 00121$:
                           000D5D  3392 	C$ff.c$1149$1_0$62 ==.
                                   3393 ;	FATFS\src\ff.c:1149: dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
      000D5D 74 0F            [12] 3394 	mov	a,#0x0f
      000D5F 2D               [12] 3395 	add	a,r5
      000D60 F5*1E            [12] 3396 	mov	_dir_sdi_sloc2_1_0,a
      000D62 E4               [12] 3397 	clr	a
      000D63 3E               [12] 3398 	addc	a,r6
      000D64 F5*1F            [12] 3399 	mov	(_dir_sdi_sloc2_1_0 + 1),a
      000D66 8F*20            [24] 3400 	mov	(_dir_sdi_sloc2_1_0 + 2),r7
      000D68 90r00r49         [24] 3401 	mov	dptr,#_dir_sdi_PARM_2
      000D6B E0               [24] 3402 	movx	a,@dptr
      000D6C F5*1C            [12] 3403 	mov	_dir_sdi_sloc1_1_0,a
      000D6E A3               [24] 3404 	inc	dptr
      000D6F E0               [24] 3405 	movx	a,@dptr
      000D70 F5*1D            [12] 3406 	mov	(_dir_sdi_sloc1_1_0 + 1),a
      000D72 AC*1C            [24] 3407 	mov	r4,_dir_sdi_sloc1_1_0
      000D74 C4               [12] 3408 	swap	a
      000D75 CC               [12] 3409 	xch	a,r4
      000D76 C4               [12] 3410 	swap	a
      000D77 54 0F            [12] 3411 	anl	a,#0x0f
      000D79 6C               [12] 3412 	xrl	a,r4
      000D7A CC               [12] 3413 	xch	a,r4
      000D7B 54 0F            [12] 3414 	anl	a,#0x0f
      000D7D CC               [12] 3415 	xch	a,r4
      000D7E 6C               [12] 3416 	xrl	a,r4
      000D7F CC               [12] 3417 	xch	a,r4
      000D80 FB               [12] 3418 	mov	r3,a
      000D81 8C 00            [24] 3419 	mov	ar0,r4
      000D83 E4               [12] 3420 	clr	a
      000D84 FA               [12] 3421 	mov	r2,a
      000D85 FC               [12] 3422 	mov	r4,a
      000D86 E8               [12] 3423 	mov	a,r0
      000D87 25*18            [12] 3424 	add	a,_dir_sdi_sloc0_1_0
      000D89 F8               [12] 3425 	mov	r0,a
      000D8A EB               [12] 3426 	mov	a,r3
      000D8B 35*19            [12] 3427 	addc	a,(_dir_sdi_sloc0_1_0 + 1)
      000D8D FB               [12] 3428 	mov	r3,a
      000D8E EA               [12] 3429 	mov	a,r2
      000D8F 35*1A            [12] 3430 	addc	a,(_dir_sdi_sloc0_1_0 + 2)
      000D91 FA               [12] 3431 	mov	r2,a
      000D92 EC               [12] 3432 	mov	a,r4
      000D93 35*1B            [12] 3433 	addc	a,(_dir_sdi_sloc0_1_0 + 3)
      000D95 FC               [12] 3434 	mov	r4,a
      000D96 85*1E 82         [24] 3435 	mov	dpl,_dir_sdi_sloc2_1_0
      000D99 85*1F 83         [24] 3436 	mov	dph,(_dir_sdi_sloc2_1_0 + 1)
      000D9C 85*20 F0         [24] 3437 	mov	b,(_dir_sdi_sloc2_1_0 + 2)
      000D9F E8               [12] 3438 	mov	a,r0
      000DA0 12r00r00         [24] 3439 	lcall	__gptrput
      000DA3 A3               [24] 3440 	inc	dptr
      000DA4 EB               [12] 3441 	mov	a,r3
      000DA5 12r00r00         [24] 3442 	lcall	__gptrput
      000DA8 A3               [24] 3443 	inc	dptr
      000DA9 EA               [12] 3444 	mov	a,r2
      000DAA 12r00r00         [24] 3445 	lcall	__gptrput
      000DAD A3               [24] 3446 	inc	dptr
      000DAE EC               [12] 3447 	mov	a,r4
      000DAF 12r00r00         [24] 3448 	lcall	__gptrput
                           000DB2  3449 	C$ff.c$1150$1_0$62 ==.
                                   3450 ;	FATFS\src\ff.c:1150: dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
      000DB2 74 13            [12] 3451 	mov	a,#0x13
      000DB4 2D               [12] 3452 	add	a,r5
      000DB5 FA               [12] 3453 	mov	r2,a
      000DB6 E4               [12] 3454 	clr	a
      000DB7 3E               [12] 3455 	addc	a,r6
      000DB8 FB               [12] 3456 	mov	r3,a
      000DB9 8F 04            [24] 3457 	mov	ar4,r7
      000DBB 8D 82            [24] 3458 	mov	dpl,r5
      000DBD 8E 83            [24] 3459 	mov	dph,r6
      000DBF 8F F0            [24] 3460 	mov	b,r7
      000DC1 12r00r00         [24] 3461 	lcall	__gptrget
      000DC4 FD               [12] 3462 	mov	r5,a
      000DC5 A3               [24] 3463 	inc	dptr
      000DC6 12r00r00         [24] 3464 	lcall	__gptrget
      000DC9 FE               [12] 3465 	mov	r6,a
      000DCA A3               [24] 3466 	inc	dptr
      000DCB 12r00r00         [24] 3467 	lcall	__gptrget
      000DCE FF               [12] 3468 	mov	r7,a
      000DCF 74 26            [12] 3469 	mov	a,#0x26
      000DD1 2D               [12] 3470 	add	a,r5
      000DD2 FD               [12] 3471 	mov	r5,a
      000DD3 E4               [12] 3472 	clr	a
      000DD4 3E               [12] 3473 	addc	a,r6
      000DD5 FE               [12] 3474 	mov	r6,a
      000DD6 74 0F            [12] 3475 	mov	a,#0x0f
      000DD8 55*1C            [12] 3476 	anl	a,_dir_sdi_sloc1_1_0
      000DDA F8               [12] 3477 	mov	r0,a
      000DDB E4               [12] 3478 	clr	a
      000DDC 23               [12] 3479 	rl	a
      000DDD 54 E0            [12] 3480 	anl	a,#0xe0
      000DDF C8               [12] 3481 	xch	a,r0
      000DE0 C4               [12] 3482 	swap	a
      000DE1 23               [12] 3483 	rl	a
      000DE2 C8               [12] 3484 	xch	a,r0
      000DE3 68               [12] 3485 	xrl	a,r0
      000DE4 C8               [12] 3486 	xch	a,r0
      000DE5 54 E0            [12] 3487 	anl	a,#0xe0
      000DE7 C8               [12] 3488 	xch	a,r0
      000DE8 68               [12] 3489 	xrl	a,r0
      000DE9 F9               [12] 3490 	mov	r1,a
      000DEA E8               [12] 3491 	mov	a,r0
      000DEB 2D               [12] 3492 	add	a,r5
      000DEC FD               [12] 3493 	mov	r5,a
      000DED E9               [12] 3494 	mov	a,r1
      000DEE 3E               [12] 3495 	addc	a,r6
      000DEF FE               [12] 3496 	mov	r6,a
      000DF0 8A 82            [24] 3497 	mov	dpl,r2
      000DF2 8B 83            [24] 3498 	mov	dph,r3
      000DF4 8C F0            [24] 3499 	mov	b,r4
      000DF6 ED               [12] 3500 	mov	a,r5
      000DF7 12r00r00         [24] 3501 	lcall	__gptrput
      000DFA A3               [24] 3502 	inc	dptr
      000DFB EE               [12] 3503 	mov	a,r6
      000DFC 12r00r00         [24] 3504 	lcall	__gptrput
      000DFF A3               [24] 3505 	inc	dptr
      000E00 EF               [12] 3506 	mov	a,r7
      000E01 12r00r00         [24] 3507 	lcall	__gptrput
                           000E04  3508 	C$ff.c$1152$1_0$62 ==.
                                   3509 ;	FATFS\src\ff.c:1152: return FR_OK;
      000E04 75 82 00         [24] 3510 	mov	dpl,#0x00
                           000E07  3511 	C$ff.c$1153$1_0$62 ==.
                                   3512 ;	FATFS\src\ff.c:1153: }
                           000E07  3513 	C$ff.c$1153$1_0$62 ==.
                           000E07  3514 	XFff$dir_sdi$0$0 ==.
      000E07 02r00r00         [24] 3515 	ljmp	__sdcc_banked_ret
                                   3516 ;------------------------------------------------------------
                                   3517 ;Allocation info for local variables in function 'dir_next'
                                   3518 ;------------------------------------------------------------
                                   3519 ;sloc0                     Allocated with name '_dir_next_sloc0_1_0'
                                   3520 ;sloc1                     Allocated with name '_dir_next_sloc1_1_0'
                                   3521 ;sloc2                     Allocated with name '_dir_next_sloc2_1_0'
                                   3522 ;sloc3                     Allocated with name '_dir_next_sloc3_1_0'
                                   3523 ;sloc4                     Allocated with name '_dir_next_sloc4_1_0'
                                   3524 ;stretch                   Allocated with name '_dir_next_PARM_2'
                                   3525 ;dp                        Allocated with name '_dir_next_dp_65536_66'
                                   3526 ;clst                      Allocated with name '_dir_next_clst_65536_67'
                                   3527 ;i                         Allocated with name '_dir_next_i_65536_67'
                                   3528 ;------------------------------------------------------------
                           000E0A  3529 	Fff$dir_next$0$0 ==.
                           000E0A  3530 	C$ff.c$1163$1_0$67 ==.
                                   3531 ;	FATFS\src\ff.c:1163: FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
                                   3532 ;	-----------------------------------------
                                   3533 ;	 function dir_next
                                   3534 ;	-----------------------------------------
      000E0A                       3535 _dir_next:
      000E0A AF F0            [24] 3536 	mov	r7,b
      000E0C AE 83            [24] 3537 	mov	r6,dph
      000E0E E5 82            [12] 3538 	mov	a,dpl
      000E10 90r00r58         [24] 3539 	mov	dptr,#_dir_next_dp_65536_66
      000E13 F0               [24] 3540 	movx	@dptr,a
      000E14 EE               [12] 3541 	mov	a,r6
      000E15 A3               [24] 3542 	inc	dptr
      000E16 F0               [24] 3543 	movx	@dptr,a
      000E17 EF               [12] 3544 	mov	a,r7
      000E18 A3               [24] 3545 	inc	dptr
      000E19 F0               [24] 3546 	movx	@dptr,a
                           000E1A  3547 	C$ff.c$1172$1_0$67 ==.
                                   3548 ;	FATFS\src\ff.c:1172: i = dp->index + 1;
      000E1A 90r00r58         [24] 3549 	mov	dptr,#_dir_next_dp_65536_66
      000E1D E0               [24] 3550 	movx	a,@dptr
      000E1E FD               [12] 3551 	mov	r5,a
      000E1F A3               [24] 3552 	inc	dptr
      000E20 E0               [24] 3553 	movx	a,@dptr
      000E21 FE               [12] 3554 	mov	r6,a
      000E22 A3               [24] 3555 	inc	dptr
      000E23 E0               [24] 3556 	movx	a,@dptr
      000E24 FF               [12] 3557 	mov	r7,a
      000E25 74 05            [12] 3558 	mov	a,#0x05
      000E27 2D               [12] 3559 	add	a,r5
      000E28 FA               [12] 3560 	mov	r2,a
      000E29 E4               [12] 3561 	clr	a
      000E2A 3E               [12] 3562 	addc	a,r6
      000E2B FB               [12] 3563 	mov	r3,a
      000E2C 8F 04            [24] 3564 	mov	ar4,r7
      000E2E 8A 82            [24] 3565 	mov	dpl,r2
      000E30 8B 83            [24] 3566 	mov	dph,r3
      000E32 8C F0            [24] 3567 	mov	b,r4
      000E34 12r00r00         [24] 3568 	lcall	__gptrget
      000E37 FA               [12] 3569 	mov	r2,a
      000E38 A3               [24] 3570 	inc	dptr
      000E39 12r00r00         [24] 3571 	lcall	__gptrget
      000E3C FB               [12] 3572 	mov	r3,a
      000E3D 74 01            [12] 3573 	mov	a,#0x01
      000E3F 2A               [12] 3574 	add	a,r2
      000E40 FC               [12] 3575 	mov	r4,a
      000E41 E4               [12] 3576 	clr	a
      000E42 3B               [12] 3577 	addc	a,r3
                           000E43  3578 	C$ff.c$1173$1_0$67 ==.
                                   3579 ;	FATFS\src\ff.c:1173: if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
      000E43 FB               [12] 3580 	mov	r3,a
      000E44 4C               [12] 3581 	orl	a,r4
      000E45 60 35            [24] 3582 	jz	00101$
      000E47 74 0F            [12] 3583 	mov	a,#0x0f
      000E49 2D               [12] 3584 	add	a,r5
      000E4A F5*27            [12] 3585 	mov	_dir_next_sloc2_1_0,a
      000E4C E4               [12] 3586 	clr	a
      000E4D 3E               [12] 3587 	addc	a,r6
      000E4E F5*28            [12] 3588 	mov	(_dir_next_sloc2_1_0 + 1),a
      000E50 8F*29            [24] 3589 	mov	(_dir_next_sloc2_1_0 + 2),r7
      000E52 85*27 82         [24] 3590 	mov	dpl,_dir_next_sloc2_1_0
      000E55 85*28 83         [24] 3591 	mov	dph,(_dir_next_sloc2_1_0 + 1)
      000E58 85*29 F0         [24] 3592 	mov	b,(_dir_next_sloc2_1_0 + 2)
      000E5B 12r00r00         [24] 3593 	lcall	__gptrget
      000E5E F5*21            [12] 3594 	mov	_dir_next_sloc0_1_0,a
      000E60 A3               [24] 3595 	inc	dptr
      000E61 12r00r00         [24] 3596 	lcall	__gptrget
      000E64 F5*22            [12] 3597 	mov	(_dir_next_sloc0_1_0 + 1),a
      000E66 A3               [24] 3598 	inc	dptr
      000E67 12r00r00         [24] 3599 	lcall	__gptrget
      000E6A F5*23            [12] 3600 	mov	(_dir_next_sloc0_1_0 + 2),a
      000E6C A3               [24] 3601 	inc	dptr
      000E6D 12r00r00         [24] 3602 	lcall	__gptrget
      000E70 F5*24            [12] 3603 	mov	(_dir_next_sloc0_1_0 + 3),a
      000E72 E5*21            [12] 3604 	mov	a,_dir_next_sloc0_1_0
      000E74 45*22            [12] 3605 	orl	a,(_dir_next_sloc0_1_0 + 1)
      000E76 45*23            [12] 3606 	orl	a,(_dir_next_sloc0_1_0 + 2)
      000E78 45*24            [12] 3607 	orl	a,(_dir_next_sloc0_1_0 + 3)
      000E7A 70 06            [24] 3608 	jnz	00102$
      000E7C                       3609 00101$:
                           000E7C  3610 	C$ff.c$1174$1_0$67 ==.
                                   3611 ;	FATFS\src\ff.c:1174: return FR_NO_FILE;
      000E7C 75 82 04         [24] 3612 	mov	dpl,#0x04
      000E7F 02r00r00         [24] 3613 	ljmp	__sdcc_banked_ret
      000E82                       3614 00102$:
                           000E82  3615 	C$ff.c$1176$1_0$67 ==.
                                   3616 ;	FATFS\src\ff.c:1176: if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
      000E82 74 0F            [12] 3617 	mov	a,#0x0f
      000E84 5C               [12] 3618 	anl	a,r4
      000E85 F5*25            [12] 3619 	mov	_dir_next_sloc1_1_0,a
      000E87 75*26 00         [24] 3620 	mov	(_dir_next_sloc1_1_0 + 1),#0x00
      000E8A 45*26            [12] 3621 	orl	a,(_dir_next_sloc1_1_0 + 1)
      000E8C 60 03            [24] 3622 	jz	00161$
      000E8E 02r10rDD         [24] 3623 	ljmp	00120$
      000E91                       3624 00161$:
                           000E91  3625 	C$ff.c$1177$1_0$67 ==.
                                   3626 ;	FATFS\src\ff.c:1177: dp->sect++;					/* Next sector */
      000E91 C0 04            [24] 3627 	push	ar4
      000E93 C0 03            [24] 3628 	push	ar3
      000E95 74 01            [12] 3629 	mov	a,#0x01
      000E97 25*21            [12] 3630 	add	a,_dir_next_sloc0_1_0
      000E99 FB               [12] 3631 	mov	r3,a
      000E9A E4               [12] 3632 	clr	a
      000E9B 35*22            [12] 3633 	addc	a,(_dir_next_sloc0_1_0 + 1)
      000E9D F9               [12] 3634 	mov	r1,a
      000E9E E4               [12] 3635 	clr	a
      000E9F 35*23            [12] 3636 	addc	a,(_dir_next_sloc0_1_0 + 2)
      000EA1 FA               [12] 3637 	mov	r2,a
      000EA2 E4               [12] 3638 	clr	a
      000EA3 35*24            [12] 3639 	addc	a,(_dir_next_sloc0_1_0 + 3)
      000EA5 FC               [12] 3640 	mov	r4,a
      000EA6 85*27 82         [24] 3641 	mov	dpl,_dir_next_sloc2_1_0
      000EA9 85*28 83         [24] 3642 	mov	dph,(_dir_next_sloc2_1_0 + 1)
      000EAC 85*29 F0         [24] 3643 	mov	b,(_dir_next_sloc2_1_0 + 2)
      000EAF EB               [12] 3644 	mov	a,r3
      000EB0 12r00r00         [24] 3645 	lcall	__gptrput
      000EB3 A3               [24] 3646 	inc	dptr
      000EB4 E9               [12] 3647 	mov	a,r1
      000EB5 12r00r00         [24] 3648 	lcall	__gptrput
      000EB8 A3               [24] 3649 	inc	dptr
      000EB9 EA               [12] 3650 	mov	a,r2
      000EBA 12r00r00         [24] 3651 	lcall	__gptrput
      000EBD A3               [24] 3652 	inc	dptr
      000EBE EC               [12] 3653 	mov	a,r4
      000EBF 12r00r00         [24] 3654 	lcall	__gptrput
                           000EC2  3655 	C$ff.c$1179$2_0$68 ==.
                                   3656 ;	FATFS\src\ff.c:1179: if (!dp->clust) {		/* Static table */
      000EC2 74 0B            [12] 3657 	mov	a,#0x0b
      000EC4 2D               [12] 3658 	add	a,r5
      000EC5 F5*21            [12] 3659 	mov	_dir_next_sloc0_1_0,a
      000EC7 E4               [12] 3660 	clr	a
      000EC8 3E               [12] 3661 	addc	a,r6
      000EC9 F5*22            [12] 3662 	mov	(_dir_next_sloc0_1_0 + 1),a
      000ECB 8F*23            [24] 3663 	mov	(_dir_next_sloc0_1_0 + 2),r7
      000ECD 85*21 82         [24] 3664 	mov	dpl,_dir_next_sloc0_1_0
      000ED0 85*22 83         [24] 3665 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      000ED3 85*23 F0         [24] 3666 	mov	b,(_dir_next_sloc0_1_0 + 2)
      000ED6 12r00r00         [24] 3667 	lcall	__gptrget
      000ED9 F5*2A            [12] 3668 	mov	_dir_next_sloc3_1_0,a
      000EDB A3               [24] 3669 	inc	dptr
      000EDC 12r00r00         [24] 3670 	lcall	__gptrget
      000EDF F5*2B            [12] 3671 	mov	(_dir_next_sloc3_1_0 + 1),a
      000EE1 A3               [24] 3672 	inc	dptr
      000EE2 12r00r00         [24] 3673 	lcall	__gptrget
      000EE5 F5*2C            [12] 3674 	mov	(_dir_next_sloc3_1_0 + 2),a
      000EE7 A3               [24] 3675 	inc	dptr
      000EE8 12r00r00         [24] 3676 	lcall	__gptrget
      000EEB F5*2D            [12] 3677 	mov	(_dir_next_sloc3_1_0 + 3),a
      000EED D0 03            [24] 3678 	pop	ar3
      000EEF D0 04            [24] 3679 	pop	ar4
      000EF1 E5*2A            [12] 3680 	mov	a,_dir_next_sloc3_1_0
      000EF3 45*2B            [12] 3681 	orl	a,(_dir_next_sloc3_1_0 + 1)
      000EF5 45*2C            [12] 3682 	orl	a,(_dir_next_sloc3_1_0 + 2)
      000EF7 45*2D            [12] 3683 	orl	a,(_dir_next_sloc3_1_0 + 3)
      000EF9 70 3A            [24] 3684 	jnz	00117$
                           000EFB  3685 	C$ff.c$1180$3_0$69 ==.
                                   3686 ;	FATFS\src\ff.c:1180: if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
      000EFB 8D 82            [24] 3687 	mov	dpl,r5
      000EFD 8E 83            [24] 3688 	mov	dph,r6
      000EFF 8F F0            [24] 3689 	mov	b,r7
      000F01 12r00r00         [24] 3690 	lcall	__gptrget
      000F04 F8               [12] 3691 	mov	r0,a
      000F05 A3               [24] 3692 	inc	dptr
      000F06 12r00r00         [24] 3693 	lcall	__gptrget
      000F09 F9               [12] 3694 	mov	r1,a
      000F0A A3               [24] 3695 	inc	dptr
      000F0B 12r00r00         [24] 3696 	lcall	__gptrget
      000F0E FA               [12] 3697 	mov	r2,a
      000F0F 74 08            [12] 3698 	mov	a,#0x08
      000F11 28               [12] 3699 	add	a,r0
      000F12 F8               [12] 3700 	mov	r0,a
      000F13 E4               [12] 3701 	clr	a
      000F14 39               [12] 3702 	addc	a,r1
      000F15 F9               [12] 3703 	mov	r1,a
      000F16 88 82            [24] 3704 	mov	dpl,r0
      000F18 89 83            [24] 3705 	mov	dph,r1
      000F1A 8A F0            [24] 3706 	mov	b,r2
      000F1C 12r00r00         [24] 3707 	lcall	__gptrget
      000F1F F8               [12] 3708 	mov	r0,a
      000F20 A3               [24] 3709 	inc	dptr
      000F21 12r00r00         [24] 3710 	lcall	__gptrget
      000F24 F9               [12] 3711 	mov	r1,a
      000F25 C3               [12] 3712 	clr	c
      000F26 EC               [12] 3713 	mov	a,r4
      000F27 98               [12] 3714 	subb	a,r0
      000F28 EB               [12] 3715 	mov	a,r3
      000F29 99               [12] 3716 	subb	a,r1
      000F2A 50 03            [24] 3717 	jnc	00163$
      000F2C 02r10rDD         [24] 3718 	ljmp	00120$
      000F2F                       3719 00163$:
                           000F2F  3720 	C$ff.c$1181$3_0$69 ==.
                                   3721 ;	FATFS\src\ff.c:1181: return FR_NO_FILE;
      000F2F 75 82 04         [24] 3722 	mov	dpl,#0x04
      000F32 02r00r00         [24] 3723 	ljmp	__sdcc_banked_ret
      000F35                       3724 00117$:
                           000F35  3725 	C$ff.c$1184$3_0$70 ==.
                                   3726 ;	FATFS\src\ff.c:1184: if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
      000F35 8C 01            [24] 3727 	mov	ar1,r4
      000F37 EB               [12] 3728 	mov	a,r3
      000F38 C4               [12] 3729 	swap	a
      000F39 C9               [12] 3730 	xch	a,r1
      000F3A C4               [12] 3731 	swap	a
      000F3B 54 0F            [12] 3732 	anl	a,#0x0f
      000F3D 69               [12] 3733 	xrl	a,r1
      000F3E C9               [12] 3734 	xch	a,r1
      000F3F 54 0F            [12] 3735 	anl	a,#0x0f
      000F41 C9               [12] 3736 	xch	a,r1
      000F42 69               [12] 3737 	xrl	a,r1
      000F43 C9               [12] 3738 	xch	a,r1
      000F44 FA               [12] 3739 	mov	r2,a
      000F45 8D 82            [24] 3740 	mov	dpl,r5
      000F47 8E 83            [24] 3741 	mov	dph,r6
      000F49 8F F0            [24] 3742 	mov	b,r7
      000F4B 12r00r00         [24] 3743 	lcall	__gptrget
      000F4E F5*2E            [12] 3744 	mov	_dir_next_sloc4_1_0,a
      000F50 A3               [24] 3745 	inc	dptr
      000F51 12r00r00         [24] 3746 	lcall	__gptrget
      000F54 F5*2F            [12] 3747 	mov	(_dir_next_sloc4_1_0 + 1),a
      000F56 A3               [24] 3748 	inc	dptr
      000F57 12r00r00         [24] 3749 	lcall	__gptrget
      000F5A F5*30            [12] 3750 	mov	(_dir_next_sloc4_1_0 + 2),a
      000F5C C0 04            [24] 3751 	push	ar4
      000F5E C0 03            [24] 3752 	push	ar3
      000F60 74 02            [12] 3753 	mov	a,#0x02
      000F62 25*2E            [12] 3754 	add	a,_dir_next_sloc4_1_0
      000F64 F8               [12] 3755 	mov	r0,a
      000F65 E4               [12] 3756 	clr	a
      000F66 35*2F            [12] 3757 	addc	a,(_dir_next_sloc4_1_0 + 1)
      000F68 FB               [12] 3758 	mov	r3,a
      000F69 AC*30            [24] 3759 	mov	r4,(_dir_next_sloc4_1_0 + 2)
      000F6B 88 82            [24] 3760 	mov	dpl,r0
      000F6D 8B 83            [24] 3761 	mov	dph,r3
      000F6F 8C F0            [24] 3762 	mov	b,r4
      000F71 12r00r00         [24] 3763 	lcall	__gptrget
      000F74 F8               [12] 3764 	mov	r0,a
      000F75 7C 00            [12] 3765 	mov	r4,#0x00
      000F77 18               [12] 3766 	dec	r0
      000F78 B8 FF 01         [24] 3767 	cjne	r0,#0xff,00164$
      000F7B 1C               [12] 3768 	dec	r4
      000F7C                       3769 00164$:
      000F7C E8               [12] 3770 	mov	a,r0
      000F7D 52 01            [12] 3771 	anl	ar1,a
      000F7F EC               [12] 3772 	mov	a,r4
      000F80 52 02            [12] 3773 	anl	ar2,a
      000F82 D0 03            [24] 3774 	pop	ar3
      000F84 D0 04            [24] 3775 	pop	ar4
      000F86 E9               [12] 3776 	mov	a,r1
      000F87 4A               [12] 3777 	orl	a,r2
      000F88 60 03            [24] 3778 	jz	00165$
      000F8A 02r10rDD         [24] 3779 	ljmp	00120$
      000F8D                       3780 00165$:
                           000F8D  3781 	C$ff.c$1185$4_0$71 ==.
                                   3782 ;	FATFS\src\ff.c:1185: clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
      000F8D 90r00r34         [24] 3783 	mov	dptr,#_get_fat_PARM_2
      000F90 E5*2A            [12] 3784 	mov	a,_dir_next_sloc3_1_0
      000F92 F0               [24] 3785 	movx	@dptr,a
      000F93 E5*2B            [12] 3786 	mov	a,(_dir_next_sloc3_1_0 + 1)
      000F95 A3               [24] 3787 	inc	dptr
      000F96 F0               [24] 3788 	movx	@dptr,a
      000F97 E5*2C            [12] 3789 	mov	a,(_dir_next_sloc3_1_0 + 2)
      000F99 A3               [24] 3790 	inc	dptr
      000F9A F0               [24] 3791 	movx	@dptr,a
      000F9B E5*2D            [12] 3792 	mov	a,(_dir_next_sloc3_1_0 + 3)
      000F9D A3               [24] 3793 	inc	dptr
      000F9E F0               [24] 3794 	movx	@dptr,a
      000F9F 85*2E 82         [24] 3795 	mov	dpl,_dir_next_sloc4_1_0
      000FA2 85*2F 83         [24] 3796 	mov	dph,(_dir_next_sloc4_1_0 + 1)
      000FA5 85*30 F0         [24] 3797 	mov	b,(_dir_next_sloc4_1_0 + 2)
      000FA8 C0 07            [24] 3798 	push	ar7
      000FAA C0 06            [24] 3799 	push	ar6
      000FAC C0 05            [24] 3800 	push	ar5
      000FAE C0 04            [24] 3801 	push	ar4
      000FB0 C0 03            [24] 3802 	push	ar3
      000FB2 78rA5            [12] 3803 	mov	r0,#_get_fat
      000FB4 79s03            [12] 3804 	mov	r1,#(_get_fat >> 8)
      000FB6 7As00            [12] 3805 	mov	r2,#(_get_fat >> 16)
      000FB8 12r00r00         [24] 3806 	lcall	__sdcc_banked_call
      000FBB 85 82*2A         [24] 3807 	mov	_dir_next_sloc3_1_0,dpl
      000FBE 85 83*2B         [24] 3808 	mov	(_dir_next_sloc3_1_0 + 1),dph
      000FC1 85 F0*2C         [24] 3809 	mov	(_dir_next_sloc3_1_0 + 2),b
      000FC4 F5*2D            [12] 3810 	mov	(_dir_next_sloc3_1_0 + 3),a
      000FC6 D0 03            [24] 3811 	pop	ar3
      000FC8 D0 04            [24] 3812 	pop	ar4
      000FCA D0 05            [24] 3813 	pop	ar5
      000FCC D0 06            [24] 3814 	pop	ar6
      000FCE D0 07            [24] 3815 	pop	ar7
                           000FD0  3816 	C$ff.c$1186$4_0$71 ==.
                                   3817 ;	FATFS\src\ff.c:1186: if (clst <= 1) return FR_INT_ERR;
      000FD0 C3               [12] 3818 	clr	c
      000FD1 74 01            [12] 3819 	mov	a,#0x01
      000FD3 95*2A            [12] 3820 	subb	a,_dir_next_sloc3_1_0
      000FD5 E4               [12] 3821 	clr	a
      000FD6 95*2B            [12] 3822 	subb	a,(_dir_next_sloc3_1_0 + 1)
      000FD8 E4               [12] 3823 	clr	a
      000FD9 95*2C            [12] 3824 	subb	a,(_dir_next_sloc3_1_0 + 2)
      000FDB E4               [12] 3825 	clr	a
      000FDC 95*2D            [12] 3826 	subb	a,(_dir_next_sloc3_1_0 + 3)
      000FDE 40 06            [24] 3827 	jc	00107$
      000FE0 75 82 02         [24] 3828 	mov	dpl,#0x02
      000FE3 02r00r00         [24] 3829 	ljmp	__sdcc_banked_ret
      000FE6                       3830 00107$:
                           000FE6  3831 	C$ff.c$1187$4_0$71 ==.
                                   3832 ;	FATFS\src\ff.c:1187: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
      000FE6 74 FF            [12] 3833 	mov	a,#0xff
      000FE8 B5*2A 0F         [24] 3834 	cjne	a,_dir_next_sloc3_1_0,00109$
      000FEB B5*2B 0C         [24] 3835 	cjne	a,(_dir_next_sloc3_1_0 + 1),00109$
      000FEE B5*2C 09         [24] 3836 	cjne	a,(_dir_next_sloc3_1_0 + 2),00109$
      000FF1 B5*2D 06         [24] 3837 	cjne	a,(_dir_next_sloc3_1_0 + 3),00109$
      000FF4 75 82 01         [24] 3838 	mov	dpl,#0x01
      000FF7 02r00r00         [24] 3839 	ljmp	__sdcc_banked_ret
      000FFA                       3840 00109$:
                           000FFA  3841 	C$ff.c$1188$1_0$67 ==.
                                   3842 ;	FATFS\src\ff.c:1188: if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
      000FFA C0 04            [24] 3843 	push	ar4
      000FFC C0 03            [24] 3844 	push	ar3
      000FFE 8D 82            [24] 3845 	mov	dpl,r5
      001000 8E 83            [24] 3846 	mov	dph,r6
      001002 8F F0            [24] 3847 	mov	b,r7
      001004 12r00r00         [24] 3848 	lcall	__gptrget
      001007 F8               [12] 3849 	mov	r0,a
      001008 A3               [24] 3850 	inc	dptr
      001009 12r00r00         [24] 3851 	lcall	__gptrget
      00100C F9               [12] 3852 	mov	r1,a
      00100D A3               [24] 3853 	inc	dptr
      00100E 12r00r00         [24] 3854 	lcall	__gptrget
      001011 FA               [12] 3855 	mov	r2,a
      001012 74 0A            [12] 3856 	mov	a,#0x0a
      001014 28               [12] 3857 	add	a,r0
      001015 F8               [12] 3858 	mov	r0,a
      001016 E4               [12] 3859 	clr	a
      001017 39               [12] 3860 	addc	a,r1
      001018 F9               [12] 3861 	mov	r1,a
      001019 88 82            [24] 3862 	mov	dpl,r0
      00101B 89 83            [24] 3863 	mov	dph,r1
      00101D 8A F0            [24] 3864 	mov	b,r2
      00101F 12r00r00         [24] 3865 	lcall	__gptrget
      001022 F8               [12] 3866 	mov	r0,a
      001023 A3               [24] 3867 	inc	dptr
      001024 12r00r00         [24] 3868 	lcall	__gptrget
      001027 F9               [12] 3869 	mov	r1,a
      001028 A3               [24] 3870 	inc	dptr
      001029 12r00r00         [24] 3871 	lcall	__gptrget
      00102C FA               [12] 3872 	mov	r2,a
      00102D A3               [24] 3873 	inc	dptr
      00102E 12r00r00         [24] 3874 	lcall	__gptrget
      001031 FC               [12] 3875 	mov	r4,a
      001032 C3               [12] 3876 	clr	c
      001033 E5*2A            [12] 3877 	mov	a,_dir_next_sloc3_1_0
      001035 98               [12] 3878 	subb	a,r0
      001036 E5*2B            [12] 3879 	mov	a,(_dir_next_sloc3_1_0 + 1)
      001038 99               [12] 3880 	subb	a,r1
      001039 E5*2C            [12] 3881 	mov	a,(_dir_next_sloc3_1_0 + 2)
      00103B 9A               [12] 3882 	subb	a,r2
      00103C E5*2D            [12] 3883 	mov	a,(_dir_next_sloc3_1_0 + 3)
      00103E 9C               [12] 3884 	subb	a,r4
      00103F D0 03            [24] 3885 	pop	ar3
      001041 D0 04            [24] 3886 	pop	ar4
      001043 40 18            [24] 3887 	jc	00113$
                           001045  3888 	C$ff.c$1207$5_0$72 ==.
                                   3889 ;	FATFS\src\ff.c:1207: if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warning) */
      001045 90r00r56         [24] 3890 	mov	dptr,#_dir_next_PARM_2
      001048 E0               [24] 3891 	movx	a,@dptr
      001049 F5 F0            [12] 3892 	mov	b,a
      00104B A3               [24] 3893 	inc	dptr
      00104C E0               [24] 3894 	movx	a,@dptr
      00104D 45 F0            [12] 3895 	orl	a,b
      00104F 70 06            [24] 3896 	jnz	00111$
      001051 75 82 04         [24] 3897 	mov	dpl,#0x04
      001054 02r00r00         [24] 3898 	ljmp	__sdcc_banked_ret
      001057                       3899 00111$:
                           001057  3900 	C$ff.c$1208$5_0$72 ==.
                                   3901 ;	FATFS\src\ff.c:1208: return FR_NO_FILE;							/* Report EOT */
      001057 75 82 04         [24] 3902 	mov	dpl,#0x04
      00105A 02r00r00         [24] 3903 	ljmp	__sdcc_banked_ret
      00105D                       3904 00113$:
                           00105D  3905 	C$ff.c$1211$4_0$71 ==.
                                   3906 ;	FATFS\src\ff.c:1211: dp->clust = clst;				/* Initialize data for new cluster */
      00105D 85*21 82         [24] 3907 	mov	dpl,_dir_next_sloc0_1_0
      001060 85*22 83         [24] 3908 	mov	dph,(_dir_next_sloc0_1_0 + 1)
      001063 85*23 F0         [24] 3909 	mov	b,(_dir_next_sloc0_1_0 + 2)
      001066 E5*2A            [12] 3910 	mov	a,_dir_next_sloc3_1_0
      001068 12r00r00         [24] 3911 	lcall	__gptrput
      00106B A3               [24] 3912 	inc	dptr
      00106C E5*2B            [12] 3913 	mov	a,(_dir_next_sloc3_1_0 + 1)
      00106E 12r00r00         [24] 3914 	lcall	__gptrput
      001071 A3               [24] 3915 	inc	dptr
      001072 E5*2C            [12] 3916 	mov	a,(_dir_next_sloc3_1_0 + 2)
      001074 12r00r00         [24] 3917 	lcall	__gptrput
      001077 A3               [24] 3918 	inc	dptr
      001078 E5*2D            [12] 3919 	mov	a,(_dir_next_sloc3_1_0 + 3)
      00107A 12r00r00         [24] 3920 	lcall	__gptrput
                           00107D  3921 	C$ff.c$1212$4_0$71 ==.
                                   3922 ;	FATFS\src\ff.c:1212: dp->sect = clust2sect(dp->fs, clst);
      00107D 8D 82            [24] 3923 	mov	dpl,r5
      00107F 8E 83            [24] 3924 	mov	dph,r6
      001081 8F F0            [24] 3925 	mov	b,r7
      001083 12r00r00         [24] 3926 	lcall	__gptrget
      001086 FD               [12] 3927 	mov	r5,a
      001087 A3               [24] 3928 	inc	dptr
      001088 12r00r00         [24] 3929 	lcall	__gptrget
      00108B FE               [12] 3930 	mov	r6,a
      00108C A3               [24] 3931 	inc	dptr
      00108D 12r00r00         [24] 3932 	lcall	__gptrget
      001090 FF               [12] 3933 	mov	r7,a
      001091 90r00r2D         [24] 3934 	mov	dptr,#_clust2sect_PARM_2
      001094 E5*2A            [12] 3935 	mov	a,_dir_next_sloc3_1_0
      001096 F0               [24] 3936 	movx	@dptr,a
      001097 E5*2B            [12] 3937 	mov	a,(_dir_next_sloc3_1_0 + 1)
      001099 A3               [24] 3938 	inc	dptr
      00109A F0               [24] 3939 	movx	@dptr,a
      00109B E5*2C            [12] 3940 	mov	a,(_dir_next_sloc3_1_0 + 2)
      00109D A3               [24] 3941 	inc	dptr
      00109E F0               [24] 3942 	movx	@dptr,a
      00109F E5*2D            [12] 3943 	mov	a,(_dir_next_sloc3_1_0 + 3)
      0010A1 A3               [24] 3944 	inc	dptr
      0010A2 F0               [24] 3945 	movx	@dptr,a
      0010A3 8D 82            [24] 3946 	mov	dpl,r5
      0010A5 8E 83            [24] 3947 	mov	dph,r6
      0010A7 8F F0            [24] 3948 	mov	b,r7
      0010A9 C0 04            [24] 3949 	push	ar4
      0010AB C0 03            [24] 3950 	push	ar3
      0010AD 78r90            [12] 3951 	mov	r0,#_clust2sect
      0010AF 79s02            [12] 3952 	mov	r1,#(_clust2sect >> 8)
      0010B1 7As00            [12] 3953 	mov	r2,#(_clust2sect >> 16)
      0010B3 12r00r00         [24] 3954 	lcall	__sdcc_banked_call
      0010B6 AE 82            [24] 3955 	mov	r6,dpl
      0010B8 AD 83            [24] 3956 	mov	r5,dph
      0010BA AA F0            [24] 3957 	mov	r2,b
      0010BC FF               [12] 3958 	mov	r7,a
      0010BD D0 03            [24] 3959 	pop	ar3
      0010BF D0 04            [24] 3960 	pop	ar4
      0010C1 85*27 82         [24] 3961 	mov	dpl,_dir_next_sloc2_1_0
      0010C4 85*28 83         [24] 3962 	mov	dph,(_dir_next_sloc2_1_0 + 1)
      0010C7 85*29 F0         [24] 3963 	mov	b,(_dir_next_sloc2_1_0 + 2)
      0010CA EE               [12] 3964 	mov	a,r6
      0010CB 12r00r00         [24] 3965 	lcall	__gptrput
      0010CE A3               [24] 3966 	inc	dptr
      0010CF ED               [12] 3967 	mov	a,r5
      0010D0 12r00r00         [24] 3968 	lcall	__gptrput
      0010D3 A3               [24] 3969 	inc	dptr
      0010D4 EA               [12] 3970 	mov	a,r2
      0010D5 12r00r00         [24] 3971 	lcall	__gptrput
      0010D8 A3               [24] 3972 	inc	dptr
      0010D9 EF               [12] 3973 	mov	a,r7
      0010DA 12r00r00         [24] 3974 	lcall	__gptrput
      0010DD                       3975 00120$:
                           0010DD  3976 	C$ff.c$1217$1_0$67 ==.
                                   3977 ;	FATFS\src\ff.c:1217: dp->index = (WORD)i;	/* Current index */
      0010DD 90r00r58         [24] 3978 	mov	dptr,#_dir_next_dp_65536_66
      0010E0 E0               [24] 3979 	movx	a,@dptr
      0010E1 FD               [12] 3980 	mov	r5,a
      0010E2 A3               [24] 3981 	inc	dptr
      0010E3 E0               [24] 3982 	movx	a,@dptr
      0010E4 FE               [12] 3983 	mov	r6,a
      0010E5 A3               [24] 3984 	inc	dptr
      0010E6 E0               [24] 3985 	movx	a,@dptr
      0010E7 FF               [12] 3986 	mov	r7,a
      0010E8 74 05            [12] 3987 	mov	a,#0x05
      0010EA 2D               [12] 3988 	add	a,r5
      0010EB F8               [12] 3989 	mov	r0,a
      0010EC E4               [12] 3990 	clr	a
      0010ED 3E               [12] 3991 	addc	a,r6
      0010EE F9               [12] 3992 	mov	r1,a
      0010EF 8F 02            [24] 3993 	mov	ar2,r7
      0010F1 88 82            [24] 3994 	mov	dpl,r0
      0010F3 89 83            [24] 3995 	mov	dph,r1
      0010F5 8A F0            [24] 3996 	mov	b,r2
      0010F7 EC               [12] 3997 	mov	a,r4
      0010F8 12r00r00         [24] 3998 	lcall	__gptrput
      0010FB A3               [24] 3999 	inc	dptr
      0010FC EB               [12] 4000 	mov	a,r3
      0010FD 12r00r00         [24] 4001 	lcall	__gptrput
                           001100  4002 	C$ff.c$1218$1_0$67 ==.
                                   4003 ;	FATFS\src\ff.c:1218: dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
      001100 74 13            [12] 4004 	mov	a,#0x13
      001102 2D               [12] 4005 	add	a,r5
      001103 FA               [12] 4006 	mov	r2,a
      001104 E4               [12] 4007 	clr	a
      001105 3E               [12] 4008 	addc	a,r6
      001106 FB               [12] 4009 	mov	r3,a
      001107 8F 04            [24] 4010 	mov	ar4,r7
      001109 8D 82            [24] 4011 	mov	dpl,r5
      00110B 8E 83            [24] 4012 	mov	dph,r6
      00110D 8F F0            [24] 4013 	mov	b,r7
      00110F 12r00r00         [24] 4014 	lcall	__gptrget
      001112 FD               [12] 4015 	mov	r5,a
      001113 A3               [24] 4016 	inc	dptr
      001114 12r00r00         [24] 4017 	lcall	__gptrget
      001117 FE               [12] 4018 	mov	r6,a
      001118 A3               [24] 4019 	inc	dptr
      001119 12r00r00         [24] 4020 	lcall	__gptrget
      00111C FF               [12] 4021 	mov	r7,a
      00111D 74 26            [12] 4022 	mov	a,#0x26
      00111F 2D               [12] 4023 	add	a,r5
      001120 FD               [12] 4024 	mov	r5,a
      001121 E4               [12] 4025 	clr	a
      001122 3E               [12] 4026 	addc	a,r6
      001123 FE               [12] 4027 	mov	r6,a
      001124 A8*25            [24] 4028 	mov	r0,_dir_next_sloc1_1_0
      001126 E5*26            [12] 4029 	mov	a,(_dir_next_sloc1_1_0 + 1)
      001128 C4               [12] 4030 	swap	a
      001129 23               [12] 4031 	rl	a
      00112A 54 E0            [12] 4032 	anl	a,#0xe0
      00112C C8               [12] 4033 	xch	a,r0
      00112D C4               [12] 4034 	swap	a
      00112E 23               [12] 4035 	rl	a
      00112F C8               [12] 4036 	xch	a,r0
      001130 68               [12] 4037 	xrl	a,r0
      001131 C8               [12] 4038 	xch	a,r0
      001132 54 E0            [12] 4039 	anl	a,#0xe0
      001134 C8               [12] 4040 	xch	a,r0
      001135 68               [12] 4041 	xrl	a,r0
      001136 F9               [12] 4042 	mov	r1,a
      001137 E8               [12] 4043 	mov	a,r0
      001138 2D               [12] 4044 	add	a,r5
      001139 FD               [12] 4045 	mov	r5,a
      00113A E9               [12] 4046 	mov	a,r1
      00113B 3E               [12] 4047 	addc	a,r6
      00113C FE               [12] 4048 	mov	r6,a
      00113D 8A 82            [24] 4049 	mov	dpl,r2
      00113F 8B 83            [24] 4050 	mov	dph,r3
      001141 8C F0            [24] 4051 	mov	b,r4
      001143 ED               [12] 4052 	mov	a,r5
      001144 12r00r00         [24] 4053 	lcall	__gptrput
      001147 A3               [24] 4054 	inc	dptr
      001148 EE               [12] 4055 	mov	a,r6
      001149 12r00r00         [24] 4056 	lcall	__gptrput
      00114C A3               [24] 4057 	inc	dptr
      00114D EF               [12] 4058 	mov	a,r7
      00114E 12r00r00         [24] 4059 	lcall	__gptrput
                           001151  4060 	C$ff.c$1220$1_0$67 ==.
                                   4061 ;	FATFS\src\ff.c:1220: return FR_OK;
      001151 75 82 00         [24] 4062 	mov	dpl,#0x00
                           001154  4063 	C$ff.c$1221$1_0$67 ==.
                                   4064 ;	FATFS\src\ff.c:1221: }
                           001154  4065 	C$ff.c$1221$1_0$67 ==.
                           001154  4066 	XFff$dir_next$0$0 ==.
      001154 02r00r00         [24] 4067 	ljmp	__sdcc_banked_ret
                                   4068 ;------------------------------------------------------------
                                   4069 ;Allocation info for local variables in function 'ld_clust'
                                   4070 ;------------------------------------------------------------
                                   4071 ;dir                       Allocated with name '_ld_clust_PARM_2'
                                   4072 ;fs                        Allocated with name '_ld_clust_fs_65536_73'
                                   4073 ;cl                        Allocated with name '_ld_clust_cl_65536_74'
                                   4074 ;sloc0                     Allocated with name '_ld_clust_sloc0_1_0'
                                   4075 ;sloc1                     Allocated with name '_ld_clust_sloc1_1_0'
                                   4076 ;------------------------------------------------------------
                           001157  4077 	Fff$ld_clust$0$0 ==.
                           001157  4078 	C$ff.c$1268$1_0$74 ==.
                                   4079 ;	FATFS\src\ff.c:1268: DWORD ld_clust (
                                   4080 ;	-----------------------------------------
                                   4081 ;	 function ld_clust
                                   4082 ;	-----------------------------------------
      001157                       4083 _ld_clust:
      001157 AF F0            [24] 4084 	mov	r7,b
      001159 AE 83            [24] 4085 	mov	r6,dph
      00115B E5 82            [12] 4086 	mov	a,dpl
      00115D 90r00r5E         [24] 4087 	mov	dptr,#_ld_clust_fs_65536_73
      001160 F0               [24] 4088 	movx	@dptr,a
      001161 EE               [12] 4089 	mov	a,r6
      001162 A3               [24] 4090 	inc	dptr
      001163 F0               [24] 4091 	movx	@dptr,a
      001164 EF               [12] 4092 	mov	a,r7
      001165 A3               [24] 4093 	inc	dptr
      001166 F0               [24] 4094 	movx	@dptr,a
                           001167  4095 	C$ff.c$1275$1_0$74 ==.
                                   4096 ;	FATFS\src\ff.c:1275: cl = LD_WORD(dir+DIR_FstClusLO);
      001167 90r00r5B         [24] 4097 	mov	dptr,#_ld_clust_PARM_2
      00116A E0               [24] 4098 	movx	a,@dptr
      00116B FD               [12] 4099 	mov	r5,a
      00116C A3               [24] 4100 	inc	dptr
      00116D E0               [24] 4101 	movx	a,@dptr
      00116E FE               [12] 4102 	mov	r6,a
      00116F A3               [24] 4103 	inc	dptr
      001170 E0               [24] 4104 	movx	a,@dptr
      001171 FF               [12] 4105 	mov	r7,a
      001172 74 1A            [12] 4106 	mov	a,#0x1a
      001174 2D               [12] 4107 	add	a,r5
      001175 F5*00            [12] 4108 	mov	_ld_clust_sloc0_1_0,a
      001177 E4               [12] 4109 	clr	a
      001178 3E               [12] 4110 	addc	a,r6
      001179 F5*01            [12] 4111 	mov	(_ld_clust_sloc0_1_0 + 1),a
      00117B 8F*02            [24] 4112 	mov	(_ld_clust_sloc0_1_0 + 2),r7
      00117D 74 1B            [12] 4113 	mov	a,#0x1b
      00117F 2D               [12] 4114 	add	a,r5
      001180 F8               [12] 4115 	mov	r0,a
      001181 E4               [12] 4116 	clr	a
      001182 3E               [12] 4117 	addc	a,r6
      001183 F9               [12] 4118 	mov	r1,a
      001184 8F 04            [24] 4119 	mov	ar4,r7
      001186 88 82            [24] 4120 	mov	dpl,r0
      001188 89 83            [24] 4121 	mov	dph,r1
      00118A 8C F0            [24] 4122 	mov	b,r4
      00118C 12r00r00         [24] 4123 	lcall	__gptrget
      00118F FC               [12] 4124 	mov	r4,a
      001190 78 00            [12] 4125 	mov	r0,#0x00
      001192 85*00 82         [24] 4126 	mov	dpl,_ld_clust_sloc0_1_0
      001195 85*01 83         [24] 4127 	mov	dph,(_ld_clust_sloc0_1_0 + 1)
      001198 85*02 F0         [24] 4128 	mov	b,(_ld_clust_sloc0_1_0 + 2)
      00119B 12r00r00         [24] 4129 	lcall	__gptrget
      00119E 7A 00            [12] 4130 	mov	r2,#0x00
      0011A0 42 00            [12] 4131 	orl	ar0,a
      0011A2 EA               [12] 4132 	mov	a,r2
      0011A3 42 04            [12] 4133 	orl	ar4,a
      0011A5 88*03            [24] 4134 	mov	_ld_clust_sloc1_1_0,r0
      0011A7 8C*04            [24] 4135 	mov	(_ld_clust_sloc1_1_0 + 1),r4
      0011A9 75*05 00         [24] 4136 	mov	(_ld_clust_sloc1_1_0 + 2),#0x00
      0011AC 75*06 00         [24] 4137 	mov	(_ld_clust_sloc1_1_0 + 3),#0x00
      0011AF 90r00r61         [24] 4138 	mov	dptr,#_ld_clust_cl_65536_74
      0011B2 E5*03            [12] 4139 	mov	a,_ld_clust_sloc1_1_0
      0011B4 F0               [24] 4140 	movx	@dptr,a
      0011B5 E5*04            [12] 4141 	mov	a,(_ld_clust_sloc1_1_0 + 1)
      0011B7 A3               [24] 4142 	inc	dptr
      0011B8 F0               [24] 4143 	movx	@dptr,a
      0011B9 E5*05            [12] 4144 	mov	a,(_ld_clust_sloc1_1_0 + 2)
      0011BB A3               [24] 4145 	inc	dptr
      0011BC F0               [24] 4146 	movx	@dptr,a
      0011BD E5*06            [12] 4147 	mov	a,(_ld_clust_sloc1_1_0 + 3)
      0011BF A3               [24] 4148 	inc	dptr
      0011C0 F0               [24] 4149 	movx	@dptr,a
                           0011C1  4150 	C$ff.c$1276$1_0$74 ==.
                                   4151 ;	FATFS\src\ff.c:1276: if (fs->fs_type == FS_FAT32)
      0011C1 90r00r5E         [24] 4152 	mov	dptr,#_ld_clust_fs_65536_73
      0011C4 E0               [24] 4153 	movx	a,@dptr
      0011C5 F9               [12] 4154 	mov	r1,a
      0011C6 A3               [24] 4155 	inc	dptr
      0011C7 E0               [24] 4156 	movx	a,@dptr
      0011C8 FB               [12] 4157 	mov	r3,a
      0011C9 A3               [24] 4158 	inc	dptr
      0011CA E0               [24] 4159 	movx	a,@dptr
      0011CB FC               [12] 4160 	mov	r4,a
      0011CC 89 82            [24] 4161 	mov	dpl,r1
      0011CE 8B 83            [24] 4162 	mov	dph,r3
      0011D0 8C F0            [24] 4163 	mov	b,r4
      0011D2 12r00r00         [24] 4164 	lcall	__gptrget
      0011D5 F9               [12] 4165 	mov	r1,a
      0011D6 B9 03 4B         [24] 4166 	cjne	r1,#0x03,00102$
                           0011D9  4167 	C$ff.c$1277$1_0$74 ==.
                                   4168 ;	FATFS\src\ff.c:1277: cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
      0011D9 74 14            [12] 4169 	mov	a,#0x14
      0011DB 2D               [12] 4170 	add	a,r5
      0011DC FA               [12] 4171 	mov	r2,a
      0011DD E4               [12] 4172 	clr	a
      0011DE 3E               [12] 4173 	addc	a,r6
      0011DF FB               [12] 4174 	mov	r3,a
      0011E0 8F 04            [24] 4175 	mov	ar4,r7
      0011E2 74 15            [12] 4176 	mov	a,#0x15
      0011E4 2D               [12] 4177 	add	a,r5
      0011E5 FD               [12] 4178 	mov	r5,a
      0011E6 E4               [12] 4179 	clr	a
      0011E7 3E               [12] 4180 	addc	a,r6
      0011E8 FE               [12] 4181 	mov	r6,a
      0011E9 8D 82            [24] 4182 	mov	dpl,r5
      0011EB 8E 83            [24] 4183 	mov	dph,r6
      0011ED 8F F0            [24] 4184 	mov	b,r7
      0011EF 12r00r00         [24] 4185 	lcall	__gptrget
      0011F2 FF               [12] 4186 	mov	r7,a
      0011F3 7D 00            [12] 4187 	mov	r5,#0x00
      0011F5 8A 82            [24] 4188 	mov	dpl,r2
      0011F7 8B 83            [24] 4189 	mov	dph,r3
      0011F9 8C F0            [24] 4190 	mov	b,r4
      0011FB 12r00r00         [24] 4191 	lcall	__gptrget
      0011FE FA               [12] 4192 	mov	r2,a
      0011FF 7E 00            [12] 4193 	mov	r6,#0x00
      001201 42 05            [12] 4194 	orl	ar5,a
      001203 EE               [12] 4195 	mov	a,r6
      001204 42 07            [12] 4196 	orl	ar7,a
      001206 8F 04            [24] 4197 	mov	ar4,r7
      001208 8D 06            [24] 4198 	mov	ar6,r5
      00120A 7D 00            [12] 4199 	mov	r5,#0x00
      00120C 7F 00            [12] 4200 	mov	r7,#0x00
      00120E 90r00r61         [24] 4201 	mov	dptr,#_ld_clust_cl_65536_74
      001211 ED               [12] 4202 	mov	a,r5
      001212 45*03            [12] 4203 	orl	a,_ld_clust_sloc1_1_0
      001214 F0               [24] 4204 	movx	@dptr,a
      001215 EF               [12] 4205 	mov	a,r7
      001216 45*04            [12] 4206 	orl	a,(_ld_clust_sloc1_1_0 + 1)
      001218 A3               [24] 4207 	inc	dptr
      001219 F0               [24] 4208 	movx	@dptr,a
      00121A EE               [12] 4209 	mov	a,r6
      00121B 45*05            [12] 4210 	orl	a,(_ld_clust_sloc1_1_0 + 2)
      00121D A3               [24] 4211 	inc	dptr
      00121E F0               [24] 4212 	movx	@dptr,a
      00121F EC               [12] 4213 	mov	a,r4
      001220 45*06            [12] 4214 	orl	a,(_ld_clust_sloc1_1_0 + 3)
      001222 A3               [24] 4215 	inc	dptr
      001223 F0               [24] 4216 	movx	@dptr,a
      001224                       4217 00102$:
                           001224  4218 	C$ff.c$1279$1_0$74 ==.
                                   4219 ;	FATFS\src\ff.c:1279: return cl;
      001224 90r00r61         [24] 4220 	mov	dptr,#_ld_clust_cl_65536_74
      001227 E0               [24] 4221 	movx	a,@dptr
      001228 FC               [12] 4222 	mov	r4,a
      001229 A3               [24] 4223 	inc	dptr
      00122A E0               [24] 4224 	movx	a,@dptr
      00122B FD               [12] 4225 	mov	r5,a
      00122C A3               [24] 4226 	inc	dptr
      00122D E0               [24] 4227 	movx	a,@dptr
      00122E FE               [12] 4228 	mov	r6,a
      00122F A3               [24] 4229 	inc	dptr
      001230 E0               [24] 4230 	movx	a,@dptr
      001231 FF               [12] 4231 	mov	r7,a
      001232 8C 82            [24] 4232 	mov	dpl,r4
      001234 8D 83            [24] 4233 	mov	dph,r5
      001236 8E F0            [24] 4234 	mov	b,r6
                           001238  4235 	C$ff.c$1280$1_0$74 ==.
                                   4236 ;	FATFS\src\ff.c:1280: }
                           001238  4237 	C$ff.c$1280$1_0$74 ==.
                           001238  4238 	XFff$ld_clust$0$0 ==.
      001238 02r00r00         [24] 4239 	ljmp	__sdcc_banked_ret
                                   4240 ;------------------------------------------------------------
                                   4241 ;Allocation info for local variables in function 'cmp_lfn'
                                   4242 ;------------------------------------------------------------
                                   4243 ;sloc0                     Allocated with name '_cmp_lfn_sloc0_1_0'
                                   4244 ;sloc1                     Allocated with name '_cmp_lfn_sloc1_1_0'
                                   4245 ;sloc2                     Allocated with name '_cmp_lfn_sloc2_1_0'
                                   4246 ;sloc3                     Allocated with name '_cmp_lfn_sloc3_1_0'
                                   4247 ;dir                       Allocated with name '_cmp_lfn_PARM_2'
                                   4248 ;lfnbuf                    Allocated with name '_cmp_lfn_lfnbuf_65536_75'
                                   4249 ;i                         Allocated with name '_cmp_lfn_i_65536_76'
                                   4250 ;s                         Allocated with name '_cmp_lfn_s_65536_76'
                                   4251 ;wc                        Allocated with name '_cmp_lfn_wc_65536_76'
                                   4252 ;uc                        Allocated with name '_cmp_lfn_uc_65536_76'
                                   4253 ;------------------------------------------------------------
                           00123B  4254 	Fff$cmp_lfn$0$0 ==.
                           00123B  4255 	C$ff.c$1307$1_0$76 ==.
                                   4256 ;	FATFS\src\ff.c:1307: int cmp_lfn (			/* 1:Matched, 0:Not matched */
                                   4257 ;	-----------------------------------------
                                   4258 ;	 function cmp_lfn
                                   4259 ;	-----------------------------------------
      00123B                       4260 _cmp_lfn:
      00123B AF F0            [24] 4261 	mov	r7,b
      00123D AE 83            [24] 4262 	mov	r6,dph
      00123F E5 82            [12] 4263 	mov	a,dpl
      001241 90r00r68         [24] 4264 	mov	dptr,#_cmp_lfn_lfnbuf_65536_75
      001244 F0               [24] 4265 	movx	@dptr,a
      001245 EE               [12] 4266 	mov	a,r6
      001246 A3               [24] 4267 	inc	dptr
      001247 F0               [24] 4268 	movx	@dptr,a
      001248 EF               [12] 4269 	mov	a,r7
      001249 A3               [24] 4270 	inc	dptr
      00124A F0               [24] 4271 	movx	@dptr,a
                           00124B  4272 	C$ff.c$1316$1_0$76 ==.
                                   4273 ;	FATFS\src\ff.c:1316: i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
      00124B 90r00r65         [24] 4274 	mov	dptr,#_cmp_lfn_PARM_2
      00124E E0               [24] 4275 	movx	a,@dptr
      00124F F5*33            [12] 4276 	mov	_cmp_lfn_sloc1_1_0,a
      001251 A3               [24] 4277 	inc	dptr
      001252 E0               [24] 4278 	movx	a,@dptr
      001253 F5*34            [12] 4279 	mov	(_cmp_lfn_sloc1_1_0 + 1),a
      001255 A3               [24] 4280 	inc	dptr
      001256 E0               [24] 4281 	movx	a,@dptr
      001257 F5*35            [12] 4282 	mov	(_cmp_lfn_sloc1_1_0 + 2),a
      001259 85*33 82         [24] 4283 	mov	dpl,_cmp_lfn_sloc1_1_0
      00125C 85*34 83         [24] 4284 	mov	dph,(_cmp_lfn_sloc1_1_0 + 1)
      00125F 85*35 F0         [24] 4285 	mov	b,(_cmp_lfn_sloc1_1_0 + 2)
      001262 12r00r00         [24] 4286 	lcall	__gptrget
      001265 FC               [12] 4287 	mov	r4,a
      001266 7B 00            [12] 4288 	mov	r3,#0x00
      001268 53 04 BF         [24] 4289 	anl	ar4,#0xbf
      00126B 1C               [12] 4290 	dec	r4
      00126C BC FF 01         [24] 4291 	cjne	r4,#0xff,00150$
      00126F 1B               [12] 4292 	dec	r3
      001270                       4293 00150$:
      001270 90r00r00         [24] 4294 	mov	dptr,#__mulint_PARM_2
      001273 EC               [12] 4295 	mov	a,r4
      001274 F0               [24] 4296 	movx	@dptr,a
      001275 EB               [12] 4297 	mov	a,r3
      001276 A3               [24] 4298 	inc	dptr
      001277 F0               [24] 4299 	movx	@dptr,a
      001278 90 00 0D         [24] 4300 	mov	dptr,#0x000d
      00127B 12r00r00         [24] 4301 	lcall	__mulint
      00127E AB 82            [24] 4302 	mov	r3,dpl
      001280 AC 83            [24] 4303 	mov	r4,dph
      001282 90r00r6B         [24] 4304 	mov	dptr,#_cmp_lfn_i_65536_76
      001285 EB               [12] 4305 	mov	a,r3
      001286 F0               [24] 4306 	movx	@dptr,a
      001287 EC               [12] 4307 	mov	a,r4
      001288 A3               [24] 4308 	inc	dptr
      001289 F0               [24] 4309 	movx	@dptr,a
                           00128A  4310 	C$ff.c$1317$1_0$76 ==.
                                   4311 ;	FATFS\src\ff.c:1317: s = 0; wc = 1;
      00128A 90r00r6D         [24] 4312 	mov	dptr,#_cmp_lfn_wc_65536_76
      00128D 74 01            [12] 4313 	mov	a,#0x01
      00128F F0               [24] 4314 	movx	@dptr,a
      001290 E4               [12] 4315 	clr	a
      001291 A3               [24] 4316 	inc	dptr
      001292 F0               [24] 4317 	movx	@dptr,a
                           001293  4318 	C$ff.c$1318$3_0$78 ==.
                                   4319 ;	FATFS\src\ff.c:1318: do {
      001293 90r00r68         [24] 4320 	mov	dptr,#_cmp_lfn_lfnbuf_65536_75
      001296 E0               [24] 4321 	movx	a,@dptr
      001297 F5*38            [12] 4322 	mov	_cmp_lfn_sloc3_1_0,a
      001299 A3               [24] 4323 	inc	dptr
      00129A E0               [24] 4324 	movx	a,@dptr
      00129B F5*39            [12] 4325 	mov	(_cmp_lfn_sloc3_1_0 + 1),a
      00129D A3               [24] 4326 	inc	dptr
      00129E E0               [24] 4327 	movx	a,@dptr
      00129F F5*3A            [12] 4328 	mov	(_cmp_lfn_sloc3_1_0 + 2),a
      0012A1 E4               [12] 4329 	clr	a
      0012A2 F5*31            [12] 4330 	mov	_cmp_lfn_sloc0_1_0,a
      0012A4 F5*32            [12] 4331 	mov	(_cmp_lfn_sloc0_1_0 + 1),a
      0012A6                       4332 00109$:
                           0012A6  4333 	C$ff.c$1319$1_0$76 ==.
                                   4334 ;	FATFS\src\ff.c:1319: uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
      0012A6 E5*31            [12] 4335 	mov	a,_cmp_lfn_sloc0_1_0
      0012A8 24r80            [12] 4336 	add	a,#_LfnOfs
      0012AA F5 82            [12] 4337 	mov	dpl,a
      0012AC E5*32            [12] 4338 	mov	a,(_cmp_lfn_sloc0_1_0 + 1)
      0012AE 34s00            [12] 4339 	addc	a,#(_LfnOfs >> 8)
      0012B0 F5 83            [12] 4340 	mov	dph,a
      0012B2 E4               [12] 4341 	clr	a
      0012B3 93               [24] 4342 	movc	a,@a+dptr
      0012B4 25*33            [12] 4343 	add	a,_cmp_lfn_sloc1_1_0
      0012B6 F8               [12] 4344 	mov	r0,a
      0012B7 E4               [12] 4345 	clr	a
      0012B8 35*34            [12] 4346 	addc	a,(_cmp_lfn_sloc1_1_0 + 1)
      0012BA F9               [12] 4347 	mov	r1,a
      0012BB AA*35            [24] 4348 	mov	r2,(_cmp_lfn_sloc1_1_0 + 2)
      0012BD 74 01            [12] 4349 	mov	a,#0x01
      0012BF 28               [12] 4350 	add	a,r0
      0012C0 FD               [12] 4351 	mov	r5,a
      0012C1 E4               [12] 4352 	clr	a
      0012C2 39               [12] 4353 	addc	a,r1
      0012C3 FE               [12] 4354 	mov	r6,a
      0012C4 8A 07            [24] 4355 	mov	ar7,r2
      0012C6 8D 82            [24] 4356 	mov	dpl,r5
      0012C8 8E 83            [24] 4357 	mov	dph,r6
      0012CA 8F F0            [24] 4358 	mov	b,r7
      0012CC 12r00r00         [24] 4359 	lcall	__gptrget
      0012CF FF               [12] 4360 	mov	r7,a
      0012D0 7D 00            [12] 4361 	mov	r5,#0x00
      0012D2 88 82            [24] 4362 	mov	dpl,r0
      0012D4 89 83            [24] 4363 	mov	dph,r1
      0012D6 8A F0            [24] 4364 	mov	b,r2
      0012D8 12r00r00         [24] 4365 	lcall	__gptrget
      0012DB F8               [12] 4366 	mov	r0,a
      0012DC 7E 00            [12] 4367 	mov	r6,#0x00
      0012DE 4D               [12] 4368 	orl	a,r5
      0012DF F5*36            [12] 4369 	mov	_cmp_lfn_sloc2_1_0,a
      0012E1 EE               [12] 4370 	mov	a,r6
      0012E2 4F               [12] 4371 	orl	a,r7
      0012E3 F5*37            [12] 4372 	mov	(_cmp_lfn_sloc2_1_0 + 1),a
                           0012E5  4373 	C$ff.c$1320$1_0$76 ==.
                                   4374 ;	FATFS\src\ff.c:1320: if (wc) {	/* Last character has not been processed */
      0012E5 90r00r6D         [24] 4375 	mov	dptr,#_cmp_lfn_wc_65536_76
      0012E8 E0               [24] 4376 	movx	a,@dptr
      0012E9 F5 F0            [12] 4377 	mov	b,a
      0012EB A3               [24] 4378 	inc	dptr
      0012EC E0               [24] 4379 	movx	a,@dptr
      0012ED 45 F0            [12] 4380 	orl	a,b
      0012EF 70 03            [24] 4381 	jnz	00151$
      0012F1 02r13r81         [24] 4382 	ljmp	00107$
      0012F4                       4383 00151$:
                           0012F4  4384 	C$ff.c$1321$3_0$78 ==.
                                   4385 ;	FATFS\src\ff.c:1321: wc = ff_wtoupper(uc);		/* Convert it to upper case */
      0012F4 85*36 82         [24] 4386 	mov	dpl,_cmp_lfn_sloc2_1_0
      0012F7 85*37 83         [24] 4387 	mov	dph,(_cmp_lfn_sloc2_1_0 + 1)
      0012FA C0 04            [24] 4388 	push	ar4
      0012FC C0 03            [24] 4389 	push	ar3
      0012FE 78r00            [12] 4390 	mov	r0,#_ff_wtoupper
      001300 79s00            [12] 4391 	mov	r1,#(_ff_wtoupper >> 8)
      001302 7As00            [12] 4392 	mov	r2,#(_ff_wtoupper >> 16)
      001304 12r00r00         [24] 4393 	lcall	__sdcc_banked_call
      001307 AE 82            [24] 4394 	mov	r6,dpl
      001309 AF 83            [24] 4395 	mov	r7,dph
      00130B D0 03            [24] 4396 	pop	ar3
      00130D D0 04            [24] 4397 	pop	ar4
      00130F 90r00r6D         [24] 4398 	mov	dptr,#_cmp_lfn_wc_65536_76
      001312 EE               [12] 4399 	mov	a,r6
      001313 F0               [24] 4400 	movx	@dptr,a
      001314 EF               [12] 4401 	mov	a,r7
      001315 A3               [24] 4402 	inc	dptr
      001316 F0               [24] 4403 	movx	@dptr,a
                           001317  4404 	C$ff.c$1322$3_0$78 ==.
                                   4405 ;	FATFS\src\ff.c:1322: if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
      001317 C3               [12] 4406 	clr	c
      001318 EB               [12] 4407 	mov	a,r3
      001319 94 FF            [12] 4408 	subb	a,#0xff
      00131B EC               [12] 4409 	mov	a,r4
      00131C 94 00            [12] 4410 	subb	a,#0x00
      00131E 50 5B            [24] 4411 	jnc	00101$
      001320 8B 02            [24] 4412 	mov	ar2,r3
      001322 8C 05            [24] 4413 	mov	ar5,r4
      001324 0B               [12] 4414 	inc	r3
      001325 BB 00 01         [24] 4415 	cjne	r3,#0x00,00153$
      001328 0C               [12] 4416 	inc	r4
      001329                       4417 00153$:
      001329 90r00r6B         [24] 4418 	mov	dptr,#_cmp_lfn_i_65536_76
      00132C EB               [12] 4419 	mov	a,r3
      00132D F0               [24] 4420 	movx	@dptr,a
      00132E EC               [12] 4421 	mov	a,r4
      00132F A3               [24] 4422 	inc	dptr
      001330 F0               [24] 4423 	movx	@dptr,a
      001331 EA               [12] 4424 	mov	a,r2
      001332 2A               [12] 4425 	add	a,r2
      001333 FA               [12] 4426 	mov	r2,a
      001334 ED               [12] 4427 	mov	a,r5
      001335 33               [12] 4428 	rlc	a
      001336 FD               [12] 4429 	mov	r5,a
      001337 EA               [12] 4430 	mov	a,r2
      001338 25*38            [12] 4431 	add	a,_cmp_lfn_sloc3_1_0
      00133A FA               [12] 4432 	mov	r2,a
      00133B ED               [12] 4433 	mov	a,r5
      00133C 35*39            [12] 4434 	addc	a,(_cmp_lfn_sloc3_1_0 + 1)
      00133E F9               [12] 4435 	mov	r1,a
      00133F AD*3A            [24] 4436 	mov	r5,(_cmp_lfn_sloc3_1_0 + 2)
      001341 8A 82            [24] 4437 	mov	dpl,r2
      001343 89 83            [24] 4438 	mov	dph,r1
      001345 8D F0            [24] 4439 	mov	b,r5
      001347 12r00r00         [24] 4440 	lcall	__gptrget
      00134A FA               [12] 4441 	mov	r2,a
      00134B A3               [24] 4442 	inc	dptr
      00134C 12r00r00         [24] 4443 	lcall	__gptrget
      00134F F9               [12] 4444 	mov	r1,a
      001350 8A 82            [24] 4445 	mov	dpl,r2
      001352 89 83            [24] 4446 	mov	dph,r1
      001354 C0 07            [24] 4447 	push	ar7
      001356 C0 06            [24] 4448 	push	ar6
      001358 C0 04            [24] 4449 	push	ar4
      00135A C0 03            [24] 4450 	push	ar3
      00135C 78r00            [12] 4451 	mov	r0,#_ff_wtoupper
      00135E 79s00            [12] 4452 	mov	r1,#(_ff_wtoupper >> 8)
      001360 7As00            [12] 4453 	mov	r2,#(_ff_wtoupper >> 16)
      001362 12r00r00         [24] 4454 	lcall	__sdcc_banked_call
      001365 AA 82            [24] 4455 	mov	r2,dpl
      001367 AD 83            [24] 4456 	mov	r5,dph
      001369 D0 03            [24] 4457 	pop	ar3
      00136B D0 04            [24] 4458 	pop	ar4
      00136D D0 06            [24] 4459 	pop	ar6
      00136F D0 07            [24] 4460 	pop	ar7
      001371 EE               [12] 4461 	mov	a,r6
      001372 B5 02 06         [24] 4462 	cjne	a,ar2,00154$
      001375 EF               [12] 4463 	mov	a,r7
      001376 B5 05 02         [24] 4464 	cjne	a,ar5,00154$
      001379 80 15            [24] 4465 	sjmp	00110$
      00137B                       4466 00154$:
      00137B                       4467 00101$:
                           00137B  4468 	C$ff.c$1323$3_0$78 ==.
                                   4469 ;	FATFS\src\ff.c:1323: return 0;				/* Not matched */
      00137B 90 00 00         [24] 4470 	mov	dptr,#0x0000
      00137E 02r00r00         [24] 4471 	ljmp	__sdcc_banked_ret
      001381                       4472 00107$:
                           001381  4473 	C$ff.c$1325$3_0$79 ==.
                                   4474 ;	FATFS\src\ff.c:1325: if (uc != 0xFFFF) return 0;	/* Check filler */
      001381 74 FF            [12] 4475 	mov	a,#0xff
      001383 B5*36 05         [24] 4476 	cjne	a,_cmp_lfn_sloc2_1_0,00155$
      001386 B5*37 02         [24] 4477 	cjne	a,(_cmp_lfn_sloc2_1_0 + 1),00155$
      001389 80 05            [24] 4478 	sjmp	00110$
      00138B                       4479 00155$:
      00138B 90 00 00         [24] 4480 	mov	dptr,#0x0000
      00138E 80 6B            [24] 4481 	sjmp	00116$
      001390                       4482 00110$:
                           001390  4483 	C$ff.c$1327$1_0$76 ==.
                                   4484 ;	FATFS\src\ff.c:1327: } while (++s < 13);				/* Repeat until all characters in the entry are checked */
      001390 05*31            [12] 4485 	inc	_cmp_lfn_sloc0_1_0
      001392 E4               [12] 4486 	clr	a
      001393 B5*31 02         [24] 4487 	cjne	a,_cmp_lfn_sloc0_1_0,00156$
      001396 05*32            [12] 4488 	inc	(_cmp_lfn_sloc0_1_0 + 1)
      001398                       4489 00156$:
      001398 C3               [12] 4490 	clr	c
      001399 E5*31            [12] 4491 	mov	a,_cmp_lfn_sloc0_1_0
      00139B 94 0D            [12] 4492 	subb	a,#0x0d
      00139D E5*32            [12] 4493 	mov	a,(_cmp_lfn_sloc0_1_0 + 1)
      00139F 94 00            [12] 4494 	subb	a,#0x00
      0013A1 50 03            [24] 4495 	jnc	00157$
      0013A3 02r12rA6         [24] 4496 	ljmp	00109$
      0013A6                       4497 00157$:
                           0013A6  4498 	C$ff.c$1329$1_0$76 ==.
                                   4499 ;	FATFS\src\ff.c:1329: if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
      0013A6 85*33 82         [24] 4500 	mov	dpl,_cmp_lfn_sloc1_1_0
      0013A9 85*34 83         [24] 4501 	mov	dph,(_cmp_lfn_sloc1_1_0 + 1)
      0013AC 85*35 F0         [24] 4502 	mov	b,(_cmp_lfn_sloc1_1_0 + 2)
      0013AF 12r00r00         [24] 4503 	lcall	__gptrget
      0013B2 FF               [12] 4504 	mov	r7,a
      0013B3 30 E6 42         [24] 4505 	jnb	acc.6,00113$
      0013B6 90r00r6D         [24] 4506 	mov	dptr,#_cmp_lfn_wc_65536_76
      0013B9 E0               [24] 4507 	movx	a,@dptr
      0013BA F5 F0            [12] 4508 	mov	b,a
      0013BC A3               [24] 4509 	inc	dptr
      0013BD E0               [24] 4510 	movx	a,@dptr
      0013BE 45 F0            [12] 4511 	orl	a,b
      0013C0 60 36            [24] 4512 	jz	00113$
      0013C2 90r00r68         [24] 4513 	mov	dptr,#_cmp_lfn_lfnbuf_65536_75
      0013C5 E0               [24] 4514 	movx	a,@dptr
      0013C6 FD               [12] 4515 	mov	r5,a
      0013C7 A3               [24] 4516 	inc	dptr
      0013C8 E0               [24] 4517 	movx	a,@dptr
      0013C9 FE               [12] 4518 	mov	r6,a
      0013CA A3               [24] 4519 	inc	dptr
      0013CB E0               [24] 4520 	movx	a,@dptr
      0013CC FF               [12] 4521 	mov	r7,a
      0013CD 90r00r6B         [24] 4522 	mov	dptr,#_cmp_lfn_i_65536_76
      0013D0 E0               [24] 4523 	movx	a,@dptr
      0013D1 FB               [12] 4524 	mov	r3,a
      0013D2 A3               [24] 4525 	inc	dptr
      0013D3 E0               [24] 4526 	movx	a,@dptr
      0013D4 FC               [12] 4527 	mov	r4,a
      0013D5 EB               [12] 4528 	mov	a,r3
      0013D6 2B               [12] 4529 	add	a,r3
      0013D7 FB               [12] 4530 	mov	r3,a
      0013D8 EC               [12] 4531 	mov	a,r4
      0013D9 33               [12] 4532 	rlc	a
      0013DA FC               [12] 4533 	mov	r4,a
      0013DB EB               [12] 4534 	mov	a,r3
      0013DC 2D               [12] 4535 	add	a,r5
      0013DD FD               [12] 4536 	mov	r5,a
      0013DE EC               [12] 4537 	mov	a,r4
      0013DF 3E               [12] 4538 	addc	a,r6
      0013E0 FE               [12] 4539 	mov	r6,a
      0013E1 8D 82            [24] 4540 	mov	dpl,r5
      0013E3 8E 83            [24] 4541 	mov	dph,r6
      0013E5 8F F0            [24] 4542 	mov	b,r7
      0013E7 12r00r00         [24] 4543 	lcall	__gptrget
      0013EA FD               [12] 4544 	mov	r5,a
      0013EB A3               [24] 4545 	inc	dptr
      0013EC 12r00r00         [24] 4546 	lcall	__gptrget
      0013EF FE               [12] 4547 	mov	r6,a
      0013F0 4D               [12] 4548 	orl	a,r5
      0013F1 60 05            [24] 4549 	jz	00113$
                           0013F3  4550 	C$ff.c$1330$1_0$76 ==.
                                   4551 ;	FATFS\src\ff.c:1330: return 0;
      0013F3 90 00 00         [24] 4552 	mov	dptr,#0x0000
      0013F6 80 03            [24] 4553 	sjmp	00116$
      0013F8                       4554 00113$:
                           0013F8  4555 	C$ff.c$1332$1_0$76 ==.
                                   4556 ;	FATFS\src\ff.c:1332: return 1;						/* The part of LFN matched */
      0013F8 90 00 01         [24] 4557 	mov	dptr,#0x0001
      0013FB                       4558 00116$:
                           0013FB  4559 	C$ff.c$1333$1_0$76 ==.
                                   4560 ;	FATFS\src\ff.c:1333: }
                           0013FB  4561 	C$ff.c$1333$1_0$76 ==.
                           0013FB  4562 	XFff$cmp_lfn$0$0 ==.
      0013FB 02r00r00         [24] 4563 	ljmp	__sdcc_banked_ret
                                   4564 ;------------------------------------------------------------
                                   4565 ;Allocation info for local variables in function 'pick_lfn'
                                   4566 ;------------------------------------------------------------
                                   4567 ;sloc0                     Allocated with name '_pick_lfn_sloc0_1_0'
                                   4568 ;sloc1                     Allocated with name '_pick_lfn_sloc1_1_0'
                                   4569 ;sloc2                     Allocated with name '_pick_lfn_sloc2_1_0'
                                   4570 ;dir                       Allocated with name '_pick_lfn_PARM_2'
                                   4571 ;lfnbuf                    Allocated with name '_pick_lfn_lfnbuf_65536_80'
                                   4572 ;i                         Allocated with name '_pick_lfn_i_65536_81'
                                   4573 ;s                         Allocated with name '_pick_lfn_s_65536_81'
                                   4574 ;wc                        Allocated with name '_pick_lfn_wc_65536_81'
                                   4575 ;uc                        Allocated with name '_pick_lfn_uc_65536_81'
                                   4576 ;------------------------------------------------------------
                           0013FE  4577 	Fff$pick_lfn$0$0 ==.
                           0013FE  4578 	C$ff.c$1338$1_0$81 ==.
                                   4579 ;	FATFS\src\ff.c:1338: int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
                                   4580 ;	-----------------------------------------
                                   4581 ;	 function pick_lfn
                                   4582 ;	-----------------------------------------
      0013FE                       4583 _pick_lfn:
      0013FE AF F0            [24] 4584 	mov	r7,b
      001400 AE 83            [24] 4585 	mov	r6,dph
      001402 E5 82            [12] 4586 	mov	a,dpl
      001404 90r00r72         [24] 4587 	mov	dptr,#_pick_lfn_lfnbuf_65536_80
      001407 F0               [24] 4588 	movx	@dptr,a
      001408 EE               [12] 4589 	mov	a,r6
      001409 A3               [24] 4590 	inc	dptr
      00140A F0               [24] 4591 	movx	@dptr,a
      00140B EF               [12] 4592 	mov	a,r7
      00140C A3               [24] 4593 	inc	dptr
      00140D F0               [24] 4594 	movx	@dptr,a
                           00140E  4595 	C$ff.c$1347$1_0$81 ==.
                                   4596 ;	FATFS\src\ff.c:1347: i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
      00140E 90r00r6F         [24] 4597 	mov	dptr,#_pick_lfn_PARM_2
      001411 E0               [24] 4598 	movx	a,@dptr
      001412 F5*3D            [12] 4599 	mov	_pick_lfn_sloc1_1_0,a
      001414 A3               [24] 4600 	inc	dptr
      001415 E0               [24] 4601 	movx	a,@dptr
      001416 F5*3E            [12] 4602 	mov	(_pick_lfn_sloc1_1_0 + 1),a
      001418 A3               [24] 4603 	inc	dptr
      001419 E0               [24] 4604 	movx	a,@dptr
      00141A F5*3F            [12] 4605 	mov	(_pick_lfn_sloc1_1_0 + 2),a
      00141C 85*3D 82         [24] 4606 	mov	dpl,_pick_lfn_sloc1_1_0
      00141F 85*3E 83         [24] 4607 	mov	dph,(_pick_lfn_sloc1_1_0 + 1)
      001422 85*3F F0         [24] 4608 	mov	b,(_pick_lfn_sloc1_1_0 + 2)
      001425 12r00r00         [24] 4609 	lcall	__gptrget
      001428 FC               [12] 4610 	mov	r4,a
      001429 53 04 3F         [24] 4611 	anl	ar4,#0x3f
      00142C 7B 00            [12] 4612 	mov	r3,#0x00
      00142E 1C               [12] 4613 	dec	r4
      00142F BC FF 01         [24] 4614 	cjne	r4,#0xff,00145$
      001432 1B               [12] 4615 	dec	r3
      001433                       4616 00145$:
      001433 90r00r00         [24] 4617 	mov	dptr,#__mulint_PARM_2
      001436 EC               [12] 4618 	mov	a,r4
      001437 F0               [24] 4619 	movx	@dptr,a
      001438 EB               [12] 4620 	mov	a,r3
      001439 A3               [24] 4621 	inc	dptr
      00143A F0               [24] 4622 	movx	@dptr,a
      00143B 90 00 0D         [24] 4623 	mov	dptr,#0x000d
      00143E 12r00r00         [24] 4624 	lcall	__mulint
      001441 AB 82            [24] 4625 	mov	r3,dpl
      001443 AC 83            [24] 4626 	mov	r4,dph
      001445 90r00r75         [24] 4627 	mov	dptr,#_pick_lfn_i_65536_81
      001448 EB               [12] 4628 	mov	a,r3
      001449 F0               [24] 4629 	movx	@dptr,a
      00144A EC               [12] 4630 	mov	a,r4
      00144B A3               [24] 4631 	inc	dptr
      00144C F0               [24] 4632 	movx	@dptr,a
                           00144D  4633 	C$ff.c$1349$1_0$81 ==.
                                   4634 ;	FATFS\src\ff.c:1349: s = 0; wc = 1;
      00144D 90r00r77         [24] 4635 	mov	dptr,#_pick_lfn_wc_65536_81
      001450 74 01            [12] 4636 	mov	a,#0x01
      001452 F0               [24] 4637 	movx	@dptr,a
      001453 E4               [12] 4638 	clr	a
      001454 A3               [24] 4639 	inc	dptr
      001455 F0               [24] 4640 	movx	@dptr,a
                           001456  4641 	C$ff.c$1350$3_0$83 ==.
                                   4642 ;	FATFS\src\ff.c:1350: do {
      001456 90r00r72         [24] 4643 	mov	dptr,#_pick_lfn_lfnbuf_65536_80
      001459 E0               [24] 4644 	movx	a,@dptr
      00145A F8               [12] 4645 	mov	r0,a
      00145B A3               [24] 4646 	inc	dptr
      00145C E0               [24] 4647 	movx	a,@dptr
      00145D F9               [12] 4648 	mov	r1,a
      00145E A3               [24] 4649 	inc	dptr
      00145F E0               [24] 4650 	movx	a,@dptr
      001460 FA               [12] 4651 	mov	r2,a
      001461 E4               [12] 4652 	clr	a
      001462 F5*3B            [12] 4653 	mov	_pick_lfn_sloc0_1_0,a
      001464 F5*3C            [12] 4654 	mov	(_pick_lfn_sloc0_1_0 + 1),a
      001466                       4655 00108$:
                           001466  4656 	C$ff.c$1351$1_0$81 ==.
                                   4657 ;	FATFS\src\ff.c:1351: uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
      001466 C0 00            [24] 4658 	push	ar0
      001468 C0 01            [24] 4659 	push	ar1
      00146A C0 02            [24] 4660 	push	ar2
      00146C E5*3B            [12] 4661 	mov	a,_pick_lfn_sloc0_1_0
      00146E 24r80            [12] 4662 	add	a,#_LfnOfs
      001470 F5 82            [12] 4663 	mov	dpl,a
      001472 E5*3C            [12] 4664 	mov	a,(_pick_lfn_sloc0_1_0 + 1)
      001474 34s00            [12] 4665 	addc	a,#(_LfnOfs >> 8)
      001476 F5 83            [12] 4666 	mov	dph,a
      001478 E4               [12] 4667 	clr	a
      001479 93               [24] 4668 	movc	a,@a+dptr
      00147A 25*3D            [12] 4669 	add	a,_pick_lfn_sloc1_1_0
      00147C F8               [12] 4670 	mov	r0,a
      00147D E4               [12] 4671 	clr	a
      00147E 35*3E            [12] 4672 	addc	a,(_pick_lfn_sloc1_1_0 + 1)
      001480 F9               [12] 4673 	mov	r1,a
      001481 AA*3F            [24] 4674 	mov	r2,(_pick_lfn_sloc1_1_0 + 2)
      001483 74 01            [12] 4675 	mov	a,#0x01
      001485 28               [12] 4676 	add	a,r0
      001486 FD               [12] 4677 	mov	r5,a
      001487 E4               [12] 4678 	clr	a
      001488 39               [12] 4679 	addc	a,r1
      001489 FE               [12] 4680 	mov	r6,a
      00148A 8A 07            [24] 4681 	mov	ar7,r2
      00148C 8D 82            [24] 4682 	mov	dpl,r5
      00148E 8E 83            [24] 4683 	mov	dph,r6
      001490 8F F0            [24] 4684 	mov	b,r7
      001492 12r00r00         [24] 4685 	lcall	__gptrget
      001495 FF               [12] 4686 	mov	r7,a
      001496 7D 00            [12] 4687 	mov	r5,#0x00
      001498 88 82            [24] 4688 	mov	dpl,r0
      00149A 89 83            [24] 4689 	mov	dph,r1
      00149C 8A F0            [24] 4690 	mov	b,r2
      00149E 12r00r00         [24] 4691 	lcall	__gptrget
      0014A1 7E 00            [12] 4692 	mov	r6,#0x00
      0014A3 4D               [12] 4693 	orl	a,r5
      0014A4 F5*40            [12] 4694 	mov	_pick_lfn_sloc2_1_0,a
      0014A6 EE               [12] 4695 	mov	a,r6
      0014A7 4F               [12] 4696 	orl	a,r7
      0014A8 F5*41            [12] 4697 	mov	(_pick_lfn_sloc2_1_0 + 1),a
                           0014AA  4698 	C$ff.c$1352$1_0$81 ==.
                                   4699 ;	FATFS\src\ff.c:1352: if (wc) {	/* Last character has not been processed */
      0014AA D0 02            [24] 4700 	pop	ar2
      0014AC D0 01            [24] 4701 	pop	ar1
      0014AE D0 00            [24] 4702 	pop	ar0
      0014B0 90r00r77         [24] 4703 	mov	dptr,#_pick_lfn_wc_65536_81
      0014B3 E0               [24] 4704 	movx	a,@dptr
      0014B4 F5 F0            [12] 4705 	mov	b,a
      0014B6 A3               [24] 4706 	inc	dptr
      0014B7 E0               [24] 4707 	movx	a,@dptr
      0014B8 45 F0            [12] 4708 	orl	a,b
      0014BA 60 4B            [24] 4709 	jz	00106$
                           0014BC  4710 	C$ff.c$1353$3_0$83 ==.
                                   4711 ;	FATFS\src\ff.c:1353: if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
      0014BC C3               [12] 4712 	clr	c
      0014BD EB               [12] 4713 	mov	a,r3
      0014BE 94 FF            [12] 4714 	subb	a,#0xff
      0014C0 EC               [12] 4715 	mov	a,r4
      0014C1 94 00            [12] 4716 	subb	a,#0x00
      0014C3 40 06            [24] 4717 	jc	00102$
      0014C5 90 00 00         [24] 4718 	mov	dptr,#0x0000
      0014C8 02r00r00         [24] 4719 	ljmp	__sdcc_banked_ret
      0014CB                       4720 00102$:
                           0014CB  4721 	C$ff.c$1354$3_0$83 ==.
                                   4722 ;	FATFS\src\ff.c:1354: lfnbuf[i++] = wc = uc;			/* Store it */
      0014CB 8B 06            [24] 4723 	mov	ar6,r3
      0014CD 8C 07            [24] 4724 	mov	ar7,r4
      0014CF 0B               [12] 4725 	inc	r3
      0014D0 BB 00 01         [24] 4726 	cjne	r3,#0x00,00148$
      0014D3 0C               [12] 4727 	inc	r4
      0014D4                       4728 00148$:
      0014D4 90r00r75         [24] 4729 	mov	dptr,#_pick_lfn_i_65536_81
      0014D7 EB               [12] 4730 	mov	a,r3
      0014D8 F0               [24] 4731 	movx	@dptr,a
      0014D9 EC               [12] 4732 	mov	a,r4
      0014DA A3               [24] 4733 	inc	dptr
      0014DB F0               [24] 4734 	movx	@dptr,a
      0014DC EE               [12] 4735 	mov	a,r6
      0014DD 2E               [12] 4736 	add	a,r6
      0014DE FE               [12] 4737 	mov	r6,a
      0014DF EF               [12] 4738 	mov	a,r7
      0014E0 33               [12] 4739 	rlc	a
      0014E1 FF               [12] 4740 	mov	r7,a
      0014E2 EE               [12] 4741 	mov	a,r6
      0014E3 28               [12] 4742 	add	a,r0
      0014E4 FE               [12] 4743 	mov	r6,a
      0014E5 EF               [12] 4744 	mov	a,r7
      0014E6 39               [12] 4745 	addc	a,r1
      0014E7 FF               [12] 4746 	mov	r7,a
      0014E8 8A 05            [24] 4747 	mov	ar5,r2
      0014EA 90r00r77         [24] 4748 	mov	dptr,#_pick_lfn_wc_65536_81
      0014ED E5*40            [12] 4749 	mov	a,_pick_lfn_sloc2_1_0
      0014EF F0               [24] 4750 	movx	@dptr,a
      0014F0 E5*41            [12] 4751 	mov	a,(_pick_lfn_sloc2_1_0 + 1)
      0014F2 A3               [24] 4752 	inc	dptr
      0014F3 F0               [24] 4753 	movx	@dptr,a
      0014F4 8E 82            [24] 4754 	mov	dpl,r6
      0014F6 8F 83            [24] 4755 	mov	dph,r7
      0014F8 8D F0            [24] 4756 	mov	b,r5
      0014FA E5*40            [12] 4757 	mov	a,_pick_lfn_sloc2_1_0
      0014FC 12r00r00         [24] 4758 	lcall	__gptrput
      0014FF A3               [24] 4759 	inc	dptr
      001500 E5*41            [12] 4760 	mov	a,(_pick_lfn_sloc2_1_0 + 1)
      001502 12r00r00         [24] 4761 	lcall	__gptrput
      001505 80 0F            [24] 4762 	sjmp	00109$
      001507                       4763 00106$:
                           001507  4764 	C$ff.c$1356$3_0$84 ==.
                                   4765 ;	FATFS\src\ff.c:1356: if (uc != 0xFFFF) return 0;		/* Check filler */
      001507 74 FF            [12] 4766 	mov	a,#0xff
      001509 B5*40 05         [24] 4767 	cjne	a,_pick_lfn_sloc2_1_0,00149$
      00150C B5*41 02         [24] 4768 	cjne	a,(_pick_lfn_sloc2_1_0 + 1),00149$
      00150F 80 05            [24] 4769 	sjmp	00109$
      001511                       4770 00149$:
      001511 90 00 00         [24] 4771 	mov	dptr,#0x0000
      001514 80 64            [24] 4772 	sjmp	00115$
      001516                       4773 00109$:
                           001516  4774 	C$ff.c$1358$1_0$81 ==.
                                   4775 ;	FATFS\src\ff.c:1358: } while (++s < 13);						/* Read all character in the entry */
      001516 05*3B            [12] 4776 	inc	_pick_lfn_sloc0_1_0
      001518 E4               [12] 4777 	clr	a
      001519 B5*3B 02         [24] 4778 	cjne	a,_pick_lfn_sloc0_1_0,00150$
      00151C 05*3C            [12] 4779 	inc	(_pick_lfn_sloc0_1_0 + 1)
      00151E                       4780 00150$:
      00151E C3               [12] 4781 	clr	c
      00151F E5*3B            [12] 4782 	mov	a,_pick_lfn_sloc0_1_0
      001521 94 0D            [12] 4783 	subb	a,#0x0d
      001523 E5*3C            [12] 4784 	mov	a,(_pick_lfn_sloc0_1_0 + 1)
      001525 94 00            [12] 4785 	subb	a,#0x00
      001527 50 03            [24] 4786 	jnc	00151$
      001529 02r14r66         [24] 4787 	ljmp	00108$
      00152C                       4788 00151$:
                           00152C  4789 	C$ff.c$1360$1_0$81 ==.
                                   4790 ;	FATFS\src\ff.c:1360: if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
      00152C 85*3D 82         [24] 4791 	mov	dpl,_pick_lfn_sloc1_1_0
      00152F 85*3E 83         [24] 4792 	mov	dph,(_pick_lfn_sloc1_1_0 + 1)
      001532 85*3F F0         [24] 4793 	mov	b,(_pick_lfn_sloc1_1_0 + 2)
      001535 12r00r00         [24] 4794 	lcall	__gptrget
      001538 FF               [12] 4795 	mov	r7,a
      001539 30 E6 3B         [24] 4796 	jnb	acc.6,00114$
                           00153C  4797 	C$ff.c$1361$2_0$85 ==.
                                   4798 ;	FATFS\src\ff.c:1361: if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
      00153C 90r00r75         [24] 4799 	mov	dptr,#_pick_lfn_i_65536_81
      00153F E0               [24] 4800 	movx	a,@dptr
      001540 FE               [12] 4801 	mov	r6,a
      001541 A3               [24] 4802 	inc	dptr
      001542 E0               [24] 4803 	movx	a,@dptr
      001543 FF               [12] 4804 	mov	r7,a
      001544 C3               [12] 4805 	clr	c
      001545 EE               [12] 4806 	mov	a,r6
      001546 94 FF            [12] 4807 	subb	a,#0xff
      001548 EF               [12] 4808 	mov	a,r7
      001549 94 00            [12] 4809 	subb	a,#0x00
      00154B 40 05            [24] 4810 	jc	00112$
      00154D 90 00 00         [24] 4811 	mov	dptr,#0x0000
      001550 80 28            [24] 4812 	sjmp	00115$
      001552                       4813 00112$:
                           001552  4814 	C$ff.c$1362$2_0$85 ==.
                                   4815 ;	FATFS\src\ff.c:1362: lfnbuf[i] = 0;
      001552 90r00r72         [24] 4816 	mov	dptr,#_pick_lfn_lfnbuf_65536_80
      001555 E0               [24] 4817 	movx	a,@dptr
      001556 FB               [12] 4818 	mov	r3,a
      001557 A3               [24] 4819 	inc	dptr
      001558 E0               [24] 4820 	movx	a,@dptr
      001559 FC               [12] 4821 	mov	r4,a
      00155A A3               [24] 4822 	inc	dptr
      00155B E0               [24] 4823 	movx	a,@dptr
      00155C FD               [12] 4824 	mov	r5,a
      00155D EE               [12] 4825 	mov	a,r6
      00155E 2E               [12] 4826 	add	a,r6
      00155F FE               [12] 4827 	mov	r6,a
      001560 EF               [12] 4828 	mov	a,r7
      001561 33               [12] 4829 	rlc	a
      001562 FF               [12] 4830 	mov	r7,a
      001563 EE               [12] 4831 	mov	a,r6
      001564 2B               [12] 4832 	add	a,r3
      001565 FB               [12] 4833 	mov	r3,a
      001566 EF               [12] 4834 	mov	a,r7
      001567 3C               [12] 4835 	addc	a,r4
      001568 FC               [12] 4836 	mov	r4,a
      001569 8B 82            [24] 4837 	mov	dpl,r3
      00156B 8C 83            [24] 4838 	mov	dph,r4
      00156D 8D F0            [24] 4839 	mov	b,r5
      00156F E4               [12] 4840 	clr	a
      001570 12r00r00         [24] 4841 	lcall	__gptrput
      001573 A3               [24] 4842 	inc	dptr
      001574 12r00r00         [24] 4843 	lcall	__gptrput
      001577                       4844 00114$:
                           001577  4845 	C$ff.c$1365$1_0$81 ==.
                                   4846 ;	FATFS\src\ff.c:1365: return 1;
      001577 90 00 01         [24] 4847 	mov	dptr,#0x0001
      00157A                       4848 00115$:
                           00157A  4849 	C$ff.c$1366$1_0$81 ==.
                                   4850 ;	FATFS\src\ff.c:1366: }
                           00157A  4851 	C$ff.c$1366$1_0$81 ==.
                           00157A  4852 	XFff$pick_lfn$0$0 ==.
      00157A 02r00r00         [24] 4853 	ljmp	__sdcc_banked_ret
                                   4854 ;------------------------------------------------------------
                                   4855 ;Allocation info for local variables in function 'gen_numname'
                                   4856 ;------------------------------------------------------------
                                   4857 ;sloc0                     Allocated with name '_gen_numname_sloc0_1_0'
                                   4858 ;sloc1                     Allocated with name '_gen_numname_sloc1_1_0'
                                   4859 ;src                       Allocated with name '_gen_numname_PARM_2'
                                   4860 ;lfn                       Allocated with name '_gen_numname_PARM_3'
                                   4861 ;seq                       Allocated with name '_gen_numname_PARM_4'
                                   4862 ;dst                       Allocated with name '_gen_numname_dst_65536_86'
                                   4863 ;ns                        Allocated with name '_gen_numname_ns_65536_87'
                                   4864 ;c                         Allocated with name '_gen_numname_c_65536_87'
                                   4865 ;i                         Allocated with name '_gen_numname_i_65536_87'
                                   4866 ;j                         Allocated with name '_gen_numname_j_65536_87'
                                   4867 ;wc                        Allocated with name '_gen_numname_wc_131072_88'
                                   4868 ;sr                        Allocated with name '_gen_numname_sr_131072_88'
                                   4869 ;------------------------------------------------------------
                           00157D  4870 	Fff$gen_numname$0$0 ==.
                           00157D  4871 	C$ff.c$1409$1_0$87 ==.
                                   4872 ;	FATFS\src\ff.c:1409: void gen_numname (
                                   4873 ;	-----------------------------------------
                                   4874 ;	 function gen_numname
                                   4875 ;	-----------------------------------------
      00157D                       4876 _gen_numname:
      00157D AF F0            [24] 4877 	mov	r7,b
      00157F AE 83            [24] 4878 	mov	r6,dph
      001581 E5 82            [12] 4879 	mov	a,dpl
      001583 90r00r81         [24] 4880 	mov	dptr,#_gen_numname_dst_65536_86
      001586 F0               [24] 4881 	movx	@dptr,a
      001587 EE               [12] 4882 	mov	a,r6
      001588 A3               [24] 4883 	inc	dptr
      001589 F0               [24] 4884 	movx	@dptr,a
      00158A EF               [12] 4885 	mov	a,r7
      00158B A3               [24] 4886 	inc	dptr
      00158C F0               [24] 4887 	movx	@dptr,a
                           00158D  4888 	C$ff.c$1420$1_0$87 ==.
                                   4889 ;	FATFS\src\ff.c:1420: mem_cpy(dst, src, 11);
      00158D 90r00r81         [24] 4890 	mov	dptr,#_gen_numname_dst_65536_86
      001590 E0               [24] 4891 	movx	a,@dptr
      001591 FD               [12] 4892 	mov	r5,a
      001592 A3               [24] 4893 	inc	dptr
      001593 E0               [24] 4894 	movx	a,@dptr
      001594 FE               [12] 4895 	mov	r6,a
      001595 A3               [24] 4896 	inc	dptr
      001596 E0               [24] 4897 	movx	a,@dptr
      001597 FF               [12] 4898 	mov	r7,a
      001598 90r00r79         [24] 4899 	mov	dptr,#_gen_numname_PARM_2
      00159B E0               [24] 4900 	movx	a,@dptr
      00159C FA               [12] 4901 	mov	r2,a
      00159D A3               [24] 4902 	inc	dptr
      00159E E0               [24] 4903 	movx	a,@dptr
      00159F FB               [12] 4904 	mov	r3,a
      0015A0 A3               [24] 4905 	inc	dptr
      0015A1 E0               [24] 4906 	movx	a,@dptr
      0015A2 FC               [12] 4907 	mov	r4,a
      0015A3 90r00r08         [24] 4908 	mov	dptr,#_mem_cpy_PARM_2
      0015A6 EA               [12] 4909 	mov	a,r2
      0015A7 F0               [24] 4910 	movx	@dptr,a
      0015A8 EB               [12] 4911 	mov	a,r3
      0015A9 A3               [24] 4912 	inc	dptr
      0015AA F0               [24] 4913 	movx	@dptr,a
      0015AB EC               [12] 4914 	mov	a,r4
      0015AC A3               [24] 4915 	inc	dptr
      0015AD F0               [24] 4916 	movx	@dptr,a
      0015AE 90r00r0B         [24] 4917 	mov	dptr,#_mem_cpy_PARM_3
      0015B1 74 0B            [12] 4918 	mov	a,#0x0b
      0015B3 F0               [24] 4919 	movx	@dptr,a
      0015B4 E4               [12] 4920 	clr	a
      0015B5 A3               [24] 4921 	inc	dptr
      0015B6 F0               [24] 4922 	movx	@dptr,a
      0015B7 8D 82            [24] 4923 	mov	dpl,r5
      0015B9 8E 83            [24] 4924 	mov	dph,r6
      0015BB 8F F0            [24] 4925 	mov	b,r7
      0015BD 78r00            [12] 4926 	mov	r0,#_mem_cpy
      0015BF 79s00            [12] 4927 	mov	r1,#(_mem_cpy >> 8)
      0015C1 7As00            [12] 4928 	mov	r2,#(_mem_cpy >> 16)
      0015C3 12r00r00         [24] 4929 	lcall	__sdcc_banked_call
                           0015C6  4930 	C$ff.c$1422$1_0$87 ==.
                                   4931 ;	FATFS\src\ff.c:1422: if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
      0015C6 90r00r7F         [24] 4932 	mov	dptr,#_gen_numname_PARM_4
      0015C9 E0               [24] 4933 	movx	a,@dptr
      0015CA FE               [12] 4934 	mov	r6,a
      0015CB A3               [24] 4935 	inc	dptr
      0015CC E0               [24] 4936 	movx	a,@dptr
      0015CD FF               [12] 4937 	mov	r7,a
      0015CE C3               [12] 4938 	clr	c
      0015CF 74 05            [12] 4939 	mov	a,#0x05
      0015D1 9E               [12] 4940 	subb	a,r6
      0015D2 E4               [12] 4941 	clr	a
      0015D3 9F               [12] 4942 	subb	a,r7
      0015D4 40 03            [24] 4943 	jc	00194$
      0015D6 02r16rD2         [24] 4944 	ljmp	00140$
      0015D9                       4945 00194$:
                           0015D9  4946 	C$ff.c$1424$3_0$88 ==.
                                   4947 ;	FATFS\src\ff.c:1424: DWORD sr = seq;
      0015D9 90r00r91         [24] 4948 	mov	dptr,#_gen_numname_sr_131072_88
      0015DC EE               [12] 4949 	mov	a,r6
      0015DD F0               [24] 4950 	movx	@dptr,a
      0015DE EF               [12] 4951 	mov	a,r7
      0015DF A3               [24] 4952 	inc	dptr
      0015E0 F0               [24] 4953 	movx	@dptr,a
      0015E1 E4               [12] 4954 	clr	a
      0015E2 A3               [24] 4955 	inc	dptr
      0015E3 F0               [24] 4956 	movx	@dptr,a
      0015E4 A3               [24] 4957 	inc	dptr
      0015E5 F0               [24] 4958 	movx	@dptr,a
                           0015E6  4959 	C$ff.c$1426$1_0$87 ==.
                                   4960 ;	FATFS\src\ff.c:1426: while (*lfn) {	/* Create a CRC */
      0015E6 90r00r7C         [24] 4961 	mov	dptr,#_gen_numname_PARM_3
      0015E9 E0               [24] 4962 	movx	a,@dptr
      0015EA FD               [12] 4963 	mov	r5,a
      0015EB A3               [24] 4964 	inc	dptr
      0015EC E0               [24] 4965 	movx	a,@dptr
      0015ED FE               [12] 4966 	mov	r6,a
      0015EE A3               [24] 4967 	inc	dptr
      0015EF E0               [24] 4968 	movx	a,@dptr
      0015F0 FF               [12] 4969 	mov	r7,a
      0015F1                       4970 00104$:
      0015F1 8D 82            [24] 4971 	mov	dpl,r5
      0015F3 8E 83            [24] 4972 	mov	dph,r6
      0015F5 8F F0            [24] 4973 	mov	b,r7
      0015F7 12r00r00         [24] 4974 	lcall	__gptrget
      0015FA FB               [12] 4975 	mov	r3,a
      0015FB A3               [24] 4976 	inc	dptr
      0015FC 12r00r00         [24] 4977 	lcall	__gptrget
      0015FF FC               [12] 4978 	mov	r4,a
      001600 4B               [12] 4979 	orl	a,r3
      001601 70 03            [24] 4980 	jnz	00195$
      001603 02r16rBC         [24] 4981 	ljmp	00106$
      001606                       4982 00195$:
                           001606  4983 	C$ff.c$1427$3_0$89 ==.
                                   4984 ;	FATFS\src\ff.c:1427: wc = *lfn++;
      001606 90r00r8F         [24] 4985 	mov	dptr,#_gen_numname_wc_131072_88
      001609 EB               [12] 4986 	mov	a,r3
      00160A F0               [24] 4987 	movx	@dptr,a
      00160B EC               [12] 4988 	mov	a,r4
      00160C A3               [24] 4989 	inc	dptr
      00160D F0               [24] 4990 	movx	@dptr,a
      00160E 74 02            [12] 4991 	mov	a,#0x02
      001610 2D               [12] 4992 	add	a,r5
      001611 FD               [12] 4993 	mov	r5,a
      001612 E4               [12] 4994 	clr	a
      001613 3E               [12] 4995 	addc	a,r6
      001614 FE               [12] 4996 	mov	r6,a
                           001615  4997 	C$ff.c$1428$1_0$87 ==.
                                   4998 ;	FATFS\src\ff.c:1428: for (i = 0; i < 16; i++) {
      001615 7B 10            [12] 4999 	mov	r3,#0x10
      001617 7C 00            [12] 5000 	mov	r4,#0x00
      001619                       5001 00124$:
                           001619  5002 	C$ff.c$1429$1_0$87 ==.
                                   5003 ;	FATFS\src\ff.c:1429: sr = (sr << 1) + (wc & 1);
      001619 C0 05            [24] 5004 	push	ar5
      00161B C0 06            [24] 5005 	push	ar6
      00161D C0 07            [24] 5006 	push	ar7
      00161F 90r00r91         [24] 5007 	mov	dptr,#_gen_numname_sr_131072_88
      001622 E0               [24] 5008 	movx	a,@dptr
      001623 F8               [12] 5009 	mov	r0,a
      001624 A3               [24] 5010 	inc	dptr
      001625 E0               [24] 5011 	movx	a,@dptr
      001626 F9               [12] 5012 	mov	r1,a
      001627 A3               [24] 5013 	inc	dptr
      001628 E0               [24] 5014 	movx	a,@dptr
      001629 FA               [12] 5015 	mov	r2,a
      00162A A3               [24] 5016 	inc	dptr
      00162B E0               [24] 5017 	movx	a,@dptr
      00162C FF               [12] 5018 	mov	r7,a
      00162D E8               [12] 5019 	mov	a,r0
      00162E 28               [12] 5020 	add	a,r0
      00162F F5*42            [12] 5021 	mov	_gen_numname_sloc0_1_0,a
      001631 E9               [12] 5022 	mov	a,r1
      001632 33               [12] 5023 	rlc	a
      001633 F5*43            [12] 5024 	mov	(_gen_numname_sloc0_1_0 + 1),a
      001635 EA               [12] 5025 	mov	a,r2
      001636 33               [12] 5026 	rlc	a
      001637 F5*44            [12] 5027 	mov	(_gen_numname_sloc0_1_0 + 2),a
      001639 EF               [12] 5028 	mov	a,r7
      00163A 33               [12] 5029 	rlc	a
      00163B F5*45            [12] 5030 	mov	(_gen_numname_sloc0_1_0 + 3),a
      00163D 90r00r8F         [24] 5031 	mov	dptr,#_gen_numname_wc_131072_88
      001640 E0               [24] 5032 	movx	a,@dptr
      001641 FD               [12] 5033 	mov	r5,a
      001642 A3               [24] 5034 	inc	dptr
      001643 E0               [24] 5035 	movx	a,@dptr
      001644 FE               [12] 5036 	mov	r6,a
      001645 74 01            [12] 5037 	mov	a,#0x01
      001647 5D               [12] 5038 	anl	a,r5
      001648 FA               [12] 5039 	mov	r2,a
      001649 7F 00            [12] 5040 	mov	r7,#0x00
      00164B 8A 00            [24] 5041 	mov	ar0,r2
      00164D 8F 01            [24] 5042 	mov	ar1,r7
      00164F 7A 00            [12] 5043 	mov	r2,#0x00
      001651 7F 00            [12] 5044 	mov	r7,#0x00
      001653 90r00r91         [24] 5045 	mov	dptr,#_gen_numname_sr_131072_88
      001656 E8               [12] 5046 	mov	a,r0
      001657 25*42            [12] 5047 	add	a,_gen_numname_sloc0_1_0
      001659 F0               [24] 5048 	movx	@dptr,a
      00165A E9               [12] 5049 	mov	a,r1
      00165B 35*43            [12] 5050 	addc	a,(_gen_numname_sloc0_1_0 + 1)
      00165D A3               [24] 5051 	inc	dptr
      00165E F0               [24] 5052 	movx	@dptr,a
      00165F EA               [12] 5053 	mov	a,r2
      001660 35*44            [12] 5054 	addc	a,(_gen_numname_sloc0_1_0 + 2)
      001662 A3               [24] 5055 	inc	dptr
      001663 F0               [24] 5056 	movx	@dptr,a
      001664 EF               [12] 5057 	mov	a,r7
      001665 35*45            [12] 5058 	addc	a,(_gen_numname_sloc0_1_0 + 3)
      001667 A3               [24] 5059 	inc	dptr
      001668 F0               [24] 5060 	movx	@dptr,a
                           001669  5061 	C$ff.c$1430$5_0$91 ==.
                                   5062 ;	FATFS\src\ff.c:1430: wc >>= 1;
      001669 EE               [12] 5063 	mov	a,r6
      00166A C3               [12] 5064 	clr	c
      00166B 13               [12] 5065 	rrc	a
      00166C CD               [12] 5066 	xch	a,r5
      00166D 13               [12] 5067 	rrc	a
      00166E CD               [12] 5068 	xch	a,r5
      00166F FE               [12] 5069 	mov	r6,a
      001670 90r00r8F         [24] 5070 	mov	dptr,#_gen_numname_wc_131072_88
      001673 ED               [12] 5071 	mov	a,r5
      001674 F0               [24] 5072 	movx	@dptr,a
      001675 EE               [12] 5073 	mov	a,r6
      001676 A3               [24] 5074 	inc	dptr
      001677 F0               [24] 5075 	movx	@dptr,a
                           001678  5076 	C$ff.c$1431$5_0$91 ==.
                                   5077 ;	FATFS\src\ff.c:1431: if (sr & 0x10000) sr ^= 0x11021;
      001678 90r00r91         [24] 5078 	mov	dptr,#_gen_numname_sr_131072_88
      00167B E0               [24] 5079 	movx	a,@dptr
      00167C F5*42            [12] 5080 	mov	_gen_numname_sloc0_1_0,a
      00167E A3               [24] 5081 	inc	dptr
      00167F E0               [24] 5082 	movx	a,@dptr
      001680 F5*43            [12] 5083 	mov	(_gen_numname_sloc0_1_0 + 1),a
      001682 A3               [24] 5084 	inc	dptr
      001683 E0               [24] 5085 	movx	a,@dptr
      001684 F5*44            [12] 5086 	mov	(_gen_numname_sloc0_1_0 + 2),a
      001686 A3               [24] 5087 	inc	dptr
      001687 E0               [24] 5088 	movx	a,@dptr
      001688 F5*45            [12] 5089 	mov	(_gen_numname_sloc0_1_0 + 3),a
      00168A E5*44            [12] 5090 	mov	a,(_gen_numname_sloc0_1_0 + 2)
      00168C D0 07            [24] 5091 	pop	ar7
      00168E D0 06            [24] 5092 	pop	ar6
      001690 D0 05            [24] 5093 	pop	ar5
      001692 30 E0 18         [24] 5094 	jnb	acc.0,00102$
      001695 90r00r91         [24] 5095 	mov	dptr,#_gen_numname_sr_131072_88
      001698 74 21            [12] 5096 	mov	a,#0x21
      00169A 65*42            [12] 5097 	xrl	a,_gen_numname_sloc0_1_0
      00169C F0               [24] 5098 	movx	@dptr,a
      00169D 74 10            [12] 5099 	mov	a,#0x10
      00169F 65*43            [12] 5100 	xrl	a,(_gen_numname_sloc0_1_0 + 1)
      0016A1 A3               [24] 5101 	inc	dptr
      0016A2 F0               [24] 5102 	movx	@dptr,a
      0016A3 74 01            [12] 5103 	mov	a,#0x01
      0016A5 65*44            [12] 5104 	xrl	a,(_gen_numname_sloc0_1_0 + 2)
      0016A7 A3               [24] 5105 	inc	dptr
      0016A8 F0               [24] 5106 	movx	@dptr,a
      0016A9 E5*45            [12] 5107 	mov	a,(_gen_numname_sloc0_1_0 + 3)
      0016AB A3               [24] 5108 	inc	dptr
      0016AC F0               [24] 5109 	movx	@dptr,a
      0016AD                       5110 00102$:
      0016AD 1B               [12] 5111 	dec	r3
      0016AE BB FF 01         [24] 5112 	cjne	r3,#0xff,00197$
      0016B1 1C               [12] 5113 	dec	r4
      0016B2                       5114 00197$:
                           0016B2  5115 	C$ff.c$1428$5_0$91 ==.
                                   5116 ;	FATFS\src\ff.c:1428: for (i = 0; i < 16; i++) {
      0016B2 EB               [12] 5117 	mov	a,r3
      0016B3 4C               [12] 5118 	orl	a,r4
      0016B4 60 03            [24] 5119 	jz	00198$
      0016B6 02r16r19         [24] 5120 	ljmp	00124$
      0016B9                       5121 00198$:
      0016B9 02r15rF1         [24] 5122 	ljmp	00104$
      0016BC                       5123 00106$:
                           0016BC  5124 	C$ff.c$1434$2_0$88 ==.
                                   5125 ;	FATFS\src\ff.c:1434: seq = (UINT)sr;
      0016BC 90r00r91         [24] 5126 	mov	dptr,#_gen_numname_sr_131072_88
      0016BF E0               [24] 5127 	movx	a,@dptr
      0016C0 FC               [12] 5128 	mov	r4,a
      0016C1 A3               [24] 5129 	inc	dptr
      0016C2 E0               [24] 5130 	movx	a,@dptr
      0016C3 FD               [12] 5131 	mov	r5,a
      0016C4 A3               [24] 5132 	inc	dptr
      0016C5 E0               [24] 5133 	movx	a,@dptr
      0016C6 FE               [12] 5134 	mov	r6,a
      0016C7 A3               [24] 5135 	inc	dptr
      0016C8 E0               [24] 5136 	movx	a,@dptr
      0016C9 FF               [12] 5137 	mov	r7,a
      0016CA 90r00r7F         [24] 5138 	mov	dptr,#_gen_numname_PARM_4
      0016CD EC               [12] 5139 	mov	a,r4
      0016CE F0               [24] 5140 	movx	@dptr,a
      0016CF ED               [12] 5141 	mov	a,r5
      0016D0 A3               [24] 5142 	inc	dptr
      0016D1 F0               [24] 5143 	movx	@dptr,a
                           0016D2  5144 	C$ff.c$1439$1_0$87 ==.
                                   5145 ;	FATFS\src\ff.c:1439: do {
      0016D2                       5146 00140$:
      0016D2 7E 07            [12] 5147 	mov	r6,#0x07
      0016D4 7F 00            [12] 5148 	mov	r7,#0x00
      0016D6                       5149 00111$:
                           0016D6  5150 	C$ff.c$1440$2_0$92 ==.
                                   5151 ;	FATFS\src\ff.c:1440: c = (seq % 16) + '0';
      0016D6 90r00r7F         [24] 5152 	mov	dptr,#_gen_numname_PARM_4
      0016D9 E0               [24] 5153 	movx	a,@dptr
      0016DA FC               [12] 5154 	mov	r4,a
      0016DB A3               [24] 5155 	inc	dptr
      0016DC E0               [24] 5156 	movx	a,@dptr
      0016DD 53 04 0F         [24] 5157 	anl	ar4,#0x0f
      0016E0 74 30            [12] 5158 	mov	a,#0x30
      0016E2 2C               [12] 5159 	add	a,r4
      0016E3 FD               [12] 5160 	mov	r5,a
      0016E4 90r00r8C         [24] 5161 	mov	dptr,#_gen_numname_c_65536_87
      0016E7 F0               [24] 5162 	movx	@dptr,a
                           0016E8  5163 	C$ff.c$1441$2_0$92 ==.
                                   5164 ;	FATFS\src\ff.c:1441: if (c > '9') c += 7;
      0016E8 8D 04            [24] 5165 	mov	ar4,r5
      0016EA EC               [12] 5166 	mov	a,r4
      0016EB 24 C6            [12] 5167 	add	a,#0xff - 0x39
      0016ED 50 07            [24] 5168 	jnc	00110$
      0016EF 90r00r8C         [24] 5169 	mov	dptr,#_gen_numname_c_65536_87
      0016F2 74 07            [12] 5170 	mov	a,#0x07
      0016F4 2D               [12] 5171 	add	a,r5
      0016F5 F0               [24] 5172 	movx	@dptr,a
      0016F6                       5173 00110$:
                           0016F6  5174 	C$ff.c$1442$2_0$92 ==.
                                   5175 ;	FATFS\src\ff.c:1442: ns[i--] = c;
      0016F6 8E 04            [24] 5176 	mov	ar4,r6
      0016F8 8F 05            [24] 5177 	mov	ar5,r7
      0016FA 1E               [12] 5178 	dec	r6
      0016FB BE FF 01         [24] 5179 	cjne	r6,#0xff,00200$
      0016FE 1F               [12] 5180 	dec	r7
      0016FF                       5181 00200$:
      0016FF EC               [12] 5182 	mov	a,r4
      001700 24r84            [12] 5183 	add	a,#_gen_numname_ns_65536_87
      001702 FC               [12] 5184 	mov	r4,a
      001703 ED               [12] 5185 	mov	a,r5
      001704 34s00            [12] 5186 	addc	a,#(_gen_numname_ns_65536_87 >> 8)
      001706 FD               [12] 5187 	mov	r5,a
      001707 90r00r8C         [24] 5188 	mov	dptr,#_gen_numname_c_65536_87
      00170A E0               [24] 5189 	movx	a,@dptr
      00170B 8C 82            [24] 5190 	mov	dpl,r4
      00170D 8D 83            [24] 5191 	mov	dph,r5
      00170F F0               [24] 5192 	movx	@dptr,a
                           001710  5193 	C$ff.c$1443$2_0$92 ==.
                                   5194 ;	FATFS\src\ff.c:1443: seq /= 16;
      001710 90r00r7F         [24] 5195 	mov	dptr,#_gen_numname_PARM_4
      001713 E0               [24] 5196 	movx	a,@dptr
      001714 FC               [12] 5197 	mov	r4,a
      001715 A3               [24] 5198 	inc	dptr
      001716 E0               [24] 5199 	movx	a,@dptr
      001717 C4               [12] 5200 	swap	a
      001718 CC               [12] 5201 	xch	a,r4
      001719 C4               [12] 5202 	swap	a
      00171A 54 0F            [12] 5203 	anl	a,#0x0f
      00171C 6C               [12] 5204 	xrl	a,r4
      00171D CC               [12] 5205 	xch	a,r4
      00171E 54 0F            [12] 5206 	anl	a,#0x0f
      001720 CC               [12] 5207 	xch	a,r4
      001721 6C               [12] 5208 	xrl	a,r4
      001722 CC               [12] 5209 	xch	a,r4
      001723 FD               [12] 5210 	mov	r5,a
      001724 90r00r7F         [24] 5211 	mov	dptr,#_gen_numname_PARM_4
      001727 EC               [12] 5212 	mov	a,r4
      001728 F0               [24] 5213 	movx	@dptr,a
      001729 ED               [12] 5214 	mov	a,r5
      00172A A3               [24] 5215 	inc	dptr
      00172B F0               [24] 5216 	movx	@dptr,a
                           00172C  5217 	C$ff.c$1444$1_0$87 ==.
                                   5218 ;	FATFS\src\ff.c:1444: } while (seq);
      00172C 90r00r7F         [24] 5219 	mov	dptr,#_gen_numname_PARM_4
      00172F E0               [24] 5220 	movx	a,@dptr
      001730 F5 F0            [12] 5221 	mov	b,a
      001732 A3               [24] 5222 	inc	dptr
      001733 E0               [24] 5223 	movx	a,@dptr
      001734 45 F0            [12] 5224 	orl	a,b
      001736 70 9E            [24] 5225 	jnz	00111$
                           001738  5226 	C$ff.c$1445$1_0$87 ==.
                                   5227 ;	FATFS\src\ff.c:1445: ns[i] = '~';
      001738 90r00r8D         [24] 5228 	mov	dptr,#_gen_numname_i_65536_87
      00173B EE               [12] 5229 	mov	a,r6
      00173C F0               [24] 5230 	movx	@dptr,a
      00173D EF               [12] 5231 	mov	a,r7
      00173E A3               [24] 5232 	inc	dptr
      00173F F0               [24] 5233 	movx	@dptr,a
      001740 EE               [12] 5234 	mov	a,r6
      001741 24r84            [12] 5235 	add	a,#_gen_numname_ns_65536_87
      001743 F5 82            [12] 5236 	mov	dpl,a
      001745 EF               [12] 5237 	mov	a,r7
      001746 34s00            [12] 5238 	addc	a,#(_gen_numname_ns_65536_87 >> 8)
      001748 F5 83            [12] 5239 	mov	dph,a
      00174A 74 7E            [12] 5240 	mov	a,#0x7e
      00174C F0               [24] 5241 	movx	@dptr,a
                           00174D  5242 	C$ff.c$1448$2_0$93 ==.
                                   5243 ;	FATFS\src\ff.c:1448: for (j = 0; j < i && dst[j] != ' '; j++) {
      00174D 90r00r81         [24] 5244 	mov	dptr,#_gen_numname_dst_65536_86
      001750 E0               [24] 5245 	movx	a,@dptr
      001751 FB               [12] 5246 	mov	r3,a
      001752 A3               [24] 5247 	inc	dptr
      001753 E0               [24] 5248 	movx	a,@dptr
      001754 FC               [12] 5249 	mov	r4,a
      001755 A3               [24] 5250 	inc	dptr
      001756 E0               [24] 5251 	movx	a,@dptr
      001757 FD               [12] 5252 	mov	r5,a
      001758 79 00            [12] 5253 	mov	r1,#0x00
      00175A 7A 00            [12] 5254 	mov	r2,#0x00
      00175C                       5255 00127$:
      00175C C3               [12] 5256 	clr	c
      00175D E9               [12] 5257 	mov	a,r1
      00175E 9E               [12] 5258 	subb	a,r6
      00175F EA               [12] 5259 	mov	a,r2
      001760 9F               [12] 5260 	subb	a,r7
      001761 50 2A            [24] 5261 	jnc	00146$
      001763 C0 06            [24] 5262 	push	ar6
      001765 C0 07            [24] 5263 	push	ar7
      001767 E9               [12] 5264 	mov	a,r1
      001768 2B               [12] 5265 	add	a,r3
      001769 F8               [12] 5266 	mov	r0,a
      00176A EA               [12] 5267 	mov	a,r2
      00176B 3C               [12] 5268 	addc	a,r4
      00176C FE               [12] 5269 	mov	r6,a
      00176D 8D 07            [24] 5270 	mov	ar7,r5
      00176F 88 82            [24] 5271 	mov	dpl,r0
      001771 8E 83            [24] 5272 	mov	dph,r6
      001773 8F F0            [24] 5273 	mov	b,r7
      001775 12r00r00         [24] 5274 	lcall	__gptrget
      001778 F8               [12] 5275 	mov	r0,a
      001779 B8 20 06         [24] 5276 	cjne	r0,#0x20,00203$
      00177C D0 07            [24] 5277 	pop	ar7
      00177E D0 06            [24] 5278 	pop	ar6
      001780 80 0B            [24] 5279 	sjmp	00146$
      001782                       5280 00203$:
      001782 D0 07            [24] 5281 	pop	ar7
      001784 D0 06            [24] 5282 	pop	ar6
      001786 09               [12] 5283 	inc	r1
                           001787  5284 	C$ff.c$1454$1_0$87 ==.
                                   5285 ;	FATFS\src\ff.c:1454: do {
      001787 B9 00 D2         [24] 5286 	cjne	r1,#0x00,00127$
      00178A 0A               [12] 5287 	inc	r2
      00178B 80 CF            [24] 5288 	sjmp	00127$
      00178D                       5289 00146$:
      00178D 90r00r81         [24] 5290 	mov	dptr,#_gen_numname_dst_65536_86
      001790 E0               [24] 5291 	movx	a,@dptr
      001791 F5*42            [12] 5292 	mov	_gen_numname_sloc0_1_0,a
      001793 A3               [24] 5293 	inc	dptr
      001794 E0               [24] 5294 	movx	a,@dptr
      001795 F5*43            [12] 5295 	mov	(_gen_numname_sloc0_1_0 + 1),a
      001797 A3               [24] 5296 	inc	dptr
      001798 E0               [24] 5297 	movx	a,@dptr
      001799 F5*44            [12] 5298 	mov	(_gen_numname_sloc0_1_0 + 2),a
      00179B 90r00r8D         [24] 5299 	mov	dptr,#_gen_numname_i_65536_87
      00179E E0               [24] 5300 	movx	a,@dptr
      00179F FB               [12] 5301 	mov	r3,a
      0017A0 A3               [24] 5302 	inc	dptr
      0017A1 E0               [24] 5303 	movx	a,@dptr
      0017A2 FC               [12] 5304 	mov	r4,a
      0017A3                       5305 00119$:
                           0017A3  5306 	C$ff.c$1455$2_0$96 ==.
                                   5307 ;	FATFS\src\ff.c:1455: dst[j++] = (i < 8) ? ns[i++] : ' ';
      0017A3 89 00            [24] 5308 	mov	ar0,r1
      0017A5 8A 07            [24] 5309 	mov	ar7,r2
      0017A7 09               [12] 5310 	inc	r1
      0017A8 B9 00 01         [24] 5311 	cjne	r1,#0x00,00205$
      0017AB 0A               [12] 5312 	inc	r2
      0017AC                       5313 00205$:
      0017AC E8               [12] 5314 	mov	a,r0
      0017AD 25*42            [12] 5315 	add	a,_gen_numname_sloc0_1_0
      0017AF FD               [12] 5316 	mov	r5,a
      0017B0 EF               [12] 5317 	mov	a,r7
      0017B1 35*43            [12] 5318 	addc	a,(_gen_numname_sloc0_1_0 + 1)
      0017B3 FE               [12] 5319 	mov	r6,a
      0017B4 AF*44            [24] 5320 	mov	r7,(_gen_numname_sloc0_1_0 + 2)
      0017B6 C3               [12] 5321 	clr	c
      0017B7 EB               [12] 5322 	mov	a,r3
      0017B8 94 08            [12] 5323 	subb	a,#0x08
      0017BA EC               [12] 5324 	mov	a,r4
      0017BB 94 00            [12] 5325 	subb	a,#0x00
      0017BD 50 28            [24] 5326 	jnc	00131$
      0017BF C0 05            [24] 5327 	push	ar5
      0017C1 C0 06            [24] 5328 	push	ar6
      0017C3 C0 07            [24] 5329 	push	ar7
      0017C5 8B 00            [24] 5330 	mov	ar0,r3
      0017C7 8C 07            [24] 5331 	mov	ar7,r4
      0017C9 0B               [12] 5332 	inc	r3
      0017CA BB 00 01         [24] 5333 	cjne	r3,#0x00,00207$
      0017CD 0C               [12] 5334 	inc	r4
      0017CE                       5335 00207$:
      0017CE E8               [12] 5336 	mov	a,r0
      0017CF 24r84            [12] 5337 	add	a,#_gen_numname_ns_65536_87
      0017D1 F5 82            [12] 5338 	mov	dpl,a
      0017D3 EF               [12] 5339 	mov	a,r7
      0017D4 34s00            [12] 5340 	addc	a,#(_gen_numname_ns_65536_87 >> 8)
      0017D6 F5 83            [12] 5341 	mov	dph,a
      0017D8 E0               [24] 5342 	movx	a,@dptr
      0017D9 FF               [12] 5343 	mov	r7,a
      0017DA 8F*46            [24] 5344 	mov	_gen_numname_sloc1_1_0,r7
      0017DC 75*47 00         [24] 5345 	mov	(_gen_numname_sloc1_1_0 + 1),#0x00
      0017DF D0 07            [24] 5346 	pop	ar7
      0017E1 D0 06            [24] 5347 	pop	ar6
      0017E3 D0 05            [24] 5348 	pop	ar5
      0017E5 80 06            [24] 5349 	sjmp	00132$
      0017E7                       5350 00131$:
      0017E7 75*46 20         [24] 5351 	mov	_gen_numname_sloc1_1_0,#0x20
      0017EA 75*47 00         [24] 5352 	mov	(_gen_numname_sloc1_1_0 + 1),#0x00
      0017ED                       5353 00132$:
      0017ED A8*46            [24] 5354 	mov	r0,_gen_numname_sloc1_1_0
      0017EF 8D 82            [24] 5355 	mov	dpl,r5
      0017F1 8E 83            [24] 5356 	mov	dph,r6
      0017F3 8F F0            [24] 5357 	mov	b,r7
      0017F5 E8               [12] 5358 	mov	a,r0
      0017F6 12r00r00         [24] 5359 	lcall	__gptrput
                           0017F9  5360 	C$ff.c$1456$1_0$87 ==.
                                   5361 ;	FATFS\src\ff.c:1456: } while (j < 8);
      0017F9 C3               [12] 5362 	clr	c
      0017FA E9               [12] 5363 	mov	a,r1
      0017FB 94 08            [12] 5364 	subb	a,#0x08
      0017FD EA               [12] 5365 	mov	a,r2
      0017FE 94 00            [12] 5366 	subb	a,#0x00
      001800 40 A1            [24] 5367 	jc	00119$
                           001802  5368 	C$ff.c$1457$1_0$87 ==.
                                   5369 ;	FATFS\src\ff.c:1457: }
                           001802  5370 	C$ff.c$1457$1_0$87 ==.
                           001802  5371 	XFff$gen_numname$0$0 ==.
      001802 02r00r00         [24] 5372 	ljmp	__sdcc_banked_ret
                                   5373 ;------------------------------------------------------------
                                   5374 ;Allocation info for local variables in function 'sum_sfn'
                                   5375 ;------------------------------------------------------------
                                   5376 ;dir                       Allocated with name '_sum_sfn_dir_65536_97'
                                   5377 ;sum                       Allocated with name '_sum_sfn_sum_65536_98'
                                   5378 ;n                         Allocated with name '_sum_sfn_n_65536_98'
                                   5379 ;------------------------------------------------------------
                           001805  5380 	Fff$sum_sfn$0$0 ==.
                           001805  5381 	C$ff.c$1468$1_0$98 ==.
                                   5382 ;	FATFS\src\ff.c:1468: BYTE sum_sfn (
                                   5383 ;	-----------------------------------------
                                   5384 ;	 function sum_sfn
                                   5385 ;	-----------------------------------------
      001805                       5386 _sum_sfn:
      001805 AF F0            [24] 5387 	mov	r7,b
      001807 AE 83            [24] 5388 	mov	r6,dph
      001809 E5 82            [12] 5389 	mov	a,dpl
      00180B 90r00r95         [24] 5390 	mov	dptr,#_sum_sfn_dir_65536_97
      00180E F0               [24] 5391 	movx	@dptr,a
      00180F EE               [12] 5392 	mov	a,r6
      001810 A3               [24] 5393 	inc	dptr
      001811 F0               [24] 5394 	movx	@dptr,a
      001812 EF               [12] 5395 	mov	a,r7
      001813 A3               [24] 5396 	inc	dptr
      001814 F0               [24] 5397 	movx	@dptr,a
                           001815  5398 	C$ff.c$1472$2_0$98 ==.
                                   5399 ;	FATFS\src\ff.c:1472: BYTE sum = 0;
      001815 90r00r98         [24] 5400 	mov	dptr,#_sum_sfn_sum_65536_98
      001818 E4               [12] 5401 	clr	a
      001819 F0               [24] 5402 	movx	@dptr,a
                           00181A  5403 	C$ff.c$1475$1_0$98 ==.
                                   5404 ;	FATFS\src\ff.c:1475: do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
      00181A 90r00r95         [24] 5405 	mov	dptr,#_sum_sfn_dir_65536_97
      00181D E0               [24] 5406 	movx	a,@dptr
      00181E FD               [12] 5407 	mov	r5,a
      00181F A3               [24] 5408 	inc	dptr
      001820 E0               [24] 5409 	movx	a,@dptr
      001821 FE               [12] 5410 	mov	r6,a
      001822 A3               [24] 5411 	inc	dptr
      001823 E0               [24] 5412 	movx	a,@dptr
      001824 FF               [12] 5413 	mov	r7,a
      001825 7B 0B            [12] 5414 	mov	r3,#0x0b
      001827 7C 00            [12] 5415 	mov	r4,#0x00
      001829                       5416 00101$:
      001829 90r00r98         [24] 5417 	mov	dptr,#_sum_sfn_sum_65536_98
      00182C E0               [24] 5418 	movx	a,@dptr
      00182D FA               [12] 5419 	mov	r2,a
      00182E C3               [12] 5420 	clr	c
      00182F 13               [12] 5421 	rrc	a
      001830 F9               [12] 5422 	mov	r1,a
      001831 EA               [12] 5423 	mov	a,r2
      001832 03               [12] 5424 	rr	a
      001833 54 80            [12] 5425 	anl	a,#0x80
      001835 29               [12] 5426 	add	a,r1
      001836 FA               [12] 5427 	mov	r2,a
      001837 8D 82            [24] 5428 	mov	dpl,r5
      001839 8E 83            [24] 5429 	mov	dph,r6
      00183B 8F F0            [24] 5430 	mov	b,r7
      00183D 12r00r00         [24] 5431 	lcall	__gptrget
      001840 F9               [12] 5432 	mov	r1,a
      001841 A3               [24] 5433 	inc	dptr
      001842 AD 82            [24] 5434 	mov	r5,dpl
      001844 AE 83            [24] 5435 	mov	r6,dph
      001846 90r00r95         [24] 5436 	mov	dptr,#_sum_sfn_dir_65536_97
      001849 ED               [12] 5437 	mov	a,r5
      00184A F0               [24] 5438 	movx	@dptr,a
      00184B EE               [12] 5439 	mov	a,r6
      00184C A3               [24] 5440 	inc	dptr
      00184D F0               [24] 5441 	movx	@dptr,a
      00184E EF               [12] 5442 	mov	a,r7
      00184F A3               [24] 5443 	inc	dptr
      001850 F0               [24] 5444 	movx	@dptr,a
      001851 90r00r98         [24] 5445 	mov	dptr,#_sum_sfn_sum_65536_98
      001854 E9               [12] 5446 	mov	a,r1
      001855 2A               [12] 5447 	add	a,r2
      001856 F0               [24] 5448 	movx	@dptr,a
      001857 1B               [12] 5449 	dec	r3
      001858 BB FF 01         [24] 5450 	cjne	r3,#0xff,00115$
      00185B 1C               [12] 5451 	dec	r4
      00185C                       5452 00115$:
      00185C EB               [12] 5453 	mov	a,r3
      00185D 4C               [12] 5454 	orl	a,r4
      00185E 70 C9            [24] 5455 	jnz	00101$
                           001860  5456 	C$ff.c$1476$1_0$98 ==.
                                   5457 ;	FATFS\src\ff.c:1476: return sum;
      001860 90r00r95         [24] 5458 	mov	dptr,#_sum_sfn_dir_65536_97
      001863 ED               [12] 5459 	mov	a,r5
      001864 F0               [24] 5460 	movx	@dptr,a
      001865 EE               [12] 5461 	mov	a,r6
      001866 A3               [24] 5462 	inc	dptr
      001867 F0               [24] 5463 	movx	@dptr,a
      001868 EF               [12] 5464 	mov	a,r7
      001869 A3               [24] 5465 	inc	dptr
      00186A F0               [24] 5466 	movx	@dptr,a
      00186B 90r00r98         [24] 5467 	mov	dptr,#_sum_sfn_sum_65536_98
      00186E E0               [24] 5468 	movx	a,@dptr
      00186F FF               [12] 5469 	mov	r7,a
      001870 F5 82            [12] 5470 	mov	dpl,a
                           001872  5471 	C$ff.c$1477$1_0$98 ==.
                                   5472 ;	FATFS\src\ff.c:1477: }
                           001872  5473 	C$ff.c$1477$1_0$98 ==.
                           001872  5474 	XFff$sum_sfn$0$0 ==.
      001872 02r00r00         [24] 5475 	ljmp	__sdcc_banked_ret
                                   5476 ;------------------------------------------------------------
                                   5477 ;Allocation info for local variables in function 'dir_find'
                                   5478 ;------------------------------------------------------------
                                   5479 ;sloc0                     Allocated with name '_dir_find_sloc0_1_0'
                                   5480 ;sloc1                     Allocated with name '_dir_find_sloc1_1_0'
                                   5481 ;sloc2                     Allocated with name '_dir_find_sloc2_1_0'
                                   5482 ;sloc3                     Allocated with name '_dir_find_sloc3_1_0'
                                   5483 ;sloc4                     Allocated with name '_dir_find_sloc4_1_0'
                                   5484 ;sloc5                     Allocated with name '_dir_find_sloc5_1_0'
                                   5485 ;sloc6                     Allocated with name '_dir_find_sloc6_1_0'
                                   5486 ;sloc7                     Allocated with name '_dir_find_sloc7_1_0'
                                   5487 ;dp                        Allocated with name '_dir_find_dp_65536_99'
                                   5488 ;res                       Allocated with name '_dir_find_res_65536_100'
                                   5489 ;c                         Allocated with name '_dir_find_c_65536_100'
                                   5490 ;dir                       Allocated with name '_dir_find_dir_65536_100'
                                   5491 ;a                         Allocated with name '_dir_find_a_65536_100'
                                   5492 ;ord                       Allocated with name '_dir_find_ord_65536_100'
                                   5493 ;sum                       Allocated with name '_dir_find_sum_65536_100'
                                   5494 ;------------------------------------------------------------
                           001875  5495 	Fff$dir_find$0$0 ==.
                           001875  5496 	C$ff.c$1488$1_0$100 ==.
                                   5497 ;	FATFS\src\ff.c:1488: FRESULT dir_find (
                                   5498 ;	-----------------------------------------
                                   5499 ;	 function dir_find
                                   5500 ;	-----------------------------------------
      001875                       5501 _dir_find:
      001875 AF F0            [24] 5502 	mov	r7,b
      001877 AE 83            [24] 5503 	mov	r6,dph
      001879 E5 82            [12] 5504 	mov	a,dpl
      00187B 90r00r99         [24] 5505 	mov	dptr,#_dir_find_dp_65536_99
      00187E F0               [24] 5506 	movx	@dptr,a
      00187F EE               [12] 5507 	mov	a,r6
      001880 A3               [24] 5508 	inc	dptr
      001881 F0               [24] 5509 	movx	@dptr,a
      001882 EF               [12] 5510 	mov	a,r7
      001883 A3               [24] 5511 	inc	dptr
      001884 F0               [24] 5512 	movx	@dptr,a
                           001885  5513 	C$ff.c$1498$1_0$100 ==.
                                   5514 ;	FATFS\src\ff.c:1498: res = dir_sdi(dp, 0);			/* Rewind directory object */
      001885 90r00r99         [24] 5515 	mov	dptr,#_dir_find_dp_65536_99
      001888 E0               [24] 5516 	movx	a,@dptr
      001889 FD               [12] 5517 	mov	r5,a
      00188A A3               [24] 5518 	inc	dptr
      00188B E0               [24] 5519 	movx	a,@dptr
      00188C FE               [12] 5520 	mov	r6,a
      00188D A3               [24] 5521 	inc	dptr
      00188E E0               [24] 5522 	movx	a,@dptr
      00188F FF               [12] 5523 	mov	r7,a
      001890 90r00r49         [24] 5524 	mov	dptr,#_dir_sdi_PARM_2
      001893 E4               [12] 5525 	clr	a
      001894 F0               [24] 5526 	movx	@dptr,a
      001895 A3               [24] 5527 	inc	dptr
      001896 F0               [24] 5528 	movx	@dptr,a
      001897 8D 82            [24] 5529 	mov	dpl,r5
      001899 8E 83            [24] 5530 	mov	dph,r6
      00189B 8F F0            [24] 5531 	mov	b,r7
      00189D 78r7F            [12] 5532 	mov	r0,#_dir_sdi
      00189F 79s09            [12] 5533 	mov	r1,#(_dir_sdi >> 8)
      0018A1 7As00            [12] 5534 	mov	r2,#(_dir_sdi >> 16)
      0018A3 12r00r00         [24] 5535 	lcall	__sdcc_banked_call
                           0018A6  5536 	C$ff.c$1499$1_0$100 ==.
                                   5537 ;	FATFS\src\ff.c:1499: if (res != FR_OK) return res;
      0018A6 E5 82            [12] 5538 	mov	a,dpl
      0018A8 FF               [12] 5539 	mov	r7,a
      0018A9 60 05            [24] 5540 	jz	00102$
      0018AB 8F 82            [24] 5541 	mov	dpl,r7
      0018AD 02r00r00         [24] 5542 	ljmp	__sdcc_banked_ret
      0018B0                       5543 00102$:
                           0018B0  5544 	C$ff.c$1502$1_0$100 ==.
                                   5545 ;	FATFS\src\ff.c:1502: ord = sum = 0xFF;
      0018B0 90r00r9F         [24] 5546 	mov	dptr,#_dir_find_sum_65536_100
      0018B3 74 FF            [12] 5547 	mov	a,#0xff
      0018B5 F0               [24] 5548 	movx	@dptr,a
      0018B6 90r00r9E         [24] 5549 	mov	dptr,#_dir_find_ord_65536_100
      0018B9 F0               [24] 5550 	movx	@dptr,a
                           0018BA  5551 	C$ff.c$1504$5_0$106 ==.
                                   5552 ;	FATFS\src\ff.c:1504: do {
      0018BA 90r00r99         [24] 5553 	mov	dptr,#_dir_find_dp_65536_99
      0018BD E0               [24] 5554 	movx	a,@dptr
      0018BE FD               [12] 5555 	mov	r5,a
      0018BF A3               [24] 5556 	inc	dptr
      0018C0 E0               [24] 5557 	movx	a,@dptr
      0018C1 FE               [12] 5558 	mov	r6,a
      0018C2 A3               [24] 5559 	inc	dptr
      0018C3 E0               [24] 5560 	movx	a,@dptr
      0018C4 FF               [12] 5561 	mov	r7,a
      0018C5 74 19            [12] 5562 	mov	a,#0x19
      0018C7 2D               [12] 5563 	add	a,r5
      0018C8 F5*5B            [12] 5564 	mov	_dir_find_sloc7_1_0,a
      0018CA E4               [12] 5565 	clr	a
      0018CB 3E               [12] 5566 	addc	a,r6
      0018CC F5*5C            [12] 5567 	mov	(_dir_find_sloc7_1_0 + 1),a
      0018CE 8F*5D            [24] 5568 	mov	(_dir_find_sloc7_1_0 + 2),r7
      0018D0 8D*48            [24] 5569 	mov	_dir_find_sloc0_1_0,r5
      0018D2 8E*49            [24] 5570 	mov	(_dir_find_sloc0_1_0 + 1),r6
      0018D4 8F*4A            [24] 5571 	mov	(_dir_find_sloc0_1_0 + 2),r7
      0018D6 74 16            [12] 5572 	mov	a,#0x16
      0018D8 2D               [12] 5573 	add	a,r5
      0018D9 F5*4B            [12] 5574 	mov	_dir_find_sloc1_1_0,a
      0018DB E4               [12] 5575 	clr	a
      0018DC 3E               [12] 5576 	addc	a,r6
      0018DD F5*4C            [12] 5577 	mov	(_dir_find_sloc1_1_0 + 1),a
      0018DF 8F*4D            [24] 5578 	mov	(_dir_find_sloc1_1_0 + 2),r7
      0018E1 8D*4E            [24] 5579 	mov	_dir_find_sloc2_1_0,r5
      0018E3 8E*4F            [24] 5580 	mov	(_dir_find_sloc2_1_0 + 1),r6
      0018E5 8F*50            [24] 5581 	mov	(_dir_find_sloc2_1_0 + 2),r7
      0018E7 85*5B*51         [24] 5582 	mov	_dir_find_sloc3_1_0,_dir_find_sloc7_1_0
      0018EA 85*5C*52         [24] 5583 	mov	(_dir_find_sloc3_1_0 + 1),(_dir_find_sloc7_1_0 + 1)
      0018ED 85*5D*53         [24] 5584 	mov	(_dir_find_sloc3_1_0 + 2),(_dir_find_sloc7_1_0 + 2)
      0018F0 8D*54            [24] 5585 	mov	_dir_find_sloc4_1_0,r5
      0018F2 8E*55            [24] 5586 	mov	(_dir_find_sloc4_1_0 + 1),r6
      0018F4 8F*56            [24] 5587 	mov	(_dir_find_sloc4_1_0 + 2),r7
      0018F6 74 0F            [12] 5588 	mov	a,#0x0f
      0018F8 2D               [12] 5589 	add	a,r5
      0018F9 F5*57            [12] 5590 	mov	_dir_find_sloc5_1_0,a
      0018FB E4               [12] 5591 	clr	a
      0018FC 3E               [12] 5592 	addc	a,r6
      0018FD F5*58            [12] 5593 	mov	(_dir_find_sloc5_1_0 + 1),a
      0018FF 8F*59            [24] 5594 	mov	(_dir_find_sloc5_1_0 + 2),r7
      001901                       5595 00125$:
                           001901  5596 	C$ff.c$1505$1_0$100 ==.
                                   5597 ;	FATFS\src\ff.c:1505: res = move_window(dp->fs, dp->sect);
      001901 85*54 82         [24] 5598 	mov	dpl,_dir_find_sloc4_1_0
      001904 85*55 83         [24] 5599 	mov	dph,(_dir_find_sloc4_1_0 + 1)
      001907 85*56 F0         [24] 5600 	mov	b,(_dir_find_sloc4_1_0 + 2)
      00190A 12r00r00         [24] 5601 	lcall	__gptrget
      00190D F8               [12] 5602 	mov	r0,a
      00190E A3               [24] 5603 	inc	dptr
      00190F 12r00r00         [24] 5604 	lcall	__gptrget
      001912 F9               [12] 5605 	mov	r1,a
      001913 A3               [24] 5606 	inc	dptr
      001914 12r00r00         [24] 5607 	lcall	__gptrget
      001917 FC               [12] 5608 	mov	r4,a
      001918 85*57 82         [24] 5609 	mov	dpl,_dir_find_sloc5_1_0
      00191B 85*58 83         [24] 5610 	mov	dph,(_dir_find_sloc5_1_0 + 1)
      00191E 85*59 F0         [24] 5611 	mov	b,(_dir_find_sloc5_1_0 + 2)
      001921 12r00r00         [24] 5612 	lcall	__gptrget
      001924 FA               [12] 5613 	mov	r2,a
      001925 A3               [24] 5614 	inc	dptr
      001926 12r00r00         [24] 5615 	lcall	__gptrget
      001929 FB               [12] 5616 	mov	r3,a
      00192A A3               [24] 5617 	inc	dptr
      00192B 12r00r00         [24] 5618 	lcall	__gptrget
      00192E FE               [12] 5619 	mov	r6,a
      00192F A3               [24] 5620 	inc	dptr
      001930 12r00r00         [24] 5621 	lcall	__gptrget
      001933 FF               [12] 5622 	mov	r7,a
      001934 90r00r26         [24] 5623 	mov	dptr,#_move_window_PARM_2
      001937 EA               [12] 5624 	mov	a,r2
      001938 F0               [24] 5625 	movx	@dptr,a
      001939 EB               [12] 5626 	mov	a,r3
      00193A A3               [24] 5627 	inc	dptr
      00193B F0               [24] 5628 	movx	@dptr,a
      00193C EE               [12] 5629 	mov	a,r6
      00193D A3               [24] 5630 	inc	dptr
      00193E F0               [24] 5631 	movx	@dptr,a
      00193F EF               [12] 5632 	mov	a,r7
      001940 A3               [24] 5633 	inc	dptr
      001941 F0               [24] 5634 	movx	@dptr,a
      001942 88 82            [24] 5635 	mov	dpl,r0
      001944 89 83            [24] 5636 	mov	dph,r1
      001946 8C F0            [24] 5637 	mov	b,r4
      001948 78rB4            [12] 5638 	mov	r0,#_move_window
      00194A 79s01            [12] 5639 	mov	r1,#(_move_window >> 8)
      00194C 7As00            [12] 5640 	mov	r2,#(_move_window >> 16)
      00194E 12r00r00         [24] 5641 	lcall	__sdcc_banked_call
      001951 AF 82            [24] 5642 	mov	r7,dpl
      001953 90r00r9C         [24] 5643 	mov	dptr,#_dir_find_res_65536_100
      001956 EF               [12] 5644 	mov	a,r7
      001957 F0               [24] 5645 	movx	@dptr,a
                           001958  5646 	C$ff.c$1506$1_0$100 ==.
                                   5647 ;	FATFS\src\ff.c:1506: if (res != FR_OK) break;
      001958 EF               [12] 5648 	mov	a,r7
      001959 60 03            [24] 5649 	jz	00193$
      00195B 02r1BrB7         [24] 5650 	ljmp	00127$
      00195E                       5651 00193$:
                           00195E  5652 	C$ff.c$1507$2_0$101 ==.
                                   5653 ;	FATFS\src\ff.c:1507: dir = dp->dir;					/* Ptr to the directory entry of current index */
      00195E 74 13            [12] 5654 	mov	a,#0x13
      001960 25*54            [12] 5655 	add	a,_dir_find_sloc4_1_0
      001962 FD               [12] 5656 	mov	r5,a
      001963 E4               [12] 5657 	clr	a
      001964 35*55            [12] 5658 	addc	a,(_dir_find_sloc4_1_0 + 1)
      001966 FE               [12] 5659 	mov	r6,a
      001967 AF*56            [24] 5660 	mov	r7,(_dir_find_sloc4_1_0 + 2)
      001969 8D 82            [24] 5661 	mov	dpl,r5
      00196B 8E 83            [24] 5662 	mov	dph,r6
      00196D 8F F0            [24] 5663 	mov	b,r7
      00196F 12r00r00         [24] 5664 	lcall	__gptrget
      001972 FD               [12] 5665 	mov	r5,a
      001973 A3               [24] 5666 	inc	dptr
      001974 12r00r00         [24] 5667 	lcall	__gptrget
      001977 FE               [12] 5668 	mov	r6,a
      001978 A3               [24] 5669 	inc	dptr
      001979 12r00r00         [24] 5670 	lcall	__gptrget
      00197C FF               [12] 5671 	mov	r7,a
                           00197D  5672 	C$ff.c$1508$2_0$101 ==.
                                   5673 ;	FATFS\src\ff.c:1508: c = dir[DIR_Name];
      00197D 8D 82            [24] 5674 	mov	dpl,r5
      00197F 8E 83            [24] 5675 	mov	dph,r6
      001981 8F F0            [24] 5676 	mov	b,r7
      001983 12r00r00         [24] 5677 	lcall	__gptrget
      001986 F9               [12] 5678 	mov	r1,a
      001987 90r00r9D         [24] 5679 	mov	dptr,#_dir_find_c_65536_100
      00198A F0               [24] 5680 	movx	@dptr,a
                           00198B  5681 	C$ff.c$1509$2_0$101 ==.
                                   5682 ;	FATFS\src\ff.c:1509: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
      00198B E9               [12] 5683 	mov	a,r1
      00198C 70 09            [24] 5684 	jnz	00106$
      00198E 90r00r9C         [24] 5685 	mov	dptr,#_dir_find_res_65536_100
      001991 74 04            [12] 5686 	mov	a,#0x04
      001993 F0               [24] 5687 	movx	@dptr,a
      001994 02r1BrB7         [24] 5688 	ljmp	00127$
      001997                       5689 00106$:
                           001997  5690 	C$ff.c$1511$1_0$100 ==.
                                   5691 ;	FATFS\src\ff.c:1511: a = dir[DIR_Attr] & AM_MASK;
      001997 74 0B            [12] 5692 	mov	a,#0x0b
      001999 2D               [12] 5693 	add	a,r5
      00199A F8               [12] 5694 	mov	r0,a
      00199B E4               [12] 5695 	clr	a
      00199C 3E               [12] 5696 	addc	a,r6
      00199D FB               [12] 5697 	mov	r3,a
      00199E 8F 04            [24] 5698 	mov	ar4,r7
      0019A0 88 82            [24] 5699 	mov	dpl,r0
      0019A2 8B 83            [24] 5700 	mov	dph,r3
      0019A4 8C F0            [24] 5701 	mov	b,r4
      0019A6 12r00r00         [24] 5702 	lcall	__gptrget
      0019A9 F8               [12] 5703 	mov	r0,a
      0019AA 74 3F            [12] 5704 	mov	a,#0x3f
      0019AC 58               [12] 5705 	anl	a,r0
      0019AD F5*5A            [12] 5706 	mov	_dir_find_sloc6_1_0,a
                           0019AF  5707 	C$ff.c$1512$2_0$101 ==.
                                   5708 ;	FATFS\src\ff.c:1512: if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
      0019AF B9 E5 02         [24] 5709 	cjne	r1,#0xe5,00195$
      0019B2 80 0C            [24] 5710 	sjmp	00120$
      0019B4                       5711 00195$:
      0019B4 E5*5A            [12] 5712 	mov	a,_dir_find_sloc6_1_0
      0019B6 30 E3 10         [24] 5713 	jnb	acc.3,00121$
      0019B9 74 0F            [12] 5714 	mov	a,#0x0f
      0019BB B5*5A 02         [24] 5715 	cjne	a,_dir_find_sloc6_1_0,00197$
      0019BE 80 09            [24] 5716 	sjmp	00121$
      0019C0                       5717 00197$:
      0019C0                       5718 00120$:
                           0019C0  5719 	C$ff.c$1513$3_0$103 ==.
                                   5720 ;	FATFS\src\ff.c:1513: ord = 0xFF;
      0019C0 90r00r9E         [24] 5721 	mov	dptr,#_dir_find_ord_65536_100
      0019C3 74 FF            [12] 5722 	mov	a,#0xff
      0019C5 F0               [24] 5723 	movx	@dptr,a
      0019C6 02r1Br89         [24] 5724 	ljmp	00122$
      0019C9                       5725 00121$:
                           0019C9  5726 	C$ff.c$1515$3_0$104 ==.
                                   5727 ;	FATFS\src\ff.c:1515: if (a == AM_LFN) {			/* An LFN entry is found */
      0019C9 74 0F            [12] 5728 	mov	a,#0x0f
      0019CB B5*5A 02         [24] 5729 	cjne	a,_dir_find_sloc6_1_0,00198$
      0019CE 80 03            [24] 5730 	sjmp	00199$
      0019D0                       5731 00198$:
      0019D0 02r1ArD6         [24] 5732 	ljmp	00118$
      0019D3                       5733 00199$:
                           0019D3  5734 	C$ff.c$1516$4_0$105 ==.
                                   5735 ;	FATFS\src\ff.c:1516: if (dp->lfn) {
      0019D3 85*51 82         [24] 5736 	mov	dpl,_dir_find_sloc3_1_0
      0019D6 85*52 83         [24] 5737 	mov	dph,(_dir_find_sloc3_1_0 + 1)
      0019D9 85*53 F0         [24] 5738 	mov	b,(_dir_find_sloc3_1_0 + 2)
      0019DC 12r00r00         [24] 5739 	lcall	__gptrget
      0019DF F8               [12] 5740 	mov	r0,a
      0019E0 A3               [24] 5741 	inc	dptr
      0019E1 12r00r00         [24] 5742 	lcall	__gptrget
      0019E4 F9               [12] 5743 	mov	r1,a
      0019E5 A3               [24] 5744 	inc	dptr
      0019E6 12r00r00         [24] 5745 	lcall	__gptrget
      0019E9 FC               [12] 5746 	mov	r4,a
      0019EA E8               [12] 5747 	mov	a,r0
      0019EB 49               [12] 5748 	orl	a,r1
      0019EC 70 03            [24] 5749 	jnz	00200$
      0019EE 02r1Br89         [24] 5750 	ljmp	00122$
      0019F1                       5751 00200$:
                           0019F1  5752 	C$ff.c$1517$5_0$106 ==.
                                   5753 ;	FATFS\src\ff.c:1517: if (c & LLE) {		/* Is it start of LFN sequence? */
      0019F1 90r00r9D         [24] 5754 	mov	dptr,#_dir_find_c_65536_100
      0019F4 E0               [24] 5755 	movx	a,@dptr
      0019F5 FC               [12] 5756 	mov	r4,a
      0019F6 30 E6 62         [24] 5757 	jnb	acc.6,00108$
                           0019F9  5758 	C$ff.c$1518$6_0$107 ==.
                                   5759 ;	FATFS\src\ff.c:1518: sum = dir[LDIR_Chksum];
      0019F9 74 0D            [12] 5760 	mov	a,#0x0d
      0019FB 2D               [12] 5761 	add	a,r5
      0019FC F9               [12] 5762 	mov	r1,a
      0019FD E4               [12] 5763 	clr	a
      0019FE 3E               [12] 5764 	addc	a,r6
      0019FF FA               [12] 5765 	mov	r2,a
      001A00 8F 03            [24] 5766 	mov	ar3,r7
      001A02 89 82            [24] 5767 	mov	dpl,r1
      001A04 8A 83            [24] 5768 	mov	dph,r2
      001A06 8B F0            [24] 5769 	mov	b,r3
      001A08 12r00r00         [24] 5770 	lcall	__gptrget
      001A0B 90r00r9F         [24] 5771 	mov	dptr,#_dir_find_sum_65536_100
      001A0E F0               [24] 5772 	movx	@dptr,a
                           001A0F  5773 	C$ff.c$1519$6_0$107 ==.
                                   5774 ;	FATFS\src\ff.c:1519: c &= ~LLE; ord = c;	/* LFN start order */
      001A0F 90r00r9D         [24] 5775 	mov	dptr,#_dir_find_c_65536_100
      001A12 74 BF            [12] 5776 	mov	a,#0xbf
      001A14 5C               [12] 5777 	anl	a,r4
      001A15 F0               [24] 5778 	movx	@dptr,a
      001A16 E0               [24] 5779 	movx	a,@dptr
      001A17 90r00r9E         [24] 5780 	mov	dptr,#_dir_find_ord_65536_100
      001A1A F0               [24] 5781 	movx	@dptr,a
                           001A1B  5782 	C$ff.c$1520$6_0$107 ==.
                                   5783 ;	FATFS\src\ff.c:1520: dp->lfn_idx = dp->index;
      001A1B 74 1C            [12] 5784 	mov	a,#0x1c
      001A1D 25*4E            [12] 5785 	add	a,_dir_find_sloc2_1_0
      001A1F FA               [12] 5786 	mov	r2,a
      001A20 E4               [12] 5787 	clr	a
      001A21 35*4F            [12] 5788 	addc	a,(_dir_find_sloc2_1_0 + 1)
      001A23 FB               [12] 5789 	mov	r3,a
      001A24 AC*50            [24] 5790 	mov	r4,(_dir_find_sloc2_1_0 + 2)
      001A26 C0 05            [24] 5791 	push	ar5
      001A28 C0 06            [24] 5792 	push	ar6
      001A2A C0 07            [24] 5793 	push	ar7
      001A2C 74 05            [12] 5794 	mov	a,#0x05
      001A2E 25*4E            [12] 5795 	add	a,_dir_find_sloc2_1_0
      001A30 F8               [12] 5796 	mov	r0,a
      001A31 E4               [12] 5797 	clr	a
      001A32 35*4F            [12] 5798 	addc	a,(_dir_find_sloc2_1_0 + 1)
      001A34 F9               [12] 5799 	mov	r1,a
      001A35 AF*50            [24] 5800 	mov	r7,(_dir_find_sloc2_1_0 + 2)
      001A37 88 82            [24] 5801 	mov	dpl,r0
      001A39 89 83            [24] 5802 	mov	dph,r1
      001A3B 8F F0            [24] 5803 	mov	b,r7
      001A3D 12r00r00         [24] 5804 	lcall	__gptrget
      001A40 F8               [12] 5805 	mov	r0,a
      001A41 A3               [24] 5806 	inc	dptr
      001A42 12r00r00         [24] 5807 	lcall	__gptrget
      001A45 F9               [12] 5808 	mov	r1,a
      001A46 8A 82            [24] 5809 	mov	dpl,r2
      001A48 8B 83            [24] 5810 	mov	dph,r3
      001A4A 8C F0            [24] 5811 	mov	b,r4
      001A4C E8               [12] 5812 	mov	a,r0
      001A4D 12r00r00         [24] 5813 	lcall	__gptrput
      001A50 A3               [24] 5814 	inc	dptr
      001A51 E9               [12] 5815 	mov	a,r1
      001A52 12r00r00         [24] 5816 	lcall	__gptrput
                           001A55  5817 	C$ff.c$1538$1_0$100 ==.
                                   5818 ;	FATFS\src\ff.c:1538: return res;
      001A55 D0 07            [24] 5819 	pop	ar7
      001A57 D0 06            [24] 5820 	pop	ar6
      001A59 D0 05            [24] 5821 	pop	ar5
                           001A5B  5822 	C$ff.c$1520$5_0$106 ==.
                                   5823 ;	FATFS\src\ff.c:1520: dp->lfn_idx = dp->index;
      001A5B                       5824 00108$:
                           001A5B  5825 	C$ff.c$1523$5_0$106 ==.
                                   5826 ;	FATFS\src\ff.c:1523: ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
      001A5B 90r00r9D         [24] 5827 	mov	dptr,#_dir_find_c_65536_100
      001A5E E0               [24] 5828 	movx	a,@dptr
      001A5F FC               [12] 5829 	mov	r4,a
      001A60 90r00r9E         [24] 5830 	mov	dptr,#_dir_find_ord_65536_100
      001A63 E0               [24] 5831 	movx	a,@dptr
      001A64 FB               [12] 5832 	mov	r3,a
      001A65 EC               [12] 5833 	mov	a,r4
      001A66 B5 03 61         [24] 5834 	cjne	a,ar3,00130$
      001A69 74 0D            [12] 5835 	mov	a,#0x0d
      001A6B 2D               [12] 5836 	add	a,r5
      001A6C F9               [12] 5837 	mov	r1,a
      001A6D E4               [12] 5838 	clr	a
      001A6E 3E               [12] 5839 	addc	a,r6
      001A6F FA               [12] 5840 	mov	r2,a
      001A70 8F 04            [24] 5841 	mov	ar4,r7
      001A72 89 82            [24] 5842 	mov	dpl,r1
      001A74 8A 83            [24] 5843 	mov	dph,r2
      001A76 8C F0            [24] 5844 	mov	b,r4
      001A78 12r00r00         [24] 5845 	lcall	__gptrget
      001A7B F9               [12] 5846 	mov	r1,a
      001A7C 90r00r9F         [24] 5847 	mov	dptr,#_dir_find_sum_65536_100
      001A7F E0               [24] 5848 	movx	a,@dptr
      001A80 FC               [12] 5849 	mov	r4,a
      001A81 B5 01 46         [24] 5850 	cjne	a,ar1,00130$
      001A84 85*5B 82         [24] 5851 	mov	dpl,_dir_find_sloc7_1_0
      001A87 85*5C 83         [24] 5852 	mov	dph,(_dir_find_sloc7_1_0 + 1)
      001A8A 85*5D F0         [24] 5853 	mov	b,(_dir_find_sloc7_1_0 + 2)
      001A8D 12r00r00         [24] 5854 	lcall	__gptrget
      001A90 F9               [12] 5855 	mov	r1,a
      001A91 A3               [24] 5856 	inc	dptr
      001A92 12r00r00         [24] 5857 	lcall	__gptrget
      001A95 FA               [12] 5858 	mov	r2,a
      001A96 A3               [24] 5859 	inc	dptr
      001A97 12r00r00         [24] 5860 	lcall	__gptrget
      001A9A FC               [12] 5861 	mov	r4,a
      001A9B 90r00r65         [24] 5862 	mov	dptr,#_cmp_lfn_PARM_2
      001A9E ED               [12] 5863 	mov	a,r5
      001A9F F0               [24] 5864 	movx	@dptr,a
      001AA0 EE               [12] 5865 	mov	a,r6
      001AA1 A3               [24] 5866 	inc	dptr
      001AA2 F0               [24] 5867 	movx	@dptr,a
      001AA3 EF               [12] 5868 	mov	a,r7
      001AA4 A3               [24] 5869 	inc	dptr
      001AA5 F0               [24] 5870 	movx	@dptr,a
      001AA6 89 82            [24] 5871 	mov	dpl,r1
      001AA8 8A 83            [24] 5872 	mov	dph,r2
      001AAA 8C F0            [24] 5873 	mov	b,r4
      001AAC C0 03            [24] 5874 	push	ar3
      001AAE 78r3B            [12] 5875 	mov	r0,#_cmp_lfn
      001AB0 79s12            [12] 5876 	mov	r1,#(_cmp_lfn >> 8)
      001AB2 7As00            [12] 5877 	mov	r2,#(_cmp_lfn >> 16)
      001AB4 12r00r00         [24] 5878 	lcall	__sdcc_banked_call
      001AB7 E5 82            [12] 5879 	mov	a,dpl
      001AB9 85 83 F0         [24] 5880 	mov	b,dph
      001ABC D0 03            [24] 5881 	pop	ar3
      001ABE 45 F0            [12] 5882 	orl	a,b
      001AC0 60 08            [24] 5883 	jz	00130$
      001AC2 1B               [12] 5884 	dec	r3
      001AC3 EB               [12] 5885 	mov	a,r3
      001AC4 33               [12] 5886 	rlc	a
      001AC5 95 E0            [12] 5887 	subb	a,acc
      001AC7 FC               [12] 5888 	mov	r4,a
      001AC8 80 04            [24] 5889 	sjmp	00131$
      001ACA                       5890 00130$:
      001ACA 7B FF            [12] 5891 	mov	r3,#0xff
      001ACC 7C 00            [12] 5892 	mov	r4,#0x00
      001ACE                       5893 00131$:
      001ACE 90r00r9E         [24] 5894 	mov	dptr,#_dir_find_ord_65536_100
      001AD1 EB               [12] 5895 	mov	a,r3
      001AD2 F0               [24] 5896 	movx	@dptr,a
      001AD3 02r1Br89         [24] 5897 	ljmp	00122$
      001AD6                       5898 00118$:
                           001AD6  5899 	C$ff.c$1526$4_0$108 ==.
                                   5900 ;	FATFS\src\ff.c:1526: if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
      001AD6 90r00r9E         [24] 5901 	mov	dptr,#_dir_find_ord_65536_100
      001AD9 E0               [24] 5902 	movx	a,@dptr
      001ADA 70 28            [24] 5903 	jnz	00112$
      001ADC 8D 82            [24] 5904 	mov	dpl,r5
      001ADE 8E 83            [24] 5905 	mov	dph,r6
      001AE0 8F F0            [24] 5906 	mov	b,r7
      001AE2 C0 07            [24] 5907 	push	ar7
      001AE4 C0 06            [24] 5908 	push	ar6
      001AE6 C0 05            [24] 5909 	push	ar5
      001AE8 78r05            [12] 5910 	mov	r0,#_sum_sfn
      001AEA 79s18            [12] 5911 	mov	r1,#(_sum_sfn >> 8)
      001AEC 7As00            [12] 5912 	mov	r2,#(_sum_sfn >> 16)
      001AEE 12r00r00         [24] 5913 	lcall	__sdcc_banked_call
      001AF1 AC 82            [24] 5914 	mov	r4,dpl
      001AF3 D0 05            [24] 5915 	pop	ar5
      001AF5 D0 06            [24] 5916 	pop	ar6
      001AF7 D0 07            [24] 5917 	pop	ar7
      001AF9 90r00r9F         [24] 5918 	mov	dptr,#_dir_find_sum_65536_100
      001AFC E0               [24] 5919 	movx	a,@dptr
      001AFD FB               [12] 5920 	mov	r3,a
      001AFE B5 04 03         [24] 5921 	cjne	a,ar4,00208$
      001B01 02r1BrB7         [24] 5922 	ljmp	00127$
      001B04                       5923 00208$:
      001B04                       5924 00112$:
                           001B04  5925 	C$ff.c$1527$1_0$100 ==.
                                   5926 ;	FATFS\src\ff.c:1527: ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
      001B04 C0 05            [24] 5927 	push	ar5
      001B06 C0 06            [24] 5928 	push	ar6
      001B08 C0 07            [24] 5929 	push	ar7
      001B0A 90r00r9E         [24] 5930 	mov	dptr,#_dir_find_ord_65536_100
      001B0D 74 FF            [12] 5931 	mov	a,#0xff
      001B0F F0               [24] 5932 	movx	@dptr,a
      001B10 74 1C            [12] 5933 	mov	a,#0x1c
      001B12 25*48            [12] 5934 	add	a,_dir_find_sloc0_1_0
      001B14 FA               [12] 5935 	mov	r2,a
      001B15 E4               [12] 5936 	clr	a
      001B16 35*49            [12] 5937 	addc	a,(_dir_find_sloc0_1_0 + 1)
      001B18 FB               [12] 5938 	mov	r3,a
      001B19 AC*4A            [24] 5939 	mov	r4,(_dir_find_sloc0_1_0 + 2)
      001B1B 8A 82            [24] 5940 	mov	dpl,r2
      001B1D 8B 83            [24] 5941 	mov	dph,r3
      001B1F 8C F0            [24] 5942 	mov	b,r4
      001B21 74 FF            [12] 5943 	mov	a,#0xff
      001B23 12r00r00         [24] 5944 	lcall	__gptrput
      001B26 A3               [24] 5945 	inc	dptr
      001B27 12r00r00         [24] 5946 	lcall	__gptrput
                           001B2A  5947 	C$ff.c$1528$4_0$108 ==.
                                   5948 ;	FATFS\src\ff.c:1528: if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
      001B2A 85*4B 82         [24] 5949 	mov	dpl,_dir_find_sloc1_1_0
      001B2D 85*4C 83         [24] 5950 	mov	dph,(_dir_find_sloc1_1_0 + 1)
      001B30 85*4D F0         [24] 5951 	mov	b,(_dir_find_sloc1_1_0 + 2)
      001B33 12r00r00         [24] 5952 	lcall	__gptrget
      001B36 FA               [12] 5953 	mov	r2,a
      001B37 A3               [24] 5954 	inc	dptr
      001B38 12r00r00         [24] 5955 	lcall	__gptrget
      001B3B FB               [12] 5956 	mov	r3,a
      001B3C A3               [24] 5957 	inc	dptr
      001B3D 12r00r00         [24] 5958 	lcall	__gptrget
      001B40 FC               [12] 5959 	mov	r4,a
      001B41 74 0B            [12] 5960 	mov	a,#0x0b
      001B43 2A               [12] 5961 	add	a,r2
      001B44 F8               [12] 5962 	mov	r0,a
      001B45 E4               [12] 5963 	clr	a
      001B46 3B               [12] 5964 	addc	a,r3
      001B47 F9               [12] 5965 	mov	r1,a
      001B48 8C 07            [24] 5966 	mov	ar7,r4
      001B4A 88 82            [24] 5967 	mov	dpl,r0
      001B4C 89 83            [24] 5968 	mov	dph,r1
      001B4E 8F F0            [24] 5969 	mov	b,r7
      001B50 12r00r00         [24] 5970 	lcall	__gptrget
      001B53 F8               [12] 5971 	mov	r0,a
      001B54 D0 07            [24] 5972 	pop	ar7
      001B56 D0 06            [24] 5973 	pop	ar6
      001B58 D0 05            [24] 5974 	pop	ar5
      001B5A 20 E0 2C         [24] 5975 	jb	acc.0,00122$
      001B5D 90r00r17         [24] 5976 	mov	dptr,#_mem_cmp_PARM_2
      001B60 EA               [12] 5977 	mov	a,r2
      001B61 F0               [24] 5978 	movx	@dptr,a
      001B62 EB               [12] 5979 	mov	a,r3
      001B63 A3               [24] 5980 	inc	dptr
      001B64 F0               [24] 5981 	movx	@dptr,a
      001B65 EC               [12] 5982 	mov	a,r4
      001B66 A3               [24] 5983 	inc	dptr
      001B67 F0               [24] 5984 	movx	@dptr,a
      001B68 90r00r1A         [24] 5985 	mov	dptr,#_mem_cmp_PARM_3
      001B6B 74 0B            [12] 5986 	mov	a,#0x0b
      001B6D F0               [24] 5987 	movx	@dptr,a
      001B6E E4               [12] 5988 	clr	a
      001B6F A3               [24] 5989 	inc	dptr
      001B70 F0               [24] 5990 	movx	@dptr,a
      001B71 8D 82            [24] 5991 	mov	dpl,r5
      001B73 8E 83            [24] 5992 	mov	dph,r6
      001B75 8F F0            [24] 5993 	mov	b,r7
      001B77 78rB4            [12] 5994 	mov	r0,#_mem_cmp
      001B79 79s00            [12] 5995 	mov	r1,#(_mem_cmp >> 8)
      001B7B 7As00            [12] 5996 	mov	r2,#(_mem_cmp >> 16)
      001B7D 12r00r00         [24] 5997 	lcall	__sdcc_banked_call
      001B80 E5 82            [12] 5998 	mov	a,dpl
      001B82 85 83 F0         [24] 5999 	mov	b,dph
      001B85 45 F0            [12] 6000 	orl	a,b
      001B87 60 2E            [24] 6001 	jz	00127$
      001B89                       6002 00122$:
                           001B89  6003 	C$ff.c$1535$2_0$101 ==.
                                   6004 ;	FATFS\src\ff.c:1535: res = dir_next(dp, 0);		/* Next entry */
      001B89 90r00r99         [24] 6005 	mov	dptr,#_dir_find_dp_65536_99
      001B8C E0               [24] 6006 	movx	a,@dptr
      001B8D FD               [12] 6007 	mov	r5,a
      001B8E A3               [24] 6008 	inc	dptr
      001B8F E0               [24] 6009 	movx	a,@dptr
      001B90 FE               [12] 6010 	mov	r6,a
      001B91 A3               [24] 6011 	inc	dptr
      001B92 E0               [24] 6012 	movx	a,@dptr
      001B93 FF               [12] 6013 	mov	r7,a
      001B94 90r00r56         [24] 6014 	mov	dptr,#_dir_next_PARM_2
      001B97 E4               [12] 6015 	clr	a
      001B98 F0               [24] 6016 	movx	@dptr,a
      001B99 A3               [24] 6017 	inc	dptr
      001B9A F0               [24] 6018 	movx	@dptr,a
      001B9B 8D 82            [24] 6019 	mov	dpl,r5
      001B9D 8E 83            [24] 6020 	mov	dph,r6
      001B9F 8F F0            [24] 6021 	mov	b,r7
      001BA1 78r0A            [12] 6022 	mov	r0,#_dir_next
      001BA3 79s0E            [12] 6023 	mov	r1,#(_dir_next >> 8)
      001BA5 7As00            [12] 6024 	mov	r2,#(_dir_next >> 16)
      001BA7 12r00r00         [24] 6025 	lcall	__sdcc_banked_call
      001BAA AF 82            [24] 6026 	mov	r7,dpl
      001BAC 90r00r9C         [24] 6027 	mov	dptr,#_dir_find_res_65536_100
      001BAF EF               [12] 6028 	mov	a,r7
      001BB0 F0               [24] 6029 	movx	@dptr,a
                           001BB1  6030 	C$ff.c$1536$1_0$100 ==.
                                   6031 ;	FATFS\src\ff.c:1536: } while (res == FR_OK);
      001BB1 EF               [12] 6032 	mov	a,r7
      001BB2 70 03            [24] 6033 	jnz	00211$
      001BB4 02r19r01         [24] 6034 	ljmp	00125$
      001BB7                       6035 00211$:
      001BB7                       6036 00127$:
                           001BB7  6037 	C$ff.c$1538$1_0$100 ==.
                                   6038 ;	FATFS\src\ff.c:1538: return res;
      001BB7 90r00r9C         [24] 6039 	mov	dptr,#_dir_find_res_65536_100
      001BBA E0               [24] 6040 	movx	a,@dptr
      001BBB FF               [12] 6041 	mov	r7,a
      001BBC F5 82            [12] 6042 	mov	dpl,a
                           001BBE  6043 	C$ff.c$1539$1_0$100 ==.
                                   6044 ;	FATFS\src\ff.c:1539: }
                           001BBE  6045 	C$ff.c$1539$1_0$100 ==.
                           001BBE  6046 	XFff$dir_find$0$0 ==.
      001BBE 02r00r00         [24] 6047 	ljmp	__sdcc_banked_ret
                                   6048 ;------------------------------------------------------------
                                   6049 ;Allocation info for local variables in function 'dir_read'
                                   6050 ;------------------------------------------------------------
                                   6051 ;sloc0                     Allocated with name '_dir_read_sloc0_1_0'
                                   6052 ;sloc1                     Allocated with name '_dir_read_sloc1_1_0'
                                   6053 ;sloc2                     Allocated with name '_dir_read_sloc2_1_0'
                                   6054 ;sloc3                     Allocated with name '_dir_read_sloc3_1_0'
                                   6055 ;sloc4                     Allocated with name '_dir_read_sloc4_1_0'
                                   6056 ;vol                       Allocated with name '_dir_read_PARM_2'
                                   6057 ;dp                        Allocated with name '_dir_read_dp_65536_109'
                                   6058 ;res                       Allocated with name '_dir_read_res_65536_110'
                                   6059 ;a                         Allocated with name '_dir_read_a_65536_110'
                                   6060 ;c                         Allocated with name '_dir_read_c_65536_110'
                                   6061 ;dir                       Allocated with name '_dir_read_dir_65536_110'
                                   6062 ;ord                       Allocated with name '_dir_read_ord_65536_110'
                                   6063 ;sum                       Allocated with name '_dir_read_sum_65536_110'
                                   6064 ;------------------------------------------------------------
                           001BC1  6065 	Fff$dir_read$0$0 ==.
                           001BC1  6066 	C$ff.c$1549$1_0$110 ==.
                                   6067 ;	FATFS\src\ff.c:1549: FRESULT dir_read (
                                   6068 ;	-----------------------------------------
                                   6069 ;	 function dir_read
                                   6070 ;	-----------------------------------------
      001BC1                       6071 _dir_read:
      001BC1 AF F0            [24] 6072 	mov	r7,b
      001BC3 AE 83            [24] 6073 	mov	r6,dph
      001BC5 E5 82            [12] 6074 	mov	a,dpl
      001BC7 90r00rA2         [24] 6075 	mov	dptr,#_dir_read_dp_65536_109
      001BCA F0               [24] 6076 	movx	@dptr,a
      001BCB EE               [12] 6077 	mov	a,r6
      001BCC A3               [24] 6078 	inc	dptr
      001BCD F0               [24] 6079 	movx	@dptr,a
      001BCE EF               [12] 6080 	mov	a,r7
      001BCF A3               [24] 6081 	inc	dptr
      001BD0 F0               [24] 6082 	movx	@dptr,a
                           001BD1  6083 	C$ff.c$1557$2_0$110 ==.
                                   6084 ;	FATFS\src\ff.c:1557: BYTE ord = 0xFF, sum = 0xFF;
      001BD1 90r00rA7         [24] 6085 	mov	dptr,#_dir_read_ord_65536_110
      001BD4 74 FF            [12] 6086 	mov	a,#0xff
      001BD6 F0               [24] 6087 	movx	@dptr,a
      001BD7 90r00rA8         [24] 6088 	mov	dptr,#_dir_read_sum_65536_110
      001BDA F0               [24] 6089 	movx	@dptr,a
                           001BDB  6090 	C$ff.c$1560$1_0$110 ==.
                                   6091 ;	FATFS\src\ff.c:1560: res = FR_NO_FILE;
      001BDB 90r00rA5         [24] 6092 	mov	dptr,#_dir_read_res_65536_110
      001BDE 74 04            [12] 6093 	mov	a,#0x04
      001BE0 F0               [24] 6094 	movx	@dptr,a
                           001BE1  6095 	C$ff.c$1561$2_0$111 ==.
                                   6096 ;	FATFS\src\ff.c:1561: while (dp->sect) {
      001BE1 90r00rA0         [24] 6097 	mov	dptr,#_dir_read_PARM_2
      001BE4 E0               [24] 6098 	movx	a,@dptr
      001BE5 FE               [12] 6099 	mov	r6,a
      001BE6 A3               [24] 6100 	inc	dptr
      001BE7 E0               [24] 6101 	movx	a,@dptr
      001BE8 FF               [12] 6102 	mov	r7,a
      001BE9 90r00rA2         [24] 6103 	mov	dptr,#_dir_read_dp_65536_109
      001BEC E0               [24] 6104 	movx	a,@dptr
      001BED FB               [12] 6105 	mov	r3,a
      001BEE A3               [24] 6106 	inc	dptr
      001BEF E0               [24] 6107 	movx	a,@dptr
      001BF0 FC               [12] 6108 	mov	r4,a
      001BF1 A3               [24] 6109 	inc	dptr
      001BF2 E0               [24] 6110 	movx	a,@dptr
      001BF3 FD               [12] 6111 	mov	r5,a
      001BF4 74 19            [12] 6112 	mov	a,#0x19
      001BF6 2B               [12] 6113 	add	a,r3
      001BF7 F5*65            [12] 6114 	mov	_dir_read_sloc2_1_0,a
      001BF9 E4               [12] 6115 	clr	a
      001BFA 3C               [12] 6116 	addc	a,r4
      001BFB F5*66            [12] 6117 	mov	(_dir_read_sloc2_1_0 + 1),a
      001BFD 8D*67            [24] 6118 	mov	(_dir_read_sloc2_1_0 + 2),r5
      001BFF 8B*5E            [24] 6119 	mov	_dir_read_sloc0_1_0,r3
      001C01 8C*5F            [24] 6120 	mov	(_dir_read_sloc0_1_0 + 1),r4
      001C03 8D*60            [24] 6121 	mov	(_dir_read_sloc0_1_0 + 2),r5
      001C05 74 0F            [12] 6122 	mov	a,#0x0f
      001C07 2B               [12] 6123 	add	a,r3
      001C08 F5*68            [12] 6124 	mov	_dir_read_sloc3_1_0,a
      001C0A E4               [12] 6125 	clr	a
      001C0B 3C               [12] 6126 	addc	a,r4
      001C0C F5*69            [12] 6127 	mov	(_dir_read_sloc3_1_0 + 1),a
      001C0E 8D*6A            [24] 6128 	mov	(_dir_read_sloc3_1_0 + 2),r5
      001C10                       6129 00121$:
      001C10 85*68 82         [24] 6130 	mov	dpl,_dir_read_sloc3_1_0
      001C13 85*69 83         [24] 6131 	mov	dph,(_dir_read_sloc3_1_0 + 1)
      001C16 85*6A F0         [24] 6132 	mov	b,(_dir_read_sloc3_1_0 + 2)
      001C19 12r00r00         [24] 6133 	lcall	__gptrget
      001C1C F5*61            [12] 6134 	mov	_dir_read_sloc1_1_0,a
      001C1E A3               [24] 6135 	inc	dptr
      001C1F 12r00r00         [24] 6136 	lcall	__gptrget
      001C22 F5*62            [12] 6137 	mov	(_dir_read_sloc1_1_0 + 1),a
      001C24 A3               [24] 6138 	inc	dptr
      001C25 12r00r00         [24] 6139 	lcall	__gptrget
      001C28 F5*63            [12] 6140 	mov	(_dir_read_sloc1_1_0 + 2),a
      001C2A A3               [24] 6141 	inc	dptr
      001C2B 12r00r00         [24] 6142 	lcall	__gptrget
      001C2E F5*64            [12] 6143 	mov	(_dir_read_sloc1_1_0 + 3),a
      001C30 E5*61            [12] 6144 	mov	a,_dir_read_sloc1_1_0
      001C32 45*62            [12] 6145 	orl	a,(_dir_read_sloc1_1_0 + 1)
      001C34 45*63            [12] 6146 	orl	a,(_dir_read_sloc1_1_0 + 2)
      001C36 45*64            [12] 6147 	orl	a,(_dir_read_sloc1_1_0 + 3)
      001C38 70 03            [24] 6148 	jnz	00186$
      001C3A 02r1ErA9         [24] 6149 	ljmp	00123$
      001C3D                       6150 00186$:
                           001C3D  6151 	C$ff.c$1562$1_0$110 ==.
                                   6152 ;	FATFS\src\ff.c:1562: res = move_window(dp->fs, dp->sect);
      001C3D C0 06            [24] 6153 	push	ar6
      001C3F C0 07            [24] 6154 	push	ar7
      001C41 85*5E 82         [24] 6155 	mov	dpl,_dir_read_sloc0_1_0
      001C44 85*5F 83         [24] 6156 	mov	dph,(_dir_read_sloc0_1_0 + 1)
      001C47 85*60 F0         [24] 6157 	mov	b,(_dir_read_sloc0_1_0 + 2)
      001C4A 12r00r00         [24] 6158 	lcall	__gptrget
      001C4D FA               [12] 6159 	mov	r2,a
      001C4E A3               [24] 6160 	inc	dptr
      001C4F 12r00r00         [24] 6161 	lcall	__gptrget
      001C52 FE               [12] 6162 	mov	r6,a
      001C53 A3               [24] 6163 	inc	dptr
      001C54 12r00r00         [24] 6164 	lcall	__gptrget
      001C57 FF               [12] 6165 	mov	r7,a
      001C58 90r00r26         [24] 6166 	mov	dptr,#_move_window_PARM_2
      001C5B E5*61            [12] 6167 	mov	a,_dir_read_sloc1_1_0
      001C5D F0               [24] 6168 	movx	@dptr,a
      001C5E E5*62            [12] 6169 	mov	a,(_dir_read_sloc1_1_0 + 1)
      001C60 A3               [24] 6170 	inc	dptr
      001C61 F0               [24] 6171 	movx	@dptr,a
      001C62 E5*63            [12] 6172 	mov	a,(_dir_read_sloc1_1_0 + 2)
      001C64 A3               [24] 6173 	inc	dptr
      001C65 F0               [24] 6174 	movx	@dptr,a
      001C66 E5*64            [12] 6175 	mov	a,(_dir_read_sloc1_1_0 + 3)
      001C68 A3               [24] 6176 	inc	dptr
      001C69 F0               [24] 6177 	movx	@dptr,a
      001C6A 8A 82            [24] 6178 	mov	dpl,r2
      001C6C 8E 83            [24] 6179 	mov	dph,r6
      001C6E 8F F0            [24] 6180 	mov	b,r7
      001C70 C0 06            [24] 6181 	push	ar6
      001C72 78rB4            [12] 6182 	mov	r0,#_move_window
      001C74 79s01            [12] 6183 	mov	r1,#(_move_window >> 8)
      001C76 7As00            [12] 6184 	mov	r2,#(_move_window >> 16)
      001C78 12r00r00         [24] 6185 	lcall	__sdcc_banked_call
      001C7B AF 82            [24] 6186 	mov	r7,dpl
      001C7D D0 06            [24] 6187 	pop	ar6
      001C7F 90r00rA5         [24] 6188 	mov	dptr,#_dir_read_res_65536_110
      001C82 EF               [12] 6189 	mov	a,r7
      001C83 F0               [24] 6190 	movx	@dptr,a
                           001C84  6191 	C$ff.c$1563$1_0$110 ==.
                                   6192 ;	FATFS\src\ff.c:1563: if (res != FR_OK) break;
      001C84 EF               [12] 6193 	mov	a,r7
      001C85 D0 07            [24] 6194 	pop	ar7
      001C87 D0 06            [24] 6195 	pop	ar6
      001C89 60 03            [24] 6196 	jz	00187$
      001C8B 02r1ErA9         [24] 6197 	ljmp	00123$
      001C8E                       6198 00187$:
                           001C8E  6199 	C$ff.c$1564$2_0$111 ==.
                                   6200 ;	FATFS\src\ff.c:1564: dir = dp->dir;					/* Ptr to the directory entry of current index */
      001C8E 74 13            [12] 6201 	mov	a,#0x13
      001C90 25*5E            [12] 6202 	add	a,_dir_read_sloc0_1_0
      001C92 F8               [12] 6203 	mov	r0,a
      001C93 E4               [12] 6204 	clr	a
      001C94 35*5F            [12] 6205 	addc	a,(_dir_read_sloc0_1_0 + 1)
      001C96 F9               [12] 6206 	mov	r1,a
      001C97 AA*60            [24] 6207 	mov	r2,(_dir_read_sloc0_1_0 + 2)
      001C99 88 82            [24] 6208 	mov	dpl,r0
      001C9B 89 83            [24] 6209 	mov	dph,r1
      001C9D 8A F0            [24] 6210 	mov	b,r2
      001C9F 12r00r00         [24] 6211 	lcall	__gptrget
      001CA2 F8               [12] 6212 	mov	r0,a
      001CA3 A3               [24] 6213 	inc	dptr
      001CA4 12r00r00         [24] 6214 	lcall	__gptrget
      001CA7 F9               [12] 6215 	mov	r1,a
      001CA8 A3               [24] 6216 	inc	dptr
      001CA9 12r00r00         [24] 6217 	lcall	__gptrget
      001CAC FA               [12] 6218 	mov	r2,a
                           001CAD  6219 	C$ff.c$1565$2_0$111 ==.
                                   6220 ;	FATFS\src\ff.c:1565: c = dir[DIR_Name];
      001CAD 88 82            [24] 6221 	mov	dpl,r0
      001CAF 89 83            [24] 6222 	mov	dph,r1
      001CB1 8A F0            [24] 6223 	mov	b,r2
      001CB3 12r00r00         [24] 6224 	lcall	__gptrget
      001CB6 F5*61            [12] 6225 	mov	_dir_read_sloc1_1_0,a
      001CB8 90r00rA6         [24] 6226 	mov	dptr,#_dir_read_c_65536_110
      001CBB F0               [24] 6227 	movx	@dptr,a
                           001CBC  6228 	C$ff.c$1566$2_0$111 ==.
                                   6229 ;	FATFS\src\ff.c:1566: if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
      001CBC E5*61            [12] 6230 	mov	a,_dir_read_sloc1_1_0
      001CBE 70 09            [24] 6231 	jnz	00104$
      001CC0 90r00rA5         [24] 6232 	mov	dptr,#_dir_read_res_65536_110
      001CC3 74 04            [12] 6233 	mov	a,#0x04
      001CC5 F0               [24] 6234 	movx	@dptr,a
      001CC6 02r1ErA9         [24] 6235 	ljmp	00123$
      001CC9                       6236 00104$:
                           001CC9  6237 	C$ff.c$1567$1_0$110 ==.
                                   6238 ;	FATFS\src\ff.c:1567: a = dir[DIR_Attr] & AM_MASK;
      001CC9 C0 06            [24] 6239 	push	ar6
      001CCB C0 07            [24] 6240 	push	ar7
      001CCD 74 0B            [12] 6241 	mov	a,#0x0b
      001CCF 28               [12] 6242 	add	a,r0
      001CD0 FD               [12] 6243 	mov	r5,a
      001CD1 E4               [12] 6244 	clr	a
      001CD2 39               [12] 6245 	addc	a,r1
      001CD3 FE               [12] 6246 	mov	r6,a
      001CD4 8A 07            [24] 6247 	mov	ar7,r2
      001CD6 8D 82            [24] 6248 	mov	dpl,r5
      001CD8 8E 83            [24] 6249 	mov	dph,r6
      001CDA 8F F0            [24] 6250 	mov	b,r7
      001CDC 12r00r00         [24] 6251 	lcall	__gptrget
      001CDF FD               [12] 6252 	mov	r5,a
      001CE0 74 3F            [12] 6253 	mov	a,#0x3f
      001CE2 5D               [12] 6254 	anl	a,r5
      001CE3 F5*6B            [12] 6255 	mov	_dir_read_sloc4_1_0,a
                           001CE5  6256 	C$ff.c$1569$2_0$111 ==.
                                   6257 ;	FATFS\src\ff.c:1569: if (c == DDE || (!_FS_RPATH && c == '.') || (int)(a == AM_VOL) != vol) {	/* An entry without valid data */
      001CE5 74 E5            [12] 6258 	mov	a,#0xe5
      001CE7 B5*61 06         [24] 6259 	cjne	a,_dir_read_sloc1_1_0,00189$
      001CEA D0 07            [24] 6260 	pop	ar7
      001CEC D0 06            [24] 6261 	pop	ar6
      001CEE 80 21            [24] 6262 	sjmp	00113$
      001CF0                       6263 00189$:
      001CF0 D0 07            [24] 6264 	pop	ar7
      001CF2 D0 06            [24] 6265 	pop	ar6
      001CF4 74 2E            [12] 6266 	mov	a,#0x2e
      001CF6 B5*61 02         [24] 6267 	cjne	a,_dir_read_sloc1_1_0,00190$
      001CF9 80 16            [24] 6268 	sjmp	00113$
      001CFB                       6269 00190$:
      001CFB 74 08            [12] 6270 	mov	a,#0x08
      001CFD B5*6B 04         [24] 6271 	cjne	a,_dir_read_sloc4_1_0,00191$
      001D00 74 01            [12] 6272 	mov	a,#0x01
      001D02 80 01            [24] 6273 	sjmp	00192$
      001D04                       6274 00191$:
      001D04 E4               [12] 6275 	clr	a
      001D05                       6276 00192$:
      001D05 FD               [12] 6277 	mov	r5,a
      001D06 7C 00            [12] 6278 	mov	r4,#0x00
      001D08 B5 06 06         [24] 6279 	cjne	a,ar6,00193$
      001D0B EC               [12] 6280 	mov	a,r4
      001D0C B5 07 02         [24] 6281 	cjne	a,ar7,00193$
      001D0F 80 09            [24] 6282 	sjmp	00114$
      001D11                       6283 00193$:
      001D11                       6284 00113$:
                           001D11  6285 	C$ff.c$1570$3_0$113 ==.
                                   6286 ;	FATFS\src\ff.c:1570: ord = 0xFF;
      001D11 90r00rA7         [24] 6287 	mov	dptr,#_dir_read_ord_65536_110
      001D14 74 FF            [12] 6288 	mov	a,#0xff
      001D16 F0               [24] 6289 	movx	@dptr,a
      001D17 02r1Er73         [24] 6290 	ljmp	00115$
      001D1A                       6291 00114$:
                           001D1A  6292 	C$ff.c$1572$3_0$114 ==.
                                   6293 ;	FATFS\src\ff.c:1572: if (a == AM_LFN) {			/* An LFN entry is found */
      001D1A 74 0F            [12] 6294 	mov	a,#0x0f
      001D1C B5*6B 02         [24] 6295 	cjne	a,_dir_read_sloc4_1_0,00194$
      001D1F 80 03            [24] 6296 	sjmp	00195$
      001D21                       6297 00194$:
      001D21 02r1Er2F         [24] 6298 	ljmp	00111$
      001D24                       6299 00195$:
                           001D24  6300 	C$ff.c$1573$4_0$115 ==.
                                   6301 ;	FATFS\src\ff.c:1573: if (c & LLE) {			/* Is it start of LFN sequence? */
      001D24 E5*61            [12] 6302 	mov	a,_dir_read_sloc1_1_0
      001D26 30 E6 67         [24] 6303 	jnb	acc.6,00106$
                           001D29  6304 	C$ff.c$1574$1_0$110 ==.
                                   6305 ;	FATFS\src\ff.c:1574: sum = dir[LDIR_Chksum];
      001D29 C0 06            [24] 6306 	push	ar6
      001D2B C0 07            [24] 6307 	push	ar7
      001D2D 74 0D            [12] 6308 	mov	a,#0x0d
      001D2F 28               [12] 6309 	add	a,r0
      001D30 FB               [12] 6310 	mov	r3,a
      001D31 E4               [12] 6311 	clr	a
      001D32 39               [12] 6312 	addc	a,r1
      001D33 FC               [12] 6313 	mov	r4,a
      001D34 8A 05            [24] 6314 	mov	ar5,r2
      001D36 8B 82            [24] 6315 	mov	dpl,r3
      001D38 8C 83            [24] 6316 	mov	dph,r4
      001D3A 8D F0            [24] 6317 	mov	b,r5
      001D3C 12r00r00         [24] 6318 	lcall	__gptrget
      001D3F FB               [12] 6319 	mov	r3,a
      001D40 90r00rA8         [24] 6320 	mov	dptr,#_dir_read_sum_65536_110
      001D43 F0               [24] 6321 	movx	@dptr,a
                           001D44  6322 	C$ff.c$1575$5_0$116 ==.
                                   6323 ;	FATFS\src\ff.c:1575: c &= ~LLE; ord = c;
      001D44 74 BF            [12] 6324 	mov	a,#0xbf
      001D46 55*61            [12] 6325 	anl	a,_dir_read_sloc1_1_0
      001D48 FD               [12] 6326 	mov	r5,a
      001D49 90r00rA6         [24] 6327 	mov	dptr,#_dir_read_c_65536_110
      001D4C F0               [24] 6328 	movx	@dptr,a
      001D4D 90r00rA7         [24] 6329 	mov	dptr,#_dir_read_ord_65536_110
      001D50 ED               [12] 6330 	mov	a,r5
      001D51 F0               [24] 6331 	movx	@dptr,a
                           001D52  6332 	C$ff.c$1576$5_0$116 ==.
                                   6333 ;	FATFS\src\ff.c:1576: dp->lfn_idx = dp->index;
      001D52 74 1C            [12] 6334 	mov	a,#0x1c
      001D54 25*5E            [12] 6335 	add	a,_dir_read_sloc0_1_0
      001D56 F5*61            [12] 6336 	mov	_dir_read_sloc1_1_0,a
      001D58 E4               [12] 6337 	clr	a
      001D59 35*5F            [12] 6338 	addc	a,(_dir_read_sloc0_1_0 + 1)
      001D5B F5*62            [12] 6339 	mov	(_dir_read_sloc1_1_0 + 1),a
      001D5D 85*60*63         [24] 6340 	mov	(_dir_read_sloc1_1_0 + 2),(_dir_read_sloc0_1_0 + 2)
      001D60 74 05            [12] 6341 	mov	a,#0x05
      001D62 25*5E            [12] 6342 	add	a,_dir_read_sloc0_1_0
      001D64 FD               [12] 6343 	mov	r5,a
      001D65 E4               [12] 6344 	clr	a
      001D66 35*5F            [12] 6345 	addc	a,(_dir_read_sloc0_1_0 + 1)
      001D68 FE               [12] 6346 	mov	r6,a
      001D69 AF*60            [24] 6347 	mov	r7,(_dir_read_sloc0_1_0 + 2)
      001D6B 8D 82            [24] 6348 	mov	dpl,r5
      001D6D 8E 83            [24] 6349 	mov	dph,r6
      001D6F 8F F0            [24] 6350 	mov	b,r7
      001D71 12r00r00         [24] 6351 	lcall	__gptrget
      001D74 FD               [12] 6352 	mov	r5,a
      001D75 A3               [24] 6353 	inc	dptr
      001D76 12r00r00         [24] 6354 	lcall	__gptrget
      001D79 FE               [12] 6355 	mov	r6,a
      001D7A 85*61 82         [24] 6356 	mov	dpl,_dir_read_sloc1_1_0
      001D7D 85*62 83         [24] 6357 	mov	dph,(_dir_read_sloc1_1_0 + 1)
      001D80 85*63 F0         [24] 6358 	mov	b,(_dir_read_sloc1_1_0 + 2)
      001D83 ED               [12] 6359 	mov	a,r5
      001D84 12r00r00         [24] 6360 	lcall	__gptrput
      001D87 A3               [24] 6361 	inc	dptr
      001D88 EE               [12] 6362 	mov	a,r6
      001D89 12r00r00         [24] 6363 	lcall	__gptrput
                           001D8C  6364 	C$ff.c$1596$1_0$110 ==.
                                   6365 ;	FATFS\src\ff.c:1596: return res;
      001D8C D0 07            [24] 6366 	pop	ar7
      001D8E D0 06            [24] 6367 	pop	ar6
                           001D90  6368 	C$ff.c$1576$4_0$115 ==.
                                   6369 ;	FATFS\src\ff.c:1576: dp->lfn_idx = dp->index;
      001D90                       6370 00106$:
                           001D90  6371 	C$ff.c$1579$4_0$115 ==.
                                   6372 ;	FATFS\src\ff.c:1579: ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
      001D90 90r00rA6         [24] 6373 	mov	dptr,#_dir_read_c_65536_110
      001D93 E0               [24] 6374 	movx	a,@dptr
      001D94 FD               [12] 6375 	mov	r5,a
      001D95 90r00rA7         [24] 6376 	mov	dptr,#_dir_read_ord_65536_110
      001D98 E0               [24] 6377 	movx	a,@dptr
      001D99 FC               [12] 6378 	mov	r4,a
      001D9A ED               [12] 6379 	mov	a,r5
      001D9B B5 04 02         [24] 6380 	cjne	a,ar4,00197$
      001D9E 80 03            [24] 6381 	sjmp	00198$
      001DA0                       6382 00197$:
      001DA0 02r1Er24         [24] 6383 	ljmp	00128$
      001DA3                       6384 00198$:
      001DA3 C0 06            [24] 6385 	push	ar6
      001DA5 C0 07            [24] 6386 	push	ar7
      001DA7 74 0D            [12] 6387 	mov	a,#0x0d
      001DA9 28               [12] 6388 	add	a,r0
      001DAA FB               [12] 6389 	mov	r3,a
      001DAB E4               [12] 6390 	clr	a
      001DAC 39               [12] 6391 	addc	a,r1
      001DAD FD               [12] 6392 	mov	r5,a
      001DAE 8A 07            [24] 6393 	mov	ar7,r2
      001DB0 8B 82            [24] 6394 	mov	dpl,r3
      001DB2 8D 83            [24] 6395 	mov	dph,r5
      001DB4 8F F0            [24] 6396 	mov	b,r7
      001DB6 12r00r00         [24] 6397 	lcall	__gptrget
      001DB9 FB               [12] 6398 	mov	r3,a
      001DBA 90r00rA8         [24] 6399 	mov	dptr,#_dir_read_sum_65536_110
      001DBD E0               [24] 6400 	movx	a,@dptr
      001DBE FF               [12] 6401 	mov	r7,a
      001DBF B5 03 02         [24] 6402 	cjne	a,ar3,00199$
      001DC2 80 06            [24] 6403 	sjmp	00200$
      001DC4                       6404 00199$:
      001DC4 D0 07            [24] 6405 	pop	ar7
      001DC6 D0 06            [24] 6406 	pop	ar6
      001DC8 80 5A            [24] 6407 	sjmp	00128$
      001DCA                       6408 00200$:
      001DCA D0 07            [24] 6409 	pop	ar7
      001DCC D0 06            [24] 6410 	pop	ar6
      001DCE C0 06            [24] 6411 	push	ar6
      001DD0 C0 07            [24] 6412 	push	ar7
      001DD2 85*65 82         [24] 6413 	mov	dpl,_dir_read_sloc2_1_0
      001DD5 85*66 83         [24] 6414 	mov	dph,(_dir_read_sloc2_1_0 + 1)
      001DD8 85*67 F0         [24] 6415 	mov	b,(_dir_read_sloc2_1_0 + 2)
      001DDB 12r00r00         [24] 6416 	lcall	__gptrget
      001DDE FB               [12] 6417 	mov	r3,a
      001DDF A3               [24] 6418 	inc	dptr
      001DE0 12r00r00         [24] 6419 	lcall	__gptrget
      001DE3 FD               [12] 6420 	mov	r5,a
      001DE4 A3               [24] 6421 	inc	dptr
      001DE5 12r00r00         [24] 6422 	lcall	__gptrget
      001DE8 FF               [12] 6423 	mov	r7,a
      001DE9 90r00r6F         [24] 6424 	mov	dptr,#_pick_lfn_PARM_2
      001DEC E8               [12] 6425 	mov	a,r0
      001DED F0               [24] 6426 	movx	@dptr,a
      001DEE E9               [12] 6427 	mov	a,r1
      001DEF A3               [24] 6428 	inc	dptr
      001DF0 F0               [24] 6429 	movx	@dptr,a
      001DF1 EA               [12] 6430 	mov	a,r2
      001DF2 A3               [24] 6431 	inc	dptr
      001DF3 F0               [24] 6432 	movx	@dptr,a
      001DF4 8B 82            [24] 6433 	mov	dpl,r3
      001DF6 8D 83            [24] 6434 	mov	dph,r5
      001DF8 8F F0            [24] 6435 	mov	b,r7
      001DFA C0 07            [24] 6436 	push	ar7
      001DFC C0 06            [24] 6437 	push	ar6
      001DFE C0 04            [24] 6438 	push	ar4
      001E00 78rFE            [12] 6439 	mov	r0,#_pick_lfn
      001E02 79s13            [12] 6440 	mov	r1,#(_pick_lfn >> 8)
      001E04 7As00            [12] 6441 	mov	r2,#(_pick_lfn >> 16)
      001E06 12r00r00         [24] 6442 	lcall	__sdcc_banked_call
      001E09 E5 82            [12] 6443 	mov	a,dpl
      001E0B 85 83 F0         [24] 6444 	mov	b,dph
      001E0E D0 04            [24] 6445 	pop	ar4
      001E10 D0 06            [24] 6446 	pop	ar6
      001E12 D0 07            [24] 6447 	pop	ar7
      001E14 D0 07            [24] 6448 	pop	ar7
      001E16 D0 06            [24] 6449 	pop	ar6
      001E18 45 F0            [12] 6450 	orl	a,b
      001E1A 60 08            [24] 6451 	jz	00128$
      001E1C 1C               [12] 6452 	dec	r4
      001E1D EC               [12] 6453 	mov	a,r4
      001E1E 33               [12] 6454 	rlc	a
      001E1F 95 E0            [12] 6455 	subb	a,acc
      001E21 FD               [12] 6456 	mov	r5,a
      001E22 80 04            [24] 6457 	sjmp	00129$
      001E24                       6458 00128$:
      001E24 7C FF            [12] 6459 	mov	r4,#0xff
      001E26 7D 00            [12] 6460 	mov	r5,#0x00
      001E28                       6461 00129$:
      001E28 90r00rA7         [24] 6462 	mov	dptr,#_dir_read_ord_65536_110
      001E2B EC               [12] 6463 	mov	a,r4
      001E2C F0               [24] 6464 	movx	@dptr,a
      001E2D 80 44            [24] 6465 	sjmp	00115$
      001E2F                       6466 00111$:
                           001E2F  6467 	C$ff.c$1581$4_0$117 ==.
                                   6468 ;	FATFS\src\ff.c:1581: if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
      001E2F 90r00rA7         [24] 6469 	mov	dptr,#_dir_read_ord_65536_110
      001E32 E0               [24] 6470 	movx	a,@dptr
      001E33 70 1B            [24] 6471 	jnz	00107$
      001E35 88 82            [24] 6472 	mov	dpl,r0
      001E37 89 83            [24] 6473 	mov	dph,r1
      001E39 8A F0            [24] 6474 	mov	b,r2
      001E3B 78r05            [12] 6475 	mov	r0,#_sum_sfn
      001E3D 79s18            [12] 6476 	mov	r1,#(_sum_sfn >> 8)
      001E3F 7As00            [12] 6477 	mov	r2,#(_sum_sfn >> 16)
      001E41 12r00r00         [24] 6478 	lcall	__sdcc_banked_call
      001E44 AD 82            [24] 6479 	mov	r5,dpl
      001E46 90r00rA8         [24] 6480 	mov	dptr,#_dir_read_sum_65536_110
      001E49 E0               [24] 6481 	movx	a,@dptr
      001E4A FC               [12] 6482 	mov	r4,a
      001E4B B5 05 02         [24] 6483 	cjne	a,ar5,00203$
      001E4E 80 59            [24] 6484 	sjmp	00123$
      001E50                       6485 00203$:
      001E50                       6486 00107$:
                           001E50  6487 	C$ff.c$1582$4_0$117 ==.
                                   6488 ;	FATFS\src\ff.c:1582: dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
      001E50 90r00rA2         [24] 6489 	mov	dptr,#_dir_read_dp_65536_109
      001E53 E0               [24] 6490 	movx	a,@dptr
      001E54 FB               [12] 6491 	mov	r3,a
      001E55 A3               [24] 6492 	inc	dptr
      001E56 E0               [24] 6493 	movx	a,@dptr
      001E57 FC               [12] 6494 	mov	r4,a
      001E58 A3               [24] 6495 	inc	dptr
      001E59 E0               [24] 6496 	movx	a,@dptr
      001E5A FD               [12] 6497 	mov	r5,a
      001E5B 74 1C            [12] 6498 	mov	a,#0x1c
      001E5D 2B               [12] 6499 	add	a,r3
      001E5E FB               [12] 6500 	mov	r3,a
      001E5F E4               [12] 6501 	clr	a
      001E60 3C               [12] 6502 	addc	a,r4
      001E61 FC               [12] 6503 	mov	r4,a
      001E62 8B 82            [24] 6504 	mov	dpl,r3
      001E64 8C 83            [24] 6505 	mov	dph,r4
      001E66 8D F0            [24] 6506 	mov	b,r5
      001E68 74 FF            [12] 6507 	mov	a,#0xff
      001E6A 12r00r00         [24] 6508 	lcall	__gptrput
      001E6D A3               [24] 6509 	inc	dptr
      001E6E 12r00r00         [24] 6510 	lcall	__gptrput
                           001E71  6511 	C$ff.c$1583$4_0$117 ==.
                                   6512 ;	FATFS\src\ff.c:1583: break;
      001E71 80 36            [24] 6513 	sjmp	00123$
      001E73                       6514 00115$:
                           001E73  6515 	C$ff.c$1590$2_0$111 ==.
                                   6516 ;	FATFS\src\ff.c:1590: res = dir_next(dp, 0);				/* Next entry */
      001E73 90r00rA2         [24] 6517 	mov	dptr,#_dir_read_dp_65536_109
      001E76 E0               [24] 6518 	movx	a,@dptr
      001E77 FB               [12] 6519 	mov	r3,a
      001E78 A3               [24] 6520 	inc	dptr
      001E79 E0               [24] 6521 	movx	a,@dptr
      001E7A FC               [12] 6522 	mov	r4,a
      001E7B A3               [24] 6523 	inc	dptr
      001E7C E0               [24] 6524 	movx	a,@dptr
      001E7D FD               [12] 6525 	mov	r5,a
      001E7E 90r00r56         [24] 6526 	mov	dptr,#_dir_next_PARM_2
      001E81 E4               [12] 6527 	clr	a
      001E82 F0               [24] 6528 	movx	@dptr,a
      001E83 A3               [24] 6529 	inc	dptr
      001E84 F0               [24] 6530 	movx	@dptr,a
      001E85 8B 82            [24] 6531 	mov	dpl,r3
      001E87 8C 83            [24] 6532 	mov	dph,r4
      001E89 8D F0            [24] 6533 	mov	b,r5
      001E8B C0 07            [24] 6534 	push	ar7
      001E8D C0 06            [24] 6535 	push	ar6
      001E8F 78r0A            [12] 6536 	mov	r0,#_dir_next
      001E91 79s0E            [12] 6537 	mov	r1,#(_dir_next >> 8)
      001E93 7As00            [12] 6538 	mov	r2,#(_dir_next >> 16)
      001E95 12r00r00         [24] 6539 	lcall	__sdcc_banked_call
      001E98 AD 82            [24] 6540 	mov	r5,dpl
      001E9A D0 06            [24] 6541 	pop	ar6
      001E9C D0 07            [24] 6542 	pop	ar7
      001E9E 90r00rA5         [24] 6543 	mov	dptr,#_dir_read_res_65536_110
      001EA1 ED               [12] 6544 	mov	a,r5
      001EA2 F0               [24] 6545 	movx	@dptr,a
                           001EA3  6546 	C$ff.c$1591$2_0$111 ==.
                                   6547 ;	FATFS\src\ff.c:1591: if (res != FR_OK) break;
      001EA3 ED               [12] 6548 	mov	a,r5
      001EA4 70 03            [24] 6549 	jnz	00204$
      001EA6 02r1Cr10         [24] 6550 	ljmp	00121$
      001EA9                       6551 00204$:
      001EA9                       6552 00123$:
                           001EA9  6553 	C$ff.c$1594$1_0$110 ==.
                                   6554 ;	FATFS\src\ff.c:1594: if (res != FR_OK) dp->sect = 0;
      001EA9 90r00rA5         [24] 6555 	mov	dptr,#_dir_read_res_65536_110
      001EAC E0               [24] 6556 	movx	a,@dptr
      001EAD FF               [12] 6557 	mov	r7,a
      001EAE E0               [24] 6558 	movx	a,@dptr
      001EAF 60 28            [24] 6559 	jz	00125$
      001EB1 90r00rA2         [24] 6560 	mov	dptr,#_dir_read_dp_65536_109
      001EB4 E0               [24] 6561 	movx	a,@dptr
      001EB5 FC               [12] 6562 	mov	r4,a
      001EB6 A3               [24] 6563 	inc	dptr
      001EB7 E0               [24] 6564 	movx	a,@dptr
      001EB8 FD               [12] 6565 	mov	r5,a
      001EB9 A3               [24] 6566 	inc	dptr
      001EBA E0               [24] 6567 	movx	a,@dptr
      001EBB FE               [12] 6568 	mov	r6,a
      001EBC 74 0F            [12] 6569 	mov	a,#0x0f
      001EBE 2C               [12] 6570 	add	a,r4
      001EBF FC               [12] 6571 	mov	r4,a
      001EC0 E4               [12] 6572 	clr	a
      001EC1 3D               [12] 6573 	addc	a,r5
      001EC2 FD               [12] 6574 	mov	r5,a
      001EC3 8C 82            [24] 6575 	mov	dpl,r4
      001EC5 8D 83            [24] 6576 	mov	dph,r5
      001EC7 8E F0            [24] 6577 	mov	b,r6
      001EC9 E4               [12] 6578 	clr	a
      001ECA 12r00r00         [24] 6579 	lcall	__gptrput
      001ECD A3               [24] 6580 	inc	dptr
      001ECE 12r00r00         [24] 6581 	lcall	__gptrput
      001ED1 A3               [24] 6582 	inc	dptr
      001ED2 12r00r00         [24] 6583 	lcall	__gptrput
      001ED5 A3               [24] 6584 	inc	dptr
      001ED6 12r00r00         [24] 6585 	lcall	__gptrput
      001ED9                       6586 00125$:
                           001ED9  6587 	C$ff.c$1596$1_0$110 ==.
                                   6588 ;	FATFS\src\ff.c:1596: return res;
      001ED9 8F 82            [24] 6589 	mov	dpl,r7
                           001EDB  6590 	C$ff.c$1597$1_0$110 ==.
                                   6591 ;	FATFS\src\ff.c:1597: }
                           001EDB  6592 	C$ff.c$1597$1_0$110 ==.
                           001EDB  6593 	XFff$dir_read$0$0 ==.
      001EDB 02r00r00         [24] 6594 	ljmp	__sdcc_banked_ret
                                   6595 ;------------------------------------------------------------
                                   6596 ;Allocation info for local variables in function 'get_fileinfo'
                                   6597 ;------------------------------------------------------------
                                   6598 ;sloc0                     Allocated with name '_get_fileinfo_sloc0_1_0'
                                   6599 ;sloc1                     Allocated with name '_get_fileinfo_sloc1_1_0'
                                   6600 ;sloc2                     Allocated with name '_get_fileinfo_sloc2_1_0'
                                   6601 ;sloc3                     Allocated with name '_get_fileinfo_sloc3_1_0'
                                   6602 ;fno                       Allocated with name '_get_fileinfo_PARM_2'
                                   6603 ;dp                        Allocated with name '_get_fileinfo_dp_65536_118'
                                   6604 ;i                         Allocated with name '_get_fileinfo_i_65536_119'
                                   6605 ;p                         Allocated with name '_get_fileinfo_p_65536_119'
                                   6606 ;c                         Allocated with name '_get_fileinfo_c_65536_119'
                                   6607 ;dir                       Allocated with name '_get_fileinfo_dir_131072_120'
                                   6608 ;w                         Allocated with name '_get_fileinfo_w_131072_122'
                                   6609 ;lfn                       Allocated with name '_get_fileinfo_lfn_131072_122'
                                   6610 ;------------------------------------------------------------
                           001EDE  6611 	Fff$get_fileinfo$0$0 ==.
                           001EDE  6612 	C$ff.c$1733$1_0$119 ==.
                                   6613 ;	FATFS\src\ff.c:1733: void get_fileinfo (		/* No return code */
                                   6614 ;	-----------------------------------------
                                   6615 ;	 function get_fileinfo
                                   6616 ;	-----------------------------------------
      001EDE                       6617 _get_fileinfo:
      001EDE AF F0            [24] 6618 	mov	r7,b
      001EE0 AE 83            [24] 6619 	mov	r6,dph
      001EE2 E5 82            [12] 6620 	mov	a,dpl
      001EE4 90r00rAC         [24] 6621 	mov	dptr,#_get_fileinfo_dp_65536_118
      001EE7 F0               [24] 6622 	movx	@dptr,a
      001EE8 EE               [12] 6623 	mov	a,r6
      001EE9 A3               [24] 6624 	inc	dptr
      001EEA F0               [24] 6625 	movx	@dptr,a
      001EEB EF               [12] 6626 	mov	a,r7
      001EEC A3               [24] 6627 	inc	dptr
      001EED F0               [24] 6628 	movx	@dptr,a
                           001EEE  6629 	C$ff.c$1742$1_0$119 ==.
                                   6630 ;	FATFS\src\ff.c:1742: p = fno->fname;
      001EEE 90r00rA9         [24] 6631 	mov	dptr,#_get_fileinfo_PARM_2
      001EF1 E0               [24] 6632 	movx	a,@dptr
      001EF2 F5*70            [12] 6633 	mov	_get_fileinfo_sloc2_1_0,a
      001EF4 A3               [24] 6634 	inc	dptr
      001EF5 E0               [24] 6635 	movx	a,@dptr
      001EF6 F5*71            [12] 6636 	mov	(_get_fileinfo_sloc2_1_0 + 1),a
      001EF8 A3               [24] 6637 	inc	dptr
      001EF9 E0               [24] 6638 	movx	a,@dptr
      001EFA F5*72            [12] 6639 	mov	(_get_fileinfo_sloc2_1_0 + 2),a
      001EFC 90r00rB1         [24] 6640 	mov	dptr,#_get_fileinfo_p_65536_119
      001EFF 74 09            [12] 6641 	mov	a,#0x09
      001F01 25*70            [12] 6642 	add	a,_get_fileinfo_sloc2_1_0
      001F03 F0               [24] 6643 	movx	@dptr,a
      001F04 E4               [12] 6644 	clr	a
      001F05 35*71            [12] 6645 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      001F07 A3               [24] 6646 	inc	dptr
      001F08 F0               [24] 6647 	movx	@dptr,a
      001F09 E5*72            [12] 6648 	mov	a,(_get_fileinfo_sloc2_1_0 + 2)
      001F0B A3               [24] 6649 	inc	dptr
      001F0C F0               [24] 6650 	movx	@dptr,a
                           001F0D  6651 	C$ff.c$1743$1_0$119 ==.
                                   6652 ;	FATFS\src\ff.c:1743: if (dp->sect) {		/* Get SFN */
      001F0D 90r00rAC         [24] 6653 	mov	dptr,#_get_fileinfo_dp_65536_118
      001F10 E0               [24] 6654 	movx	a,@dptr
      001F11 F5*6C            [12] 6655 	mov	_get_fileinfo_sloc0_1_0,a
      001F13 A3               [24] 6656 	inc	dptr
      001F14 E0               [24] 6657 	movx	a,@dptr
      001F15 F5*6D            [12] 6658 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      001F17 A3               [24] 6659 	inc	dptr
      001F18 E0               [24] 6660 	movx	a,@dptr
      001F19 F5*6E            [12] 6661 	mov	(_get_fileinfo_sloc0_1_0 + 2),a
      001F1B 74 0F            [12] 6662 	mov	a,#0x0f
      001F1D 25*6C            [12] 6663 	add	a,_get_fileinfo_sloc0_1_0
      001F1F F8               [12] 6664 	mov	r0,a
      001F20 E4               [12] 6665 	clr	a
      001F21 35*6D            [12] 6666 	addc	a,(_get_fileinfo_sloc0_1_0 + 1)
      001F23 F9               [12] 6667 	mov	r1,a
      001F24 AC*6E            [24] 6668 	mov	r4,(_get_fileinfo_sloc0_1_0 + 2)
      001F26 88 82            [24] 6669 	mov	dpl,r0
      001F28 89 83            [24] 6670 	mov	dph,r1
      001F2A 8C F0            [24] 6671 	mov	b,r4
      001F2C 12r00r00         [24] 6672 	lcall	__gptrget
      001F2F F8               [12] 6673 	mov	r0,a
      001F30 A3               [24] 6674 	inc	dptr
      001F31 12r00r00         [24] 6675 	lcall	__gptrget
      001F34 F9               [12] 6676 	mov	r1,a
      001F35 A3               [24] 6677 	inc	dptr
      001F36 12r00r00         [24] 6678 	lcall	__gptrget
      001F39 FC               [12] 6679 	mov	r4,a
      001F3A A3               [24] 6680 	inc	dptr
      001F3B 12r00r00         [24] 6681 	lcall	__gptrget
      001F3E FB               [12] 6682 	mov	r3,a
      001F3F E8               [12] 6683 	mov	a,r0
      001F40 49               [12] 6684 	orl	a,r1
      001F41 4C               [12] 6685 	orl	a,r4
      001F42 4B               [12] 6686 	orl	a,r3
      001F43 70 03            [24] 6687 	jnz	00203$
      001F45 02r21rA5         [24] 6688 	ljmp	00115$
      001F48                       6689 00203$:
                           001F48  6690 	C$ff.c$1744$2_0$120 ==.
                                   6691 ;	FATFS\src\ff.c:1744: BYTE *dir = dp->dir;
      001F48 74 13            [12] 6692 	mov	a,#0x13
      001F4A 25*6C            [12] 6693 	add	a,_get_fileinfo_sloc0_1_0
      001F4C FA               [12] 6694 	mov	r2,a
      001F4D E4               [12] 6695 	clr	a
      001F4E 35*6D            [12] 6696 	addc	a,(_get_fileinfo_sloc0_1_0 + 1)
      001F50 FB               [12] 6697 	mov	r3,a
      001F51 AC*6E            [24] 6698 	mov	r4,(_get_fileinfo_sloc0_1_0 + 2)
      001F53 8A 82            [24] 6699 	mov	dpl,r2
      001F55 8B 83            [24] 6700 	mov	dph,r3
      001F57 8C F0            [24] 6701 	mov	b,r4
      001F59 12r00r00         [24] 6702 	lcall	__gptrget
      001F5C FA               [12] 6703 	mov	r2,a
      001F5D A3               [24] 6704 	inc	dptr
      001F5E 12r00r00         [24] 6705 	lcall	__gptrget
      001F61 FB               [12] 6706 	mov	r3,a
      001F62 A3               [24] 6707 	inc	dptr
      001F63 12r00r00         [24] 6708 	lcall	__gptrget
      001F66 FC               [12] 6709 	mov	r4,a
                           001F67  6710 	C$ff.c$1747$3_0$121 ==.
                                   6711 ;	FATFS\src\ff.c:1747: while (i < 11) {		/* Copy name body and extension */
      001F67 74 0C            [12] 6712 	mov	a,#0x0c
      001F69 2A               [12] 6713 	add	a,r2
      001F6A F5*6C            [12] 6714 	mov	_get_fileinfo_sloc0_1_0,a
      001F6C E4               [12] 6715 	clr	a
      001F6D 3B               [12] 6716 	addc	a,r3
      001F6E F5*6D            [12] 6717 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      001F70 8C*6E            [24] 6718 	mov	(_get_fileinfo_sloc0_1_0 + 2),r4
      001F72 78 00            [12] 6719 	mov	r0,#0x00
      001F74 79 00            [12] 6720 	mov	r1,#0x00
      001F76                       6721 00111$:
      001F76 C3               [12] 6722 	clr	c
      001F77 E8               [12] 6723 	mov	a,r0
      001F78 94 0B            [12] 6724 	subb	a,#0x0b
      001F7A E9               [12] 6725 	mov	a,r1
      001F7B 94 00            [12] 6726 	subb	a,#0x00
      001F7D 40 03            [24] 6727 	jc	00204$
      001F7F 02r20r35         [24] 6728 	ljmp	00113$
      001F82                       6729 00204$:
                           001F82  6730 	C$ff.c$1748$1_0$119 ==.
                                   6731 ;	FATFS\src\ff.c:1748: c = (TCHAR)dir[i++];
      001F82 88 06            [24] 6732 	mov	ar6,r0
      001F84 89 07            [24] 6733 	mov	ar7,r1
      001F86 08               [12] 6734 	inc	r0
      001F87 B8 00 01         [24] 6735 	cjne	r0,#0x00,00205$
      001F8A 09               [12] 6736 	inc	r1
      001F8B                       6737 00205$:
      001F8B EE               [12] 6738 	mov	a,r6
      001F8C 2A               [12] 6739 	add	a,r2
      001F8D FE               [12] 6740 	mov	r6,a
      001F8E EF               [12] 6741 	mov	a,r7
      001F8F 3B               [12] 6742 	addc	a,r3
      001F90 FF               [12] 6743 	mov	r7,a
      001F91 8C 05            [24] 6744 	mov	ar5,r4
      001F93 8E 82            [24] 6745 	mov	dpl,r6
      001F95 8F 83            [24] 6746 	mov	dph,r7
      001F97 8D F0            [24] 6747 	mov	b,r5
      001F99 12r00r00         [24] 6748 	lcall	__gptrget
      001F9C F5*6F            [12] 6749 	mov	_get_fileinfo_sloc1_1_0,a
      001F9E 90r00rB4         [24] 6750 	mov	dptr,#_get_fileinfo_c_65536_119
      001FA1 F0               [24] 6751 	movx	@dptr,a
                           001FA2  6752 	C$ff.c$1749$3_0$121 ==.
                                   6753 ;	FATFS\src\ff.c:1749: if (c == ' ') continue;			/* Skip padding spaces */
      001FA2 74 20            [12] 6754 	mov	a,#0x20
      001FA4 B5*6F 02         [24] 6755 	cjne	a,_get_fileinfo_sloc1_1_0,00206$
      001FA7 80 CD            [24] 6756 	sjmp	00111$
      001FA9                       6757 00206$:
                           001FA9  6758 	C$ff.c$1750$3_0$121 ==.
                                   6759 ;	FATFS\src\ff.c:1750: if (c == NDDE) c = (TCHAR)DDE;	/* Restore replaced DDE character */
      001FA9 74 05            [12] 6760 	mov	a,#0x05
      001FAB B5*6F 06         [24] 6761 	cjne	a,_get_fileinfo_sloc1_1_0,00104$
      001FAE 90r00rB4         [24] 6762 	mov	dptr,#_get_fileinfo_c_65536_119
      001FB1 74 E5            [12] 6763 	mov	a,#0xe5
      001FB3 F0               [24] 6764 	movx	@dptr,a
      001FB4                       6765 00104$:
                           001FB4  6766 	C$ff.c$1751$3_0$121 ==.
                                   6767 ;	FATFS\src\ff.c:1751: if (i == 9) *p++ = '.';			/* Insert a . if extension is exist */
      001FB4 B8 09 27         [24] 6768 	cjne	r0,#0x09,00106$
      001FB7 B9 00 24         [24] 6769 	cjne	r1,#0x00,00106$
      001FBA 90r00rB1         [24] 6770 	mov	dptr,#_get_fileinfo_p_65536_119
      001FBD E0               [24] 6771 	movx	a,@dptr
      001FBE FD               [12] 6772 	mov	r5,a
      001FBF A3               [24] 6773 	inc	dptr
      001FC0 E0               [24] 6774 	movx	a,@dptr
      001FC1 FE               [12] 6775 	mov	r6,a
      001FC2 A3               [24] 6776 	inc	dptr
      001FC3 E0               [24] 6777 	movx	a,@dptr
      001FC4 FF               [12] 6778 	mov	r7,a
      001FC5 8D 82            [24] 6779 	mov	dpl,r5
      001FC7 8E 83            [24] 6780 	mov	dph,r6
      001FC9 8F F0            [24] 6781 	mov	b,r7
      001FCB 74 2E            [12] 6782 	mov	a,#0x2e
      001FCD 12r00r00         [24] 6783 	lcall	__gptrput
      001FD0 90r00rB1         [24] 6784 	mov	dptr,#_get_fileinfo_p_65536_119
      001FD3 74 01            [12] 6785 	mov	a,#0x01
      001FD5 2D               [12] 6786 	add	a,r5
      001FD6 F0               [24] 6787 	movx	@dptr,a
      001FD7 E4               [12] 6788 	clr	a
      001FD8 3E               [12] 6789 	addc	a,r6
      001FD9 A3               [24] 6790 	inc	dptr
      001FDA F0               [24] 6791 	movx	@dptr,a
      001FDB EF               [12] 6792 	mov	a,r7
      001FDC A3               [24] 6793 	inc	dptr
      001FDD F0               [24] 6794 	movx	@dptr,a
      001FDE                       6795 00106$:
                           001FDE  6796 	C$ff.c$1753$3_0$121 ==.
                                   6797 ;	FATFS\src\ff.c:1753: if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
      001FDE 90r00rB4         [24] 6798 	mov	dptr,#_get_fileinfo_c_65536_119
      001FE1 E0               [24] 6799 	movx	a,@dptr
      001FE2 FF               [12] 6800 	mov	r7,a
      001FE3 BF 41 00         [24] 6801 	cjne	r7,#0x41,00211$
      001FE6                       6802 00211$:
      001FE6 40 1C            [24] 6803 	jc	00108$
      001FE8 EF               [12] 6804 	mov	a,r7
      001FE9 24 A5            [12] 6805 	add	a,#0xff - 0x5a
      001FEB 40 17            [24] 6806 	jc	00108$
      001FED 85*6C 82         [24] 6807 	mov	dpl,_get_fileinfo_sloc0_1_0
      001FF0 85*6D 83         [24] 6808 	mov	dph,(_get_fileinfo_sloc0_1_0 + 1)
      001FF3 85*6E F0         [24] 6809 	mov	b,(_get_fileinfo_sloc0_1_0 + 2)
      001FF6 12r00r00         [24] 6810 	lcall	__gptrget
      001FF9 FE               [12] 6811 	mov	r6,a
      001FFA 30 E3 07         [24] 6812 	jnb	acc.3,00108$
                           001FFD  6813 	C$ff.c$1754$3_0$121 ==.
                                   6814 ;	FATFS\src\ff.c:1754: c += 0x20;			/* To lower */
      001FFD 90r00rB4         [24] 6815 	mov	dptr,#_get_fileinfo_c_65536_119
      002000 74 20            [12] 6816 	mov	a,#0x20
      002002 2F               [12] 6817 	add	a,r7
      002003 F0               [24] 6818 	movx	@dptr,a
      002004                       6819 00108$:
                           002004  6820 	C$ff.c$1762$1_0$119 ==.
                                   6821 ;	FATFS\src\ff.c:1762: *p++ = c;
      002004 C0 00            [24] 6822 	push	ar0
      002006 C0 01            [24] 6823 	push	ar1
      002008 90r00rB1         [24] 6824 	mov	dptr,#_get_fileinfo_p_65536_119
      00200B E0               [24] 6825 	movx	a,@dptr
      00200C FD               [12] 6826 	mov	r5,a
      00200D A3               [24] 6827 	inc	dptr
      00200E E0               [24] 6828 	movx	a,@dptr
      00200F FE               [12] 6829 	mov	r6,a
      002010 A3               [24] 6830 	inc	dptr
      002011 E0               [24] 6831 	movx	a,@dptr
      002012 FF               [12] 6832 	mov	r7,a
      002013 90r00rB4         [24] 6833 	mov	dptr,#_get_fileinfo_c_65536_119
      002016 E0               [24] 6834 	movx	a,@dptr
      002017 8D 82            [24] 6835 	mov	dpl,r5
      002019 8E 83            [24] 6836 	mov	dph,r6
      00201B 8F F0            [24] 6837 	mov	b,r7
      00201D 12r00r00         [24] 6838 	lcall	__gptrput
      002020 90r00rB1         [24] 6839 	mov	dptr,#_get_fileinfo_p_65536_119
      002023 74 01            [12] 6840 	mov	a,#0x01
      002025 2D               [12] 6841 	add	a,r5
      002026 F0               [24] 6842 	movx	@dptr,a
      002027 E4               [12] 6843 	clr	a
      002028 3E               [12] 6844 	addc	a,r6
      002029 A3               [24] 6845 	inc	dptr
      00202A F0               [24] 6846 	movx	@dptr,a
      00202B EF               [12] 6847 	mov	a,r7
      00202C A3               [24] 6848 	inc	dptr
      00202D F0               [24] 6849 	movx	@dptr,a
      00202E D0 01            [24] 6850 	pop	ar1
      002030 D0 00            [24] 6851 	pop	ar0
      002032 02r1Fr76         [24] 6852 	ljmp	00111$
      002035                       6853 00113$:
                           002035  6854 	C$ff.c$1764$2_0$120 ==.
                                   6855 ;	FATFS\src\ff.c:1764: fno->fattrib = dir[DIR_Attr];				/* Attribute */
      002035 74 08            [12] 6856 	mov	a,#0x08
      002037 25*70            [12] 6857 	add	a,_get_fileinfo_sloc2_1_0
      002039 F5*6C            [12] 6858 	mov	_get_fileinfo_sloc0_1_0,a
      00203B E4               [12] 6859 	clr	a
      00203C 35*71            [12] 6860 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      00203E F5*6D            [12] 6861 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      002040 85*72*6E         [24] 6862 	mov	(_get_fileinfo_sloc0_1_0 + 2),(_get_fileinfo_sloc2_1_0 + 2)
      002043 74 0B            [12] 6863 	mov	a,#0x0b
      002045 2A               [12] 6864 	add	a,r2
      002046 F8               [12] 6865 	mov	r0,a
      002047 E4               [12] 6866 	clr	a
      002048 3B               [12] 6867 	addc	a,r3
      002049 F9               [12] 6868 	mov	r1,a
      00204A 8C 07            [24] 6869 	mov	ar7,r4
      00204C 88 82            [24] 6870 	mov	dpl,r0
      00204E 89 83            [24] 6871 	mov	dph,r1
      002050 8F F0            [24] 6872 	mov	b,r7
      002052 12r00r00         [24] 6873 	lcall	__gptrget
      002055 85*6C 82         [24] 6874 	mov	dpl,_get_fileinfo_sloc0_1_0
      002058 85*6D 83         [24] 6875 	mov	dph,(_get_fileinfo_sloc0_1_0 + 1)
      00205B 85*6E F0         [24] 6876 	mov	b,(_get_fileinfo_sloc0_1_0 + 2)
      00205E 12r00r00         [24] 6877 	lcall	__gptrput
                           002061  6878 	C$ff.c$1765$2_0$120 ==.
                                   6879 ;	FATFS\src\ff.c:1765: fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
      002061 74 1F            [12] 6880 	mov	a,#0x1f
      002063 2A               [12] 6881 	add	a,r2
      002064 FD               [12] 6882 	mov	r5,a
      002065 E4               [12] 6883 	clr	a
      002066 3B               [12] 6884 	addc	a,r3
      002067 FE               [12] 6885 	mov	r6,a
      002068 8C 07            [24] 6886 	mov	ar7,r4
      00206A 8D 82            [24] 6887 	mov	dpl,r5
      00206C 8E 83            [24] 6888 	mov	dph,r6
      00206E 8F F0            [24] 6889 	mov	b,r7
      002070 12r00r00         [24] 6890 	lcall	__gptrget
      002073 F9               [12] 6891 	mov	r1,a
      002074 7F 00            [12] 6892 	mov	r7,#0x00
      002076 89*76            [24] 6893 	mov	(_get_fileinfo_sloc3_1_0 + 3),r1
                                   6894 ;	1-genFromRTrack replaced	mov	_get_fileinfo_sloc3_1_0,#0x00
      002078 8F*73            [24] 6895 	mov	_get_fileinfo_sloc3_1_0,r7
                                   6896 ;	1-genFromRTrack replaced	mov	(_get_fileinfo_sloc3_1_0 + 1),#0x00
      00207A 8F*74            [24] 6897 	mov	(_get_fileinfo_sloc3_1_0 + 1),r7
                                   6898 ;	1-genFromRTrack replaced	mov	(_get_fileinfo_sloc3_1_0 + 2),#0x00
      00207C 8F*75            [24] 6899 	mov	(_get_fileinfo_sloc3_1_0 + 2),r7
      00207E 74 1E            [12] 6900 	mov	a,#0x1e
      002080 2A               [12] 6901 	add	a,r2
      002081 F8               [12] 6902 	mov	r0,a
      002082 E4               [12] 6903 	clr	a
      002083 3B               [12] 6904 	addc	a,r3
      002084 FE               [12] 6905 	mov	r6,a
      002085 8C 07            [24] 6906 	mov	ar7,r4
      002087 88 82            [24] 6907 	mov	dpl,r0
      002089 8E 83            [24] 6908 	mov	dph,r6
      00208B 8F F0            [24] 6909 	mov	b,r7
      00208D 12r00r00         [24] 6910 	lcall	__gptrget
      002090 F8               [12] 6911 	mov	r0,a
      002091 7F 00            [12] 6912 	mov	r7,#0x00
      002093 8F 05            [24] 6913 	mov	ar5,r7
      002095 88 06            [24] 6914 	mov	ar6,r0
      002097 E4               [12] 6915 	clr	a
      002098 FF               [12] 6916 	mov	r7,a
      002099 42*73            [12] 6917 	orl	_get_fileinfo_sloc3_1_0,a
      00209B EF               [12] 6918 	mov	a,r7
      00209C 42*74            [12] 6919 	orl	(_get_fileinfo_sloc3_1_0 + 1),a
      00209E EE               [12] 6920 	mov	a,r6
      00209F 42*75            [12] 6921 	orl	(_get_fileinfo_sloc3_1_0 + 2),a
      0020A1 ED               [12] 6922 	mov	a,r5
      0020A2 42*76            [12] 6923 	orl	(_get_fileinfo_sloc3_1_0 + 3),a
      0020A4 74 1D            [12] 6924 	mov	a,#0x1d
      0020A6 2A               [12] 6925 	add	a,r2
      0020A7 F9               [12] 6926 	mov	r1,a
      0020A8 E4               [12] 6927 	clr	a
      0020A9 3B               [12] 6928 	addc	a,r3
      0020AA FE               [12] 6929 	mov	r6,a
      0020AB 8C 07            [24] 6930 	mov	ar7,r4
      0020AD 89 82            [24] 6931 	mov	dpl,r1
      0020AF 8E 83            [24] 6932 	mov	dph,r6
      0020B1 8F F0            [24] 6933 	mov	b,r7
      0020B3 12r00r00         [24] 6934 	lcall	__gptrget
      0020B6 FF               [12] 6935 	mov	r7,a
      0020B7 E4               [12] 6936 	clr	a
      0020B8 F9               [12] 6937 	mov	r1,a
      0020B9 FE               [12] 6938 	mov	r6,a
      0020BA FD               [12] 6939 	mov	r5,a
      0020BB E9               [12] 6940 	mov	a,r1
      0020BC 42*73            [12] 6941 	orl	_get_fileinfo_sloc3_1_0,a
      0020BE EF               [12] 6942 	mov	a,r7
      0020BF 42*74            [12] 6943 	orl	(_get_fileinfo_sloc3_1_0 + 1),a
      0020C1 EE               [12] 6944 	mov	a,r6
      0020C2 42*75            [12] 6945 	orl	(_get_fileinfo_sloc3_1_0 + 2),a
      0020C4 ED               [12] 6946 	mov	a,r5
      0020C5 42*76            [12] 6947 	orl	(_get_fileinfo_sloc3_1_0 + 3),a
      0020C7 74 1C            [12] 6948 	mov	a,#0x1c
      0020C9 2A               [12] 6949 	add	a,r2
      0020CA F8               [12] 6950 	mov	r0,a
      0020CB E4               [12] 6951 	clr	a
      0020CC 3B               [12] 6952 	addc	a,r3
      0020CD FE               [12] 6953 	mov	r6,a
      0020CE 8C 07            [24] 6954 	mov	ar7,r4
      0020D0 88 82            [24] 6955 	mov	dpl,r0
      0020D2 8E 83            [24] 6956 	mov	dph,r6
      0020D4 8F F0            [24] 6957 	mov	b,r7
      0020D6 12r00r00         [24] 6958 	lcall	__gptrget
      0020D9 F8               [12] 6959 	mov	r0,a
      0020DA E4               [12] 6960 	clr	a
      0020DB FE               [12] 6961 	mov	r6,a
      0020DC FF               [12] 6962 	mov	r7,a
      0020DD FD               [12] 6963 	mov	r5,a
      0020DE E5*73            [12] 6964 	mov	a,_get_fileinfo_sloc3_1_0
      0020E0 42 00            [12] 6965 	orl	ar0,a
      0020E2 E5*74            [12] 6966 	mov	a,(_get_fileinfo_sloc3_1_0 + 1)
      0020E4 42 06            [12] 6967 	orl	ar6,a
      0020E6 E5*75            [12] 6968 	mov	a,(_get_fileinfo_sloc3_1_0 + 2)
      0020E8 42 07            [12] 6969 	orl	ar7,a
      0020EA E5*76            [12] 6970 	mov	a,(_get_fileinfo_sloc3_1_0 + 3)
      0020EC 42 05            [12] 6971 	orl	ar5,a
      0020EE 85*70 82         [24] 6972 	mov	dpl,_get_fileinfo_sloc2_1_0
      0020F1 85*71 83         [24] 6973 	mov	dph,(_get_fileinfo_sloc2_1_0 + 1)
      0020F4 85*72 F0         [24] 6974 	mov	b,(_get_fileinfo_sloc2_1_0 + 2)
      0020F7 E8               [12] 6975 	mov	a,r0
      0020F8 12r00r00         [24] 6976 	lcall	__gptrput
      0020FB A3               [24] 6977 	inc	dptr
      0020FC EE               [12] 6978 	mov	a,r6
      0020FD 12r00r00         [24] 6979 	lcall	__gptrput
      002100 A3               [24] 6980 	inc	dptr
      002101 EF               [12] 6981 	mov	a,r7
      002102 12r00r00         [24] 6982 	lcall	__gptrput
      002105 A3               [24] 6983 	inc	dptr
      002106 ED               [12] 6984 	mov	a,r5
      002107 12r00r00         [24] 6985 	lcall	__gptrput
                           00210A  6986 	C$ff.c$1766$2_0$120 ==.
                                   6987 ;	FATFS\src\ff.c:1766: fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
      00210A 74 04            [12] 6988 	mov	a,#0x04
      00210C 25*70            [12] 6989 	add	a,_get_fileinfo_sloc2_1_0
      00210E F5*73            [12] 6990 	mov	_get_fileinfo_sloc3_1_0,a
      002110 E4               [12] 6991 	clr	a
      002111 35*71            [12] 6992 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      002113 F5*74            [12] 6993 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      002115 85*72*75         [24] 6994 	mov	(_get_fileinfo_sloc3_1_0 + 2),(_get_fileinfo_sloc2_1_0 + 2)
      002118 74 19            [12] 6995 	mov	a,#0x19
      00211A 2A               [12] 6996 	add	a,r2
      00211B F8               [12] 6997 	mov	r0,a
      00211C E4               [12] 6998 	clr	a
      00211D 3B               [12] 6999 	addc	a,r3
      00211E F9               [12] 7000 	mov	r1,a
      00211F 8C 07            [24] 7001 	mov	ar7,r4
      002121 88 82            [24] 7002 	mov	dpl,r0
      002123 89 83            [24] 7003 	mov	dph,r1
      002125 8F F0            [24] 7004 	mov	b,r7
      002127 12r00r00         [24] 7005 	lcall	__gptrget
      00212A FF               [12] 7006 	mov	r7,a
      00212B 78 00            [12] 7007 	mov	r0,#0x00
      00212D 74 18            [12] 7008 	mov	a,#0x18
      00212F 2A               [12] 7009 	add	a,r2
      002130 F9               [12] 7010 	mov	r1,a
      002131 E4               [12] 7011 	clr	a
      002132 3B               [12] 7012 	addc	a,r3
      002133 FD               [12] 7013 	mov	r5,a
      002134 8C 06            [24] 7014 	mov	ar6,r4
      002136 89 82            [24] 7015 	mov	dpl,r1
      002138 8D 83            [24] 7016 	mov	dph,r5
      00213A 8E F0            [24] 7017 	mov	b,r6
      00213C 12r00r00         [24] 7018 	lcall	__gptrget
      00213F 7E 00            [12] 7019 	mov	r6,#0x00
      002141 42 00            [12] 7020 	orl	ar0,a
      002143 EE               [12] 7021 	mov	a,r6
      002144 42 07            [12] 7022 	orl	ar7,a
      002146 85*73 82         [24] 7023 	mov	dpl,_get_fileinfo_sloc3_1_0
      002149 85*74 83         [24] 7024 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      00214C 85*75 F0         [24] 7025 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      00214F E8               [12] 7026 	mov	a,r0
      002150 12r00r00         [24] 7027 	lcall	__gptrput
      002153 A3               [24] 7028 	inc	dptr
      002154 EF               [12] 7029 	mov	a,r7
      002155 12r00r00         [24] 7030 	lcall	__gptrput
                           002158  7031 	C$ff.c$1767$2_0$120 ==.
                                   7032 ;	FATFS\src\ff.c:1767: fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
      002158 74 06            [12] 7033 	mov	a,#0x06
      00215A 25*70            [12] 7034 	add	a,_get_fileinfo_sloc2_1_0
      00215C F5*73            [12] 7035 	mov	_get_fileinfo_sloc3_1_0,a
      00215E E4               [12] 7036 	clr	a
      00215F 35*71            [12] 7037 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      002161 F5*74            [12] 7038 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      002163 85*72*75         [24] 7039 	mov	(_get_fileinfo_sloc3_1_0 + 2),(_get_fileinfo_sloc2_1_0 + 2)
      002166 74 17            [12] 7040 	mov	a,#0x17
      002168 2A               [12] 7041 	add	a,r2
      002169 F8               [12] 7042 	mov	r0,a
      00216A E4               [12] 7043 	clr	a
      00216B 3B               [12] 7044 	addc	a,r3
      00216C F9               [12] 7045 	mov	r1,a
      00216D 8C 07            [24] 7046 	mov	ar7,r4
      00216F 88 82            [24] 7047 	mov	dpl,r0
      002171 89 83            [24] 7048 	mov	dph,r1
      002173 8F F0            [24] 7049 	mov	b,r7
      002175 12r00r00         [24] 7050 	lcall	__gptrget
      002178 FF               [12] 7051 	mov	r7,a
      002179 78 00            [12] 7052 	mov	r0,#0x00
      00217B 74 16            [12] 7053 	mov	a,#0x16
      00217D 2A               [12] 7054 	add	a,r2
      00217E FA               [12] 7055 	mov	r2,a
      00217F E4               [12] 7056 	clr	a
      002180 3B               [12] 7057 	addc	a,r3
      002181 FB               [12] 7058 	mov	r3,a
      002182 8A 82            [24] 7059 	mov	dpl,r2
      002184 8B 83            [24] 7060 	mov	dph,r3
      002186 8C F0            [24] 7061 	mov	b,r4
      002188 12r00r00         [24] 7062 	lcall	__gptrget
      00218B FA               [12] 7063 	mov	r2,a
      00218C 7E 00            [12] 7064 	mov	r6,#0x00
      00218E 42 00            [12] 7065 	orl	ar0,a
      002190 EE               [12] 7066 	mov	a,r6
      002191 42 07            [12] 7067 	orl	ar7,a
      002193 85*73 82         [24] 7068 	mov	dpl,_get_fileinfo_sloc3_1_0
      002196 85*74 83         [24] 7069 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      002199 85*75 F0         [24] 7070 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      00219C E8               [12] 7071 	mov	a,r0
      00219D 12r00r00         [24] 7072 	lcall	__gptrput
      0021A0 A3               [24] 7073 	inc	dptr
      0021A1 EF               [12] 7074 	mov	a,r7
      0021A2 12r00r00         [24] 7075 	lcall	__gptrput
      0021A5                       7076 00115$:
                           0021A5  7077 	C$ff.c$1769$1_0$119 ==.
                                   7078 ;	FATFS\src\ff.c:1769: *p = 0;		/* Terminate SFN string by a \0 */
      0021A5 90r00rB1         [24] 7079 	mov	dptr,#_get_fileinfo_p_65536_119
      0021A8 E0               [24] 7080 	movx	a,@dptr
      0021A9 FD               [12] 7081 	mov	r5,a
      0021AA A3               [24] 7082 	inc	dptr
      0021AB E0               [24] 7083 	movx	a,@dptr
      0021AC FE               [12] 7084 	mov	r6,a
      0021AD A3               [24] 7085 	inc	dptr
      0021AE E0               [24] 7086 	movx	a,@dptr
      0021AF FF               [12] 7087 	mov	r7,a
      0021B0 8D 82            [24] 7088 	mov	dpl,r5
      0021B2 8E 83            [24] 7089 	mov	dph,r6
      0021B4 8F F0            [24] 7090 	mov	b,r7
      0021B6 E4               [12] 7091 	clr	a
      0021B7 12r00r00         [24] 7092 	lcall	__gptrput
                           0021BA  7093 	C$ff.c$1772$1_0$119 ==.
                                   7094 ;	FATFS\src\ff.c:1772: if (fno->lfname) {
      0021BA 74 16            [12] 7095 	mov	a,#0x16
      0021BC 25*70            [12] 7096 	add	a,_get_fileinfo_sloc2_1_0
      0021BE FD               [12] 7097 	mov	r5,a
      0021BF E4               [12] 7098 	clr	a
      0021C0 35*71            [12] 7099 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      0021C2 FE               [12] 7100 	mov	r6,a
      0021C3 AF*72            [24] 7101 	mov	r7,(_get_fileinfo_sloc2_1_0 + 2)
      0021C5 8D 82            [24] 7102 	mov	dpl,r5
      0021C7 8E 83            [24] 7103 	mov	dph,r6
      0021C9 8F F0            [24] 7104 	mov	b,r7
      0021CB 12r00r00         [24] 7105 	lcall	__gptrget
      0021CE FD               [12] 7106 	mov	r5,a
      0021CF A3               [24] 7107 	inc	dptr
      0021D0 12r00r00         [24] 7108 	lcall	__gptrget
      0021D3 FE               [12] 7109 	mov	r6,a
      0021D4 A3               [24] 7110 	inc	dptr
      0021D5 12r00r00         [24] 7111 	lcall	__gptrget
      0021D8 FF               [12] 7112 	mov	r7,a
      0021D9 ED               [12] 7113 	mov	a,r5
      0021DA 4E               [12] 7114 	orl	a,r6
      0021DB 70 03            [24] 7115 	jnz	00215$
      0021DD 02r00r00         [24] 7116 	ljmp	__sdcc_banked_ret
      0021E0                       7117 00215$:
                           0021E0  7118 	C$ff.c$1775$1_0$119 ==.
                                   7119 ;	FATFS\src\ff.c:1775: i = 0; p = fno->lfname;
      0021E0 C0 05            [24] 7120 	push	ar5
      0021E2 C0 06            [24] 7121 	push	ar6
      0021E4 C0 07            [24] 7122 	push	ar7
      0021E6 90r00rAF         [24] 7123 	mov	dptr,#_get_fileinfo_i_65536_119
      0021E9 E4               [12] 7124 	clr	a
      0021EA F0               [24] 7125 	movx	@dptr,a
      0021EB A3               [24] 7126 	inc	dptr
      0021EC F0               [24] 7127 	movx	@dptr,a
                           0021ED  7128 	C$ff.c$1776$2_0$122 ==.
                                   7129 ;	FATFS\src\ff.c:1776: if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
      0021ED 90r00rAC         [24] 7130 	mov	dptr,#_get_fileinfo_dp_65536_118
      0021F0 E0               [24] 7131 	movx	a,@dptr
      0021F1 FA               [12] 7132 	mov	r2,a
      0021F2 A3               [24] 7133 	inc	dptr
      0021F3 E0               [24] 7134 	movx	a,@dptr
      0021F4 FB               [12] 7135 	mov	r3,a
      0021F5 A3               [24] 7136 	inc	dptr
      0021F6 E0               [24] 7137 	movx	a,@dptr
      0021F7 FC               [12] 7138 	mov	r4,a
      0021F8 74 0F            [12] 7139 	mov	a,#0x0f
      0021FA 2A               [12] 7140 	add	a,r2
      0021FB F8               [12] 7141 	mov	r0,a
      0021FC E4               [12] 7142 	clr	a
      0021FD 3B               [12] 7143 	addc	a,r3
      0021FE F9               [12] 7144 	mov	r1,a
      0021FF 8C 07            [24] 7145 	mov	ar7,r4
      002201 88 82            [24] 7146 	mov	dpl,r0
      002203 89 83            [24] 7147 	mov	dph,r1
      002205 8F F0            [24] 7148 	mov	b,r7
      002207 12r00r00         [24] 7149 	lcall	__gptrget
      00220A F8               [12] 7150 	mov	r0,a
      00220B A3               [24] 7151 	inc	dptr
      00220C 12r00r00         [24] 7152 	lcall	__gptrget
      00220F F9               [12] 7153 	mov	r1,a
      002210 A3               [24] 7154 	inc	dptr
      002211 12r00r00         [24] 7155 	lcall	__gptrget
      002214 FF               [12] 7156 	mov	r7,a
      002215 A3               [24] 7157 	inc	dptr
      002216 12r00r00         [24] 7158 	lcall	__gptrget
      002219 FE               [12] 7159 	mov	r6,a
      00221A E8               [12] 7160 	mov	a,r0
      00221B 49               [12] 7161 	orl	a,r1
      00221C 4F               [12] 7162 	orl	a,r7
      00221D 4E               [12] 7163 	orl	a,r6
      00221E D0 07            [24] 7164 	pop	ar7
      002220 D0 06            [24] 7165 	pop	ar6
      002222 D0 05            [24] 7166 	pop	ar5
      002224 70 03            [24] 7167 	jnz	00216$
      002226 02r23r77         [24] 7168 	ljmp	00127$
      002229                       7169 00216$:
      002229 74 19            [12] 7170 	mov	a,#0x19
      00222B 25*70            [12] 7171 	add	a,_get_fileinfo_sloc2_1_0
      00222D F5*73            [12] 7172 	mov	_get_fileinfo_sloc3_1_0,a
      00222F E4               [12] 7173 	clr	a
      002230 35*71            [12] 7174 	addc	a,(_get_fileinfo_sloc2_1_0 + 1)
      002232 F5*74            [12] 7175 	mov	(_get_fileinfo_sloc3_1_0 + 1),a
      002234 85*72*75         [24] 7176 	mov	(_get_fileinfo_sloc3_1_0 + 2),(_get_fileinfo_sloc2_1_0 + 2)
      002237 85*73 82         [24] 7177 	mov	dpl,_get_fileinfo_sloc3_1_0
      00223A 85*74 83         [24] 7178 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      00223D 85*75 F0         [24] 7179 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      002240 12r00r00         [24] 7180 	lcall	__gptrget
      002243 F8               [12] 7181 	mov	r0,a
      002244 A3               [24] 7182 	inc	dptr
      002245 12r00r00         [24] 7183 	lcall	__gptrget
      002248 F9               [12] 7184 	mov	r1,a
      002249 48               [12] 7185 	orl	a,r0
      00224A 70 03            [24] 7186 	jnz	00217$
      00224C 02r23r77         [24] 7187 	ljmp	00127$
      00224F                       7188 00217$:
      00224F C0 05            [24] 7189 	push	ar5
      002251 C0 06            [24] 7190 	push	ar6
      002253 C0 07            [24] 7191 	push	ar7
      002255 74 1C            [12] 7192 	mov	a,#0x1c
      002257 2A               [12] 7193 	add	a,r2
      002258 F8               [12] 7194 	mov	r0,a
      002259 E4               [12] 7195 	clr	a
      00225A 3B               [12] 7196 	addc	a,r3
      00225B F9               [12] 7197 	mov	r1,a
      00225C 8C 07            [24] 7198 	mov	ar7,r4
      00225E 88 82            [24] 7199 	mov	dpl,r0
      002260 89 83            [24] 7200 	mov	dph,r1
      002262 8F F0            [24] 7201 	mov	b,r7
      002264 12r00r00         [24] 7202 	lcall	__gptrget
      002267 F8               [12] 7203 	mov	r0,a
      002268 A3               [24] 7204 	inc	dptr
      002269 12r00r00         [24] 7205 	lcall	__gptrget
      00226C F9               [12] 7206 	mov	r1,a
      00226D B8 FF 0C         [24] 7207 	cjne	r0,#0xff,00218$
      002270 B9 FF 09         [24] 7208 	cjne	r1,#0xff,00218$
      002273 D0 07            [24] 7209 	pop	ar7
      002275 D0 06            [24] 7210 	pop	ar6
      002277 D0 05            [24] 7211 	pop	ar5
      002279 02r23r77         [24] 7212 	ljmp	00127$
      00227C                       7213 00218$:
      00227C D0 07            [24] 7214 	pop	ar7
      00227E D0 06            [24] 7215 	pop	ar6
      002280 D0 05            [24] 7216 	pop	ar5
                           002282  7217 	C$ff.c$1777$3_0$123 ==.
                                   7218 ;	FATFS\src\ff.c:1777: lfn = dp->lfn;
      002282 74 19            [12] 7219 	mov	a,#0x19
      002284 2A               [12] 7220 	add	a,r2
      002285 FA               [12] 7221 	mov	r2,a
      002286 E4               [12] 7222 	clr	a
      002287 3B               [12] 7223 	addc	a,r3
      002288 FB               [12] 7224 	mov	r3,a
      002289 8A 82            [24] 7225 	mov	dpl,r2
      00228B 8B 83            [24] 7226 	mov	dph,r3
      00228D 8C F0            [24] 7227 	mov	b,r4
      00228F 12r00r00         [24] 7228 	lcall	__gptrget
      002292 FA               [12] 7229 	mov	r2,a
      002293 A3               [24] 7230 	inc	dptr
      002294 12r00r00         [24] 7231 	lcall	__gptrget
      002297 FB               [12] 7232 	mov	r3,a
      002298 A3               [24] 7233 	inc	dptr
      002299 12r00r00         [24] 7234 	lcall	__gptrget
      00229C FC               [12] 7235 	mov	r4,a
                           00229D  7236 	C$ff.c$1778$1_0$119 ==.
                                   7237 ;	FATFS\src\ff.c:1778: while ((w = *lfn++) != 0) {		/* Get an LFN character */
      00229D 78 00            [12] 7238 	mov	r0,#0x00
      00229F 79 00            [12] 7239 	mov	r1,#0x00
      0022A1                       7240 00123$:
      0022A1 8A 82            [24] 7241 	mov	dpl,r2
      0022A3 8B 83            [24] 7242 	mov	dph,r3
      0022A5 8C F0            [24] 7243 	mov	b,r4
      0022A7 12r00r00         [24] 7244 	lcall	__gptrget
      0022AA F5*70            [12] 7245 	mov	_get_fileinfo_sloc2_1_0,a
      0022AC A3               [24] 7246 	inc	dptr
      0022AD 12r00r00         [24] 7247 	lcall	__gptrget
      0022B0 F5*71            [12] 7248 	mov	(_get_fileinfo_sloc2_1_0 + 1),a
      0022B2 A3               [24] 7249 	inc	dptr
      0022B3 AA 82            [24] 7250 	mov	r2,dpl
      0022B5 AB 83            [24] 7251 	mov	r3,dph
      0022B7 E5*70            [12] 7252 	mov	a,_get_fileinfo_sloc2_1_0
      0022B9 45*71            [12] 7253 	orl	a,(_get_fileinfo_sloc2_1_0 + 1)
      0022BB 70 03            [24] 7254 	jnz	00219$
      0022BD 02r23r77         [24] 7255 	ljmp	00127$
      0022C0                       7256 00219$:
                           0022C0  7257 	C$ff.c$1780$4_0$124 ==.
                                   7258 ;	FATFS\src\ff.c:1780: w = ff_convert(w, 0);		/* Unicode -> OEM */
      0022C0 90r00r00         [24] 7259 	mov	dptr,#_ff_convert_PARM_2
      0022C3 E4               [12] 7260 	clr	a
      0022C4 F0               [24] 7261 	movx	@dptr,a
      0022C5 A3               [24] 7262 	inc	dptr
      0022C6 F0               [24] 7263 	movx	@dptr,a
      0022C7 85*70 82         [24] 7264 	mov	dpl,_get_fileinfo_sloc2_1_0
      0022CA 85*71 83         [24] 7265 	mov	dph,(_get_fileinfo_sloc2_1_0 + 1)
      0022CD C0 07            [24] 7266 	push	ar7
      0022CF C0 06            [24] 7267 	push	ar6
      0022D1 C0 05            [24] 7268 	push	ar5
      0022D3 C0 04            [24] 7269 	push	ar4
      0022D5 C0 03            [24] 7270 	push	ar3
      0022D7 C0 02            [24] 7271 	push	ar2
      0022D9 C0 01            [24] 7272 	push	ar1
      0022DB C0 00            [24] 7273 	push	ar0
      0022DD 78r00            [12] 7274 	mov	r0,#_ff_convert
      0022DF 79s00            [12] 7275 	mov	r1,#(_ff_convert >> 8)
      0022E1 7As00            [12] 7276 	mov	r2,#(_ff_convert >> 16)
      0022E3 12r00r00         [24] 7277 	lcall	__sdcc_banked_call
      0022E6 85 82*70         [24] 7278 	mov	_get_fileinfo_sloc2_1_0,dpl
      0022E9 85 83*71         [24] 7279 	mov	(_get_fileinfo_sloc2_1_0 + 1),dph
      0022EC D0 00            [24] 7280 	pop	ar0
      0022EE D0 01            [24] 7281 	pop	ar1
      0022F0 D0 02            [24] 7282 	pop	ar2
      0022F2 D0 03            [24] 7283 	pop	ar3
      0022F4 D0 04            [24] 7284 	pop	ar4
      0022F6 D0 05            [24] 7285 	pop	ar5
      0022F8 D0 06            [24] 7286 	pop	ar6
      0022FA D0 07            [24] 7287 	pop	ar7
                           0022FC  7288 	C$ff.c$1781$4_0$124 ==.
                                   7289 ;	FATFS\src\ff.c:1781: if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
      0022FC E5*70            [12] 7290 	mov	a,_get_fileinfo_sloc2_1_0
      0022FE 45*71            [12] 7291 	orl	a,(_get_fileinfo_sloc2_1_0 + 1)
      002300 70 09            [24] 7292 	jnz	00119$
      002302 90r00rAF         [24] 7293 	mov	dptr,#_get_fileinfo_i_65536_119
      002305 E4               [12] 7294 	clr	a
      002306 F0               [24] 7295 	movx	@dptr,a
      002307 A3               [24] 7296 	inc	dptr
      002308 F0               [24] 7297 	movx	@dptr,a
                           002309  7298 	C$ff.c$1783$4_0$124 ==.
                                   7299 ;	FATFS\src\ff.c:1783: p[i++] = (TCHAR)(w >> 8);
      002309 80 6C            [24] 7300 	sjmp	00127$
      00230B                       7301 00119$:
                           00230B  7302 	C$ff.c$1785$1_0$119 ==.
                                   7303 ;	FATFS\src\ff.c:1785: if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
      00230B C0 05            [24] 7304 	push	ar5
      00230D C0 06            [24] 7305 	push	ar6
      00230F C0 07            [24] 7306 	push	ar7
      002311 85*73 82         [24] 7307 	mov	dpl,_get_fileinfo_sloc3_1_0
      002314 85*74 83         [24] 7308 	mov	dph,(_get_fileinfo_sloc3_1_0 + 1)
      002317 85*75 F0         [24] 7309 	mov	b,(_get_fileinfo_sloc3_1_0 + 2)
      00231A 12r00r00         [24] 7310 	lcall	__gptrget
      00231D FE               [12] 7311 	mov	r6,a
      00231E A3               [24] 7312 	inc	dptr
      00231F 12r00r00         [24] 7313 	lcall	__gptrget
      002322 FF               [12] 7314 	mov	r7,a
      002323 1E               [12] 7315 	dec	r6
      002324 BE FF 01         [24] 7316 	cjne	r6,#0xff,00221$
      002327 1F               [12] 7317 	dec	r7
      002328                       7318 00221$:
      002328 C3               [12] 7319 	clr	c
      002329 E8               [12] 7320 	mov	a,r0
      00232A 9E               [12] 7321 	subb	a,r6
      00232B E9               [12] 7322 	mov	a,r1
      00232C 9F               [12] 7323 	subb	a,r7
      00232D D0 07            [24] 7324 	pop	ar7
      00232F D0 06            [24] 7325 	pop	ar6
      002331 D0 05            [24] 7326 	pop	ar5
      002333 40 09            [24] 7327 	jc	00122$
      002335 90r00rAF         [24] 7328 	mov	dptr,#_get_fileinfo_i_65536_119
      002338 E4               [12] 7329 	clr	a
      002339 F0               [24] 7330 	movx	@dptr,a
      00233A A3               [24] 7331 	inc	dptr
      00233B F0               [24] 7332 	movx	@dptr,a
      00233C 80 39            [24] 7333 	sjmp	00127$
      00233E                       7334 00122$:
                           00233E  7335 	C$ff.c$1786$1_0$119 ==.
                                   7336 ;	FATFS\src\ff.c:1786: p[i++] = (TCHAR)w;
      00233E C0 02            [24] 7337 	push	ar2
      002340 C0 03            [24] 7338 	push	ar3
      002342 C0 04            [24] 7339 	push	ar4
      002344 88 03            [24] 7340 	mov	ar3,r0
      002346 89 04            [24] 7341 	mov	ar4,r1
      002348 08               [12] 7342 	inc	r0
      002349 B8 00 01         [24] 7343 	cjne	r0,#0x00,00223$
      00234C 09               [12] 7344 	inc	r1
      00234D                       7345 00223$:
      00234D 90r00rAF         [24] 7346 	mov	dptr,#_get_fileinfo_i_65536_119
      002350 E8               [12] 7347 	mov	a,r0
      002351 F0               [24] 7348 	movx	@dptr,a
      002352 E9               [12] 7349 	mov	a,r1
      002353 A3               [24] 7350 	inc	dptr
      002354 F0               [24] 7351 	movx	@dptr,a
      002355 EB               [12] 7352 	mov	a,r3
      002356 2D               [12] 7353 	add	a,r5
      002357 F5*6C            [12] 7354 	mov	_get_fileinfo_sloc0_1_0,a
      002359 EC               [12] 7355 	mov	a,r4
      00235A 3E               [12] 7356 	addc	a,r6
      00235B F5*6D            [12] 7357 	mov	(_get_fileinfo_sloc0_1_0 + 1),a
      00235D 8F*6E            [24] 7358 	mov	(_get_fileinfo_sloc0_1_0 + 2),r7
      00235F AC*70            [24] 7359 	mov	r4,_get_fileinfo_sloc2_1_0
      002361 85*6C 82         [24] 7360 	mov	dpl,_get_fileinfo_sloc0_1_0
      002364 85*6D 83         [24] 7361 	mov	dph,(_get_fileinfo_sloc0_1_0 + 1)
      002367 85*6E F0         [24] 7362 	mov	b,(_get_fileinfo_sloc0_1_0 + 2)
      00236A EC               [12] 7363 	mov	a,r4
      00236B 12r00r00         [24] 7364 	lcall	__gptrput
      00236E D0 04            [24] 7365 	pop	ar4
      002370 D0 03            [24] 7366 	pop	ar3
      002372 D0 02            [24] 7367 	pop	ar2
      002374 02r22rA1         [24] 7368 	ljmp	00123$
      002377                       7369 00127$:
                           002377  7370 	C$ff.c$1789$2_0$122 ==.
                                   7371 ;	FATFS\src\ff.c:1789: p[i] = 0;	/* Terminate LFN string by a \0 */
      002377 90r00rAF         [24] 7372 	mov	dptr,#_get_fileinfo_i_65536_119
      00237A E0               [24] 7373 	movx	a,@dptr
      00237B FB               [12] 7374 	mov	r3,a
      00237C A3               [24] 7375 	inc	dptr
      00237D E0               [24] 7376 	movx	a,@dptr
      00237E FC               [12] 7377 	mov	r4,a
      00237F EB               [12] 7378 	mov	a,r3
      002380 2D               [12] 7379 	add	a,r5
      002381 FD               [12] 7380 	mov	r5,a
      002382 EC               [12] 7381 	mov	a,r4
      002383 3E               [12] 7382 	addc	a,r6
      002384 FE               [12] 7383 	mov	r6,a
      002385 8D 82            [24] 7384 	mov	dpl,r5
      002387 8E 83            [24] 7385 	mov	dph,r6
      002389 8F F0            [24] 7386 	mov	b,r7
      00238B E4               [12] 7387 	clr	a
      00238C 12r00r00         [24] 7388 	lcall	__gptrput
                           00238F  7389 	C$ff.c$1792$1_0$119 ==.
                                   7390 ;	FATFS\src\ff.c:1792: }
                           00238F  7391 	C$ff.c$1792$1_0$119 ==.
                           00238F  7392 	XFff$get_fileinfo$0$0 ==.
      00238F 02r00r00         [24] 7393 	ljmp	__sdcc_banked_ret
                                   7394 ;------------------------------------------------------------
                                   7395 ;Allocation info for local variables in function 'create_name'
                                   7396 ;------------------------------------------------------------
                                   7397 ;sloc0                     Allocated with name '_create_name_sloc0_1_0'
                                   7398 ;sloc1                     Allocated with name '_create_name_sloc1_1_0'
                                   7399 ;sloc2                     Allocated with name '_create_name_sloc2_1_0'
                                   7400 ;sloc3                     Allocated with name '_create_name_sloc3_1_0'
                                   7401 ;path                      Allocated with name '_create_name_PARM_2'
                                   7402 ;dp                        Allocated with name '_create_name_dp_65536_127'
                                   7403 ;b                         Allocated with name '_create_name_b_65536_128'
                                   7404 ;cf                        Allocated with name '_create_name_cf_65536_128'
                                   7405 ;w                         Allocated with name '_create_name_w_65536_128'
                                   7406 ;lfn                       Allocated with name '_create_name_lfn_65536_128'
                                   7407 ;i                         Allocated with name '_create_name_i_65536_128'
                                   7408 ;ni                        Allocated with name '_create_name_ni_65536_128'
                                   7409 ;si                        Allocated with name '_create_name_si_65536_128'
                                   7410 ;di                        Allocated with name '_create_name_di_65536_128'
                                   7411 ;p                         Allocated with name '_create_name_p_65536_128'
                                   7412 ;------------------------------------------------------------
                           002392  7413 	Fff$create_name$0$0 ==.
                           002392  7414 	C$ff.c$1803$1_0$128 ==.
                                   7415 ;	FATFS\src\ff.c:1803: FRESULT create_name (
                                   7416 ;	-----------------------------------------
                                   7417 ;	 function create_name
                                   7418 ;	-----------------------------------------
      002392                       7419 _create_name:
      002392 AF F0            [24] 7420 	mov	r7,b
      002394 AE 83            [24] 7421 	mov	r6,dph
      002396 E5 82            [12] 7422 	mov	a,dpl
      002398 90r00rB8         [24] 7423 	mov	dptr,#_create_name_dp_65536_127
      00239B F0               [24] 7424 	movx	@dptr,a
      00239C EE               [12] 7425 	mov	a,r6
      00239D A3               [24] 7426 	inc	dptr
      00239E F0               [24] 7427 	movx	@dptr,a
      00239F EF               [12] 7428 	mov	a,r7
      0023A0 A3               [24] 7429 	inc	dptr
      0023A1 F0               [24] 7430 	movx	@dptr,a
                           0023A2  7431 	C$ff.c$1815$2_0$129 ==.
                                   7432 ;	FATFS\src\ff.c:1815: for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
      0023A2 90r00rB5         [24] 7433 	mov	dptr,#_create_name_PARM_2
      0023A5 E0               [24] 7434 	movx	a,@dptr
      0023A6 FD               [12] 7435 	mov	r5,a
      0023A7 A3               [24] 7436 	inc	dptr
      0023A8 E0               [24] 7437 	movx	a,@dptr
      0023A9 FE               [12] 7438 	mov	r6,a
      0023AA A3               [24] 7439 	inc	dptr
      0023AB E0               [24] 7440 	movx	a,@dptr
      0023AC FF               [12] 7441 	mov	r7,a
      0023AD 8D 82            [24] 7442 	mov	dpl,r5
      0023AF 8E 83            [24] 7443 	mov	dph,r6
      0023B1 8F F0            [24] 7444 	mov	b,r7
      0023B3 12r00r00         [24] 7445 	lcall	__gptrget
      0023B6 FA               [12] 7446 	mov	r2,a
      0023B7 A3               [24] 7447 	inc	dptr
      0023B8 12r00r00         [24] 7448 	lcall	__gptrget
      0023BB FB               [12] 7449 	mov	r3,a
      0023BC A3               [24] 7450 	inc	dptr
      0023BD 12r00r00         [24] 7451 	lcall	__gptrget
      0023C0 FC               [12] 7452 	mov	r4,a
      0023C1                       7453 00186$:
      0023C1 8A 82            [24] 7454 	mov	dpl,r2
      0023C3 8B 83            [24] 7455 	mov	dph,r3
      0023C5 8C F0            [24] 7456 	mov	b,r4
      0023C7 12r00r00         [24] 7457 	lcall	__gptrget
      0023CA F9               [12] 7458 	mov	r1,a
      0023CB B9 2F 02         [24] 7459 	cjne	r1,#0x2f,00371$
      0023CE 80 03            [24] 7460 	sjmp	00187$
      0023D0                       7461 00371$:
      0023D0 B9 5C 07         [24] 7462 	cjne	r1,#0x5c,00241$
      0023D3                       7463 00187$:
      0023D3 0A               [12] 7464 	inc	r2
      0023D4 BA 00 EA         [24] 7465 	cjne	r2,#0x00,00186$
      0023D7 0B               [12] 7466 	inc	r3
      0023D8 80 E7            [24] 7467 	sjmp	00186$
      0023DA                       7468 00241$:
      0023DA C0 05            [24] 7469 	push	ar5
      0023DC C0 06            [24] 7470 	push	ar6
      0023DE C0 07            [24] 7471 	push	ar7
      0023E0 90r00rC7         [24] 7472 	mov	dptr,#_create_name_p_65536_128
      0023E3 EA               [12] 7473 	mov	a,r2
      0023E4 F0               [24] 7474 	movx	@dptr,a
      0023E5 EB               [12] 7475 	mov	a,r3
      0023E6 A3               [24] 7476 	inc	dptr
      0023E7 F0               [24] 7477 	movx	@dptr,a
      0023E8 EC               [12] 7478 	mov	a,r4
      0023E9 A3               [24] 7479 	inc	dptr
      0023EA F0               [24] 7480 	movx	@dptr,a
                           0023EB  7481 	C$ff.c$1816$1_0$128 ==.
                                   7482 ;	FATFS\src\ff.c:1816: lfn = dp->lfn;
      0023EB 90r00rB8         [24] 7483 	mov	dptr,#_create_name_dp_65536_127
      0023EE E0               [24] 7484 	movx	a,@dptr
      0023EF F8               [12] 7485 	mov	r0,a
      0023F0 A3               [24] 7486 	inc	dptr
      0023F1 E0               [24] 7487 	movx	a,@dptr
      0023F2 F9               [12] 7488 	mov	r1,a
      0023F3 A3               [24] 7489 	inc	dptr
      0023F4 E0               [24] 7490 	movx	a,@dptr
      0023F5 FF               [12] 7491 	mov	r7,a
      0023F6 74 19            [12] 7492 	mov	a,#0x19
      0023F8 28               [12] 7493 	add	a,r0
      0023F9 F8               [12] 7494 	mov	r0,a
      0023FA E4               [12] 7495 	clr	a
      0023FB 39               [12] 7496 	addc	a,r1
      0023FC F9               [12] 7497 	mov	r1,a
      0023FD 88 82            [24] 7498 	mov	dpl,r0
      0023FF 89 83            [24] 7499 	mov	dph,r1
      002401 8F F0            [24] 7500 	mov	b,r7
      002403 12r00r00         [24] 7501 	lcall	__gptrget
      002406 F5*77            [12] 7502 	mov	_create_name_sloc0_1_0,a
      002408 A3               [24] 7503 	inc	dptr
      002409 12r00r00         [24] 7504 	lcall	__gptrget
      00240C F5*78            [12] 7505 	mov	(_create_name_sloc0_1_0 + 1),a
      00240E A3               [24] 7506 	inc	dptr
      00240F 12r00r00         [24] 7507 	lcall	__gptrget
      002412 F5*79            [12] 7508 	mov	(_create_name_sloc0_1_0 + 2),a
                           002414  7509 	C$ff.c$1817$1_0$128 ==.
                                   7510 ;	FATFS\src\ff.c:1817: si = di = 0;
      002414 90r00rC5         [24] 7511 	mov	dptr,#_create_name_di_65536_128
      002417 E4               [12] 7512 	clr	a
      002418 F0               [24] 7513 	movx	@dptr,a
      002419 A3               [24] 7514 	inc	dptr
      00241A F0               [24] 7515 	movx	@dptr,a
      00241B 8A*7A            [24] 7516 	mov	_create_name_sloc1_1_0,r2
      00241D 8B*7B            [24] 7517 	mov	(_create_name_sloc1_1_0 + 1),r3
      00241F 8C*7C            [24] 7518 	mov	(_create_name_sloc1_1_0 + 2),r4
      002421 F5*7D            [12] 7519 	mov	_create_name_sloc2_1_0,a
      002423 F5*7E            [12] 7520 	mov	(_create_name_sloc2_1_0 + 1),a
      002425 F5*7F            [12] 7521 	mov	_create_name_sloc3_1_0,a
      002427 F5*80            [12] 7522 	mov	(_create_name_sloc3_1_0 + 1),a
                           002429  7523 	C$ff.c$1926$1_0$128 ==.
                                   7524 ;	FATFS\src\ff.c:1926: return FR_OK;
      002429 D0 07            [24] 7525 	pop	ar7
      00242B D0 06            [24] 7526 	pop	ar6
      00242D D0 05            [24] 7527 	pop	ar5
                           00242F  7528 	C$ff.c$1817$2_0$130 ==.
                                   7529 ;	FATFS\src\ff.c:1817: si = di = 0;
      00242F                       7530 00188$:
                           00242F  7531 	C$ff.c$1819$3_0$131 ==.
                                   7532 ;	FATFS\src\ff.c:1819: w = p[si++];					/* Get a character */
      00242F AB*7F            [24] 7533 	mov	r3,_create_name_sloc3_1_0
      002431 AC*80            [24] 7534 	mov	r4,(_create_name_sloc3_1_0 + 1)
      002433 05*7F            [12] 7535 	inc	_create_name_sloc3_1_0
      002435 E4               [12] 7536 	clr	a
      002436 B5*7F 02         [24] 7537 	cjne	a,_create_name_sloc3_1_0,00375$
      002439 05*80            [12] 7538 	inc	(_create_name_sloc3_1_0 + 1)
      00243B                       7539 00375$:
      00243B EB               [12] 7540 	mov	a,r3
      00243C 25*7A            [12] 7541 	add	a,_create_name_sloc1_1_0
      00243E FB               [12] 7542 	mov	r3,a
      00243F EC               [12] 7543 	mov	a,r4
      002440 35*7B            [12] 7544 	addc	a,(_create_name_sloc1_1_0 + 1)
      002442 FC               [12] 7545 	mov	r4,a
      002443 AA*7C            [24] 7546 	mov	r2,(_create_name_sloc1_1_0 + 2)
      002445 8B 82            [24] 7547 	mov	dpl,r3
      002447 8C 83            [24] 7548 	mov	dph,r4
      002449 8A F0            [24] 7549 	mov	b,r2
      00244B 12r00r00         [24] 7550 	lcall	__gptrget
      00244E FB               [12] 7551 	mov	r3,a
      00244F 7C 00            [12] 7552 	mov	r4,#0x00
                           002451  7553 	C$ff.c$1820$3_0$131 ==.
                                   7554 ;	FATFS\src\ff.c:1820: if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
      002451 C3               [12] 7555 	clr	c
      002452 EB               [12] 7556 	mov	a,r3
      002453 94 20            [12] 7557 	subb	a,#0x20
      002455 EC               [12] 7558 	mov	a,r4
      002456 94 00            [12] 7559 	subb	a,#0x00
      002458 E4               [12] 7560 	clr	a
      002459 33               [12] 7561 	rlc	a
      00245A FA               [12] 7562 	mov	r2,a
      00245B 60 03            [24] 7563 	jz	00376$
      00245D 02r25r3C         [24] 7564 	ljmp	00117$
      002460                       7565 00376$:
      002460 BB 2F 06         [24] 7566 	cjne	r3,#0x2f,00377$
      002463 BC 00 03         [24] 7567 	cjne	r4,#0x00,00377$
      002466 02r25r3C         [24] 7568 	ljmp	00117$
      002469                       7569 00377$:
      002469 BB 5C 06         [24] 7570 	cjne	r3,#0x5c,00378$
      00246C BC 00 03         [24] 7571 	cjne	r4,#0x00,00378$
      00246F 02r25r3C         [24] 7572 	ljmp	00117$
      002472                       7573 00378$:
                           002472  7574 	C$ff.c$1821$3_0$131 ==.
                                   7575 ;	FATFS\src\ff.c:1821: if (di >= _MAX_LFN)				/* Reject too long name */
      002472 C3               [12] 7576 	clr	c
      002473 E5*7D            [12] 7577 	mov	a,_create_name_sloc2_1_0
      002475 94 FF            [12] 7578 	subb	a,#0xff
      002477 E5*7E            [12] 7579 	mov	a,(_create_name_sloc2_1_0 + 1)
      002479 94 00            [12] 7580 	subb	a,#0x00
      00247B 40 06            [24] 7581 	jc	00107$
                           00247D  7582 	C$ff.c$1822$3_0$131 ==.
                                   7583 ;	FATFS\src\ff.c:1822: return FR_INVALID_NAME;
      00247D 75 82 06         [24] 7584 	mov	dpl,#0x06
      002480 02r00r00         [24] 7585 	ljmp	__sdcc_banked_ret
      002483                       7586 00107$:
                           002483  7587 	C$ff.c$1824$3_0$131 ==.
                                   7588 ;	FATFS\src\ff.c:1824: w &= 0xFF;
      002483 7C 00            [12] 7589 	mov	r4,#0x00
                           002485  7590 	C$ff.c$1831$3_0$131 ==.
                                   7591 ;	FATFS\src\ff.c:1831: w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
      002485 90r00r00         [24] 7592 	mov	dptr,#_ff_convert_PARM_2
      002488 74 01            [12] 7593 	mov	a,#0x01
      00248A F0               [24] 7594 	movx	@dptr,a
      00248B E4               [12] 7595 	clr	a
      00248C A3               [24] 7596 	inc	dptr
      00248D F0               [24] 7597 	movx	@dptr,a
      00248E 8B 82            [24] 7598 	mov	dpl,r3
      002490 8C 83            [24] 7599 	mov	dph,r4
      002492 C0 07            [24] 7600 	push	ar7
      002494 C0 06            [24] 7601 	push	ar6
      002496 C0 05            [24] 7602 	push	ar5
      002498 78r00            [12] 7603 	mov	r0,#_ff_convert
      00249A 79s00            [12] 7604 	mov	r1,#(_ff_convert >> 8)
      00249C 7As00            [12] 7605 	mov	r2,#(_ff_convert >> 16)
      00249E 12r00r00         [24] 7606 	lcall	__sdcc_banked_call
      0024A1 AB 82            [24] 7607 	mov	r3,dpl
      0024A3 AC 83            [24] 7608 	mov	r4,dph
      0024A5 D0 05            [24] 7609 	pop	ar5
      0024A7 D0 06            [24] 7610 	pop	ar6
      0024A9 D0 07            [24] 7611 	pop	ar7
                           0024AB  7612 	C$ff.c$1832$3_0$131 ==.
                                   7613 ;	FATFS\src\ff.c:1832: if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
      0024AB EB               [12] 7614 	mov	a,r3
      0024AC 4C               [12] 7615 	orl	a,r4
      0024AD 70 06            [24] 7616 	jnz	00113$
      0024AF 75 82 06         [24] 7617 	mov	dpl,#0x06
      0024B2 02r00r00         [24] 7618 	ljmp	__sdcc_banked_ret
      0024B5                       7619 00113$:
                           0024B5  7620 	C$ff.c$1834$3_0$131 ==.
                                   7621 ;	FATFS\src\ff.c:1834: if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
      0024B5 C3               [12] 7622 	clr	c
      0024B6 EB               [12] 7623 	mov	a,r3
      0024B7 94 80            [12] 7624 	subb	a,#0x80
      0024B9 EC               [12] 7625 	mov	a,r4
      0024BA 94 00            [12] 7626 	subb	a,#0x00
      0024BC 50 3A            [24] 7627 	jnc	00115$
      0024BE 90r00r21         [24] 7628 	mov	dptr,#_chk_chr_PARM_2
      0024C1 EB               [12] 7629 	mov	a,r3
      0024C2 F0               [24] 7630 	movx	@dptr,a
      0024C3 EC               [12] 7631 	mov	a,r4
      0024C4 A3               [24] 7632 	inc	dptr
      0024C5 F0               [24] 7633 	movx	@dptr,a
      0024C6 90r00r8D         [24] 7634 	mov	dptr,#___str_0
      0024C9 75 F0 80         [24] 7635 	mov	b,#0x80
      0024CC C0 07            [24] 7636 	push	ar7
      0024CE C0 06            [24] 7637 	push	ar6
      0024D0 C0 05            [24] 7638 	push	ar5
      0024D2 C0 04            [24] 7639 	push	ar4
      0024D4 C0 03            [24] 7640 	push	ar3
      0024D6 78r47            [12] 7641 	mov	r0,#_chk_chr
      0024D8 79s01            [12] 7642 	mov	r1,#(_chk_chr >> 8)
      0024DA 7As00            [12] 7643 	mov	r2,#(_chk_chr >> 16)
      0024DC 12r00r00         [24] 7644 	lcall	__sdcc_banked_call
      0024DF E5 82            [12] 7645 	mov	a,dpl
      0024E1 85 83 F0         [24] 7646 	mov	b,dph
      0024E4 D0 03            [24] 7647 	pop	ar3
      0024E6 D0 04            [24] 7648 	pop	ar4
      0024E8 D0 05            [24] 7649 	pop	ar5
      0024EA D0 06            [24] 7650 	pop	ar6
      0024EC D0 07            [24] 7651 	pop	ar7
      0024EE 45 F0            [12] 7652 	orl	a,b
      0024F0 60 06            [24] 7653 	jz	00115$
                           0024F2  7654 	C$ff.c$1835$3_0$131 ==.
                                   7655 ;	FATFS\src\ff.c:1835: return FR_INVALID_NAME;
      0024F2 75 82 06         [24] 7656 	mov	dpl,#0x06
      0024F5 02r00r00         [24] 7657 	ljmp	__sdcc_banked_ret
      0024F8                       7658 00115$:
                           0024F8  7659 	C$ff.c$1836$1_0$128 ==.
                                   7660 ;	FATFS\src\ff.c:1836: lfn[di++] = w;					/* Store the Unicode character */
      0024F8 C0 05            [24] 7661 	push	ar5
      0024FA C0 06            [24] 7662 	push	ar6
      0024FC C0 07            [24] 7663 	push	ar7
      0024FE A8*7D            [24] 7664 	mov	r0,_create_name_sloc2_1_0
      002500 A9*7E            [24] 7665 	mov	r1,(_create_name_sloc2_1_0 + 1)
      002502 05*7D            [12] 7666 	inc	_create_name_sloc2_1_0
      002504 E4               [12] 7667 	clr	a
      002505 B5*7D 02         [24] 7668 	cjne	a,_create_name_sloc2_1_0,00383$
      002508 05*7E            [12] 7669 	inc	(_create_name_sloc2_1_0 + 1)
      00250A                       7670 00383$:
      00250A 90r00rC5         [24] 7671 	mov	dptr,#_create_name_di_65536_128
      00250D E5*7D            [12] 7672 	mov	a,_create_name_sloc2_1_0
      00250F F0               [24] 7673 	movx	@dptr,a
      002510 E5*7E            [12] 7674 	mov	a,(_create_name_sloc2_1_0 + 1)
      002512 A3               [24] 7675 	inc	dptr
      002513 F0               [24] 7676 	movx	@dptr,a
      002514 E8               [12] 7677 	mov	a,r0
      002515 28               [12] 7678 	add	a,r0
      002516 F8               [12] 7679 	mov	r0,a
      002517 E9               [12] 7680 	mov	a,r1
      002518 33               [12] 7681 	rlc	a
      002519 F9               [12] 7682 	mov	r1,a
      00251A E8               [12] 7683 	mov	a,r0
      00251B 25*77            [12] 7684 	add	a,_create_name_sloc0_1_0
      00251D F8               [12] 7685 	mov	r0,a
      00251E E9               [12] 7686 	mov	a,r1
      00251F 35*78            [12] 7687 	addc	a,(_create_name_sloc0_1_0 + 1)
      002521 F9               [12] 7688 	mov	r1,a
      002522 AF*79            [24] 7689 	mov	r7,(_create_name_sloc0_1_0 + 2)
      002524 88 82            [24] 7690 	mov	dpl,r0
      002526 89 83            [24] 7691 	mov	dph,r1
      002528 8F F0            [24] 7692 	mov	b,r7
      00252A EB               [12] 7693 	mov	a,r3
      00252B 12r00r00         [24] 7694 	lcall	__gptrput
      00252E A3               [24] 7695 	inc	dptr
      00252F EC               [12] 7696 	mov	a,r4
      002530 12r00r00         [24] 7697 	lcall	__gptrput
      002533 D0 07            [24] 7698 	pop	ar7
      002535 D0 06            [24] 7699 	pop	ar6
      002537 D0 05            [24] 7700 	pop	ar5
      002539 02r24r2F         [24] 7701 	ljmp	00188$
      00253C                       7702 00117$:
                           00253C  7703 	C$ff.c$1838$1_0$128 ==.
                                   7704 ;	FATFS\src\ff.c:1838: *path = &p[si];						/* Return pointer to the next segment */
      00253C 90r00rC7         [24] 7705 	mov	dptr,#_create_name_p_65536_128
      00253F E0               [24] 7706 	movx	a,@dptr
      002540 F9               [12] 7707 	mov	r1,a
      002541 A3               [24] 7708 	inc	dptr
      002542 E0               [24] 7709 	movx	a,@dptr
      002543 FB               [12] 7710 	mov	r3,a
      002544 A3               [24] 7711 	inc	dptr
      002545 E0               [24] 7712 	movx	a,@dptr
      002546 FC               [12] 7713 	mov	r4,a
      002547 E5*7F            [12] 7714 	mov	a,_create_name_sloc3_1_0
      002549 29               [12] 7715 	add	a,r1
      00254A F9               [12] 7716 	mov	r1,a
      00254B E5*80            [12] 7717 	mov	a,(_create_name_sloc3_1_0 + 1)
      00254D 3B               [12] 7718 	addc	a,r3
      00254E FB               [12] 7719 	mov	r3,a
      00254F 8D 82            [24] 7720 	mov	dpl,r5
      002551 8E 83            [24] 7721 	mov	dph,r6
      002553 8F F0            [24] 7722 	mov	b,r7
      002555 E9               [12] 7723 	mov	a,r1
      002556 12r00r00         [24] 7724 	lcall	__gptrput
      002559 A3               [24] 7725 	inc	dptr
      00255A EB               [12] 7726 	mov	a,r3
      00255B 12r00r00         [24] 7727 	lcall	__gptrput
      00255E A3               [24] 7728 	inc	dptr
      00255F EC               [12] 7729 	mov	a,r4
      002560 12r00r00         [24] 7730 	lcall	__gptrput
                           002563  7731 	C$ff.c$1839$1_0$128 ==.
                                   7732 ;	FATFS\src\ff.c:1839: cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
      002563 EA               [12] 7733 	mov	a,r2
      002564 60 06            [24] 7734 	jz	00197$
      002566 7E 04            [12] 7735 	mov	r6,#0x04
      002568 7F 00            [12] 7736 	mov	r7,#0x00
      00256A 80 04            [24] 7737 	sjmp	00198$
      00256C                       7738 00197$:
      00256C 7E 00            [12] 7739 	mov	r6,#0x00
      00256E 7F 00            [12] 7740 	mov	r7,#0x00
      002570                       7741 00198$:
      002570 90r00rBC         [24] 7742 	mov	dptr,#_create_name_cf_65536_128
      002573 EE               [12] 7743 	mov	a,r6
      002574 F0               [24] 7744 	movx	@dptr,a
                           002575  7745 	C$ff.c$1850$1_0$128 ==.
                                   7746 ;	FATFS\src\ff.c:1850: while (di) {						/* Strip trailing spaces and dots */
      002575 90r00rC5         [24] 7747 	mov	dptr,#_create_name_di_65536_128
      002578 E0               [24] 7748 	movx	a,@dptr
      002579 FD               [12] 7749 	mov	r5,a
      00257A A3               [24] 7750 	inc	dptr
      00257B E0               [24] 7751 	movx	a,@dptr
      00257C FF               [12] 7752 	mov	r7,a
      00257D                       7753 00121$:
      00257D ED               [12] 7754 	mov	a,r5
      00257E 4F               [12] 7755 	orl	a,r7
      00257F 60 3C            [24] 7756 	jz	00242$
                           002581  7757 	C$ff.c$1851$2_0$133 ==.
                                   7758 ;	FATFS\src\ff.c:1851: w = lfn[di-1];
      002581 ED               [12] 7759 	mov	a,r5
      002582 24 FF            [12] 7760 	add	a,#0xff
      002584 FB               [12] 7761 	mov	r3,a
      002585 EF               [12] 7762 	mov	a,r7
      002586 34 FF            [12] 7763 	addc	a,#0xff
      002588 FC               [12] 7764 	mov	r4,a
      002589 EB               [12] 7765 	mov	a,r3
      00258A 2B               [12] 7766 	add	a,r3
      00258B FB               [12] 7767 	mov	r3,a
      00258C EC               [12] 7768 	mov	a,r4
      00258D 33               [12] 7769 	rlc	a
      00258E FC               [12] 7770 	mov	r4,a
      00258F EB               [12] 7771 	mov	a,r3
      002590 25*77            [12] 7772 	add	a,_create_name_sloc0_1_0
      002592 FB               [12] 7773 	mov	r3,a
      002593 EC               [12] 7774 	mov	a,r4
      002594 35*78            [12] 7775 	addc	a,(_create_name_sloc0_1_0 + 1)
      002596 FC               [12] 7776 	mov	r4,a
      002597 AA*79            [24] 7777 	mov	r2,(_create_name_sloc0_1_0 + 2)
      002599 8B 82            [24] 7778 	mov	dpl,r3
      00259B 8C 83            [24] 7779 	mov	dph,r4
      00259D 8A F0            [24] 7780 	mov	b,r2
      00259F 12r00r00         [24] 7781 	lcall	__gptrget
      0025A2 FB               [12] 7782 	mov	r3,a
      0025A3 A3               [24] 7783 	inc	dptr
      0025A4 12r00r00         [24] 7784 	lcall	__gptrget
      0025A7 FC               [12] 7785 	mov	r4,a
                           0025A8  7786 	C$ff.c$1852$2_0$133 ==.
                                   7787 ;	FATFS\src\ff.c:1852: if (w != ' ' && w != '.') break;
      0025A8 BB 20 05         [24] 7788 	cjne	r3,#0x20,00386$
      0025AB BC 00 02         [24] 7789 	cjne	r4,#0x00,00386$
      0025AE 80 06            [24] 7790 	sjmp	00119$
      0025B0                       7791 00386$:
      0025B0 BB 2E 0A         [24] 7792 	cjne	r3,#0x2e,00242$
      0025B3 BC 00 07         [24] 7793 	cjne	r4,#0x00,00242$
      0025B6                       7794 00119$:
                           0025B6  7795 	C$ff.c$1853$2_0$133 ==.
                                   7796 ;	FATFS\src\ff.c:1853: di--;
      0025B6 1D               [12] 7797 	dec	r5
      0025B7 BD FF 01         [24] 7798 	cjne	r5,#0xff,00389$
      0025BA 1F               [12] 7799 	dec	r7
      0025BB                       7800 00389$:
      0025BB 80 C0            [24] 7801 	sjmp	00121$
      0025BD                       7802 00242$:
      0025BD 90r00rC5         [24] 7803 	mov	dptr,#_create_name_di_65536_128
      0025C0 ED               [12] 7804 	mov	a,r5
      0025C1 F0               [24] 7805 	movx	@dptr,a
      0025C2 EF               [12] 7806 	mov	a,r7
      0025C3 A3               [24] 7807 	inc	dptr
      0025C4 F0               [24] 7808 	movx	@dptr,a
                           0025C5  7809 	C$ff.c$1855$1_0$128 ==.
                                   7810 ;	FATFS\src\ff.c:1855: if (!di) return FR_INVALID_NAME;	/* Reject nul string */
      0025C5 ED               [12] 7811 	mov	a,r5
      0025C6 4F               [12] 7812 	orl	a,r7
      0025C7 70 06            [24] 7813 	jnz	00125$
      0025C9 75 82 06         [24] 7814 	mov	dpl,#0x06
      0025CC 02r00r00         [24] 7815 	ljmp	__sdcc_banked_ret
      0025CF                       7816 00125$:
                           0025CF  7817 	C$ff.c$1857$1_0$128 ==.
                                   7818 ;	FATFS\src\ff.c:1857: lfn[di] = 0;						/* LFN is created */
      0025CF ED               [12] 7819 	mov	a,r5
      0025D0 2D               [12] 7820 	add	a,r5
      0025D1 FD               [12] 7821 	mov	r5,a
      0025D2 EF               [12] 7822 	mov	a,r7
      0025D3 33               [12] 7823 	rlc	a
      0025D4 FF               [12] 7824 	mov	r7,a
      0025D5 ED               [12] 7825 	mov	a,r5
      0025D6 25*77            [12] 7826 	add	a,_create_name_sloc0_1_0
      0025D8 FD               [12] 7827 	mov	r5,a
      0025D9 EF               [12] 7828 	mov	a,r7
      0025DA 35*78            [12] 7829 	addc	a,(_create_name_sloc0_1_0 + 1)
      0025DC FF               [12] 7830 	mov	r7,a
      0025DD AC*79            [24] 7831 	mov	r4,(_create_name_sloc0_1_0 + 2)
      0025DF 8D 82            [24] 7832 	mov	dpl,r5
      0025E1 8F 83            [24] 7833 	mov	dph,r7
      0025E3 8C F0            [24] 7834 	mov	b,r4
      0025E5 E4               [12] 7835 	clr	a
      0025E6 12r00r00         [24] 7836 	lcall	__gptrput
      0025E9 A3               [24] 7837 	inc	dptr
      0025EA 12r00r00         [24] 7838 	lcall	__gptrput
                           0025ED  7839 	C$ff.c$1860$1_0$128 ==.
                                   7840 ;	FATFS\src\ff.c:1860: mem_set(dp->fn, ' ', 11);
      0025ED 90r00rB8         [24] 7841 	mov	dptr,#_create_name_dp_65536_127
      0025F0 E0               [24] 7842 	movx	a,@dptr
      0025F1 FC               [12] 7843 	mov	r4,a
      0025F2 A3               [24] 7844 	inc	dptr
      0025F3 E0               [24] 7845 	movx	a,@dptr
      0025F4 FD               [12] 7846 	mov	r5,a
      0025F5 A3               [24] 7847 	inc	dptr
      0025F6 E0               [24] 7848 	movx	a,@dptr
      0025F7 FF               [12] 7849 	mov	r7,a
      0025F8 74 16            [12] 7850 	mov	a,#0x16
      0025FA 2C               [12] 7851 	add	a,r4
      0025FB FC               [12] 7852 	mov	r4,a
      0025FC E4               [12] 7853 	clr	a
      0025FD 3D               [12] 7854 	addc	a,r5
      0025FE FD               [12] 7855 	mov	r5,a
      0025FF 8C 82            [24] 7856 	mov	dpl,r4
      002601 8D 83            [24] 7857 	mov	dph,r5
      002603 8F F0            [24] 7858 	mov	b,r7
      002605 12r00r00         [24] 7859 	lcall	__gptrget
      002608 FC               [12] 7860 	mov	r4,a
      002609 A3               [24] 7861 	inc	dptr
      00260A 12r00r00         [24] 7862 	lcall	__gptrget
      00260D FD               [12] 7863 	mov	r5,a
      00260E A3               [24] 7864 	inc	dptr
      00260F 12r00r00         [24] 7865 	lcall	__gptrget
      002612 FF               [12] 7866 	mov	r7,a
      002613 90r00r10         [24] 7867 	mov	dptr,#_mem_set_PARM_2
      002616 74 20            [12] 7868 	mov	a,#0x20
      002618 F0               [24] 7869 	movx	@dptr,a
      002619 E4               [12] 7870 	clr	a
      00261A A3               [24] 7871 	inc	dptr
      00261B F0               [24] 7872 	movx	@dptr,a
      00261C 90r00r12         [24] 7873 	mov	dptr,#_mem_set_PARM_3
      00261F 74 0B            [12] 7874 	mov	a,#0x0b
      002621 F0               [24] 7875 	movx	@dptr,a
      002622 E4               [12] 7876 	clr	a
      002623 A3               [24] 7877 	inc	dptr
      002624 F0               [24] 7878 	movx	@dptr,a
      002625 8C 82            [24] 7879 	mov	dpl,r4
      002627 8D 83            [24] 7880 	mov	dph,r5
      002629 8F F0            [24] 7881 	mov	b,r7
      00262B C0 06            [24] 7882 	push	ar6
      00262D 78r64            [12] 7883 	mov	r0,#_mem_set
      00262F 79s00            [12] 7884 	mov	r1,#(_mem_set >> 8)
      002631 7As00            [12] 7885 	mov	r2,#(_mem_set >> 16)
      002633 12r00r00         [24] 7886 	lcall	__sdcc_banked_call
      002636 D0 06            [24] 7887 	pop	ar6
                           002638  7888 	C$ff.c$1861$1_0$128 ==.
                                   7889 ;	FATFS\src\ff.c:1861: for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
      002638 7D 00            [12] 7890 	mov	r5,#0x00
      00263A 7F 00            [12] 7891 	mov	r7,#0x00
      00263C                       7892 00192$:
      00263C ED               [12] 7893 	mov	a,r5
      00263D 2D               [12] 7894 	add	a,r5
      00263E FB               [12] 7895 	mov	r3,a
      00263F EF               [12] 7896 	mov	a,r7
      002640 33               [12] 7897 	rlc	a
      002641 FC               [12] 7898 	mov	r4,a
      002642 EB               [12] 7899 	mov	a,r3
      002643 25*77            [12] 7900 	add	a,_create_name_sloc0_1_0
      002645 FB               [12] 7901 	mov	r3,a
      002646 EC               [12] 7902 	mov	a,r4
      002647 35*78            [12] 7903 	addc	a,(_create_name_sloc0_1_0 + 1)
      002649 FC               [12] 7904 	mov	r4,a
      00264A AA*79            [24] 7905 	mov	r2,(_create_name_sloc0_1_0 + 2)
      00264C 8B 82            [24] 7906 	mov	dpl,r3
      00264E 8C 83            [24] 7907 	mov	dph,r4
      002650 8A F0            [24] 7908 	mov	b,r2
      002652 12r00r00         [24] 7909 	lcall	__gptrget
      002655 FB               [12] 7910 	mov	r3,a
      002656 A3               [24] 7911 	inc	dptr
      002657 12r00r00         [24] 7912 	lcall	__gptrget
      00265A FC               [12] 7913 	mov	r4,a
      00265B BB 20 05         [24] 7914 	cjne	r3,#0x20,00391$
      00265E BC 00 02         [24] 7915 	cjne	r4,#0x00,00391$
      002661 80 06            [24] 7916 	sjmp	00193$
      002663                       7917 00391$:
      002663 BB 2E 0A         [24] 7918 	cjne	r3,#0x2e,00243$
      002666 BC 00 07         [24] 7919 	cjne	r4,#0x00,00243$
      002669                       7920 00193$:
      002669 0D               [12] 7921 	inc	r5
      00266A BD 00 CF         [24] 7922 	cjne	r5,#0x00,00192$
      00266D 0F               [12] 7923 	inc	r7
      00266E 80 CC            [24] 7924 	sjmp	00192$
      002670                       7925 00243$:
      002670 90r00rC3         [24] 7926 	mov	dptr,#_create_name_si_65536_128
      002673 ED               [12] 7927 	mov	a,r5
      002674 F0               [24] 7928 	movx	@dptr,a
      002675 EF               [12] 7929 	mov	a,r7
      002676 A3               [24] 7930 	inc	dptr
      002677 F0               [24] 7931 	movx	@dptr,a
                           002678  7932 	C$ff.c$1862$1_0$128 ==.
                                   7933 ;	FATFS\src\ff.c:1862: if (si) cf |= NS_LOSS | NS_LFN;
      002678 ED               [12] 7934 	mov	a,r5
      002679 4F               [12] 7935 	orl	a,r7
      00267A 60 07            [24] 7936 	jz	00219$
      00267C 90r00rBC         [24] 7937 	mov	dptr,#_create_name_cf_65536_128
      00267F 74 03            [12] 7938 	mov	a,#0x03
      002681 4E               [12] 7939 	orl	a,r6
      002682 F0               [24] 7940 	movx	@dptr,a
                           002683  7941 	C$ff.c$1863$1_0$128 ==.
                                   7942 ;	FATFS\src\ff.c:1863: while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
      002683                       7943 00219$:
      002683 90r00rC5         [24] 7944 	mov	dptr,#_create_name_di_65536_128
      002686 E0               [24] 7945 	movx	a,@dptr
      002687 FE               [12] 7946 	mov	r6,a
      002688 A3               [24] 7947 	inc	dptr
      002689 E0               [24] 7948 	movx	a,@dptr
      00268A FF               [12] 7949 	mov	r7,a
      00268B                       7950 00130$:
      00268B EE               [12] 7951 	mov	a,r6
      00268C 4F               [12] 7952 	orl	a,r7
      00268D 60 36            [24] 7953 	jz	00132$
      00268F EE               [12] 7954 	mov	a,r6
      002690 24 FF            [12] 7955 	add	a,#0xff
      002692 FC               [12] 7956 	mov	r4,a
      002693 EF               [12] 7957 	mov	a,r7
      002694 34 FF            [12] 7958 	addc	a,#0xff
      002696 FD               [12] 7959 	mov	r5,a
      002697 EC               [12] 7960 	mov	a,r4
      002698 2C               [12] 7961 	add	a,r4
      002699 FC               [12] 7962 	mov	r4,a
      00269A ED               [12] 7963 	mov	a,r5
      00269B 33               [12] 7964 	rlc	a
      00269C FD               [12] 7965 	mov	r5,a
      00269D EC               [12] 7966 	mov	a,r4
      00269E 25*77            [12] 7967 	add	a,_create_name_sloc0_1_0
      0026A0 FC               [12] 7968 	mov	r4,a
      0026A1 ED               [12] 7969 	mov	a,r5
      0026A2 35*78            [12] 7970 	addc	a,(_create_name_sloc0_1_0 + 1)
      0026A4 FD               [12] 7971 	mov	r5,a
      0026A5 AB*79            [24] 7972 	mov	r3,(_create_name_sloc0_1_0 + 2)
      0026A7 8C 82            [24] 7973 	mov	dpl,r4
      0026A9 8D 83            [24] 7974 	mov	dph,r5
      0026AB 8B F0            [24] 7975 	mov	b,r3
      0026AD 12r00r00         [24] 7976 	lcall	__gptrget
      0026B0 FC               [12] 7977 	mov	r4,a
      0026B1 A3               [24] 7978 	inc	dptr
      0026B2 12r00r00         [24] 7979 	lcall	__gptrget
      0026B5 FD               [12] 7980 	mov	r5,a
      0026B6 BC 2E 05         [24] 7981 	cjne	r4,#0x2e,00397$
      0026B9 BD 00 02         [24] 7982 	cjne	r5,#0x00,00397$
      0026BC 80 07            [24] 7983 	sjmp	00132$
      0026BE                       7984 00397$:
      0026BE 1E               [12] 7985 	dec	r6
      0026BF BE FF 01         [24] 7986 	cjne	r6,#0xff,00398$
      0026C2 1F               [12] 7987 	dec	r7
      0026C3                       7988 00398$:
      0026C3 80 C6            [24] 7989 	sjmp	00130$
      0026C5                       7990 00132$:
                           0026C5  7991 	C$ff.c$1865$1_0$128 ==.
                                   7992 ;	FATFS\src\ff.c:1865: b = i = 0; ni = 8;
      0026C5 90r00rBF         [24] 7993 	mov	dptr,#_create_name_i_65536_128
      0026C8 E4               [12] 7994 	clr	a
      0026C9 F0               [24] 7995 	movx	@dptr,a
      0026CA A3               [24] 7996 	inc	dptr
      0026CB F0               [24] 7997 	movx	@dptr,a
      0026CC 90r00rBB         [24] 7998 	mov	dptr,#_create_name_b_65536_128
      0026CF F0               [24] 7999 	movx	@dptr,a
      0026D0 90r00rC1         [24] 8000 	mov	dptr,#_create_name_ni_65536_128
      0026D3 74 08            [12] 8001 	mov	a,#0x08
      0026D5 F0               [24] 8002 	movx	@dptr,a
      0026D6 E4               [12] 8003 	clr	a
      0026D7 A3               [24] 8004 	inc	dptr
      0026D8 F0               [24] 8005 	movx	@dptr,a
      0026D9 8E 04            [24] 8006 	mov	ar4,r6
      0026DB 8F 05            [24] 8007 	mov	ar5,r7
      0026DD 8E*7D            [24] 8008 	mov	_create_name_sloc2_1_0,r6
      0026DF 8F*7E            [24] 8009 	mov	(_create_name_sloc2_1_0 + 1),r7
      0026E1 8E 00            [24] 8010 	mov	ar0,r6
      0026E3 8F 01            [24] 8011 	mov	ar1,r7
      0026E5 8E*7F            [24] 8012 	mov	_create_name_sloc3_1_0,r6
      0026E7 8F*80            [24] 8013 	mov	(_create_name_sloc3_1_0 + 1),r7
      0026E9 90r00rB8         [24] 8014 	mov	dptr,#_create_name_dp_65536_127
      0026EC E0               [24] 8015 	movx	a,@dptr
      0026ED FB               [12] 8016 	mov	r3,a
      0026EE A3               [24] 8017 	inc	dptr
      0026EF E0               [24] 8018 	movx	a,@dptr
      0026F0 FE               [12] 8019 	mov	r6,a
      0026F1 A3               [24] 8020 	inc	dptr
      0026F2 E0               [24] 8021 	movx	a,@dptr
      0026F3 FF               [12] 8022 	mov	r7,a
      0026F4 74 16            [12] 8023 	mov	a,#0x16
      0026F6 2B               [12] 8024 	add	a,r3
      0026F7 FB               [12] 8025 	mov	r3,a
      0026F8 E4               [12] 8026 	clr	a
      0026F9 3E               [12] 8027 	addc	a,r6
      0026FA FE               [12] 8028 	mov	r6,a
      0026FB                       8029 00194$:
                           0026FB  8030 	C$ff.c$1867$1_0$128 ==.
                                   8031 ;	FATFS\src\ff.c:1867: w = lfn[si++];					/* Get an LFN character */
      0026FB C0 04            [24] 8032 	push	ar4
      0026FD C0 05            [24] 8033 	push	ar5
      0026FF 90r00rC3         [24] 8034 	mov	dptr,#_create_name_si_65536_128
      002702 E0               [24] 8035 	movx	a,@dptr
      002703 FA               [12] 8036 	mov	r2,a
      002704 A3               [24] 8037 	inc	dptr
      002705 E0               [24] 8038 	movx	a,@dptr
      002706 FD               [12] 8039 	mov	r5,a
      002707 90r00rC3         [24] 8040 	mov	dptr,#_create_name_si_65536_128
      00270A 74 01            [12] 8041 	mov	a,#0x01
      00270C 2A               [12] 8042 	add	a,r2
      00270D F0               [24] 8043 	movx	@dptr,a
      00270E E4               [12] 8044 	clr	a
      00270F 3D               [12] 8045 	addc	a,r5
      002710 A3               [24] 8046 	inc	dptr
      002711 F0               [24] 8047 	movx	@dptr,a
      002712 EA               [12] 8048 	mov	a,r2
      002713 2A               [12] 8049 	add	a,r2
      002714 FA               [12] 8050 	mov	r2,a
      002715 ED               [12] 8051 	mov	a,r5
      002716 33               [12] 8052 	rlc	a
      002717 FD               [12] 8053 	mov	r5,a
      002718 EA               [12] 8054 	mov	a,r2
      002719 25*77            [12] 8055 	add	a,_create_name_sloc0_1_0
      00271B FA               [12] 8056 	mov	r2,a
      00271C ED               [12] 8057 	mov	a,r5
      00271D 35*78            [12] 8058 	addc	a,(_create_name_sloc0_1_0 + 1)
      00271F FD               [12] 8059 	mov	r5,a
      002720 AC*79            [24] 8060 	mov	r4,(_create_name_sloc0_1_0 + 2)
      002722 8A 82            [24] 8061 	mov	dpl,r2
      002724 8D 83            [24] 8062 	mov	dph,r5
      002726 8C F0            [24] 8063 	mov	b,r4
      002728 12r00r00         [24] 8064 	lcall	__gptrget
      00272B F5*7A            [12] 8065 	mov	_create_name_sloc1_1_0,a
      00272D A3               [24] 8066 	inc	dptr
      00272E 12r00r00         [24] 8067 	lcall	__gptrget
      002731 F5*7B            [12] 8068 	mov	(_create_name_sloc1_1_0 + 1),a
      002733 90r00rBD         [24] 8069 	mov	dptr,#_create_name_w_65536_128
      002736 E5*7A            [12] 8070 	mov	a,_create_name_sloc1_1_0
      002738 F0               [24] 8071 	movx	@dptr,a
      002739 E5*7B            [12] 8072 	mov	a,(_create_name_sloc1_1_0 + 1)
      00273B A3               [24] 8073 	inc	dptr
      00273C F0               [24] 8074 	movx	@dptr,a
                           00273D  8075 	C$ff.c$1868$1_0$128 ==.
                                   8076 ;	FATFS\src\ff.c:1868: if (!w) break;					/* Break on end of the LFN */
      00273D D0 05            [24] 8077 	pop	ar5
      00273F D0 04            [24] 8078 	pop	ar4
      002741 E5*7A            [12] 8079 	mov	a,_create_name_sloc1_1_0
      002743 45*7B            [12] 8080 	orl	a,(_create_name_sloc1_1_0 + 1)
      002745 70 03            [24] 8081 	jnz	00399$
      002747 02r2Ar16         [24] 8082 	ljmp	00170$
      00274A                       8083 00399$:
                           00274A  8084 	C$ff.c$1869$3_0$136 ==.
                                   8085 ;	FATFS\src\ff.c:1869: if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
      00274A 74 20            [12] 8086 	mov	a,#0x20
      00274C B5*7A 06         [24] 8087 	cjne	a,_create_name_sloc1_1_0,00400$
      00274F E4               [12] 8088 	clr	a
      002750 B5*7B 02         [24] 8089 	cjne	a,(_create_name_sloc1_1_0 + 1),00400$
      002753 80 31            [24] 8090 	sjmp	00135$
      002755                       8091 00400$:
      002755 74 2E            [12] 8092 	mov	a,#0x2e
      002757 B5*7A 06         [24] 8093 	cjne	a,_create_name_sloc1_1_0,00401$
      00275A E4               [12] 8094 	clr	a
      00275B B5*7B 02         [24] 8095 	cjne	a,(_create_name_sloc1_1_0 + 1),00401$
      00275E 80 02            [24] 8096 	sjmp	00402$
      002760                       8097 00401$:
      002760 80 2F            [24] 8098 	sjmp	00136$
      002762                       8099 00402$:
      002762 C0 03            [24] 8100 	push	ar3
      002764 C0 06            [24] 8101 	push	ar6
      002766 C0 07            [24] 8102 	push	ar7
      002768 90r00rC3         [24] 8103 	mov	dptr,#_create_name_si_65536_128
      00276B E0               [24] 8104 	movx	a,@dptr
      00276C FA               [12] 8105 	mov	r2,a
      00276D A3               [24] 8106 	inc	dptr
      00276E E0               [24] 8107 	movx	a,@dptr
      00276F FF               [12] 8108 	mov	r7,a
      002770 EA               [12] 8109 	mov	a,r2
      002771 B5 04 0C         [24] 8110 	cjne	a,ar4,00403$
      002774 EF               [12] 8111 	mov	a,r7
      002775 B5 05 08         [24] 8112 	cjne	a,ar5,00403$
      002778 D0 07            [24] 8113 	pop	ar7
      00277A D0 06            [24] 8114 	pop	ar6
      00277C D0 03            [24] 8115 	pop	ar3
      00277E 80 11            [24] 8116 	sjmp	00136$
      002780                       8117 00403$:
      002780 D0 07            [24] 8118 	pop	ar7
      002782 D0 06            [24] 8119 	pop	ar6
      002784 D0 03            [24] 8120 	pop	ar3
      002786                       8121 00135$:
                           002786  8122 	C$ff.c$1870$4_0$137 ==.
                                   8123 ;	FATFS\src\ff.c:1870: cf |= NS_LOSS | NS_LFN; continue;
      002786 90r00rBC         [24] 8124 	mov	dptr,#_create_name_cf_65536_128
      002789 E0               [24] 8125 	movx	a,@dptr
      00278A 43 E0 03         [24] 8126 	orl	acc,#0x03
      00278D F0               [24] 8127 	movx	@dptr,a
      00278E 02r26rFB         [24] 8128 	ljmp	00194$
      002791                       8129 00136$:
                           002791  8130 	C$ff.c$1873$1_0$128 ==.
                                   8131 ;	FATFS\src\ff.c:1873: if (i >= ni || si == di) {		/* Extension or end of SFN */
      002791 C0 04            [24] 8132 	push	ar4
      002793 C0 05            [24] 8133 	push	ar5
      002795 90r00rBF         [24] 8134 	mov	dptr,#_create_name_i_65536_128
      002798 E0               [24] 8135 	movx	a,@dptr
      002799 F5*7A            [12] 8136 	mov	_create_name_sloc1_1_0,a
      00279B A3               [24] 8137 	inc	dptr
      00279C E0               [24] 8138 	movx	a,@dptr
      00279D F5*7B            [12] 8139 	mov	(_create_name_sloc1_1_0 + 1),a
      00279F 90r00rC1         [24] 8140 	mov	dptr,#_create_name_ni_65536_128
      0027A2 E0               [24] 8141 	movx	a,@dptr
      0027A3 FC               [12] 8142 	mov	r4,a
      0027A4 A3               [24] 8143 	inc	dptr
      0027A5 E0               [24] 8144 	movx	a,@dptr
      0027A6 FD               [12] 8145 	mov	r5,a
      0027A7 C3               [12] 8146 	clr	c
      0027A8 E5*7A            [12] 8147 	mov	a,_create_name_sloc1_1_0
      0027AA 9C               [12] 8148 	subb	a,r4
      0027AB E5*7B            [12] 8149 	mov	a,(_create_name_sloc1_1_0 + 1)
      0027AD 9D               [12] 8150 	subb	a,r5
      0027AE D0 05            [24] 8151 	pop	ar5
      0027B0 D0 04            [24] 8152 	pop	ar4
      0027B2 50 21            [24] 8153 	jnc	00145$
      0027B4 C0 04            [24] 8154 	push	ar4
      0027B6 C0 05            [24] 8155 	push	ar5
      0027B8 90r00rC3         [24] 8156 	mov	dptr,#_create_name_si_65536_128
      0027BB E0               [24] 8157 	movx	a,@dptr
      0027BC FA               [12] 8158 	mov	r2,a
      0027BD A3               [24] 8159 	inc	dptr
      0027BE E0               [24] 8160 	movx	a,@dptr
      0027BF FD               [12] 8161 	mov	r5,a
      0027C0 EA               [12] 8162 	mov	a,r2
      0027C1 B5*7D 06         [24] 8163 	cjne	a,_create_name_sloc2_1_0,00405$
      0027C4 ED               [12] 8164 	mov	a,r5
      0027C5 B5*7E 02         [24] 8165 	cjne	a,(_create_name_sloc2_1_0 + 1),00405$
      0027C8 80 07            [24] 8166 	sjmp	00406$
      0027CA                       8167 00405$:
      0027CA D0 05            [24] 8168 	pop	ar5
      0027CC D0 04            [24] 8169 	pop	ar4
      0027CE 02r28r67         [24] 8170 	ljmp	00146$
      0027D1                       8171 00406$:
      0027D1 D0 05            [24] 8172 	pop	ar5
      0027D3 D0 04            [24] 8173 	pop	ar4
      0027D5                       8174 00145$:
                           0027D5  8175 	C$ff.c$1874$1_0$128 ==.
                                   8176 ;	FATFS\src\ff.c:1874: if (ni == 11) {				/* Long extension */
      0027D5 C0 04            [24] 8177 	push	ar4
      0027D7 C0 05            [24] 8178 	push	ar5
      0027D9 90r00rC1         [24] 8179 	mov	dptr,#_create_name_ni_65536_128
      0027DC E0               [24] 8180 	movx	a,@dptr
      0027DD FA               [12] 8181 	mov	r2,a
      0027DE A3               [24] 8182 	inc	dptr
      0027DF E0               [24] 8183 	movx	a,@dptr
      0027E0 FD               [12] 8184 	mov	r5,a
      0027E1 BA 0B 05         [24] 8185 	cjne	r2,#0x0b,00407$
      0027E4 BD 00 02         [24] 8186 	cjne	r5,#0x00,00407$
      0027E7 80 06            [24] 8187 	sjmp	00408$
      0027E9                       8188 00407$:
      0027E9 D0 05            [24] 8189 	pop	ar5
      0027EB D0 04            [24] 8190 	pop	ar4
      0027ED 80 0F            [24] 8191 	sjmp	00140$
      0027EF                       8192 00408$:
      0027EF D0 05            [24] 8193 	pop	ar5
      0027F1 D0 04            [24] 8194 	pop	ar4
                           0027F3  8195 	C$ff.c$1875$5_0$139 ==.
                                   8196 ;	FATFS\src\ff.c:1875: cf |= NS_LOSS | NS_LFN; break;
      0027F3 90r00rBC         [24] 8197 	mov	dptr,#_create_name_cf_65536_128
      0027F6 E0               [24] 8198 	movx	a,@dptr
      0027F7 43 E0 03         [24] 8199 	orl	acc,#0x03
      0027FA F0               [24] 8200 	movx	@dptr,a
      0027FB 02r2Ar16         [24] 8201 	ljmp	00170$
      0027FE                       8202 00140$:
                           0027FE  8203 	C$ff.c$1877$1_0$128 ==.
                                   8204 ;	FATFS\src\ff.c:1877: if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
      0027FE C0 04            [24] 8205 	push	ar4
      002800 C0 05            [24] 8206 	push	ar5
      002802 90r00rC3         [24] 8207 	mov	dptr,#_create_name_si_65536_128
      002805 E0               [24] 8208 	movx	a,@dptr
      002806 FA               [12] 8209 	mov	r2,a
      002807 A3               [24] 8210 	inc	dptr
      002808 E0               [24] 8211 	movx	a,@dptr
      002809 FD               [12] 8212 	mov	r5,a
      00280A EA               [12] 8213 	mov	a,r2
      00280B B5 00 0A         [24] 8214 	cjne	a,ar0,00409$
      00280E ED               [12] 8215 	mov	a,r5
      00280F B5 01 06         [24] 8216 	cjne	a,ar1,00409$
      002812 D0 05            [24] 8217 	pop	ar5
      002814 D0 04            [24] 8218 	pop	ar4
      002816 80 0C            [24] 8219 	sjmp	00142$
      002818                       8220 00409$:
      002818 D0 05            [24] 8221 	pop	ar5
      00281A D0 04            [24] 8222 	pop	ar4
      00281C 90r00rBC         [24] 8223 	mov	dptr,#_create_name_cf_65536_128
      00281F E0               [24] 8224 	movx	a,@dptr
      002820 43 E0 03         [24] 8225 	orl	acc,#0x03
      002823 F0               [24] 8226 	movx	@dptr,a
      002824                       8227 00142$:
                           002824  8228 	C$ff.c$1878$1_0$128 ==.
                                   8229 ;	FATFS\src\ff.c:1878: if (si > di) break;			/* No extension */
      002824 C0 04            [24] 8230 	push	ar4
      002826 C0 05            [24] 8231 	push	ar5
      002828 90r00rC3         [24] 8232 	mov	dptr,#_create_name_si_65536_128
      00282B E0               [24] 8233 	movx	a,@dptr
      00282C FA               [12] 8234 	mov	r2,a
      00282D A3               [24] 8235 	inc	dptr
      00282E E0               [24] 8236 	movx	a,@dptr
      00282F FD               [12] 8237 	mov	r5,a
      002830 C3               [12] 8238 	clr	c
      002831 E8               [12] 8239 	mov	a,r0
      002832 9A               [12] 8240 	subb	a,r2
      002833 E9               [12] 8241 	mov	a,r1
      002834 9D               [12] 8242 	subb	a,r5
      002835 D0 05            [24] 8243 	pop	ar5
      002837 D0 04            [24] 8244 	pop	ar4
      002839 50 03            [24] 8245 	jnc	00410$
      00283B 02r2Ar16         [24] 8246 	ljmp	00170$
      00283E                       8247 00410$:
                           00283E  8248 	C$ff.c$1879$4_0$138 ==.
                                   8249 ;	FATFS\src\ff.c:1879: si = di; i = 8; ni = 11;	/* Enter extension section */
      00283E 90r00rC3         [24] 8250 	mov	dptr,#_create_name_si_65536_128
      002841 E5*7F            [12] 8251 	mov	a,_create_name_sloc3_1_0
      002843 F0               [24] 8252 	movx	@dptr,a
      002844 E5*80            [12] 8253 	mov	a,(_create_name_sloc3_1_0 + 1)
      002846 A3               [24] 8254 	inc	dptr
      002847 F0               [24] 8255 	movx	@dptr,a
      002848 90r00rBF         [24] 8256 	mov	dptr,#_create_name_i_65536_128
      00284B 74 08            [12] 8257 	mov	a,#0x08
      00284D F0               [24] 8258 	movx	@dptr,a
      00284E E4               [12] 8259 	clr	a
      00284F A3               [24] 8260 	inc	dptr
      002850 F0               [24] 8261 	movx	@dptr,a
      002851 90r00rC1         [24] 8262 	mov	dptr,#_create_name_ni_65536_128
      002854 74 0B            [12] 8263 	mov	a,#0x0b
      002856 F0               [24] 8264 	movx	@dptr,a
      002857 E4               [12] 8265 	clr	a
      002858 A3               [24] 8266 	inc	dptr
      002859 F0               [24] 8267 	movx	@dptr,a
                           00285A  8268 	C$ff.c$1880$4_0$138 ==.
                                   8269 ;	FATFS\src\ff.c:1880: b <<= 2; continue;
      00285A 90r00rBB         [24] 8270 	mov	dptr,#_create_name_b_65536_128
      00285D E0               [24] 8271 	movx	a,@dptr
      00285E 25 E0            [12] 8272 	add	a,acc
      002860 25 E0            [12] 8273 	add	a,acc
      002862 FA               [12] 8274 	mov	r2,a
      002863 F0               [24] 8275 	movx	@dptr,a
      002864 02r26rFB         [24] 8276 	ljmp	00194$
      002867                       8277 00146$:
                           002867  8278 	C$ff.c$1883$3_0$136 ==.
                                   8279 ;	FATFS\src\ff.c:1883: if (w >= 0x80) {				/* Non ASCII character */
      002867 90r00rBD         [24] 8280 	mov	dptr,#_create_name_w_65536_128
      00286A E0               [24] 8281 	movx	a,@dptr
      00286B F5*7A            [12] 8282 	mov	_create_name_sloc1_1_0,a
      00286D A3               [24] 8283 	inc	dptr
      00286E E0               [24] 8284 	movx	a,@dptr
      00286F F5*7B            [12] 8285 	mov	(_create_name_sloc1_1_0 + 1),a
      002871 C3               [12] 8286 	clr	c
      002872 E5*7A            [12] 8287 	mov	a,_create_name_sloc1_1_0
      002874 94 80            [12] 8288 	subb	a,#0x80
      002876 E5*7B            [12] 8289 	mov	a,(_create_name_sloc1_1_0 + 1)
      002878 94 00            [12] 8290 	subb	a,#0x00
      00287A 50 03            [24] 8291 	jnc	00411$
      00287C 02r28rFC         [24] 8292 	ljmp	00166$
      00287F                       8293 00411$:
                           00287F  8294 	C$ff.c$1885$4_0$140 ==.
                                   8295 ;	FATFS\src\ff.c:1885: w = ff_convert(w, 0);		/* Unicode -> OEM code */
      00287F 90r00r00         [24] 8296 	mov	dptr,#_ff_convert_PARM_2
      002882 E4               [12] 8297 	clr	a
      002883 F0               [24] 8298 	movx	@dptr,a
      002884 A3               [24] 8299 	inc	dptr
      002885 F0               [24] 8300 	movx	@dptr,a
      002886 85*7A 82         [24] 8301 	mov	dpl,_create_name_sloc1_1_0
      002889 85*7B 83         [24] 8302 	mov	dph,(_create_name_sloc1_1_0 + 1)
      00288C C0 07            [24] 8303 	push	ar7
      00288E C0 06            [24] 8304 	push	ar6
      002890 C0 05            [24] 8305 	push	ar5
      002892 C0 04            [24] 8306 	push	ar4
      002894 C0 03            [24] 8307 	push	ar3
      002896 C0 01            [24] 8308 	push	ar1
      002898 C0 00            [24] 8309 	push	ar0
      00289A 78r00            [12] 8310 	mov	r0,#_ff_convert
      00289C 79s00            [12] 8311 	mov	r1,#(_ff_convert >> 8)
      00289E 7As00            [12] 8312 	mov	r2,#(_ff_convert >> 16)
      0028A0 12r00r00         [24] 8313 	lcall	__sdcc_banked_call
      0028A3 85 82*7A         [24] 8314 	mov	_create_name_sloc1_1_0,dpl
      0028A6 85 83*7B         [24] 8315 	mov	(_create_name_sloc1_1_0 + 1),dph
      0028A9 D0 00            [24] 8316 	pop	ar0
      0028AB D0 01            [24] 8317 	pop	ar1
      0028AD D0 03            [24] 8318 	pop	ar3
      0028AF D0 04            [24] 8319 	pop	ar4
      0028B1 D0 05            [24] 8320 	pop	ar5
      0028B3 D0 06            [24] 8321 	pop	ar6
      0028B5 D0 07            [24] 8322 	pop	ar7
      0028B7 90r00rBD         [24] 8323 	mov	dptr,#_create_name_w_65536_128
      0028BA E5*7A            [12] 8324 	mov	a,_create_name_sloc1_1_0
      0028BC F0               [24] 8325 	movx	@dptr,a
      0028BD E5*7B            [12] 8326 	mov	a,(_create_name_sloc1_1_0 + 1)
      0028BF A3               [24] 8327 	inc	dptr
      0028C0 F0               [24] 8328 	movx	@dptr,a
                           0028C1  8329 	C$ff.c$1886$4_0$140 ==.
                                   8330 ;	FATFS\src\ff.c:1886: if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
      0028C1 E5*7A            [12] 8331 	mov	a,_create_name_sloc1_1_0
      0028C3 45*7B            [12] 8332 	orl	a,(_create_name_sloc1_1_0 + 1)
      0028C5 60 25            [24] 8333 	jz	00149$
      0028C7 C0 04            [24] 8334 	push	ar4
      0028C9 C0 05            [24] 8335 	push	ar5
      0028CB E5*7A            [12] 8336 	mov	a,_create_name_sloc1_1_0
      0028CD 24 80            [12] 8337 	add	a,#0x80
      0028CF FA               [12] 8338 	mov	r2,a
      0028D0 E5*7B            [12] 8339 	mov	a,(_create_name_sloc1_1_0 + 1)
      0028D2 34 FF            [12] 8340 	addc	a,#0xff
      0028D4 FD               [12] 8341 	mov	r5,a
      0028D5 EA               [12] 8342 	mov	a,r2
      0028D6 24r00            [12] 8343 	add	a,#_ExCvt
      0028D8 F5 82            [12] 8344 	mov	dpl,a
      0028DA ED               [12] 8345 	mov	a,r5
      0028DB 34s00            [12] 8346 	addc	a,#(_ExCvt >> 8)
      0028DD F5 83            [12] 8347 	mov	dph,a
      0028DF E4               [12] 8348 	clr	a
      0028E0 93               [24] 8349 	movc	a,@a+dptr
      0028E1 90r00rBD         [24] 8350 	mov	dptr,#_create_name_w_65536_128
      0028E4 F0               [24] 8351 	movx	@dptr,a
      0028E5 E4               [12] 8352 	clr	a
      0028E6 A3               [24] 8353 	inc	dptr
      0028E7 F0               [24] 8354 	movx	@dptr,a
                           0028E8  8355 	C$ff.c$1926$1_0$128 ==.
                                   8356 ;	FATFS\src\ff.c:1926: return FR_OK;
      0028E8 D0 05            [24] 8357 	pop	ar5
      0028EA D0 04            [24] 8358 	pop	ar4
                           0028EC  8359 	C$ff.c$1886$4_0$140 ==.
                                   8360 ;	FATFS\src\ff.c:1886: if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
      0028EC                       8361 00149$:
                           0028EC  8362 	C$ff.c$1890$1_0$128 ==.
                                   8363 ;	FATFS\src\ff.c:1890: cf |= NS_LFN;				/* Force create LFN entry */
      0028EC C0 04            [24] 8364 	push	ar4
      0028EE C0 05            [24] 8365 	push	ar5
      0028F0 90r00rBC         [24] 8366 	mov	dptr,#_create_name_cf_65536_128
      0028F3 E0               [24] 8367 	movx	a,@dptr
      0028F4 44 02            [12] 8368 	orl	a,#0x02
      0028F6 FA               [12] 8369 	mov	r2,a
      0028F7 F0               [24] 8370 	movx	@dptr,a
                           0028F8  8371 	C$ff.c$1926$1_0$128 ==.
                                   8372 ;	FATFS\src\ff.c:1926: return FR_OK;
      0028F8 D0 05            [24] 8373 	pop	ar5
      0028FA D0 04            [24] 8374 	pop	ar4
                           0028FC  8375 	C$ff.c$1897$3_0$136 ==.
                                   8376 ;	FATFS\src\ff.c:1897: dp->fn[i++] = (BYTE)(w >> 8);
      0028FC                       8377 00166$:
                           0028FC  8378 	C$ff.c$1899$4_0$143 ==.
                                   8379 ;	FATFS\src\ff.c:1899: if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
      0028FC 90r00rBD         [24] 8380 	mov	dptr,#_create_name_w_65536_128
      0028FF E0               [24] 8381 	movx	a,@dptr
      002900 F5*7A            [12] 8382 	mov	_create_name_sloc1_1_0,a
      002902 A3               [24] 8383 	inc	dptr
      002903 E0               [24] 8384 	movx	a,@dptr
      002904 F5*7B            [12] 8385 	mov	(_create_name_sloc1_1_0 + 1),a
      002906 E5*7A            [12] 8386 	mov	a,_create_name_sloc1_1_0
      002908 45*7B            [12] 8387 	orl	a,(_create_name_sloc1_1_0 + 1)
      00290A 60 3E            [24] 8388 	jz	00161$
      00290C 90r00r21         [24] 8389 	mov	dptr,#_chk_chr_PARM_2
      00290F E5*7A            [12] 8390 	mov	a,_create_name_sloc1_1_0
      002911 F0               [24] 8391 	movx	@dptr,a
      002912 E5*7B            [12] 8392 	mov	a,(_create_name_sloc1_1_0 + 1)
      002914 A3               [24] 8393 	inc	dptr
      002915 F0               [24] 8394 	movx	@dptr,a
      002916 90r00r96         [24] 8395 	mov	dptr,#___str_1
      002919 75 F0 80         [24] 8396 	mov	b,#0x80
      00291C C0 07            [24] 8397 	push	ar7
      00291E C0 06            [24] 8398 	push	ar6
      002920 C0 05            [24] 8399 	push	ar5
      002922 C0 04            [24] 8400 	push	ar4
      002924 C0 03            [24] 8401 	push	ar3
      002926 C0 01            [24] 8402 	push	ar1
      002928 C0 00            [24] 8403 	push	ar0
      00292A 78r47            [12] 8404 	mov	r0,#_chk_chr
      00292C 79s01            [12] 8405 	mov	r1,#(_chk_chr >> 8)
      00292E 7As00            [12] 8406 	mov	r2,#(_chk_chr >> 16)
      002930 12r00r00         [24] 8407 	lcall	__sdcc_banked_call
      002933 E5 82            [12] 8408 	mov	a,dpl
      002935 85 83 F0         [24] 8409 	mov	b,dph
      002938 D0 00            [24] 8410 	pop	ar0
      00293A D0 01            [24] 8411 	pop	ar1
      00293C D0 03            [24] 8412 	pop	ar3
      00293E D0 04            [24] 8413 	pop	ar4
      002940 D0 05            [24] 8414 	pop	ar5
      002942 D0 06            [24] 8415 	pop	ar6
      002944 D0 07            [24] 8416 	pop	ar7
      002946 45 F0            [12] 8417 	orl	a,b
      002948 60 13            [24] 8418 	jz	00162$
      00294A                       8419 00161$:
                           00294A  8420 	C$ff.c$1900$5_0$144 ==.
                                   8421 ;	FATFS\src\ff.c:1900: w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
      00294A 90r00rBD         [24] 8422 	mov	dptr,#_create_name_w_65536_128
      00294D 74 5F            [12] 8423 	mov	a,#0x5f
      00294F F0               [24] 8424 	movx	@dptr,a
      002950 E4               [12] 8425 	clr	a
      002951 A3               [24] 8426 	inc	dptr
      002952 F0               [24] 8427 	movx	@dptr,a
      002953 90r00rBC         [24] 8428 	mov	dptr,#_create_name_cf_65536_128
      002956 E0               [24] 8429 	movx	a,@dptr
      002957 43 E0 03         [24] 8430 	orl	acc,#0x03
      00295A F0               [24] 8431 	movx	@dptr,a
      00295B 80 66            [24] 8432 	sjmp	00167$
      00295D                       8433 00162$:
                           00295D  8434 	C$ff.c$1902$5_0$145 ==.
                                   8435 ;	FATFS\src\ff.c:1902: if (IsUpper(w)) {		/* ASCII large capital */
      00295D C3               [12] 8436 	clr	c
      00295E E5*7A            [12] 8437 	mov	a,_create_name_sloc1_1_0
      002960 94 41            [12] 8438 	subb	a,#0x41
      002962 E5*7B            [12] 8439 	mov	a,(_create_name_sloc1_1_0 + 1)
      002964 94 00            [12] 8440 	subb	a,#0x00
      002966 40 1B            [24] 8441 	jc	00158$
      002968 74 5A            [12] 8442 	mov	a,#0x5a
      00296A 95*7A            [12] 8443 	subb	a,_create_name_sloc1_1_0
      00296C E4               [12] 8444 	clr	a
      00296D 95*7B            [12] 8445 	subb	a,(_create_name_sloc1_1_0 + 1)
      00296F 40 12            [24] 8446 	jc	00158$
                           002971  8447 	C$ff.c$1903$1_0$128 ==.
                                   8448 ;	FATFS\src\ff.c:1903: b |= 2;
      002971 C0 04            [24] 8449 	push	ar4
      002973 C0 05            [24] 8450 	push	ar5
      002975 90r00rBB         [24] 8451 	mov	dptr,#_create_name_b_65536_128
      002978 E0               [24] 8452 	movx	a,@dptr
      002979 44 02            [12] 8453 	orl	a,#0x02
      00297B FA               [12] 8454 	mov	r2,a
      00297C F0               [24] 8455 	movx	@dptr,a
      00297D D0 05            [24] 8456 	pop	ar5
      00297F D0 04            [24] 8457 	pop	ar4
      002981 80 40            [24] 8458 	sjmp	00167$
      002983                       8459 00158$:
                           002983  8460 	C$ff.c$1905$6_0$147 ==.
                                   8461 ;	FATFS\src\ff.c:1905: if (IsLower(w)) {	/* ASCII small capital */
      002983 90r00rBD         [24] 8462 	mov	dptr,#_create_name_w_65536_128
      002986 E0               [24] 8463 	movx	a,@dptr
      002987 F5*7A            [12] 8464 	mov	_create_name_sloc1_1_0,a
      002989 A3               [24] 8465 	inc	dptr
      00298A E0               [24] 8466 	movx	a,@dptr
      00298B F5*7B            [12] 8467 	mov	(_create_name_sloc1_1_0 + 1),a
      00298D C3               [12] 8468 	clr	c
      00298E E5*7A            [12] 8469 	mov	a,_create_name_sloc1_1_0
      002990 94 61            [12] 8470 	subb	a,#0x61
      002992 E5*7B            [12] 8471 	mov	a,(_create_name_sloc1_1_0 + 1)
      002994 94 00            [12] 8472 	subb	a,#0x00
      002996 40 2B            [24] 8473 	jc	00167$
      002998 74 7A            [12] 8474 	mov	a,#0x7a
      00299A 95*7A            [12] 8475 	subb	a,_create_name_sloc1_1_0
      00299C E4               [12] 8476 	clr	a
      00299D 95*7B            [12] 8477 	subb	a,(_create_name_sloc1_1_0 + 1)
      00299F 40 22            [24] 8478 	jc	00167$
                           0029A1  8479 	C$ff.c$1906$1_0$128 ==.
                                   8480 ;	FATFS\src\ff.c:1906: b |= 1; w -= 0x20;
      0029A1 C0 04            [24] 8481 	push	ar4
      0029A3 C0 05            [24] 8482 	push	ar5
      0029A5 90r00rBB         [24] 8483 	mov	dptr,#_create_name_b_65536_128
      0029A8 E0               [24] 8484 	movx	a,@dptr
      0029A9 44 01            [12] 8485 	orl	a,#0x01
      0029AB FA               [12] 8486 	mov	r2,a
      0029AC F0               [24] 8487 	movx	@dptr,a
      0029AD E5*7A            [12] 8488 	mov	a,_create_name_sloc1_1_0
      0029AF 24 E0            [12] 8489 	add	a,#0xe0
      0029B1 FC               [12] 8490 	mov	r4,a
      0029B2 E5*7B            [12] 8491 	mov	a,(_create_name_sloc1_1_0 + 1)
      0029B4 34 FF            [12] 8492 	addc	a,#0xff
      0029B6 FD               [12] 8493 	mov	r5,a
      0029B7 90r00rBD         [24] 8494 	mov	dptr,#_create_name_w_65536_128
      0029BA EC               [12] 8495 	mov	a,r4
      0029BB F0               [24] 8496 	movx	@dptr,a
      0029BC ED               [12] 8497 	mov	a,r5
      0029BD A3               [24] 8498 	inc	dptr
      0029BE F0               [24] 8499 	movx	@dptr,a
                           0029BF  8500 	C$ff.c$1926$1_0$128 ==.
                                   8501 ;	FATFS\src\ff.c:1926: return FR_OK;
      0029BF D0 05            [24] 8502 	pop	ar5
      0029C1 D0 04            [24] 8503 	pop	ar4
                           0029C3  8504 	C$ff.c$1906$3_0$136 ==.
                                   8505 ;	FATFS\src\ff.c:1906: b |= 1; w -= 0x20;
      0029C3                       8506 00167$:
                           0029C3  8507 	C$ff.c$1911$1_0$128 ==.
                                   8508 ;	FATFS\src\ff.c:1911: dp->fn[i++] = (BYTE)w;
      0029C3 C0 04            [24] 8509 	push	ar4
      0029C5 C0 05            [24] 8510 	push	ar5
      0029C7 8B 82            [24] 8511 	mov	dpl,r3
      0029C9 8E 83            [24] 8512 	mov	dph,r6
      0029CB 8F F0            [24] 8513 	mov	b,r7
      0029CD 12r00r00         [24] 8514 	lcall	__gptrget
      0029D0 F5*7A            [12] 8515 	mov	_create_name_sloc1_1_0,a
      0029D2 A3               [24] 8516 	inc	dptr
      0029D3 12r00r00         [24] 8517 	lcall	__gptrget
      0029D6 F5*7B            [12] 8518 	mov	(_create_name_sloc1_1_0 + 1),a
      0029D8 A3               [24] 8519 	inc	dptr
      0029D9 12r00r00         [24] 8520 	lcall	__gptrget
      0029DC F5*7C            [12] 8521 	mov	(_create_name_sloc1_1_0 + 2),a
      0029DE 90r00rBF         [24] 8522 	mov	dptr,#_create_name_i_65536_128
      0029E1 E0               [24] 8523 	movx	a,@dptr
      0029E2 FC               [12] 8524 	mov	r4,a
      0029E3 A3               [24] 8525 	inc	dptr
      0029E4 E0               [24] 8526 	movx	a,@dptr
      0029E5 FD               [12] 8527 	mov	r5,a
      0029E6 90r00rBF         [24] 8528 	mov	dptr,#_create_name_i_65536_128
      0029E9 74 01            [12] 8529 	mov	a,#0x01
      0029EB 2C               [12] 8530 	add	a,r4
      0029EC F0               [24] 8531 	movx	@dptr,a
      0029ED E4               [12] 8532 	clr	a
      0029EE 3D               [12] 8533 	addc	a,r5
      0029EF A3               [24] 8534 	inc	dptr
      0029F0 F0               [24] 8535 	movx	@dptr,a
      0029F1 EC               [12] 8536 	mov	a,r4
      0029F2 25*7A            [12] 8537 	add	a,_create_name_sloc1_1_0
      0029F4 F5*7A            [12] 8538 	mov	_create_name_sloc1_1_0,a
      0029F6 ED               [12] 8539 	mov	a,r5
      0029F7 35*7B            [12] 8540 	addc	a,(_create_name_sloc1_1_0 + 1)
      0029F9 F5*7B            [12] 8541 	mov	(_create_name_sloc1_1_0 + 1),a
      0029FB 90r00rBD         [24] 8542 	mov	dptr,#_create_name_w_65536_128
      0029FE E0               [24] 8543 	movx	a,@dptr
      0029FF FC               [12] 8544 	mov	r4,a
      002A00 A3               [24] 8545 	inc	dptr
      002A01 E0               [24] 8546 	movx	a,@dptr
      002A02 85*7A 82         [24] 8547 	mov	dpl,_create_name_sloc1_1_0
      002A05 85*7B 83         [24] 8548 	mov	dph,(_create_name_sloc1_1_0 + 1)
      002A08 85*7C F0         [24] 8549 	mov	b,(_create_name_sloc1_1_0 + 2)
      002A0B EC               [12] 8550 	mov	a,r4
      002A0C 12r00r00         [24] 8551 	lcall	__gptrput
      002A0F D0 05            [24] 8552 	pop	ar5
      002A11 D0 04            [24] 8553 	pop	ar4
      002A13 02r26rFB         [24] 8554 	ljmp	00194$
      002A16                       8555 00170$:
                           002A16  8556 	C$ff.c$1914$1_0$128 ==.
                                   8557 ;	FATFS\src\ff.c:1914: if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
      002A16 90r00rB8         [24] 8558 	mov	dptr,#_create_name_dp_65536_127
      002A19 E0               [24] 8559 	movx	a,@dptr
      002A1A FD               [12] 8560 	mov	r5,a
      002A1B A3               [24] 8561 	inc	dptr
      002A1C E0               [24] 8562 	movx	a,@dptr
      002A1D FE               [12] 8563 	mov	r6,a
      002A1E A3               [24] 8564 	inc	dptr
      002A1F E0               [24] 8565 	movx	a,@dptr
      002A20 FF               [12] 8566 	mov	r7,a
      002A21 74 16            [12] 8567 	mov	a,#0x16
      002A23 2D               [12] 8568 	add	a,r5
      002A24 FD               [12] 8569 	mov	r5,a
      002A25 E4               [12] 8570 	clr	a
      002A26 3E               [12] 8571 	addc	a,r6
      002A27 FE               [12] 8572 	mov	r6,a
      002A28 8D 82            [24] 8573 	mov	dpl,r5
      002A2A 8E 83            [24] 8574 	mov	dph,r6
      002A2C 8F F0            [24] 8575 	mov	b,r7
      002A2E 12r00r00         [24] 8576 	lcall	__gptrget
      002A31 FD               [12] 8577 	mov	r5,a
      002A32 A3               [24] 8578 	inc	dptr
      002A33 12r00r00         [24] 8579 	lcall	__gptrget
      002A36 FE               [12] 8580 	mov	r6,a
      002A37 A3               [24] 8581 	inc	dptr
      002A38 12r00r00         [24] 8582 	lcall	__gptrget
      002A3B FF               [12] 8583 	mov	r7,a
      002A3C 8D 82            [24] 8584 	mov	dpl,r5
      002A3E 8E 83            [24] 8585 	mov	dph,r6
      002A40 8F F0            [24] 8586 	mov	b,r7
      002A42 12r00r00         [24] 8587 	lcall	__gptrget
      002A45 FC               [12] 8588 	mov	r4,a
      002A46 BC E5 0B         [24] 8589 	cjne	r4,#0xe5,00172$
      002A49 8D 82            [24] 8590 	mov	dpl,r5
      002A4B 8E 83            [24] 8591 	mov	dph,r6
      002A4D 8F F0            [24] 8592 	mov	b,r7
      002A4F 74 05            [12] 8593 	mov	a,#0x05
      002A51 12r00r00         [24] 8594 	lcall	__gptrput
      002A54                       8595 00172$:
                           002A54  8596 	C$ff.c$1916$1_0$128 ==.
                                   8597 ;	FATFS\src\ff.c:1916: if (ni == 8) b <<= 2;
      002A54 90r00rC1         [24] 8598 	mov	dptr,#_create_name_ni_65536_128
      002A57 E0               [24] 8599 	movx	a,@dptr
      002A58 FE               [12] 8600 	mov	r6,a
      002A59 A3               [24] 8601 	inc	dptr
      002A5A E0               [24] 8602 	movx	a,@dptr
      002A5B FF               [12] 8603 	mov	r7,a
      002A5C BE 08 0D         [24] 8604 	cjne	r6,#0x08,00174$
      002A5F BF 00 0A         [24] 8605 	cjne	r7,#0x00,00174$
      002A62 90r00rBB         [24] 8606 	mov	dptr,#_create_name_b_65536_128
      002A65 E0               [24] 8607 	movx	a,@dptr
      002A66 25 E0            [12] 8608 	add	a,acc
      002A68 25 E0            [12] 8609 	add	a,acc
      002A6A FF               [12] 8610 	mov	r7,a
      002A6B F0               [24] 8611 	movx	@dptr,a
      002A6C                       8612 00174$:
                           002A6C  8613 	C$ff.c$1917$1_0$128 ==.
                                   8614 ;	FATFS\src\ff.c:1917: if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
      002A6C 90r00rBB         [24] 8615 	mov	dptr,#_create_name_b_65536_128
      002A6F E0               [24] 8616 	movx	a,@dptr
      002A70 FE               [12] 8617 	mov	r6,a
      002A71 7F 00            [12] 8618 	mov	r7,#0x00
      002A73 74 0C            [12] 8619 	mov	a,#0x0c
      002A75 5E               [12] 8620 	anl	a,r6
      002A76 FC               [12] 8621 	mov	r4,a
      002A77 7D 00            [12] 8622 	mov	r5,#0x00
      002A79 BC 0C 05         [24] 8623 	cjne	r4,#0x0c,00423$
      002A7C BD 00 02         [24] 8624 	cjne	r5,#0x00,00423$
      002A7F 80 0B            [24] 8625 	sjmp	00175$
      002A81                       8626 00423$:
      002A81 53 06 03         [24] 8627 	anl	ar6,#0x03
      002A84 7F 00            [12] 8628 	mov	r7,#0x00
      002A86 BE 03 12         [24] 8629 	cjne	r6,#0x03,00176$
      002A89 BF 00 0F         [24] 8630 	cjne	r7,#0x00,00176$
      002A8C                       8631 00175$:
                           002A8C  8632 	C$ff.c$1918$1_0$128 ==.
                                   8633 ;	FATFS\src\ff.c:1918: cf |= NS_LFN;
      002A8C 90r00rBC         [24] 8634 	mov	dptr,#_create_name_cf_65536_128
      002A8F E0               [24] 8635 	movx	a,@dptr
      002A90 FF               [12] 8636 	mov	r7,a
      002A91 7E 00            [12] 8637 	mov	r6,#0x00
      002A93 43 07 02         [24] 8638 	orl	ar7,#0x02
      002A96 90r00rBC         [24] 8639 	mov	dptr,#_create_name_cf_65536_128
      002A99 EF               [12] 8640 	mov	a,r7
      002A9A F0               [24] 8641 	movx	@dptr,a
      002A9B                       8642 00176$:
                           002A9B  8643 	C$ff.c$1919$1_0$128 ==.
                                   8644 ;	FATFS\src\ff.c:1919: if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
      002A9B 90r00rBC         [24] 8645 	mov	dptr,#_create_name_cf_65536_128
      002A9E E0               [24] 8646 	movx	a,@dptr
      002A9F FF               [12] 8647 	mov	r7,a
      002AA0 20 E1 35         [24] 8648 	jb	acc.1,00183$
                           002AA3  8649 	C$ff.c$1920$2_0$149 ==.
                                   8650 ;	FATFS\src\ff.c:1920: if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
      002AA3 90r00rBB         [24] 8651 	mov	dptr,#_create_name_b_65536_128
      002AA6 E0               [24] 8652 	movx	a,@dptr
      002AA7 FD               [12] 8653 	mov	r5,a
      002AA8 74 03            [12] 8654 	mov	a,#0x03
      002AAA 5D               [12] 8655 	anl	a,r5
      002AAB FB               [12] 8656 	mov	r3,a
      002AAC 7C 00            [12] 8657 	mov	r4,#0x00
      002AAE BB 01 0D         [24] 8658 	cjne	r3,#0x01,00179$
      002AB1 BC 00 0A         [24] 8659 	cjne	r4,#0x00,00179$
      002AB4 7C 00            [12] 8660 	mov	r4,#0x00
      002AB6 43 07 10         [24] 8661 	orl	ar7,#0x10
      002AB9 90r00rBC         [24] 8662 	mov	dptr,#_create_name_cf_65536_128
      002ABC EF               [12] 8663 	mov	a,r7
      002ABD F0               [24] 8664 	movx	@dptr,a
      002ABE                       8665 00179$:
                           002ABE  8666 	C$ff.c$1921$2_0$149 ==.
                                   8667 ;	FATFS\src\ff.c:1921: if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
      002ABE 53 05 0C         [24] 8668 	anl	ar5,#0x0c
      002AC1 7E 00            [12] 8669 	mov	r6,#0x00
      002AC3 BD 04 12         [24] 8670 	cjne	r5,#0x04,00183$
      002AC6 BE 00 0F         [24] 8671 	cjne	r6,#0x00,00183$
      002AC9 90r00rBC         [24] 8672 	mov	dptr,#_create_name_cf_65536_128
      002ACC E0               [24] 8673 	movx	a,@dptr
      002ACD FF               [12] 8674 	mov	r7,a
      002ACE 7E 00            [12] 8675 	mov	r6,#0x00
      002AD0 43 07 08         [24] 8676 	orl	ar7,#0x08
      002AD3 90r00rBC         [24] 8677 	mov	dptr,#_create_name_cf_65536_128
      002AD6 EF               [12] 8678 	mov	a,r7
      002AD7 F0               [24] 8679 	movx	@dptr,a
      002AD8                       8680 00183$:
                           002AD8  8681 	C$ff.c$1924$1_0$128 ==.
                                   8682 ;	FATFS\src\ff.c:1924: dp->fn[NS] = cf;	/* SFN is created */
      002AD8 90r00rB8         [24] 8683 	mov	dptr,#_create_name_dp_65536_127
      002ADB E0               [24] 8684 	movx	a,@dptr
      002ADC FD               [12] 8685 	mov	r5,a
      002ADD A3               [24] 8686 	inc	dptr
      002ADE E0               [24] 8687 	movx	a,@dptr
      002ADF FE               [12] 8688 	mov	r6,a
      002AE0 A3               [24] 8689 	inc	dptr
      002AE1 E0               [24] 8690 	movx	a,@dptr
      002AE2 FF               [12] 8691 	mov	r7,a
      002AE3 74 16            [12] 8692 	mov	a,#0x16
      002AE5 2D               [12] 8693 	add	a,r5
      002AE6 FD               [12] 8694 	mov	r5,a
      002AE7 E4               [12] 8695 	clr	a
      002AE8 3E               [12] 8696 	addc	a,r6
      002AE9 FE               [12] 8697 	mov	r6,a
      002AEA 8D 82            [24] 8698 	mov	dpl,r5
      002AEC 8E 83            [24] 8699 	mov	dph,r6
      002AEE 8F F0            [24] 8700 	mov	b,r7
      002AF0 12r00r00         [24] 8701 	lcall	__gptrget
      002AF3 FD               [12] 8702 	mov	r5,a
      002AF4 A3               [24] 8703 	inc	dptr
      002AF5 12r00r00         [24] 8704 	lcall	__gptrget
      002AF8 FE               [12] 8705 	mov	r6,a
      002AF9 A3               [24] 8706 	inc	dptr
      002AFA 12r00r00         [24] 8707 	lcall	__gptrget
      002AFD FF               [12] 8708 	mov	r7,a
      002AFE 74 0B            [12] 8709 	mov	a,#0x0b
      002B00 2D               [12] 8710 	add	a,r5
      002B01 FD               [12] 8711 	mov	r5,a
      002B02 E4               [12] 8712 	clr	a
      002B03 3E               [12] 8713 	addc	a,r6
      002B04 FE               [12] 8714 	mov	r6,a
      002B05 90r00rBC         [24] 8715 	mov	dptr,#_create_name_cf_65536_128
      002B08 E0               [24] 8716 	movx	a,@dptr
      002B09 FC               [12] 8717 	mov	r4,a
      002B0A 8D 82            [24] 8718 	mov	dpl,r5
      002B0C 8E 83            [24] 8719 	mov	dph,r6
      002B0E 8F F0            [24] 8720 	mov	b,r7
      002B10 12r00r00         [24] 8721 	lcall	__gptrput
                           002B13  8722 	C$ff.c$1926$1_0$128 ==.
                                   8723 ;	FATFS\src\ff.c:1926: return FR_OK;
      002B13 75 82 00         [24] 8724 	mov	dpl,#0x00
                           002B16  8725 	C$ff.c$2003$1_0$128 ==.
                                   8726 ;	FATFS\src\ff.c:2003: }
                           002B16  8727 	C$ff.c$2003$1_0$128 ==.
                           002B16  8728 	XFff$create_name$0$0 ==.
      002B16 02r00r00         [24] 8729 	ljmp	__sdcc_banked_ret
                                   8730 ;------------------------------------------------------------
                                   8731 ;Allocation info for local variables in function 'follow_path'
                                   8732 ;------------------------------------------------------------
                                   8733 ;sloc0                     Allocated with name '_follow_path_sloc0_1_0'
                                   8734 ;sloc1                     Allocated with name '_follow_path_sloc1_1_0'
                                   8735 ;path                      Allocated with name '_follow_path_PARM_2'
                                   8736 ;dp                        Allocated with name '_follow_path_dp_65536_150'
                                   8737 ;res                       Allocated with name '_follow_path_res_65536_151'
                                   8738 ;dir                       Allocated with name '_follow_path_dir_65536_151'
                                   8739 ;ns                        Allocated with name '_follow_path_ns_65536_151'
                                   8740 ;------------------------------------------------------------
                           002B19  8741 	Fff$follow_path$0$0 ==.
                           002B19  8742 	C$ff.c$2013$1_0$151 ==.
                                   8743 ;	FATFS\src\ff.c:2013: FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
                                   8744 ;	-----------------------------------------
                                   8745 ;	 function follow_path
                                   8746 ;	-----------------------------------------
      002B19                       8747 _follow_path:
      002B19 AF F0            [24] 8748 	mov	r7,b
      002B1B AE 83            [24] 8749 	mov	r6,dph
      002B1D E5 82            [12] 8750 	mov	a,dpl
      002B1F 90r00rCD         [24] 8751 	mov	dptr,#_follow_path_dp_65536_150
      002B22 F0               [24] 8752 	movx	@dptr,a
      002B23 EE               [12] 8753 	mov	a,r6
      002B24 A3               [24] 8754 	inc	dptr
      002B25 F0               [24] 8755 	movx	@dptr,a
      002B26 EF               [12] 8756 	mov	a,r7
      002B27 A3               [24] 8757 	inc	dptr
      002B28 F0               [24] 8758 	movx	@dptr,a
                           002B29  8759 	C$ff.c$2029$1_0$151 ==.
                                   8760 ;	FATFS\src\ff.c:2029: if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
      002B29 90r00rCA         [24] 8761 	mov	dptr,#_follow_path_PARM_2
      002B2C E0               [24] 8762 	movx	a,@dptr
      002B2D FD               [12] 8763 	mov	r5,a
      002B2E A3               [24] 8764 	inc	dptr
      002B2F E0               [24] 8765 	movx	a,@dptr
      002B30 FE               [12] 8766 	mov	r6,a
      002B31 A3               [24] 8767 	inc	dptr
      002B32 E0               [24] 8768 	movx	a,@dptr
      002B33 FF               [12] 8769 	mov	r7,a
      002B34 8D 82            [24] 8770 	mov	dpl,r5
      002B36 8E 83            [24] 8771 	mov	dph,r6
      002B38 8F F0            [24] 8772 	mov	b,r7
      002B3A 12r00r00         [24] 8773 	lcall	__gptrget
      002B3D FC               [12] 8774 	mov	r4,a
      002B3E BC 2F 02         [24] 8775 	cjne	r4,#0x2f,00166$
      002B41 80 03            [24] 8776 	sjmp	00101$
      002B43                       8777 00166$:
      002B43 BC 5C 0E         [24] 8778 	cjne	r4,#0x5c,00102$
      002B46                       8779 00101$:
                           002B46  8780 	C$ff.c$2030$1_0$151 ==.
                                   8781 ;	FATFS\src\ff.c:2030: path++;
      002B46 90r00rCA         [24] 8782 	mov	dptr,#_follow_path_PARM_2
      002B49 74 01            [12] 8783 	mov	a,#0x01
      002B4B 2D               [12] 8784 	add	a,r5
      002B4C F0               [24] 8785 	movx	@dptr,a
      002B4D E4               [12] 8786 	clr	a
      002B4E 3E               [12] 8787 	addc	a,r6
      002B4F A3               [24] 8788 	inc	dptr
      002B50 F0               [24] 8789 	movx	@dptr,a
      002B51 EF               [12] 8790 	mov	a,r7
      002B52 A3               [24] 8791 	inc	dptr
      002B53 F0               [24] 8792 	movx	@dptr,a
      002B54                       8793 00102$:
                           002B54  8794 	C$ff.c$2031$1_0$151 ==.
                                   8795 ;	FATFS\src\ff.c:2031: dp->sclust = 0;							/* Always start from the root directory */
      002B54 90r00rCD         [24] 8796 	mov	dptr,#_follow_path_dp_65536_150
      002B57 E0               [24] 8797 	movx	a,@dptr
      002B58 FD               [12] 8798 	mov	r5,a
      002B59 A3               [24] 8799 	inc	dptr
      002B5A E0               [24] 8800 	movx	a,@dptr
      002B5B FE               [12] 8801 	mov	r6,a
      002B5C A3               [24] 8802 	inc	dptr
      002B5D E0               [24] 8803 	movx	a,@dptr
      002B5E FF               [12] 8804 	mov	r7,a
      002B5F 74 07            [12] 8805 	mov	a,#0x07
      002B61 2D               [12] 8806 	add	a,r5
      002B62 FA               [12] 8807 	mov	r2,a
      002B63 E4               [12] 8808 	clr	a
      002B64 3E               [12] 8809 	addc	a,r6
      002B65 FB               [12] 8810 	mov	r3,a
      002B66 8F 04            [24] 8811 	mov	ar4,r7
      002B68 8A 82            [24] 8812 	mov	dpl,r2
      002B6A 8B 83            [24] 8813 	mov	dph,r3
      002B6C 8C F0            [24] 8814 	mov	b,r4
      002B6E E4               [12] 8815 	clr	a
      002B6F 12r00r00         [24] 8816 	lcall	__gptrput
      002B72 A3               [24] 8817 	inc	dptr
      002B73 12r00r00         [24] 8818 	lcall	__gptrput
      002B76 A3               [24] 8819 	inc	dptr
      002B77 12r00r00         [24] 8820 	lcall	__gptrput
      002B7A A3               [24] 8821 	inc	dptr
      002B7B 12r00r00         [24] 8822 	lcall	__gptrput
                           002B7E  8823 	C$ff.c$2034$1_0$151 ==.
                                   8824 ;	FATFS\src\ff.c:2034: if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
      002B7E 90r00rCA         [24] 8825 	mov	dptr,#_follow_path_PARM_2
      002B81 E0               [24] 8826 	movx	a,@dptr
      002B82 FA               [12] 8827 	mov	r2,a
      002B83 A3               [24] 8828 	inc	dptr
      002B84 E0               [24] 8829 	movx	a,@dptr
      002B85 FB               [12] 8830 	mov	r3,a
      002B86 A3               [24] 8831 	inc	dptr
      002B87 E0               [24] 8832 	movx	a,@dptr
      002B88 FC               [12] 8833 	mov	r4,a
      002B89 8A 82            [24] 8834 	mov	dpl,r2
      002B8B 8B 83            [24] 8835 	mov	dph,r3
      002B8D 8C F0            [24] 8836 	mov	b,r4
      002B8F 12r00r00         [24] 8837 	lcall	__gptrget
      002B92 FA               [12] 8838 	mov	r2,a
      002B93 7C 00            [12] 8839 	mov	r4,#0x00
      002B95 C3               [12] 8840 	clr	c
      002B96 EA               [12] 8841 	mov	a,r2
      002B97 94 20            [12] 8842 	subb	a,#0x20
      002B99 EC               [12] 8843 	mov	a,r4
      002B9A 94 00            [12] 8844 	subb	a,#0x00
      002B9C 50 43            [24] 8845 	jnc	00127$
                           002B9E  8846 	C$ff.c$2035$2_0$152 ==.
                                   8847 ;	FATFS\src\ff.c:2035: res = dir_sdi(dp, 0);
      002B9E 90r00r49         [24] 8848 	mov	dptr,#_dir_sdi_PARM_2
      002BA1 E4               [12] 8849 	clr	a
      002BA2 F0               [24] 8850 	movx	@dptr,a
      002BA3 A3               [24] 8851 	inc	dptr
      002BA4 F0               [24] 8852 	movx	@dptr,a
      002BA5 8D 82            [24] 8853 	mov	dpl,r5
      002BA7 8E 83            [24] 8854 	mov	dph,r6
      002BA9 8F F0            [24] 8855 	mov	b,r7
      002BAB 78r7F            [12] 8856 	mov	r0,#_dir_sdi
      002BAD 79s09            [12] 8857 	mov	r1,#(_dir_sdi >> 8)
      002BAF 7As00            [12] 8858 	mov	r2,#(_dir_sdi >> 16)
      002BB1 12r00r00         [24] 8859 	lcall	__sdcc_banked_call
      002BB4 E5 82            [12] 8860 	mov	a,dpl
      002BB6 90r00rD0         [24] 8861 	mov	dptr,#_follow_path_res_65536_151
      002BB9 F0               [24] 8862 	movx	@dptr,a
                           002BBA  8863 	C$ff.c$2036$2_0$152 ==.
                                   8864 ;	FATFS\src\ff.c:2036: dp->dir = 0;
      002BBA 90r00rCD         [24] 8865 	mov	dptr,#_follow_path_dp_65536_150
      002BBD E0               [24] 8866 	movx	a,@dptr
      002BBE FA               [12] 8867 	mov	r2,a
      002BBF A3               [24] 8868 	inc	dptr
      002BC0 E0               [24] 8869 	movx	a,@dptr
      002BC1 FB               [12] 8870 	mov	r3,a
      002BC2 A3               [24] 8871 	inc	dptr
      002BC3 E0               [24] 8872 	movx	a,@dptr
      002BC4 FC               [12] 8873 	mov	r4,a
      002BC5 74 13            [12] 8874 	mov	a,#0x13
      002BC7 2A               [12] 8875 	add	a,r2
      002BC8 FA               [12] 8876 	mov	r2,a
      002BC9 E4               [12] 8877 	clr	a
      002BCA 3B               [12] 8878 	addc	a,r3
      002BCB FB               [12] 8879 	mov	r3,a
      002BCC 8A 82            [24] 8880 	mov	dpl,r2
      002BCE 8B 83            [24] 8881 	mov	dph,r3
      002BD0 8C F0            [24] 8882 	mov	b,r4
      002BD2 E4               [12] 8883 	clr	a
      002BD3 12r00r00         [24] 8884 	lcall	__gptrput
      002BD6 A3               [24] 8885 	inc	dptr
      002BD7 12r00r00         [24] 8886 	lcall	__gptrput
      002BDA A3               [24] 8887 	inc	dptr
      002BDB 12r00r00         [24] 8888 	lcall	__gptrput
      002BDE 02r2Dr6D         [24] 8889 	ljmp	00126$
      002BE1                       8890 00127$:
                           002BE1  8891 	C$ff.c$2039$4_0$155 ==.
                                   8892 ;	FATFS\src\ff.c:2039: res = create_name(dp, &path);	/* Get a segment name of the path */
      002BE1 90r00rB5         [24] 8893 	mov	dptr,#_create_name_PARM_2
      002BE4 74rCA            [12] 8894 	mov	a,#_follow_path_PARM_2
      002BE6 F0               [24] 8895 	movx	@dptr,a
      002BE7 74s00            [12] 8896 	mov	a,#(_follow_path_PARM_2 >> 8)
      002BE9 A3               [24] 8897 	inc	dptr
      002BEA F0               [24] 8898 	movx	@dptr,a
      002BEB E4               [12] 8899 	clr	a
      002BEC A3               [24] 8900 	inc	dptr
      002BED F0               [24] 8901 	movx	@dptr,a
      002BEE 8D 82            [24] 8902 	mov	dpl,r5
      002BF0 8E 83            [24] 8903 	mov	dph,r6
      002BF2 8F F0            [24] 8904 	mov	b,r7
      002BF4 C0 07            [24] 8905 	push	ar7
      002BF6 C0 06            [24] 8906 	push	ar6
      002BF8 C0 05            [24] 8907 	push	ar5
      002BFA 78r92            [12] 8908 	mov	r0,#_create_name
      002BFC 79s23            [12] 8909 	mov	r1,#(_create_name >> 8)
      002BFE 7As00            [12] 8910 	mov	r2,#(_create_name >> 16)
      002C00 12r00r00         [24] 8911 	lcall	__sdcc_banked_call
      002C03 AC 82            [24] 8912 	mov	r4,dpl
      002C05 D0 05            [24] 8913 	pop	ar5
      002C07 D0 06            [24] 8914 	pop	ar6
      002C09 D0 07            [24] 8915 	pop	ar7
      002C0B 90r00rD0         [24] 8916 	mov	dptr,#_follow_path_res_65536_151
      002C0E EC               [12] 8917 	mov	a,r4
      002C0F F0               [24] 8918 	movx	@dptr,a
                           002C10  8919 	C$ff.c$2040$4_0$155 ==.
                                   8920 ;	FATFS\src\ff.c:2040: if (res != FR_OK) break;
      002C10 EC               [12] 8921 	mov	a,r4
      002C11 60 03            [24] 8922 	jz	00170$
      002C13 02r2Dr6D         [24] 8923 	ljmp	00126$
      002C16                       8924 00170$:
                           002C16  8925 	C$ff.c$2041$1_0$151 ==.
                                   8926 ;	FATFS\src\ff.c:2041: res = dir_find(dp);				/* Find an object with the sagment name */
      002C16 C0 05            [24] 8927 	push	ar5
      002C18 C0 06            [24] 8928 	push	ar6
      002C1A C0 07            [24] 8929 	push	ar7
      002C1C 90r00rCD         [24] 8930 	mov	dptr,#_follow_path_dp_65536_150
      002C1F E0               [24] 8931 	movx	a,@dptr
      002C20 FA               [12] 8932 	mov	r2,a
      002C21 A3               [24] 8933 	inc	dptr
      002C22 E0               [24] 8934 	movx	a,@dptr
      002C23 FB               [12] 8935 	mov	r3,a
      002C24 A3               [24] 8936 	inc	dptr
      002C25 E0               [24] 8937 	movx	a,@dptr
      002C26 FC               [12] 8938 	mov	r4,a
      002C27 8A 82            [24] 8939 	mov	dpl,r2
      002C29 8B 83            [24] 8940 	mov	dph,r3
      002C2B 8C F0            [24] 8941 	mov	b,r4
      002C2D C0 07            [24] 8942 	push	ar7
      002C2F C0 06            [24] 8943 	push	ar6
      002C31 C0 05            [24] 8944 	push	ar5
      002C33 78r75            [12] 8945 	mov	r0,#_dir_find
      002C35 79s18            [12] 8946 	mov	r1,#(_dir_find >> 8)
      002C37 7As00            [12] 8947 	mov	r2,#(_dir_find >> 16)
      002C39 12r00r00         [24] 8948 	lcall	__sdcc_banked_call
      002C3C AC 82            [24] 8949 	mov	r4,dpl
      002C3E D0 05            [24] 8950 	pop	ar5
      002C40 D0 06            [24] 8951 	pop	ar6
      002C42 D0 07            [24] 8952 	pop	ar7
      002C44 90r00rD0         [24] 8953 	mov	dptr,#_follow_path_res_65536_151
      002C47 EC               [12] 8954 	mov	a,r4
      002C48 F0               [24] 8955 	movx	@dptr,a
                           002C49  8956 	C$ff.c$2042$4_0$155 ==.
                                   8957 ;	FATFS\src\ff.c:2042: ns = dp->fn[NS];
      002C49 90r00rCD         [24] 8958 	mov	dptr,#_follow_path_dp_65536_150
      002C4C E0               [24] 8959 	movx	a,@dptr
      002C4D F9               [12] 8960 	mov	r1,a
      002C4E A3               [24] 8961 	inc	dptr
      002C4F E0               [24] 8962 	movx	a,@dptr
      002C50 FA               [12] 8963 	mov	r2,a
      002C51 A3               [24] 8964 	inc	dptr
      002C52 E0               [24] 8965 	movx	a,@dptr
      002C53 FB               [12] 8966 	mov	r3,a
      002C54 74 16            [12] 8967 	mov	a,#0x16
      002C56 29               [12] 8968 	add	a,r1
      002C57 F8               [12] 8969 	mov	r0,a
      002C58 E4               [12] 8970 	clr	a
      002C59 3A               [12] 8971 	addc	a,r2
      002C5A FE               [12] 8972 	mov	r6,a
      002C5B 8B 07            [24] 8973 	mov	ar7,r3
      002C5D 88 82            [24] 8974 	mov	dpl,r0
      002C5F 8E 83            [24] 8975 	mov	dph,r6
      002C61 8F F0            [24] 8976 	mov	b,r7
      002C63 12r00r00         [24] 8977 	lcall	__gptrget
      002C66 F8               [12] 8978 	mov	r0,a
      002C67 A3               [24] 8979 	inc	dptr
      002C68 12r00r00         [24] 8980 	lcall	__gptrget
      002C6B FE               [12] 8981 	mov	r6,a
      002C6C A3               [24] 8982 	inc	dptr
      002C6D 12r00r00         [24] 8983 	lcall	__gptrget
      002C70 FF               [12] 8984 	mov	r7,a
      002C71 74 0B            [12] 8985 	mov	a,#0x0b
      002C73 28               [12] 8986 	add	a,r0
      002C74 F8               [12] 8987 	mov	r0,a
      002C75 E4               [12] 8988 	clr	a
      002C76 3E               [12] 8989 	addc	a,r6
      002C77 FE               [12] 8990 	mov	r6,a
      002C78 88 82            [24] 8991 	mov	dpl,r0
      002C7A 8E 83            [24] 8992 	mov	dph,r6
      002C7C 8F F0            [24] 8993 	mov	b,r7
      002C7E 12r00r00         [24] 8994 	lcall	__gptrget
      002C81 F5*81            [12] 8995 	mov	_follow_path_sloc0_1_0,a
                           002C83  8996 	C$ff.c$2043$1_0$151 ==.
                                   8997 ;	FATFS\src\ff.c:2043: if (res != FR_OK) {				/* Failed to find the object */
      002C83 D0 07            [24] 8998 	pop	ar7
      002C85 D0 06            [24] 8999 	pop	ar6
      002C87 D0 05            [24] 9000 	pop	ar5
      002C89 EC               [12] 9001 	mov	a,r4
      002C8A 60 19            [24] 9002 	jz	00117$
                           002C8C  9003 	C$ff.c$2044$5_0$156 ==.
                                   9004 ;	FATFS\src\ff.c:2044: if (res == FR_NO_FILE) {	/* Object is not found */
      002C8C BC 04 02         [24] 9005 	cjne	r4,#0x04,00172$
      002C8F 80 03            [24] 9006 	sjmp	00173$
      002C91                       9007 00172$:
      002C91 02r2Dr6D         [24] 9008 	ljmp	00126$
      002C94                       9009 00173$:
                           002C94  9010 	C$ff.c$2050$7_0$159 ==.
                                   9011 ;	FATFS\src\ff.c:2050: if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
      002C94 E5*81            [12] 9012 	mov	a,_follow_path_sloc0_1_0
      002C96 30 E2 03         [24] 9013 	jnb	acc.2,00174$
      002C99 02r2Dr6D         [24] 9014 	ljmp	00126$
      002C9C                       9015 00174$:
      002C9C 90r00rD0         [24] 9016 	mov	dptr,#_follow_path_res_65536_151
      002C9F 74 05            [12] 9017 	mov	a,#0x05
      002CA1 F0               [24] 9018 	movx	@dptr,a
                           002CA2  9019 	C$ff.c$2053$5_0$156 ==.
                                   9020 ;	FATFS\src\ff.c:2053: break;
      002CA2 02r2Dr6D         [24] 9021 	ljmp	00126$
      002CA5                       9022 00117$:
                           002CA5  9023 	C$ff.c$2055$4_0$155 ==.
                                   9024 ;	FATFS\src\ff.c:2055: if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
      002CA5 E5*81            [12] 9025 	mov	a,_follow_path_sloc0_1_0
      002CA7 30 E2 03         [24] 9026 	jnb	acc.2,00175$
      002CAA 02r2Dr6D         [24] 9027 	ljmp	00126$
      002CAD                       9028 00175$:
                           002CAD  9029 	C$ff.c$2056$1_0$151 ==.
                                   9030 ;	FATFS\src\ff.c:2056: dir = dp->dir;						/* Follow the sub-directory */
      002CAD C0 05            [24] 9031 	push	ar5
      002CAF C0 06            [24] 9032 	push	ar6
      002CB1 C0 07            [24] 9033 	push	ar7
      002CB3 74 13            [12] 9034 	mov	a,#0x13
      002CB5 29               [12] 9035 	add	a,r1
      002CB6 F8               [12] 9036 	mov	r0,a
      002CB7 E4               [12] 9037 	clr	a
      002CB8 3A               [12] 9038 	addc	a,r2
      002CB9 FC               [12] 9039 	mov	r4,a
      002CBA 8B 07            [24] 9040 	mov	ar7,r3
      002CBC 88 82            [24] 9041 	mov	dpl,r0
      002CBE 8C 83            [24] 9042 	mov	dph,r4
      002CC0 8F F0            [24] 9043 	mov	b,r7
      002CC2 12r00r00         [24] 9044 	lcall	__gptrget
      002CC5 F5*82            [12] 9045 	mov	_follow_path_sloc1_1_0,a
      002CC7 A3               [24] 9046 	inc	dptr
      002CC8 12r00r00         [24] 9047 	lcall	__gptrget
      002CCB F5*83            [12] 9048 	mov	(_follow_path_sloc1_1_0 + 1),a
      002CCD A3               [24] 9049 	inc	dptr
      002CCE 12r00r00         [24] 9050 	lcall	__gptrget
      002CD1 F5*84            [12] 9051 	mov	(_follow_path_sloc1_1_0 + 2),a
                           002CD3  9052 	C$ff.c$2057$4_0$155 ==.
                                   9053 ;	FATFS\src\ff.c:2057: if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
      002CD3 74 0B            [12] 9054 	mov	a,#0x0b
      002CD5 25*82            [12] 9055 	add	a,_follow_path_sloc1_1_0
      002CD7 FD               [12] 9056 	mov	r5,a
      002CD8 E4               [12] 9057 	clr	a
      002CD9 35*83            [12] 9058 	addc	a,(_follow_path_sloc1_1_0 + 1)
      002CDB FE               [12] 9059 	mov	r6,a
      002CDC AF*84            [24] 9060 	mov	r7,(_follow_path_sloc1_1_0 + 2)
      002CDE 8D 82            [24] 9061 	mov	dpl,r5
      002CE0 8E 83            [24] 9062 	mov	dph,r6
      002CE2 8F F0            [24] 9063 	mov	b,r7
      002CE4 12r00r00         [24] 9064 	lcall	__gptrget
      002CE7 D0 07            [24] 9065 	pop	ar7
      002CE9 D0 06            [24] 9066 	pop	ar6
      002CEB D0 05            [24] 9067 	pop	ar5
      002CED 20 E4 08         [24] 9068 	jb	acc.4,00121$
                           002CF0  9069 	C$ff.c$2058$5_0$160 ==.
                                   9070 ;	FATFS\src\ff.c:2058: res = FR_NO_PATH; break;
      002CF0 90r00rD0         [24] 9071 	mov	dptr,#_follow_path_res_65536_151
      002CF3 74 05            [12] 9072 	mov	a,#0x05
      002CF5 F0               [24] 9073 	movx	@dptr,a
      002CF6 80 75            [24] 9074 	sjmp	00126$
      002CF8                       9075 00121$:
                           002CF8  9076 	C$ff.c$2060$1_0$151 ==.
                                   9077 ;	FATFS\src\ff.c:2060: dp->sclust = ld_clust(dp->fs, dir);
      002CF8 C0 05            [24] 9078 	push	ar5
      002CFA C0 06            [24] 9079 	push	ar6
      002CFC C0 07            [24] 9080 	push	ar7
      002CFE 74 07            [12] 9081 	mov	a,#0x07
      002D00 29               [12] 9082 	add	a,r1
      002D01 F8               [12] 9083 	mov	r0,a
      002D02 E4               [12] 9084 	clr	a
      002D03 3A               [12] 9085 	addc	a,r2
      002D04 FC               [12] 9086 	mov	r4,a
      002D05 8B 07            [24] 9087 	mov	ar7,r3
      002D07 89 82            [24] 9088 	mov	dpl,r1
      002D09 8A 83            [24] 9089 	mov	dph,r2
      002D0B 8B F0            [24] 9090 	mov	b,r3
      002D0D 12r00r00         [24] 9091 	lcall	__gptrget
      002D10 F9               [12] 9092 	mov	r1,a
      002D11 A3               [24] 9093 	inc	dptr
      002D12 12r00r00         [24] 9094 	lcall	__gptrget
      002D15 FA               [12] 9095 	mov	r2,a
      002D16 A3               [24] 9096 	inc	dptr
      002D17 12r00r00         [24] 9097 	lcall	__gptrget
      002D1A FB               [12] 9098 	mov	r3,a
      002D1B 90r00r5B         [24] 9099 	mov	dptr,#_ld_clust_PARM_2
      002D1E E5*82            [12] 9100 	mov	a,_follow_path_sloc1_1_0
      002D20 F0               [24] 9101 	movx	@dptr,a
      002D21 E5*83            [12] 9102 	mov	a,(_follow_path_sloc1_1_0 + 1)
      002D23 A3               [24] 9103 	inc	dptr
      002D24 F0               [24] 9104 	movx	@dptr,a
      002D25 E5*84            [12] 9105 	mov	a,(_follow_path_sloc1_1_0 + 2)
      002D27 A3               [24] 9106 	inc	dptr
      002D28 F0               [24] 9107 	movx	@dptr,a
      002D29 89 82            [24] 9108 	mov	dpl,r1
      002D2B 8A 83            [24] 9109 	mov	dph,r2
      002D2D 8B F0            [24] 9110 	mov	b,r3
      002D2F C0 07            [24] 9111 	push	ar7
      002D31 C0 04            [24] 9112 	push	ar4
      002D33 C0 00            [24] 9113 	push	ar0
      002D35 78r57            [12] 9114 	mov	r0,#_ld_clust
      002D37 79s11            [12] 9115 	mov	r1,#(_ld_clust >> 8)
      002D39 7As00            [12] 9116 	mov	r2,#(_ld_clust >> 16)
      002D3B 12r00r00         [24] 9117 	lcall	__sdcc_banked_call
      002D3E AA 82            [24] 9118 	mov	r2,dpl
      002D40 AB 83            [24] 9119 	mov	r3,dph
      002D42 AD F0            [24] 9120 	mov	r5,b
      002D44 FE               [12] 9121 	mov	r6,a
      002D45 D0 00            [24] 9122 	pop	ar0
      002D47 D0 04            [24] 9123 	pop	ar4
      002D49 D0 07            [24] 9124 	pop	ar7
      002D4B 88 82            [24] 9125 	mov	dpl,r0
      002D4D 8C 83            [24] 9126 	mov	dph,r4
      002D4F 8F F0            [24] 9127 	mov	b,r7
      002D51 EA               [12] 9128 	mov	a,r2
      002D52 12r00r00         [24] 9129 	lcall	__gptrput
      002D55 A3               [24] 9130 	inc	dptr
      002D56 EB               [12] 9131 	mov	a,r3
      002D57 12r00r00         [24] 9132 	lcall	__gptrput
      002D5A A3               [24] 9133 	inc	dptr
      002D5B ED               [12] 9134 	mov	a,r5
      002D5C 12r00r00         [24] 9135 	lcall	__gptrput
      002D5F A3               [24] 9136 	inc	dptr
      002D60 EE               [12] 9137 	mov	a,r6
      002D61 12r00r00         [24] 9138 	lcall	__gptrput
      002D64 D0 07            [24] 9139 	pop	ar7
      002D66 D0 06            [24] 9140 	pop	ar6
      002D68 D0 05            [24] 9141 	pop	ar5
      002D6A 02r2BrE1         [24] 9142 	ljmp	00127$
      002D6D                       9143 00126$:
                           002D6D  9144 	C$ff.c$2064$1_0$151 ==.
                                   9145 ;	FATFS\src\ff.c:2064: return res;
      002D6D 90r00rD0         [24] 9146 	mov	dptr,#_follow_path_res_65536_151
      002D70 E0               [24] 9147 	movx	a,@dptr
      002D71 FF               [12] 9148 	mov	r7,a
      002D72 F5 82            [12] 9149 	mov	dpl,a
                           002D74  9150 	C$ff.c$2065$1_0$151 ==.
                                   9151 ;	FATFS\src\ff.c:2065: }
                           002D74  9152 	C$ff.c$2065$1_0$151 ==.
                           002D74  9153 	XFff$follow_path$0$0 ==.
      002D74 02r00r00         [24] 9154 	ljmp	__sdcc_banked_ret
                                   9155 ;------------------------------------------------------------
                                   9156 ;Allocation info for local variables in function 'get_ldnumber'
                                   9157 ;------------------------------------------------------------
                                   9158 ;path                      Allocated with name '_get_ldnumber_path_65536_161'
                                   9159 ;tp                        Allocated with name '_get_ldnumber_tp_65536_162'
                                   9160 ;tt                        Allocated with name '_get_ldnumber_tt_65536_162'
                                   9161 ;i                         Allocated with name '_get_ldnumber_i_65536_162'
                                   9162 ;vol                       Allocated with name '_get_ldnumber_vol_65536_162'
                                   9163 ;sloc0                     Allocated with name '_get_ldnumber_sloc0_1_0'
                                   9164 ;sloc1                     Allocated with name '_get_ldnumber_sloc1_1_0'
                                   9165 ;------------------------------------------------------------
                           002D77  9166 	Fff$get_ldnumber$0$0 ==.
                           002D77  9167 	C$ff.c$2075$1_0$162 ==.
                                   9168 ;	FATFS\src\ff.c:2075: int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
                                   9169 ;	-----------------------------------------
                                   9170 ;	 function get_ldnumber
                                   9171 ;	-----------------------------------------
      002D77                       9172 _get_ldnumber:
      002D77 AF F0            [24] 9173 	mov	r7,b
      002D79 AE 83            [24] 9174 	mov	r6,dph
      002D7B E5 82            [12] 9175 	mov	a,dpl
      002D7D 90r00rD1         [24] 9176 	mov	dptr,#_get_ldnumber_path_65536_161
      002D80 F0               [24] 9177 	movx	@dptr,a
      002D81 EE               [12] 9178 	mov	a,r6
      002D82 A3               [24] 9179 	inc	dptr
      002D83 F0               [24] 9180 	movx	@dptr,a
      002D84 EF               [12] 9181 	mov	a,r7
      002D85 A3               [24] 9182 	inc	dptr
      002D86 F0               [24] 9183 	movx	@dptr,a
                           002D87  9184 	C$ff.c$2081$2_0$162 ==.
                                   9185 ;	FATFS\src\ff.c:2081: int vol = -1;
      002D87 90r00rD4         [24] 9186 	mov	dptr,#_get_ldnumber_vol_65536_162
      002D8A 74 FF            [12] 9187 	mov	a,#0xff
      002D8C F0               [24] 9188 	movx	@dptr,a
      002D8D A3               [24] 9189 	inc	dptr
      002D8E F0               [24] 9190 	movx	@dptr,a
                           002D8F  9191 	C$ff.c$2084$1_0$162 ==.
                                   9192 ;	FATFS\src\ff.c:2084: if (*path) {	/* If the pointer is not a null */
      002D8F 90r00rD1         [24] 9193 	mov	dptr,#_get_ldnumber_path_65536_161
      002D92 E0               [24] 9194 	movx	a,@dptr
      002D93 FD               [12] 9195 	mov	r5,a
      002D94 A3               [24] 9196 	inc	dptr
      002D95 E0               [24] 9197 	movx	a,@dptr
      002D96 FE               [12] 9198 	mov	r6,a
      002D97 A3               [24] 9199 	inc	dptr
      002D98 E0               [24] 9200 	movx	a,@dptr
      002D99 FF               [12] 9201 	mov	r7,a
      002D9A 8D 82            [24] 9202 	mov	dpl,r5
      002D9C 8E 83            [24] 9203 	mov	dph,r6
      002D9E 8F F0            [24] 9204 	mov	b,r7
      002DA0 12r00r00         [24] 9205 	lcall	__gptrget
      002DA3 FD               [12] 9206 	mov	r5,a
      002DA4 A3               [24] 9207 	inc	dptr
      002DA5 12r00r00         [24] 9208 	lcall	__gptrget
      002DA8 FE               [12] 9209 	mov	r6,a
      002DA9 A3               [24] 9210 	inc	dptr
      002DAA 12r00r00         [24] 9211 	lcall	__gptrget
      002DAD FF               [12] 9212 	mov	r7,a
      002DAE ED               [12] 9213 	mov	a,r5
      002DAF 4E               [12] 9214 	orl	a,r6
      002DB0 70 03            [24] 9215 	jnz	00150$
      002DB2 02r2ErA2         [24] 9216 	ljmp	00110$
      002DB5                       9217 00150$:
                           002DB5  9218 	C$ff.c$2085$1_0$162 ==.
                                   9219 ;	FATFS\src\ff.c:2085: for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
      002DB5                       9220 00113$:
      002DB5 8D 82            [24] 9221 	mov	dpl,r5
      002DB7 8E 83            [24] 9222 	mov	dph,r6
      002DB9 8F F0            [24] 9223 	mov	b,r7
      002DBB 12r00r00         [24] 9224 	lcall	__gptrget
      002DBE FC               [12] 9225 	mov	r4,a
      002DBF FA               [12] 9226 	mov	r2,a
      002DC0 7B 00            [12] 9227 	mov	r3,#0x00
      002DC2 C3               [12] 9228 	clr	c
      002DC3 EA               [12] 9229 	mov	a,r2
      002DC4 94 20            [12] 9230 	subb	a,#0x20
      002DC6 EB               [12] 9231 	mov	a,r3
      002DC7 94 00            [12] 9232 	subb	a,#0x00
      002DC9 40 0C            [24] 9233 	jc	00101$
      002DCB BC 3A 02         [24] 9234 	cjne	r4,#0x3a,00152$
      002DCE 80 07            [24] 9235 	sjmp	00101$
      002DD0                       9236 00152$:
      002DD0 0D               [12] 9237 	inc	r5
      002DD1 BD 00 E1         [24] 9238 	cjne	r5,#0x00,00113$
      002DD4 0E               [12] 9239 	inc	r6
      002DD5 80 DE            [24] 9240 	sjmp	00113$
      002DD7                       9241 00101$:
                           002DD7  9242 	C$ff.c$2086$2_0$163 ==.
                                   9243 ;	FATFS\src\ff.c:2086: if (*tt == ':') {	/* If a ':' is exist in the path name */
      002DD7 8D 82            [24] 9244 	mov	dpl,r5
      002DD9 8E 83            [24] 9245 	mov	dph,r6
      002DDB 8F F0            [24] 9246 	mov	b,r7
      002DDD 12r00r00         [24] 9247 	lcall	__gptrget
      002DE0 FC               [12] 9248 	mov	r4,a
      002DE1 BC 3A 02         [24] 9249 	cjne	r4,#0x3a,00154$
      002DE4 80 03            [24] 9250 	sjmp	00155$
      002DE6                       9251 00154$:
      002DE6 02r2Er9B         [24] 9252 	ljmp	00108$
      002DE9                       9253 00155$:
                           002DE9  9254 	C$ff.c$2087$1_0$162 ==.
                                   9255 ;	FATFS\src\ff.c:2087: tp = *path;
      002DE9 C0 05            [24] 9256 	push	ar5
      002DEB C0 06            [24] 9257 	push	ar6
      002DED C0 07            [24] 9258 	push	ar7
      002DEF 90r00rD1         [24] 9259 	mov	dptr,#_get_ldnumber_path_65536_161
      002DF2 E0               [24] 9260 	movx	a,@dptr
      002DF3 FA               [12] 9261 	mov	r2,a
      002DF4 A3               [24] 9262 	inc	dptr
      002DF5 E0               [24] 9263 	movx	a,@dptr
      002DF6 FB               [12] 9264 	mov	r3,a
      002DF7 A3               [24] 9265 	inc	dptr
      002DF8 E0               [24] 9266 	movx	a,@dptr
      002DF9 FC               [12] 9267 	mov	r4,a
      002DFA 8A 82            [24] 9268 	mov	dpl,r2
      002DFC 8B 83            [24] 9269 	mov	dph,r3
      002DFE 8C F0            [24] 9270 	mov	b,r4
      002E00 12r00r00         [24] 9271 	lcall	__gptrget
      002E03 F8               [12] 9272 	mov	r0,a
      002E04 A3               [24] 9273 	inc	dptr
      002E05 12r00r00         [24] 9274 	lcall	__gptrget
      002E08 F9               [12] 9275 	mov	r1,a
      002E09 A3               [24] 9276 	inc	dptr
      002E0A 12r00r00         [24] 9277 	lcall	__gptrget
      002E0D FF               [12] 9278 	mov	r7,a
                           002E0E  9279 	C$ff.c$2088$3_0$165 ==.
                                   9280 ;	FATFS\src\ff.c:2088: i = *tp++ - '0'; 
      002E0E 88 82            [24] 9281 	mov	dpl,r0
      002E10 89 83            [24] 9282 	mov	dph,r1
      002E12 8F F0            [24] 9283 	mov	b,r7
      002E14 12r00r00         [24] 9284 	lcall	__gptrget
      002E17 FE               [12] 9285 	mov	r6,a
      002E18 74 01            [12] 9286 	mov	a,#0x01
      002E1A 28               [12] 9287 	add	a,r0
      002E1B F5*00            [12] 9288 	mov	_get_ldnumber_sloc0_1_0,a
      002E1D E4               [12] 9289 	clr	a
      002E1E 39               [12] 9290 	addc	a,r1
      002E1F F5*01            [12] 9291 	mov	(_get_ldnumber_sloc0_1_0 + 1),a
      002E21 8F*02            [24] 9292 	mov	(_get_ldnumber_sloc0_1_0 + 2),r7
      002E23 7F 00            [12] 9293 	mov	r7,#0x00
      002E25 EE               [12] 9294 	mov	a,r6
      002E26 24 D0            [12] 9295 	add	a,#0xd0
      002E28 F5*03            [12] 9296 	mov	_get_ldnumber_sloc1_1_0,a
      002E2A EF               [12] 9297 	mov	a,r7
      002E2B 34 FF            [12] 9298 	addc	a,#0xff
      002E2D F5*04            [12] 9299 	mov	(_get_ldnumber_sloc1_1_0 + 1),a
                           002E2F  9300 	C$ff.c$2089$3_0$165 ==.
                                   9301 ;	FATFS\src\ff.c:2089: if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
      002E2F AE*03            [24] 9302 	mov	r6,_get_ldnumber_sloc1_1_0
      002E31 AF*04            [24] 9303 	mov	r7,(_get_ldnumber_sloc1_1_0 + 1)
      002E33 C3               [12] 9304 	clr	c
      002E34 EE               [12] 9305 	mov	a,r6
      002E35 94 0A            [12] 9306 	subb	a,#0x0a
      002E37 EF               [12] 9307 	mov	a,r7
      002E38 94 00            [12] 9308 	subb	a,#0x00
      002E3A D0 07            [24] 9309 	pop	ar7
      002E3C D0 06            [24] 9310 	pop	ar6
      002E3E D0 05            [24] 9311 	pop	ar5
      002E40 50 4B            [24] 9312 	jnc	00105$
      002E42 C0*00            [24] 9313 	push	_get_ldnumber_sloc0_1_0
      002E44 C0*01            [24] 9314 	push	(_get_ldnumber_sloc0_1_0 + 1)
      002E46 C0*02            [24] 9315 	push	(_get_ldnumber_sloc0_1_0 + 2)
      002E48 8D 82            [24] 9316 	mov	dpl,r5
      002E4A 8E 83            [24] 9317 	mov	dph,r6
      002E4C 8F F0            [24] 9318 	mov	b,r7
      002E4E 12r00r00         [24] 9319 	lcall	___gptr_cmp
      002E51 15 81            [12] 9320 	dec	sp
      002E53 15 81            [12] 9321 	dec	sp
      002E55 15 81            [12] 9322 	dec	sp
      002E57 60 02            [24] 9323 	jz	00158$
      002E59 80 32            [24] 9324 	sjmp	00105$
      002E5B                       9325 00158$:
                           002E5B  9326 	C$ff.c$2090$4_0$166 ==.
                                   9327 ;	FATFS\src\ff.c:2090: if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
      002E5B A8*03            [24] 9328 	mov	r0,_get_ldnumber_sloc1_1_0
      002E5D A9*04            [24] 9329 	mov	r1,(_get_ldnumber_sloc1_1_0 + 1)
      002E5F C3               [12] 9330 	clr	c
      002E60 E8               [12] 9331 	mov	a,r0
      002E61 94 02            [12] 9332 	subb	a,#0x02
      002E63 E9               [12] 9333 	mov	a,r1
      002E64 94 00            [12] 9334 	subb	a,#0x00
      002E66 50 25            [24] 9335 	jnc	00105$
                           002E68  9336 	C$ff.c$2091$5_0$167 ==.
                                   9337 ;	FATFS\src\ff.c:2091: vol = (int)i;
      002E68 A8*03            [24] 9338 	mov	r0,_get_ldnumber_sloc1_1_0
      002E6A A9*04            [24] 9339 	mov	r1,(_get_ldnumber_sloc1_1_0 + 1)
      002E6C 90r00rD4         [24] 9340 	mov	dptr,#_get_ldnumber_vol_65536_162
      002E6F E8               [12] 9341 	mov	a,r0
      002E70 F0               [24] 9342 	movx	@dptr,a
      002E71 E9               [12] 9343 	mov	a,r1
      002E72 A3               [24] 9344 	inc	dptr
      002E73 F0               [24] 9345 	movx	@dptr,a
                           002E74  9346 	C$ff.c$2092$5_0$167 ==.
                                   9347 ;	FATFS\src\ff.c:2092: *path = ++tt;
      002E74 0D               [12] 9348 	inc	r5
      002E75 BD 00 01         [24] 9349 	cjne	r5,#0x00,00160$
      002E78 0E               [12] 9350 	inc	r6
      002E79                       9351 00160$:
      002E79 8A 82            [24] 9352 	mov	dpl,r2
      002E7B 8B 83            [24] 9353 	mov	dph,r3
      002E7D 8C F0            [24] 9354 	mov	b,r4
      002E7F ED               [12] 9355 	mov	a,r5
      002E80 12r00r00         [24] 9356 	lcall	__gptrput
      002E83 A3               [24] 9357 	inc	dptr
      002E84 EE               [12] 9358 	mov	a,r6
      002E85 12r00r00         [24] 9359 	lcall	__gptrput
      002E88 A3               [24] 9360 	inc	dptr
      002E89 EF               [12] 9361 	mov	a,r7
      002E8A 12r00r00         [24] 9362 	lcall	__gptrput
      002E8D                       9363 00105$:
                           002E8D  9364 	C$ff.c$2115$3_0$165 ==.
                                   9365 ;	FATFS\src\ff.c:2115: return vol;
      002E8D 90r00rD4         [24] 9366 	mov	dptr,#_get_ldnumber_vol_65536_162
      002E90 E0               [24] 9367 	movx	a,@dptr
      002E91 FE               [12] 9368 	mov	r6,a
      002E92 A3               [24] 9369 	inc	dptr
      002E93 E0               [24] 9370 	movx	a,@dptr
      002E94 FF               [12] 9371 	mov	r7,a
      002E95 8E 82            [24] 9372 	mov	dpl,r6
      002E97 8F 83            [24] 9373 	mov	dph,r7
      002E99 80 13            [24] 9374 	sjmp	00115$
      002E9B                       9375 00108$:
                           002E9B  9376 	C$ff.c$2120$2_0$163 ==.
                                   9377 ;	FATFS\src\ff.c:2120: vol = 0;		/* Drive 0 */
      002E9B 90r00rD4         [24] 9378 	mov	dptr,#_get_ldnumber_vol_65536_162
      002E9E E4               [12] 9379 	clr	a
      002E9F F0               [24] 9380 	movx	@dptr,a
      002EA0 A3               [24] 9381 	inc	dptr
      002EA1 F0               [24] 9382 	movx	@dptr,a
      002EA2                       9383 00110$:
                           002EA2  9384 	C$ff.c$2123$1_0$162 ==.
                                   9385 ;	FATFS\src\ff.c:2123: return vol;
      002EA2 90r00rD4         [24] 9386 	mov	dptr,#_get_ldnumber_vol_65536_162
      002EA5 E0               [24] 9387 	movx	a,@dptr
      002EA6 FE               [12] 9388 	mov	r6,a
      002EA7 A3               [24] 9389 	inc	dptr
      002EA8 E0               [24] 9390 	movx	a,@dptr
      002EA9 FF               [12] 9391 	mov	r7,a
      002EAA 8E 82            [24] 9392 	mov	dpl,r6
      002EAC 8F 83            [24] 9393 	mov	dph,r7
      002EAE                       9394 00115$:
                           002EAE  9395 	C$ff.c$2124$1_0$162 ==.
                                   9396 ;	FATFS\src\ff.c:2124: }
                           002EAE  9397 	C$ff.c$2124$1_0$162 ==.
                           002EAE  9398 	XFff$get_ldnumber$0$0 ==.
      002EAE 02r00r00         [24] 9399 	ljmp	__sdcc_banked_ret
                                   9400 ;------------------------------------------------------------
                                   9401 ;Allocation info for local variables in function 'check_fs'
                                   9402 ;------------------------------------------------------------
                                   9403 ;sloc0                     Allocated with name '_check_fs_sloc0_1_0'
                                   9404 ;sloc1                     Allocated with name '_check_fs_sloc1_1_0'
                                   9405 ;sloc2                     Allocated with name '_check_fs_sloc2_1_0'
                                   9406 ;sect                      Allocated with name '_check_fs_PARM_2'
                                   9407 ;fs                        Allocated with name '_check_fs_fs_65536_169'
                                   9408 ;------------------------------------------------------------
                           002EB1  9409 	Fff$check_fs$0$0 ==.
                           002EB1  9410 	C$ff.c$2134$1_0$170 ==.
                                   9411 ;	FATFS\src\ff.c:2134: BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
                                   9412 ;	-----------------------------------------
                                   9413 ;	 function check_fs
                                   9414 ;	-----------------------------------------
      002EB1                       9415 _check_fs:
      002EB1 AF F0            [24] 9416 	mov	r7,b
      002EB3 AE 83            [24] 9417 	mov	r6,dph
      002EB5 E5 82            [12] 9418 	mov	a,dpl
      002EB7 90r00rDA         [24] 9419 	mov	dptr,#_check_fs_fs_65536_169
      002EBA F0               [24] 9420 	movx	@dptr,a
      002EBB EE               [12] 9421 	mov	a,r6
      002EBC A3               [24] 9422 	inc	dptr
      002EBD F0               [24] 9423 	movx	@dptr,a
      002EBE EF               [12] 9424 	mov	a,r7
      002EBF A3               [24] 9425 	inc	dptr
      002EC0 F0               [24] 9426 	movx	@dptr,a
                           002EC1  9427 	C$ff.c$2139$1_0$170 ==.
                                   9428 ;	FATFS\src\ff.c:2139: fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
      002EC1 90r00rDA         [24] 9429 	mov	dptr,#_check_fs_fs_65536_169
      002EC4 E0               [24] 9430 	movx	a,@dptr
      002EC5 FD               [12] 9431 	mov	r5,a
      002EC6 A3               [24] 9432 	inc	dptr
      002EC7 E0               [24] 9433 	movx	a,@dptr
      002EC8 FE               [12] 9434 	mov	r6,a
      002EC9 A3               [24] 9435 	inc	dptr
      002ECA E0               [24] 9436 	movx	a,@dptr
      002ECB FF               [12] 9437 	mov	r7,a
      002ECC 74 04            [12] 9438 	mov	a,#0x04
      002ECE 2D               [12] 9439 	add	a,r5
      002ECF FA               [12] 9440 	mov	r2,a
      002ED0 E4               [12] 9441 	clr	a
      002ED1 3E               [12] 9442 	addc	a,r6
      002ED2 FB               [12] 9443 	mov	r3,a
      002ED3 8F 04            [24] 9444 	mov	ar4,r7
      002ED5 8A 82            [24] 9445 	mov	dpl,r2
      002ED7 8B 83            [24] 9446 	mov	dph,r3
      002ED9 8C F0            [24] 9447 	mov	b,r4
      002EDB E4               [12] 9448 	clr	a
      002EDC 12r00r00         [24] 9449 	lcall	__gptrput
      002EDF 74 22            [12] 9450 	mov	a,#0x22
      002EE1 2D               [12] 9451 	add	a,r5
      002EE2 FA               [12] 9452 	mov	r2,a
      002EE3 E4               [12] 9453 	clr	a
      002EE4 3E               [12] 9454 	addc	a,r6
      002EE5 FB               [12] 9455 	mov	r3,a
      002EE6 8F 04            [24] 9456 	mov	ar4,r7
      002EE8 8A 82            [24] 9457 	mov	dpl,r2
      002EEA 8B 83            [24] 9458 	mov	dph,r3
      002EEC 8C F0            [24] 9459 	mov	b,r4
      002EEE 74 FF            [12] 9460 	mov	a,#0xff
      002EF0 12r00r00         [24] 9461 	lcall	__gptrput
      002EF3 A3               [24] 9462 	inc	dptr
      002EF4 12r00r00         [24] 9463 	lcall	__gptrput
      002EF7 A3               [24] 9464 	inc	dptr
      002EF8 12r00r00         [24] 9465 	lcall	__gptrput
      002EFB A3               [24] 9466 	inc	dptr
      002EFC 12r00r00         [24] 9467 	lcall	__gptrput
                           002EFF  9468 	C$ff.c$2140$1_0$170 ==.
                                   9469 ;	FATFS\src\ff.c:2140: if (move_window(fs, sect) != FR_OK)			/* Load boot record */
      002EFF 90r00rD6         [24] 9470 	mov	dptr,#_check_fs_PARM_2
      002F02 E0               [24] 9471 	movx	a,@dptr
      002F03 F9               [12] 9472 	mov	r1,a
      002F04 A3               [24] 9473 	inc	dptr
      002F05 E0               [24] 9474 	movx	a,@dptr
      002F06 FA               [12] 9475 	mov	r2,a
      002F07 A3               [24] 9476 	inc	dptr
      002F08 E0               [24] 9477 	movx	a,@dptr
      002F09 FB               [12] 9478 	mov	r3,a
      002F0A A3               [24] 9479 	inc	dptr
      002F0B E0               [24] 9480 	movx	a,@dptr
      002F0C FC               [12] 9481 	mov	r4,a
      002F0D 90r00r26         [24] 9482 	mov	dptr,#_move_window_PARM_2
      002F10 E9               [12] 9483 	mov	a,r1
      002F11 F0               [24] 9484 	movx	@dptr,a
      002F12 EA               [12] 9485 	mov	a,r2
      002F13 A3               [24] 9486 	inc	dptr
      002F14 F0               [24] 9487 	movx	@dptr,a
      002F15 EB               [12] 9488 	mov	a,r3
      002F16 A3               [24] 9489 	inc	dptr
      002F17 F0               [24] 9490 	movx	@dptr,a
      002F18 EC               [12] 9491 	mov	a,r4
      002F19 A3               [24] 9492 	inc	dptr
      002F1A F0               [24] 9493 	movx	@dptr,a
      002F1B 8D 82            [24] 9494 	mov	dpl,r5
      002F1D 8E 83            [24] 9495 	mov	dph,r6
      002F1F 8F F0            [24] 9496 	mov	b,r7
      002F21 78rB4            [12] 9497 	mov	r0,#_move_window
      002F23 79s01            [12] 9498 	mov	r1,#(_move_window >> 8)
      002F25 7As00            [12] 9499 	mov	r2,#(_move_window >> 16)
      002F27 12r00r00         [24] 9500 	lcall	__sdcc_banked_call
      002F2A E5 82            [12] 9501 	mov	a,dpl
      002F2C 60 06            [24] 9502 	jz	00102$
                           002F2E  9503 	C$ff.c$2141$1_0$170 ==.
                                   9504 ;	FATFS\src\ff.c:2141: return 3;
      002F2E 75 82 03         [24] 9505 	mov	dpl,#0x03
      002F31 02r00r00         [24] 9506 	ljmp	__sdcc_banked_ret
      002F34                       9507 00102$:
                           002F34  9508 	C$ff.c$2143$1_0$170 ==.
                                   9509 ;	FATFS\src\ff.c:2143: if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
      002F34 90r00rDA         [24] 9510 	mov	dptr,#_check_fs_fs_65536_169
      002F37 E0               [24] 9511 	movx	a,@dptr
      002F38 FD               [12] 9512 	mov	r5,a
      002F39 A3               [24] 9513 	inc	dptr
      002F3A E0               [24] 9514 	movx	a,@dptr
      002F3B FE               [12] 9515 	mov	r6,a
      002F3C A3               [24] 9516 	inc	dptr
      002F3D E0               [24] 9517 	movx	a,@dptr
      002F3E FF               [12] 9518 	mov	r7,a
      002F3F 74 24            [12] 9519 	mov	a,#0x24
      002F41 2D               [12] 9520 	add	a,r5
      002F42 F5*85            [12] 9521 	mov	_check_fs_sloc0_1_0,a
      002F44 74 02            [12] 9522 	mov	a,#0x02
      002F46 3E               [12] 9523 	addc	a,r6
      002F47 F5*86            [12] 9524 	mov	(_check_fs_sloc0_1_0 + 1),a
      002F49 8F*87            [24] 9525 	mov	(_check_fs_sloc0_1_0 + 2),r7
      002F4B 74 25            [12] 9526 	mov	a,#0x25
      002F4D 2D               [12] 9527 	add	a,r5
      002F4E F8               [12] 9528 	mov	r0,a
      002F4F 74 02            [12] 9529 	mov	a,#0x02
      002F51 3E               [12] 9530 	addc	a,r6
      002F52 F9               [12] 9531 	mov	r1,a
      002F53 8F 04            [24] 9532 	mov	ar4,r7
      002F55 88 82            [24] 9533 	mov	dpl,r0
      002F57 89 83            [24] 9534 	mov	dph,r1
      002F59 8C F0            [24] 9535 	mov	b,r4
      002F5B 12r00r00         [24] 9536 	lcall	__gptrget
      002F5E FC               [12] 9537 	mov	r4,a
      002F5F 78 00            [12] 9538 	mov	r0,#0x00
      002F61 85*85 82         [24] 9539 	mov	dpl,_check_fs_sloc0_1_0
      002F64 85*86 83         [24] 9540 	mov	dph,(_check_fs_sloc0_1_0 + 1)
      002F67 85*87 F0         [24] 9541 	mov	b,(_check_fs_sloc0_1_0 + 2)
      002F6A 12r00r00         [24] 9542 	lcall	__gptrget
      002F6D FB               [12] 9543 	mov	r3,a
      002F6E 7A 00            [12] 9544 	mov	r2,#0x00
      002F70 42 00            [12] 9545 	orl	ar0,a
      002F72 EA               [12] 9546 	mov	a,r2
      002F73 42 04            [12] 9547 	orl	ar4,a
      002F75 B8 55 05         [24] 9548 	cjne	r0,#0x55,00128$
      002F78 BC AA 02         [24] 9549 	cjne	r4,#0xaa,00128$
      002F7B 80 06            [24] 9550 	sjmp	00104$
      002F7D                       9551 00128$:
                           002F7D  9552 	C$ff.c$2144$1_0$170 ==.
                                   9553 ;	FATFS\src\ff.c:2144: return 2;
      002F7D 75 82 02         [24] 9554 	mov	dpl,#0x02
      002F80 02r00r00         [24] 9555 	ljmp	__sdcc_banked_ret
      002F83                       9556 00104$:
                           002F83  9557 	C$ff.c$2146$1_0$170 ==.
                                   9558 ;	FATFS\src\ff.c:2146: if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
      002F83 74 5C            [12] 9559 	mov	a,#0x5c
      002F85 2D               [12] 9560 	add	a,r5
      002F86 F5*85            [12] 9561 	mov	_check_fs_sloc0_1_0,a
      002F88 E4               [12] 9562 	clr	a
      002F89 3E               [12] 9563 	addc	a,r6
      002F8A F5*86            [12] 9564 	mov	(_check_fs_sloc0_1_0 + 1),a
      002F8C 8F*87            [24] 9565 	mov	(_check_fs_sloc0_1_0 + 2),r7
      002F8E 74 5F            [12] 9566 	mov	a,#0x5f
      002F90 2D               [12] 9567 	add	a,r5
      002F91 F8               [12] 9568 	mov	r0,a
      002F92 E4               [12] 9569 	clr	a
      002F93 3E               [12] 9570 	addc	a,r6
      002F94 F9               [12] 9571 	mov	r1,a
      002F95 8F 04            [24] 9572 	mov	ar4,r7
      002F97 88 82            [24] 9573 	mov	dpl,r0
      002F99 89 83            [24] 9574 	mov	dph,r1
      002F9B 8C F0            [24] 9575 	mov	b,r4
      002F9D 12r00r00         [24] 9576 	lcall	__gptrget
      002FA0 F8               [12] 9577 	mov	r0,a
      002FA1 7C 00            [12] 9578 	mov	r4,#0x00
      002FA3 88*8B            [24] 9579 	mov	(_check_fs_sloc1_1_0 + 3),r0
                                   9580 ;	1-genFromRTrack replaced	mov	_check_fs_sloc1_1_0,#0x00
      002FA5 8C*88            [24] 9581 	mov	_check_fs_sloc1_1_0,r4
                                   9582 ;	1-genFromRTrack replaced	mov	(_check_fs_sloc1_1_0 + 1),#0x00
      002FA7 8C*89            [24] 9583 	mov	(_check_fs_sloc1_1_0 + 1),r4
                                   9584 ;	1-genFromRTrack replaced	mov	(_check_fs_sloc1_1_0 + 2),#0x00
      002FA9 8C*8A            [24] 9585 	mov	(_check_fs_sloc1_1_0 + 2),r4
      002FAB 74 5E            [12] 9586 	mov	a,#0x5e
      002FAD 2D               [12] 9587 	add	a,r5
      002FAE F9               [12] 9588 	mov	r1,a
      002FAF E4               [12] 9589 	clr	a
      002FB0 3E               [12] 9590 	addc	a,r6
      002FB1 FB               [12] 9591 	mov	r3,a
      002FB2 8F 04            [24] 9592 	mov	ar4,r7
      002FB4 89 82            [24] 9593 	mov	dpl,r1
      002FB6 8B 83            [24] 9594 	mov	dph,r3
      002FB8 8C F0            [24] 9595 	mov	b,r4
      002FBA 12r00r00         [24] 9596 	lcall	__gptrget
      002FBD F9               [12] 9597 	mov	r1,a
      002FBE 7C 00            [12] 9598 	mov	r4,#0x00
      002FC0 8C 02            [24] 9599 	mov	ar2,r4
      002FC2 89 03            [24] 9600 	mov	ar3,r1
      002FC4 E4               [12] 9601 	clr	a
      002FC5 FC               [12] 9602 	mov	r4,a
      002FC6 42*88            [12] 9603 	orl	_check_fs_sloc1_1_0,a
      002FC8 EC               [12] 9604 	mov	a,r4
      002FC9 42*89            [12] 9605 	orl	(_check_fs_sloc1_1_0 + 1),a
      002FCB EB               [12] 9606 	mov	a,r3
      002FCC 42*8A            [12] 9607 	orl	(_check_fs_sloc1_1_0 + 2),a
      002FCE EA               [12] 9608 	mov	a,r2
      002FCF 42*8B            [12] 9609 	orl	(_check_fs_sloc1_1_0 + 3),a
      002FD1 74 5D            [12] 9610 	mov	a,#0x5d
      002FD3 2D               [12] 9611 	add	a,r5
      002FD4 F8               [12] 9612 	mov	r0,a
      002FD5 E4               [12] 9613 	clr	a
      002FD6 3E               [12] 9614 	addc	a,r6
      002FD7 FB               [12] 9615 	mov	r3,a
      002FD8 8F 04            [24] 9616 	mov	ar4,r7
      002FDA 88 82            [24] 9617 	mov	dpl,r0
      002FDC 8B 83            [24] 9618 	mov	dph,r3
      002FDE 8C F0            [24] 9619 	mov	b,r4
      002FE0 12r00r00         [24] 9620 	lcall	__gptrget
      002FE3 FC               [12] 9621 	mov	r4,a
      002FE4 E4               [12] 9622 	clr	a
      002FE5 F8               [12] 9623 	mov	r0,a
      002FE6 FB               [12] 9624 	mov	r3,a
      002FE7 FA               [12] 9625 	mov	r2,a
      002FE8 E5*88            [12] 9626 	mov	a,_check_fs_sloc1_1_0
      002FEA 42 00            [12] 9627 	orl	ar0,a
      002FEC E5*89            [12] 9628 	mov	a,(_check_fs_sloc1_1_0 + 1)
      002FEE 42 04            [12] 9629 	orl	ar4,a
      002FF0 E5*8A            [12] 9630 	mov	a,(_check_fs_sloc1_1_0 + 2)
      002FF2 42 03            [12] 9631 	orl	ar3,a
      002FF4 E5*8B            [12] 9632 	mov	a,(_check_fs_sloc1_1_0 + 3)
      002FF6 42 02            [12] 9633 	orl	ar2,a
      002FF8 85*85 82         [24] 9634 	mov	dpl,_check_fs_sloc0_1_0
      002FFB 85*86 83         [24] 9635 	mov	dph,(_check_fs_sloc0_1_0 + 1)
      002FFE 85*87 F0         [24] 9636 	mov	b,(_check_fs_sloc0_1_0 + 2)
      003001 12r00r00         [24] 9637 	lcall	__gptrget
      003004 F9               [12] 9638 	mov	r1,a
      003005 C0 05            [24] 9639 	push	ar5
      003007 C0 06            [24] 9640 	push	ar6
      003009 C0 07            [24] 9641 	push	ar7
      00300B E4               [12] 9642 	clr	a
      00300C FD               [12] 9643 	mov	r5,a
      00300D FE               [12] 9644 	mov	r6,a
      00300E FF               [12] 9645 	mov	r7,a
      00300F E9               [12] 9646 	mov	a,r1
      003010 42 00            [12] 9647 	orl	ar0,a
      003012 ED               [12] 9648 	mov	a,r5
      003013 42 04            [12] 9649 	orl	ar4,a
      003015 EE               [12] 9650 	mov	a,r6
      003016 42 03            [12] 9651 	orl	ar3,a
      003018 EF               [12] 9652 	mov	a,r7
      003019 42 02            [12] 9653 	orl	ar2,a
      00301B 7A 00            [12] 9654 	mov	r2,#0x00
      00301D B8 46 0B         [24] 9655 	cjne	r0,#0x46,00129$
      003020 BC 41 08         [24] 9656 	cjne	r4,#0x41,00129$
      003023 BB 54 05         [24] 9657 	cjne	r3,#0x54,00129$
      003026 BA 00 02         [24] 9658 	cjne	r2,#0x00,00129$
      003029 80 08            [24] 9659 	sjmp	00130$
      00302B                       9660 00129$:
      00302B D0 07            [24] 9661 	pop	ar7
      00302D D0 06            [24] 9662 	pop	ar6
      00302F D0 05            [24] 9663 	pop	ar5
      003031 80 0C            [24] 9664 	sjmp	00106$
      003033                       9665 00130$:
      003033 D0 07            [24] 9666 	pop	ar7
      003035 D0 06            [24] 9667 	pop	ar6
      003037 D0 05            [24] 9668 	pop	ar5
                           003039  9669 	C$ff.c$2147$1_0$170 ==.
                                   9670 ;	FATFS\src\ff.c:2147: return 0;
      003039 75 82 00         [24] 9671 	mov	dpl,#0x00
      00303C 02r00r00         [24] 9672 	ljmp	__sdcc_banked_ret
      00303F                       9673 00106$:
                           00303F  9674 	C$ff.c$2148$1_0$170 ==.
                                   9675 ;	FATFS\src\ff.c:2148: if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
      00303F 74 78            [12] 9676 	mov	a,#0x78
      003041 2D               [12] 9677 	add	a,r5
      003042 F5*88            [12] 9678 	mov	_check_fs_sloc1_1_0,a
      003044 E4               [12] 9679 	clr	a
      003045 3E               [12] 9680 	addc	a,r6
      003046 F5*89            [12] 9681 	mov	(_check_fs_sloc1_1_0 + 1),a
      003048 8F*8A            [24] 9682 	mov	(_check_fs_sloc1_1_0 + 2),r7
      00304A 74 7B            [12] 9683 	mov	a,#0x7b
      00304C 2D               [12] 9684 	add	a,r5
      00304D F8               [12] 9685 	mov	r0,a
      00304E E4               [12] 9686 	clr	a
      00304F 3E               [12] 9687 	addc	a,r6
      003050 F9               [12] 9688 	mov	r1,a
      003051 8F 04            [24] 9689 	mov	ar4,r7
      003053 88 82            [24] 9690 	mov	dpl,r0
      003055 89 83            [24] 9691 	mov	dph,r1
      003057 8C F0            [24] 9692 	mov	b,r4
      003059 12r00r00         [24] 9693 	lcall	__gptrget
      00305C F8               [12] 9694 	mov	r0,a
      00305D 7C 00            [12] 9695 	mov	r4,#0x00
      00305F 88*8F            [24] 9696 	mov	(_check_fs_sloc2_1_0 + 3),r0
                                   9697 ;	1-genFromRTrack replaced	mov	_check_fs_sloc2_1_0,#0x00
      003061 8C*8C            [24] 9698 	mov	_check_fs_sloc2_1_0,r4
                                   9699 ;	1-genFromRTrack replaced	mov	(_check_fs_sloc2_1_0 + 1),#0x00
      003063 8C*8D            [24] 9700 	mov	(_check_fs_sloc2_1_0 + 1),r4
                                   9701 ;	1-genFromRTrack replaced	mov	(_check_fs_sloc2_1_0 + 2),#0x00
      003065 8C*8E            [24] 9702 	mov	(_check_fs_sloc2_1_0 + 2),r4
      003067 74 7A            [12] 9703 	mov	a,#0x7a
      003069 2D               [12] 9704 	add	a,r5
      00306A F9               [12] 9705 	mov	r1,a
      00306B E4               [12] 9706 	clr	a
      00306C 3E               [12] 9707 	addc	a,r6
      00306D FB               [12] 9708 	mov	r3,a
      00306E 8F 04            [24] 9709 	mov	ar4,r7
      003070 89 82            [24] 9710 	mov	dpl,r1
      003072 8B 83            [24] 9711 	mov	dph,r3
      003074 8C F0            [24] 9712 	mov	b,r4
      003076 12r00r00         [24] 9713 	lcall	__gptrget
      003079 F9               [12] 9714 	mov	r1,a
      00307A 7C 00            [12] 9715 	mov	r4,#0x00
      00307C 8C 02            [24] 9716 	mov	ar2,r4
      00307E 89 03            [24] 9717 	mov	ar3,r1
      003080 E4               [12] 9718 	clr	a
      003081 F9               [12] 9719 	mov	r1,a
      003082 FC               [12] 9720 	mov	r4,a
      003083 E5*8C            [12] 9721 	mov	a,_check_fs_sloc2_1_0
      003085 42 01            [12] 9722 	orl	ar1,a
      003087 E5*8D            [12] 9723 	mov	a,(_check_fs_sloc2_1_0 + 1)
      003089 42 04            [12] 9724 	orl	ar4,a
      00308B E5*8E            [12] 9725 	mov	a,(_check_fs_sloc2_1_0 + 2)
      00308D 42 03            [12] 9726 	orl	ar3,a
      00308F E5*8F            [12] 9727 	mov	a,(_check_fs_sloc2_1_0 + 3)
      003091 42 02            [12] 9728 	orl	ar2,a
      003093 74 79            [12] 9729 	mov	a,#0x79
      003095 2D               [12] 9730 	add	a,r5
      003096 FD               [12] 9731 	mov	r5,a
      003097 E4               [12] 9732 	clr	a
      003098 3E               [12] 9733 	addc	a,r6
      003099 FE               [12] 9734 	mov	r6,a
      00309A 8D 82            [24] 9735 	mov	dpl,r5
      00309C 8E 83            [24] 9736 	mov	dph,r6
      00309E 8F F0            [24] 9737 	mov	b,r7
      0030A0 12r00r00         [24] 9738 	lcall	__gptrget
      0030A3 FF               [12] 9739 	mov	r7,a
      0030A4 7D 00            [12] 9740 	mov	r5,#0x00
      0030A6 8F 00            [24] 9741 	mov	ar0,r7
      0030A8 E4               [12] 9742 	clr	a
      0030A9 FE               [12] 9743 	mov	r6,a
      0030AA FF               [12] 9744 	mov	r7,a
      0030AB ED               [12] 9745 	mov	a,r5
      0030AC 42 01            [12] 9746 	orl	ar1,a
      0030AE E8               [12] 9747 	mov	a,r0
      0030AF 42 04            [12] 9748 	orl	ar4,a
      0030B1 EE               [12] 9749 	mov	a,r6
      0030B2 42 03            [12] 9750 	orl	ar3,a
      0030B4 EF               [12] 9751 	mov	a,r7
      0030B5 42 02            [12] 9752 	orl	ar2,a
      0030B7 85*88 82         [24] 9753 	mov	dpl,_check_fs_sloc1_1_0
      0030BA 85*89 83         [24] 9754 	mov	dph,(_check_fs_sloc1_1_0 + 1)
      0030BD 85*8A F0         [24] 9755 	mov	b,(_check_fs_sloc1_1_0 + 2)
      0030C0 12r00r00         [24] 9756 	lcall	__gptrget
      0030C3 F8               [12] 9757 	mov	r0,a
      0030C4 E4               [12] 9758 	clr	a
      0030C5 FD               [12] 9759 	mov	r5,a
      0030C6 FE               [12] 9760 	mov	r6,a
      0030C7 FF               [12] 9761 	mov	r7,a
      0030C8 E8               [12] 9762 	mov	a,r0
      0030C9 42 01            [12] 9763 	orl	ar1,a
      0030CB ED               [12] 9764 	mov	a,r5
      0030CC 42 04            [12] 9765 	orl	ar4,a
      0030CE EE               [12] 9766 	mov	a,r6
      0030CF 42 03            [12] 9767 	orl	ar3,a
      0030D1 EF               [12] 9768 	mov	a,r7
      0030D2 42 02            [12] 9769 	orl	ar2,a
      0030D4 7A 00            [12] 9770 	mov	r2,#0x00
      0030D6 B9 46 0E         [24] 9771 	cjne	r1,#0x46,00108$
      0030D9 BC 41 0B         [24] 9772 	cjne	r4,#0x41,00108$
      0030DC BB 54 08         [24] 9773 	cjne	r3,#0x54,00108$
      0030DF BA 00 05         [24] 9774 	cjne	r2,#0x00,00108$
                           0030E2  9775 	C$ff.c$2149$1_0$170 ==.
                                   9776 ;	FATFS\src\ff.c:2149: return 0;
      0030E2 75 82 00         [24] 9777 	mov	dpl,#0x00
      0030E5 80 03            [24] 9778 	sjmp	00109$
      0030E7                       9779 00108$:
                           0030E7  9780 	C$ff.c$2151$1_0$170 ==.
                                   9781 ;	FATFS\src\ff.c:2151: return 1;
      0030E7 75 82 01         [24] 9782 	mov	dpl,#0x01
      0030EA                       9783 00109$:
                           0030EA  9784 	C$ff.c$2152$1_0$170 ==.
                                   9785 ;	FATFS\src\ff.c:2152: }
                           0030EA  9786 	C$ff.c$2152$1_0$170 ==.
                           0030EA  9787 	XFff$check_fs$0$0 ==.
      0030EA 02r00r00         [24] 9788 	ljmp	__sdcc_banked_ret
                                   9789 ;------------------------------------------------------------
                                   9790 ;Allocation info for local variables in function 'find_volume'
                                   9791 ;------------------------------------------------------------
                                   9792 ;sloc0                     Allocated with name '_find_volume_sloc0_1_0'
                                   9793 ;sloc1                     Allocated with name '_find_volume_sloc1_1_0'
                                   9794 ;sloc2                     Allocated with name '_find_volume_sloc2_1_0'
                                   9795 ;sloc3                     Allocated with name '_find_volume_sloc3_1_0'
                                   9796 ;sloc4                     Allocated with name '_find_volume_sloc4_1_0'
                                   9797 ;sloc5                     Allocated with name '_find_volume_sloc5_1_0'
                                   9798 ;sloc6                     Allocated with name '_find_volume_sloc6_1_0'
                                   9799 ;sloc7                     Allocated with name '_find_volume_sloc7_1_0'
                                   9800 ;sloc8                     Allocated with name '_find_volume_sloc8_1_0'
                                   9801 ;sloc9                     Allocated with name '_find_volume_sloc9_1_0'
                                   9802 ;path                      Allocated with name '_find_volume_PARM_2'
                                   9803 ;wmode                     Allocated with name '_find_volume_PARM_3'
                                   9804 ;rfs                       Allocated with name '_find_volume_rfs_65536_171'
                                   9805 ;fmt                       Allocated with name '_find_volume_fmt_65536_172'
                                   9806 ;vol                       Allocated with name '_find_volume_vol_65536_172'
                                   9807 ;stat                      Allocated with name '_find_volume_stat_65536_172'
                                   9808 ;bsect                     Allocated with name '_find_volume_bsect_65536_172'
                                   9809 ;fasize                    Allocated with name '_find_volume_fasize_65536_172'
                                   9810 ;tsect                     Allocated with name '_find_volume_tsect_65536_172'
                                   9811 ;sysect                    Allocated with name '_find_volume_sysect_65536_172'
                                   9812 ;nclst                     Allocated with name '_find_volume_nclst_65536_172'
                                   9813 ;szbfat                    Allocated with name '_find_volume_szbfat_65536_172'
                                   9814 ;nrsv                      Allocated with name '_find_volume_nrsv_65536_172'
                                   9815 ;fs                        Allocated with name '_find_volume_fs_65536_172'
                                   9816 ;i                         Allocated with name '_find_volume_i_131072_175'
                                   9817 ;br                        Allocated with name '_find_volume_br_131072_175'
                                   9818 ;pt                        Allocated with name '_find_volume_pt_262144_177'
                                   9819 ;------------------------------------------------------------
                           0030ED  9820 	Fff$find_volume$0$0 ==.
                           0030ED  9821 	C$ff.c$2162$1_0$172 ==.
                                   9822 ;	FATFS\src\ff.c:2162: FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
                                   9823 ;	-----------------------------------------
                                   9824 ;	 function find_volume
                                   9825 ;	-----------------------------------------
      0030ED                       9826 _find_volume:
      0030ED AF F0            [24] 9827 	mov	r7,b
      0030EF AE 83            [24] 9828 	mov	r6,dph
      0030F1 E5 82            [12] 9829 	mov	a,dpl
      0030F3 90r00rE1         [24] 9830 	mov	dptr,#_find_volume_rfs_65536_171
      0030F6 F0               [24] 9831 	movx	@dptr,a
      0030F7 EE               [12] 9832 	mov	a,r6
      0030F8 A3               [24] 9833 	inc	dptr
      0030F9 F0               [24] 9834 	movx	@dptr,a
      0030FA EF               [12] 9835 	mov	a,r7
      0030FB A3               [24] 9836 	inc	dptr
      0030FC F0               [24] 9837 	movx	@dptr,a
                           0030FD  9838 	C$ff.c$2177$1_0$172 ==.
                                   9839 ;	FATFS\src\ff.c:2177: *rfs = 0;
      0030FD 90r00rE1         [24] 9840 	mov	dptr,#_find_volume_rfs_65536_171
      003100 E0               [24] 9841 	movx	a,@dptr
      003101 FD               [12] 9842 	mov	r5,a
      003102 A3               [24] 9843 	inc	dptr
      003103 E0               [24] 9844 	movx	a,@dptr
      003104 FE               [12] 9845 	mov	r6,a
      003105 A3               [24] 9846 	inc	dptr
      003106 E0               [24] 9847 	movx	a,@dptr
      003107 FF               [12] 9848 	mov	r7,a
      003108 8D 82            [24] 9849 	mov	dpl,r5
      00310A 8E 83            [24] 9850 	mov	dph,r6
      00310C 8F F0            [24] 9851 	mov	b,r7
      00310E E4               [12] 9852 	clr	a
      00310F 12r00r00         [24] 9853 	lcall	__gptrput
      003112 A3               [24] 9854 	inc	dptr
      003113 12r00r00         [24] 9855 	lcall	__gptrput
      003116 A3               [24] 9856 	inc	dptr
      003117 12r00r00         [24] 9857 	lcall	__gptrput
                           00311A  9858 	C$ff.c$2178$1_0$172 ==.
                                   9859 ;	FATFS\src\ff.c:2178: vol = get_ldnumber(path);
      00311A 90r00rDD         [24] 9860 	mov	dptr,#_find_volume_PARM_2
      00311D E0               [24] 9861 	movx	a,@dptr
      00311E FA               [12] 9862 	mov	r2,a
      00311F A3               [24] 9863 	inc	dptr
      003120 E0               [24] 9864 	movx	a,@dptr
      003121 FB               [12] 9865 	mov	r3,a
      003122 A3               [24] 9866 	inc	dptr
      003123 E0               [24] 9867 	movx	a,@dptr
      003124 FC               [12] 9868 	mov	r4,a
      003125 8A 82            [24] 9869 	mov	dpl,r2
      003127 8B 83            [24] 9870 	mov	dph,r3
      003129 8C F0            [24] 9871 	mov	b,r4
      00312B C0 07            [24] 9872 	push	ar7
      00312D C0 06            [24] 9873 	push	ar6
      00312F C0 05            [24] 9874 	push	ar5
      003131 78r77            [12] 9875 	mov	r0,#_get_ldnumber
      003133 79s2D            [12] 9876 	mov	r1,#(_get_ldnumber >> 8)
      003135 7As00            [12] 9877 	mov	r2,#(_get_ldnumber >> 16)
      003137 12r00r00         [24] 9878 	lcall	__sdcc_banked_call
      00313A AB 82            [24] 9879 	mov	r3,dpl
      00313C AC 83            [24] 9880 	mov	r4,dph
      00313E D0 05            [24] 9881 	pop	ar5
      003140 D0 06            [24] 9882 	pop	ar6
      003142 D0 07            [24] 9883 	pop	ar7
                           003144  9884 	C$ff.c$2179$1_0$172 ==.
                                   9885 ;	FATFS\src\ff.c:2179: if (vol < 0) return FR_INVALID_DRIVE;
      003144 EC               [12] 9886 	mov	a,r4
      003145 30 E7 06         [24] 9887 	jnb	acc.7,00102$
      003148 75 82 0B         [24] 9888 	mov	dpl,#0x0b
      00314B 02r00r00         [24] 9889 	ljmp	__sdcc_banked_ret
      00314E                       9890 00102$:
                           00314E  9891 	C$ff.c$2182$1_0$172 ==.
                                   9892 ;	FATFS\src\ff.c:2182: fs = FatFs[vol];					/* Get pointer to the file system object */
      00314E 90r00r00         [24] 9893 	mov	dptr,#__mulint_PARM_2
      003151 EB               [12] 9894 	mov	a,r3
      003152 F0               [24] 9895 	movx	@dptr,a
      003153 EC               [12] 9896 	mov	a,r4
      003154 A3               [24] 9897 	inc	dptr
      003155 F0               [24] 9898 	movx	@dptr,a
      003156 90 00 03         [24] 9899 	mov	dptr,#0x0003
      003159 C0 07            [24] 9900 	push	ar7
      00315B C0 06            [24] 9901 	push	ar6
      00315D C0 05            [24] 9902 	push	ar5
      00315F C0 04            [24] 9903 	push	ar4
      003161 C0 03            [24] 9904 	push	ar3
      003163 12r00r00         [24] 9905 	lcall	__mulint
      003166 A9 82            [24] 9906 	mov	r1,dpl
      003168 AA 83            [24] 9907 	mov	r2,dph
      00316A D0 03            [24] 9908 	pop	ar3
      00316C D0 04            [24] 9909 	pop	ar4
      00316E D0 05            [24] 9910 	pop	ar5
      003170 D0 06            [24] 9911 	pop	ar6
      003172 D0 07            [24] 9912 	pop	ar7
      003174 E9               [12] 9913 	mov	a,r1
      003175 24r00            [12] 9914 	add	a,#_FatFs
      003177 F5 82            [12] 9915 	mov	dpl,a
      003179 EA               [12] 9916 	mov	a,r2
      00317A 34s00            [12] 9917 	addc	a,#(_FatFs >> 8)
      00317C F5 83            [12] 9918 	mov	dph,a
      00317E E0               [24] 9919 	movx	a,@dptr
      00317F F8               [12] 9920 	mov	r0,a
      003180 A3               [24] 9921 	inc	dptr
      003181 E0               [24] 9922 	movx	a,@dptr
      003182 F9               [12] 9923 	mov	r1,a
      003183 A3               [24] 9924 	inc	dptr
      003184 E0               [24] 9925 	movx	a,@dptr
      003185 FA               [12] 9926 	mov	r2,a
                           003186  9927 	C$ff.c$2183$1_0$172 ==.
                                   9928 ;	FATFS\src\ff.c:2183: if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
      003186 E8               [12] 9929 	mov	a,r0
      003187 49               [12] 9930 	orl	a,r1
      003188 70 06            [24] 9931 	jnz	00104$
      00318A 75 82 0C         [24] 9932 	mov	dpl,#0x0c
      00318D 02r00r00         [24] 9933 	ljmp	__sdcc_banked_ret
      003190                       9934 00104$:
                           003190  9935 	C$ff.c$2186$1_0$172 ==.
                                   9936 ;	FATFS\src\ff.c:2186: *rfs = fs;							/* Return pointer to the file system object */
      003190 8D 82            [24] 9937 	mov	dpl,r5
      003192 8E 83            [24] 9938 	mov	dph,r6
      003194 8F F0            [24] 9939 	mov	b,r7
      003196 E8               [12] 9940 	mov	a,r0
      003197 12r00r00         [24] 9941 	lcall	__gptrput
      00319A A3               [24] 9942 	inc	dptr
      00319B E9               [12] 9943 	mov	a,r1
      00319C 12r00r00         [24] 9944 	lcall	__gptrput
      00319F A3               [24] 9945 	inc	dptr
      0031A0 EA               [12] 9946 	mov	a,r2
      0031A1 12r00r00         [24] 9947 	lcall	__gptrput
                           0031A4  9948 	C$ff.c$2188$1_0$172 ==.
                                   9949 ;	FATFS\src\ff.c:2188: if (fs->fs_type) {					/* If the volume has been mounted */
      0031A4 88 82            [24] 9950 	mov	dpl,r0
      0031A6 89 83            [24] 9951 	mov	dph,r1
      0031A8 8A F0            [24] 9952 	mov	b,r2
      0031AA 12r00r00         [24] 9953 	lcall	__gptrget
      0031AD 60 3C            [24] 9954 	jz	00112$
                           0031AF  9955 	C$ff.c$2189$2_0$173 ==.
                                   9956 ;	FATFS\src\ff.c:2189: stat = disk_status(fs->drv);
      0031AF 74 01            [12] 9957 	mov	a,#0x01
      0031B1 28               [12] 9958 	add	a,r0
      0031B2 FD               [12] 9959 	mov	r5,a
      0031B3 E4               [12] 9960 	clr	a
      0031B4 39               [12] 9961 	addc	a,r1
      0031B5 FE               [12] 9962 	mov	r6,a
      0031B6 8A 07            [24] 9963 	mov	ar7,r2
      0031B8 8D 82            [24] 9964 	mov	dpl,r5
      0031BA 8E 83            [24] 9965 	mov	dph,r6
      0031BC 8F F0            [24] 9966 	mov	b,r7
      0031BE 12r00r00         [24] 9967 	lcall	__gptrget
      0031C1 F5 82            [12] 9968 	mov	dpl,a
      0031C3 C0 04            [24] 9969 	push	ar4
      0031C5 C0 03            [24] 9970 	push	ar3
      0031C7 C0 02            [24] 9971 	push	ar2
      0031C9 C0 01            [24] 9972 	push	ar1
      0031CB C0 00            [24] 9973 	push	ar0
      0031CD 78r00            [12] 9974 	mov	r0,#_disk_status
      0031CF 79s00            [12] 9975 	mov	r1,#(_disk_status >> 8)
      0031D1 7As00            [12] 9976 	mov	r2,#(_disk_status >> 16)
      0031D3 12r00r00         [24] 9977 	lcall	__sdcc_banked_call
      0031D6 E5 82            [12] 9978 	mov	a,dpl
      0031D8 D0 00            [24] 9979 	pop	ar0
      0031DA D0 01            [24] 9980 	pop	ar1
      0031DC D0 02            [24] 9981 	pop	ar2
      0031DE D0 03            [24] 9982 	pop	ar3
      0031E0 D0 04            [24] 9983 	pop	ar4
                           0031E2  9984 	C$ff.c$2190$2_0$173 ==.
                                   9985 ;	FATFS\src\ff.c:2190: if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
      0031E2 20 E0 06         [24] 9986 	jb	acc.0,00112$
                           0031E5  9987 	C$ff.c$2193$3_0$174 ==.
                                   9988 ;	FATFS\src\ff.c:2193: return FR_OK;				/* The file system object is valid */
      0031E5 75 82 00         [24] 9989 	mov	dpl,#0x00
      0031E8 02r00r00         [24] 9990 	ljmp	__sdcc_banked_ret
      0031EB                       9991 00112$:
                           0031EB  9992 	C$ff.c$2200$1_0$172 ==.
                                   9993 ;	FATFS\src\ff.c:2200: fs->fs_type = 0;					/* Clear the file system object */
      0031EB 88 82            [24] 9994 	mov	dpl,r0
      0031ED 89 83            [24] 9995 	mov	dph,r1
      0031EF 8A F0            [24] 9996 	mov	b,r2
      0031F1 E4               [12] 9997 	clr	a
      0031F2 12r00r00         [24] 9998 	lcall	__gptrput
                           0031F5  9999 	C$ff.c$2201$1_0$172 ==.
                                  10000 ;	FATFS\src\ff.c:2201: fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
      0031F5 04               [12]10001 	inc	a
      0031F6 28               [12]10002 	add	a,r0
      0031F7 FD               [12]10003 	mov	r5,a
      0031F8 E4               [12]10004 	clr	a
      0031F9 39               [12]10005 	addc	a,r1
      0031FA FE               [12]10006 	mov	r6,a
      0031FB 8A 07            [24]10007 	mov	ar7,r2
      0031FD 8D 82            [24]10008 	mov	dpl,r5
      0031FF 8E 83            [24]10009 	mov	dph,r6
      003201 8F F0            [24]10010 	mov	b,r7
      003203 EB               [12]10011 	mov	a,r3
      003204 12r00r00         [24]10012 	lcall	__gptrput
                           003207 10013 	C$ff.c$2202$1_0$172 ==.
                                  10014 ;	FATFS\src\ff.c:2202: stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
      003207 8B 82            [24]10015 	mov	dpl,r3
      003209 C0 02            [24]10016 	push	ar2
      00320B C0 01            [24]10017 	push	ar1
      00320D C0 00            [24]10018 	push	ar0
      00320F 78r00            [12]10019 	mov	r0,#_disk_initialize
      003211 79s00            [12]10020 	mov	r1,#(_disk_initialize >> 8)
      003213 7As00            [12]10021 	mov	r2,#(_disk_initialize >> 16)
      003215 12r00r00         [24]10022 	lcall	__sdcc_banked_call
      003218 E5 82            [12]10023 	mov	a,dpl
      00321A D0 00            [24]10024 	pop	ar0
      00321C D0 01            [24]10025 	pop	ar1
      00321E D0 02            [24]10026 	pop	ar2
                           003220 10027 	C$ff.c$2203$1_0$172 ==.
                                  10028 ;	FATFS\src\ff.c:2203: if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
      003220 30 E0 06         [24]10029 	jnb	acc.0,00116$
                           003223 10030 	C$ff.c$2204$1_0$172 ==.
                                  10031 ;	FATFS\src\ff.c:2204: return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
      003223 75 82 03         [24]10032 	mov	dpl,#0x03
      003226 02r00r00         [24]10033 	ljmp	__sdcc_banked_ret
                           003229 10034 	C$ff.c$2206$1_0$172 ==.
                                  10035 ;	FATFS\src\ff.c:2206: return FR_WRITE_PROTECTED;
      003229                      10036 00116$:
                           003229 10037 	C$ff.c$2212$1_0$172 ==.
                                  10038 ;	FATFS\src\ff.c:2212: bsect = 0;
      003229 90r00rE5         [24]10039 	mov	dptr,#_find_volume_bsect_65536_172
      00322C E4               [12]10040 	clr	a
      00322D F0               [24]10041 	movx	@dptr,a
      00322E A3               [24]10042 	inc	dptr
      00322F F0               [24]10043 	movx	@dptr,a
      003230 A3               [24]10044 	inc	dptr
      003231 F0               [24]10045 	movx	@dptr,a
      003232 A3               [24]10046 	inc	dptr
      003233 F0               [24]10047 	movx	@dptr,a
                           003234 10048 	C$ff.c$2213$1_0$172 ==.
                                  10049 ;	FATFS\src\ff.c:2213: fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
      003234 90r00rD6         [24]10050 	mov	dptr,#_check_fs_PARM_2
      003237 F0               [24]10051 	movx	@dptr,a
      003238 A3               [24]10052 	inc	dptr
      003239 F0               [24]10053 	movx	@dptr,a
      00323A A3               [24]10054 	inc	dptr
      00323B F0               [24]10055 	movx	@dptr,a
      00323C A3               [24]10056 	inc	dptr
      00323D F0               [24]10057 	movx	@dptr,a
      00323E 88 82            [24]10058 	mov	dpl,r0
      003240 89 83            [24]10059 	mov	dph,r1
      003242 8A F0            [24]10060 	mov	b,r2
      003244 C0 02            [24]10061 	push	ar2
      003246 C0 01            [24]10062 	push	ar1
      003248 C0 00            [24]10063 	push	ar0
      00324A 78rB1            [12]10064 	mov	r0,#_check_fs
      00324C 79s2E            [12]10065 	mov	r1,#(_check_fs >> 8)
      00324E 7As00            [12]10066 	mov	r2,#(_check_fs >> 16)
      003250 12r00r00         [24]10067 	lcall	__sdcc_banked_call
      003253 AF 82            [24]10068 	mov	r7,dpl
      003255 D0 00            [24]10069 	pop	ar0
      003257 D0 01            [24]10070 	pop	ar1
      003259 D0 02            [24]10071 	pop	ar2
      00325B 90r00rE4         [24]10072 	mov	dptr,#_find_volume_fmt_65536_172
      00325E EF               [12]10073 	mov	a,r7
      00325F F0               [24]10074 	movx	@dptr,a
                           003260 10075 	C$ff.c$2214$1_0$172 ==.
                                  10076 ;	FATFS\src\ff.c:2214: if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
      003260 BF 01 02         [24]10077 	cjne	r7,#0x01,00310$
      003263 80 03            [24]10078 	sjmp	00311$
      003265                      10079 00310$:
      003265 02r34r2E         [24]10080 	ljmp	00128$
      003268                      10081 00311$:
                           003268 10082 	C$ff.c$2218$4_0$177 ==.
                                  10083 ;	FATFS\src\ff.c:2218: for (i = 0; i < 4; i++) {			/* Get partition offset */
      003268 74 26            [12]10084 	mov	a,#0x26
      00326A 28               [12]10085 	add	a,r0
      00326B FD               [12]10086 	mov	r5,a
      00326C E4               [12]10087 	clr	a
      00326D 39               [12]10088 	addc	a,r1
      00326E FE               [12]10089 	mov	r6,a
      00326F 8A 07            [24]10090 	mov	ar7,r2
      003271 74 BE            [12]10091 	mov	a,#0xbe
      003273 2D               [12]10092 	add	a,r5
      003274 FD               [12]10093 	mov	r5,a
      003275 74 01            [12]10094 	mov	a,#0x01
      003277 3E               [12]10095 	addc	a,r6
      003278 FE               [12]10096 	mov	r6,a
      003279 E4               [12]10097 	clr	a
      00327A F5*95            [12]10098 	mov	_find_volume_sloc2_1_0,a
      00327C F5*96            [12]10099 	mov	(_find_volume_sloc2_1_0 + 1),a
      00327E                      10100 00168$:
                           00327E 10101 	C$ff.c$2219$1_0$172 ==.
                                  10102 ;	FATFS\src\ff.c:2219: BYTE *pt = fs->win+MBR_Table + i * SZ_PTE;
      00327E C0 00            [24]10103 	push	ar0
      003280 C0 01            [24]10104 	push	ar1
      003282 C0 02            [24]10105 	push	ar2
      003284 A9*95            [24]10106 	mov	r1,_find_volume_sloc2_1_0
      003286 E5*96            [12]10107 	mov	a,(_find_volume_sloc2_1_0 + 1)
      003288 C4               [12]10108 	swap	a
      003289 54 F0            [12]10109 	anl	a,#0xf0
      00328B C9               [12]10110 	xch	a,r1
      00328C C4               [12]10111 	swap	a
      00328D C9               [12]10112 	xch	a,r1
      00328E 69               [12]10113 	xrl	a,r1
      00328F C9               [12]10114 	xch	a,r1
      003290 54 F0            [12]10115 	anl	a,#0xf0
      003292 C9               [12]10116 	xch	a,r1
      003293 69               [12]10117 	xrl	a,r1
      003294 FA               [12]10118 	mov	r2,a
      003295 E9               [12]10119 	mov	a,r1
      003296 2D               [12]10120 	add	a,r5
      003297 F5*90            [12]10121 	mov	_find_volume_sloc0_1_0,a
      003299 EA               [12]10122 	mov	a,r2
      00329A 3E               [12]10123 	addc	a,r6
      00329B F5*91            [12]10124 	mov	(_find_volume_sloc0_1_0 + 1),a
      00329D 8F*92            [24]10125 	mov	(_find_volume_sloc0_1_0 + 2),r7
                           00329F 10126 	C$ff.c$2220$4_0$177 ==.
                                  10127 ;	FATFS\src\ff.c:2220: br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
      00329F E5*95            [12]10128 	mov	a,_find_volume_sloc2_1_0
      0032A1 25*95            [12]10129 	add	a,_find_volume_sloc2_1_0
      0032A3 F9               [12]10130 	mov	r1,a
      0032A4 E5*96            [12]10131 	mov	a,(_find_volume_sloc2_1_0 + 1)
      0032A6 33               [12]10132 	rlc	a
      0032A7 FA               [12]10133 	mov	r2,a
      0032A8 E9               [12]10134 	mov	a,r1
      0032A9 29               [12]10135 	add	a,r1
      0032AA F9               [12]10136 	mov	r1,a
      0032AB EA               [12]10137 	mov	a,r2
      0032AC 33               [12]10138 	rlc	a
      0032AD FA               [12]10139 	mov	r2,a
      0032AE E9               [12]10140 	mov	a,r1
      0032AF 24rF5            [12]10141 	add	a,#_find_volume_br_131072_175
      0032B1 F5*93            [12]10142 	mov	_find_volume_sloc1_1_0,a
      0032B3 EA               [12]10143 	mov	a,r2
      0032B4 34s00            [12]10144 	addc	a,#(_find_volume_br_131072_175 >> 8)
      0032B6 F5*94            [12]10145 	mov	(_find_volume_sloc1_1_0 + 1),a
      0032B8 74 04            [12]10146 	mov	a,#0x04
      0032BA 25*90            [12]10147 	add	a,_find_volume_sloc0_1_0
      0032BC F8               [12]10148 	mov	r0,a
      0032BD E4               [12]10149 	clr	a
      0032BE 35*91            [12]10150 	addc	a,(_find_volume_sloc0_1_0 + 1)
      0032C0 F9               [12]10151 	mov	r1,a
      0032C1 AA*92            [24]10152 	mov	r2,(_find_volume_sloc0_1_0 + 2)
      0032C3 88 82            [24]10153 	mov	dpl,r0
      0032C5 89 83            [24]10154 	mov	dph,r1
      0032C7 8A F0            [24]10155 	mov	b,r2
      0032C9 12r00r00         [24]10156 	lcall	__gptrget
      0032CC D0 02            [24]10157 	pop	ar2
      0032CE D0 01            [24]10158 	pop	ar1
      0032D0 D0 00            [24]10159 	pop	ar0
      0032D2 70 03            [24]10160 	jnz	00312$
      0032D4 02r33r5B         [24]10161 	ljmp	00172$
      0032D7                      10162 00312$:
      0032D7 C0 05            [24]10163 	push	ar5
      0032D9 C0 06            [24]10164 	push	ar6
      0032DB C0 07            [24]10165 	push	ar7
      0032DD 74 08            [12]10166 	mov	a,#0x08
      0032DF 25*90            [12]10167 	add	a,_find_volume_sloc0_1_0
      0032E1 F5*90            [12]10168 	mov	_find_volume_sloc0_1_0,a
      0032E3 E4               [12]10169 	clr	a
      0032E4 35*91            [12]10170 	addc	a,(_find_volume_sloc0_1_0 + 1)
      0032E6 F5*91            [12]10171 	mov	(_find_volume_sloc0_1_0 + 1),a
      0032E8 AB*90            [24]10172 	mov	r3,_find_volume_sloc0_1_0
      0032EA AC*91            [24]10173 	mov	r4,(_find_volume_sloc0_1_0 + 1)
      0032EC 8B 82            [24]10174 	mov	dpl,r3
      0032EE 8C 83            [24]10175 	mov	dph,r4
      0032F0 A3               [24]10176 	inc	dptr
      0032F1 A3               [24]10177 	inc	dptr
      0032F2 A3               [24]10178 	inc	dptr
      0032F3 E0               [24]10179 	movx	a,@dptr
      0032F4 FB               [12]10180 	mov	r3,a
      0032F5 7F 00            [12]10181 	mov	r7,#0x00
      0032F7 8B*9A            [24]10182 	mov	(_find_volume_sloc3_1_0 + 3),r3
                                  10183 ;	1-genFromRTrack replaced	mov	_find_volume_sloc3_1_0,#0x00
      0032F9 8F*97            [24]10184 	mov	_find_volume_sloc3_1_0,r7
                                  10185 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc3_1_0 + 1),#0x00
      0032FB 8F*98            [24]10186 	mov	(_find_volume_sloc3_1_0 + 1),r7
                                  10187 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc3_1_0 + 2),#0x00
      0032FD 8F*99            [24]10188 	mov	(_find_volume_sloc3_1_0 + 2),r7
      0032FF AD*90            [24]10189 	mov	r5,_find_volume_sloc0_1_0
      003301 AE*91            [24]10190 	mov	r6,(_find_volume_sloc0_1_0 + 1)
      003303 8D 82            [24]10191 	mov	dpl,r5
      003305 8E 83            [24]10192 	mov	dph,r6
      003307 A3               [24]10193 	inc	dptr
      003308 A3               [24]10194 	inc	dptr
      003309 E0               [24]10195 	movx	a,@dptr
      00330A FF               [12]10196 	mov	r7,a
      00330B 7E 00            [12]10197 	mov	r6,#0x00
      00330D 8E 04            [24]10198 	mov	ar4,r6
      00330F 8F 05            [24]10199 	mov	ar5,r7
      003311 E4               [12]10200 	clr	a
      003312 FE               [12]10201 	mov	r6,a
      003313 42*97            [12]10202 	orl	_find_volume_sloc3_1_0,a
      003315 EE               [12]10203 	mov	a,r6
      003316 42*98            [12]10204 	orl	(_find_volume_sloc3_1_0 + 1),a
      003318 ED               [12]10205 	mov	a,r5
      003319 42*99            [12]10206 	orl	(_find_volume_sloc3_1_0 + 2),a
      00331B EC               [12]10207 	mov	a,r4
      00331C 42*9A            [12]10208 	orl	(_find_volume_sloc3_1_0 + 3),a
      00331E AB*90            [24]10209 	mov	r3,_find_volume_sloc0_1_0
      003320 AE*91            [24]10210 	mov	r6,(_find_volume_sloc0_1_0 + 1)
      003322 8B 82            [24]10211 	mov	dpl,r3
      003324 8E 83            [24]10212 	mov	dph,r6
      003326 A3               [24]10213 	inc	dptr
      003327 E0               [24]10214 	movx	a,@dptr
      003328 FE               [12]10215 	mov	r6,a
      003329 E4               [12]10216 	clr	a
      00332A FF               [12]10217 	mov	r7,a
      00332B FD               [12]10218 	mov	r5,a
      00332C FC               [12]10219 	mov	r4,a
      00332D EF               [12]10220 	mov	a,r7
      00332E 42*97            [12]10221 	orl	_find_volume_sloc3_1_0,a
      003330 EE               [12]10222 	mov	a,r6
      003331 42*98            [12]10223 	orl	(_find_volume_sloc3_1_0 + 1),a
      003333 ED               [12]10224 	mov	a,r5
      003334 42*99            [12]10225 	orl	(_find_volume_sloc3_1_0 + 2),a
      003336 EC               [12]10226 	mov	a,r4
      003337 42*9A            [12]10227 	orl	(_find_volume_sloc3_1_0 + 3),a
      003339 AB*90            [24]10228 	mov	r3,_find_volume_sloc0_1_0
      00333B AE*91            [24]10229 	mov	r6,(_find_volume_sloc0_1_0 + 1)
      00333D 8B 82            [24]10230 	mov	dpl,r3
      00333F 8E 83            [24]10231 	mov	dph,r6
      003341 E0               [24]10232 	movx	a,@dptr
      003342 FF               [12]10233 	mov	r7,a
      003343 E4               [12]10234 	clr	a
      003344 FE               [12]10235 	mov	r6,a
      003345 FD               [12]10236 	mov	r5,a
      003346 FC               [12]10237 	mov	r4,a
      003347 EF               [12]10238 	mov	a,r7
      003348 42*97            [12]10239 	orl	_find_volume_sloc3_1_0,a
      00334A EE               [12]10240 	mov	a,r6
      00334B 42*98            [12]10241 	orl	(_find_volume_sloc3_1_0 + 1),a
      00334D ED               [12]10242 	mov	a,r5
      00334E 42*99            [12]10243 	orl	(_find_volume_sloc3_1_0 + 2),a
      003350 EC               [12]10244 	mov	a,r4
      003351 42*9A            [12]10245 	orl	(_find_volume_sloc3_1_0 + 3),a
      003353 D0 07            [24]10246 	pop	ar7
      003355 D0 06            [24]10247 	pop	ar6
      003357 D0 05            [24]10248 	pop	ar5
      003359 80 09            [24]10249 	sjmp	00173$
      00335B                      10250 00172$:
      00335B E4               [12]10251 	clr	a
      00335C F5*97            [12]10252 	mov	_find_volume_sloc3_1_0,a
      00335E F5*98            [12]10253 	mov	(_find_volume_sloc3_1_0 + 1),a
      003360 F5*99            [12]10254 	mov	(_find_volume_sloc3_1_0 + 2),a
      003362 F5*9A            [12]10255 	mov	(_find_volume_sloc3_1_0 + 3),a
      003364                      10256 00173$:
      003364 85*93 82         [24]10257 	mov	dpl,_find_volume_sloc1_1_0
      003367 85*94 83         [24]10258 	mov	dph,(_find_volume_sloc1_1_0 + 1)
      00336A E5*97            [12]10259 	mov	a,_find_volume_sloc3_1_0
      00336C F0               [24]10260 	movx	@dptr,a
      00336D E5*98            [12]10261 	mov	a,(_find_volume_sloc3_1_0 + 1)
      00336F A3               [24]10262 	inc	dptr
      003370 F0               [24]10263 	movx	@dptr,a
      003371 E5*99            [12]10264 	mov	a,(_find_volume_sloc3_1_0 + 2)
      003373 A3               [24]10265 	inc	dptr
      003374 F0               [24]10266 	movx	@dptr,a
      003375 E5*9A            [12]10267 	mov	a,(_find_volume_sloc3_1_0 + 3)
      003377 A3               [24]10268 	inc	dptr
      003378 F0               [24]10269 	movx	@dptr,a
                           003379 10270 	C$ff.c$2218$3_0$176 ==.
                                  10271 ;	FATFS\src\ff.c:2218: for (i = 0; i < 4; i++) {			/* Get partition offset */
      003379 05*95            [12]10272 	inc	_find_volume_sloc2_1_0
      00337B E4               [12]10273 	clr	a
      00337C B5*95 02         [24]10274 	cjne	a,_find_volume_sloc2_1_0,00313$
      00337F 05*96            [12]10275 	inc	(_find_volume_sloc2_1_0 + 1)
      003381                      10276 00313$:
      003381 C3               [12]10277 	clr	c
      003382 E5*95            [12]10278 	mov	a,_find_volume_sloc2_1_0
      003384 94 04            [12]10279 	subb	a,#0x04
      003386 E5*96            [12]10280 	mov	a,(_find_volume_sloc2_1_0 + 1)
      003388 94 00            [12]10281 	subb	a,#0x00
      00338A 50 03            [24]10282 	jnc	00314$
      00338C 02r32r7E         [24]10283 	ljmp	00168$
      00338F                      10284 00314$:
                           00338F 10285 	C$ff.c$2224$1_0$172 ==.
                                  10286 ;	FATFS\src\ff.c:2224: do {								/* Find an FAT volume */
      00338F 7E 00            [12]10287 	mov	r6,#0x00
      003391 7F 00            [12]10288 	mov	r7,#0x00
      003393                      10289 00124$:
                           003393 10290 	C$ff.c$2225$3_0$178 ==.
                                  10291 ;	FATFS\src\ff.c:2225: bsect = br[i];
      003393 EE               [12]10292 	mov	a,r6
      003394 2E               [12]10293 	add	a,r6
      003395 FC               [12]10294 	mov	r4,a
      003396 EF               [12]10295 	mov	a,r7
      003397 33               [12]10296 	rlc	a
      003398 FD               [12]10297 	mov	r5,a
      003399 EC               [12]10298 	mov	a,r4
      00339A 2C               [12]10299 	add	a,r4
      00339B FC               [12]10300 	mov	r4,a
      00339C ED               [12]10301 	mov	a,r5
      00339D 33               [12]10302 	rlc	a
      00339E FD               [12]10303 	mov	r5,a
      00339F EC               [12]10304 	mov	a,r4
      0033A0 24rF5            [12]10305 	add	a,#_find_volume_br_131072_175
      0033A2 F5 82            [12]10306 	mov	dpl,a
      0033A4 ED               [12]10307 	mov	a,r5
      0033A5 34s00            [12]10308 	addc	a,#(_find_volume_br_131072_175 >> 8)
      0033A7 F5 83            [12]10309 	mov	dph,a
      0033A9 E0               [24]10310 	movx	a,@dptr
      0033AA F5*97            [12]10311 	mov	_find_volume_sloc3_1_0,a
      0033AC A3               [24]10312 	inc	dptr
      0033AD E0               [24]10313 	movx	a,@dptr
      0033AE F5*98            [12]10314 	mov	(_find_volume_sloc3_1_0 + 1),a
      0033B0 A3               [24]10315 	inc	dptr
      0033B1 E0               [24]10316 	movx	a,@dptr
      0033B2 F5*99            [12]10317 	mov	(_find_volume_sloc3_1_0 + 2),a
      0033B4 A3               [24]10318 	inc	dptr
      0033B5 E0               [24]10319 	movx	a,@dptr
      0033B6 F5*9A            [12]10320 	mov	(_find_volume_sloc3_1_0 + 3),a
      0033B8 90r00rE5         [24]10321 	mov	dptr,#_find_volume_bsect_65536_172
      0033BB E5*97            [12]10322 	mov	a,_find_volume_sloc3_1_0
      0033BD F0               [24]10323 	movx	@dptr,a
      0033BE E5*98            [12]10324 	mov	a,(_find_volume_sloc3_1_0 + 1)
      0033C0 A3               [24]10325 	inc	dptr
      0033C1 F0               [24]10326 	movx	@dptr,a
      0033C2 E5*99            [12]10327 	mov	a,(_find_volume_sloc3_1_0 + 2)
      0033C4 A3               [24]10328 	inc	dptr
      0033C5 F0               [24]10329 	movx	@dptr,a
      0033C6 E5*9A            [12]10330 	mov	a,(_find_volume_sloc3_1_0 + 3)
      0033C8 A3               [24]10331 	inc	dptr
      0033C9 F0               [24]10332 	movx	@dptr,a
                           0033CA 10333 	C$ff.c$2226$3_0$178 ==.
                                  10334 ;	FATFS\src\ff.c:2226: fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
      0033CA E5*97            [12]10335 	mov	a,_find_volume_sloc3_1_0
      0033CC 45*98            [12]10336 	orl	a,(_find_volume_sloc3_1_0 + 1)
      0033CE 45*99            [12]10337 	orl	a,(_find_volume_sloc3_1_0 + 2)
      0033D0 45*9A            [12]10338 	orl	a,(_find_volume_sloc3_1_0 + 3)
      0033D2 60 3D            [24]10339 	jz	00174$
      0033D4 90r00rD6         [24]10340 	mov	dptr,#_check_fs_PARM_2
      0033D7 E5*97            [12]10341 	mov	a,_find_volume_sloc3_1_0
      0033D9 F0               [24]10342 	movx	@dptr,a
      0033DA E5*98            [12]10343 	mov	a,(_find_volume_sloc3_1_0 + 1)
      0033DC A3               [24]10344 	inc	dptr
      0033DD F0               [24]10345 	movx	@dptr,a
      0033DE E5*99            [12]10346 	mov	a,(_find_volume_sloc3_1_0 + 2)
      0033E0 A3               [24]10347 	inc	dptr
      0033E1 F0               [24]10348 	movx	@dptr,a
      0033E2 E5*9A            [12]10349 	mov	a,(_find_volume_sloc3_1_0 + 3)
      0033E4 A3               [24]10350 	inc	dptr
      0033E5 F0               [24]10351 	movx	@dptr,a
      0033E6 88 82            [24]10352 	mov	dpl,r0
      0033E8 89 83            [24]10353 	mov	dph,r1
      0033EA 8A F0            [24]10354 	mov	b,r2
      0033EC C0 07            [24]10355 	push	ar7
      0033EE C0 06            [24]10356 	push	ar6
      0033F0 C0 02            [24]10357 	push	ar2
      0033F2 C0 01            [24]10358 	push	ar1
      0033F4 C0 00            [24]10359 	push	ar0
      0033F6 78rB1            [12]10360 	mov	r0,#_check_fs
      0033F8 79s2E            [12]10361 	mov	r1,#(_check_fs >> 8)
      0033FA 7As00            [12]10362 	mov	r2,#(_check_fs >> 16)
      0033FC 12r00r00         [24]10363 	lcall	__sdcc_banked_call
      0033FF AD 82            [24]10364 	mov	r5,dpl
      003401 D0 00            [24]10365 	pop	ar0
      003403 D0 01            [24]10366 	pop	ar1
      003405 D0 02            [24]10367 	pop	ar2
      003407 D0 06            [24]10368 	pop	ar6
      003409 D0 07            [24]10369 	pop	ar7
      00340B 8D 04            [24]10370 	mov	ar4,r5
      00340D 7D 00            [12]10371 	mov	r5,#0x00
      00340F 80 04            [24]10372 	sjmp	00175$
      003411                      10373 00174$:
      003411 7C 02            [12]10374 	mov	r4,#0x02
      003413 7D 00            [12]10375 	mov	r5,#0x00
      003415                      10376 00175$:
      003415 90r00rE4         [24]10377 	mov	dptr,#_find_volume_fmt_65536_172
      003418 EC               [12]10378 	mov	a,r4
      003419 F0               [24]10379 	movx	@dptr,a
                           00341A 10380 	C$ff.c$2227$2_0$175 ==.
                                  10381 ;	FATFS\src\ff.c:2227: } while (!LD2PT(vol) && fmt && ++i < 4);
      00341A EC               [12]10382 	mov	a,r4
      00341B 60 11            [24]10383 	jz	00128$
      00341D 0E               [12]10384 	inc	r6
      00341E BE 00 01         [24]10385 	cjne	r6,#0x00,00317$
      003421 0F               [12]10386 	inc	r7
      003422                      10387 00317$:
      003422 C3               [12]10388 	clr	c
      003423 EE               [12]10389 	mov	a,r6
      003424 94 04            [12]10390 	subb	a,#0x04
      003426 EF               [12]10391 	mov	a,r7
      003427 94 00            [12]10392 	subb	a,#0x00
      003429 50 03            [24]10393 	jnc	00318$
      00342B 02r33r93         [24]10394 	ljmp	00124$
      00342E                      10395 00318$:
      00342E                      10396 00128$:
                           00342E 10397 	C$ff.c$2229$1_0$172 ==.
                                  10398 ;	FATFS\src\ff.c:2229: if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
      00342E 90r00rE4         [24]10399 	mov	dptr,#_find_volume_fmt_65536_172
      003431 E0               [24]10400 	movx	a,@dptr
      003432 FF               [12]10401 	mov	r7,a
      003433 BF 03 06         [24]10402 	cjne	r7,#0x03,00132$
      003436 75 82 01         [24]10403 	mov	dpl,#0x01
      003439 02r00r00         [24]10404 	ljmp	__sdcc_banked_ret
      00343C                      10405 00132$:
                           00343C 10406 	C$ff.c$2230$1_0$172 ==.
                                  10407 ;	FATFS\src\ff.c:2230: if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
      00343C EF               [12]10408 	mov	a,r7
      00343D 60 06            [24]10409 	jz	00134$
      00343F 75 82 0D         [24]10410 	mov	dpl,#0x0d
      003442 02r00r00         [24]10411 	ljmp	__sdcc_banked_ret
      003445                      10412 00134$:
                           003445 10413 	C$ff.c$2234$1_0$172 ==.
                                  10414 ;	FATFS\src\ff.c:2234: if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
      003445 74 26            [12]10415 	mov	a,#0x26
      003447 28               [12]10416 	add	a,r0
      003448 FD               [12]10417 	mov	r5,a
      003449 E4               [12]10418 	clr	a
      00344A 39               [12]10419 	addc	a,r1
      00344B FE               [12]10420 	mov	r6,a
      00344C 8A 07            [24]10421 	mov	ar7,r2
      00344E C0 00            [24]10422 	push	ar0
      003450 C0 01            [24]10423 	push	ar1
      003452 C0 02            [24]10424 	push	ar2
      003454 74 0B            [12]10425 	mov	a,#0x0b
      003456 2D               [12]10426 	add	a,r5
      003457 FA               [12]10427 	mov	r2,a
      003458 E4               [12]10428 	clr	a
      003459 3E               [12]10429 	addc	a,r6
      00345A FB               [12]10430 	mov	r3,a
      00345B 8F 04            [24]10431 	mov	ar4,r7
      00345D 74 0C            [12]10432 	mov	a,#0x0c
      00345F 2D               [12]10433 	add	a,r5
      003460 FD               [12]10434 	mov	r5,a
      003461 E4               [12]10435 	clr	a
      003462 3E               [12]10436 	addc	a,r6
      003463 FE               [12]10437 	mov	r6,a
      003464 8D 82            [24]10438 	mov	dpl,r5
      003466 8E 83            [24]10439 	mov	dph,r6
      003468 8F F0            [24]10440 	mov	b,r7
      00346A 12r00r00         [24]10441 	lcall	__gptrget
      00346D FF               [12]10442 	mov	r7,a
      00346E 7D 00            [12]10443 	mov	r5,#0x00
      003470 8A 82            [24]10444 	mov	dpl,r2
      003472 8B 83            [24]10445 	mov	dph,r3
      003474 8C F0            [24]10446 	mov	b,r4
      003476 12r00r00         [24]10447 	lcall	__gptrget
      003479 7E 00            [12]10448 	mov	r6,#0x00
      00347B 42 05            [12]10449 	orl	ar5,a
      00347D EE               [12]10450 	mov	a,r6
      00347E 42 07            [12]10451 	orl	ar7,a
      003480 BD 00 0B         [24]10452 	cjne	r5,#0x00,00322$
      003483 BF 02 08         [24]10453 	cjne	r7,#0x02,00322$
      003486 D0 02            [24]10454 	pop	ar2
      003488 D0 01            [24]10455 	pop	ar1
      00348A D0 00            [24]10456 	pop	ar0
      00348C 80 0C            [24]10457 	sjmp	00136$
      00348E                      10458 00322$:
      00348E D0 02            [24]10459 	pop	ar2
      003490 D0 01            [24]10460 	pop	ar1
      003492 D0 00            [24]10461 	pop	ar0
                           003494 10462 	C$ff.c$2235$1_0$172 ==.
                                  10463 ;	FATFS\src\ff.c:2235: return FR_NO_FILESYSTEM;
      003494 75 82 0D         [24]10464 	mov	dpl,#0x0d
      003497 02r00r00         [24]10465 	ljmp	__sdcc_banked_ret
      00349A                      10466 00136$:
                           00349A 10467 	C$ff.c$2237$1_0$172 ==.
                                  10468 ;	FATFS\src\ff.c:2237: fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
      00349A 74 26            [12]10469 	mov	a,#0x26
      00349C 28               [12]10470 	add	a,r0
      00349D FD               [12]10471 	mov	r5,a
      00349E E4               [12]10472 	clr	a
      00349F 39               [12]10473 	addc	a,r1
      0034A0 FE               [12]10474 	mov	r6,a
      0034A1 8A 07            [24]10475 	mov	ar7,r2
      0034A3 C0 00            [24]10476 	push	ar0
      0034A5 C0 01            [24]10477 	push	ar1
      0034A7 C0 02            [24]10478 	push	ar2
      0034A9 74 16            [12]10479 	mov	a,#0x16
      0034AB 2D               [12]10480 	add	a,r5
      0034AC FA               [12]10481 	mov	r2,a
      0034AD E4               [12]10482 	clr	a
      0034AE 3E               [12]10483 	addc	a,r6
      0034AF FB               [12]10484 	mov	r3,a
      0034B0 8F 04            [24]10485 	mov	ar4,r7
      0034B2 74 17            [12]10486 	mov	a,#0x17
      0034B4 2D               [12]10487 	add	a,r5
      0034B5 FD               [12]10488 	mov	r5,a
      0034B6 E4               [12]10489 	clr	a
      0034B7 3E               [12]10490 	addc	a,r6
      0034B8 FE               [12]10491 	mov	r6,a
      0034B9 8D 82            [24]10492 	mov	dpl,r5
      0034BB 8E 83            [24]10493 	mov	dph,r6
      0034BD 8F F0            [24]10494 	mov	b,r7
      0034BF 12r00r00         [24]10495 	lcall	__gptrget
      0034C2 FF               [12]10496 	mov	r7,a
      0034C3 7D 00            [12]10497 	mov	r5,#0x00
      0034C5 8A 82            [24]10498 	mov	dpl,r2
      0034C7 8B 83            [24]10499 	mov	dph,r3
      0034C9 8C F0            [24]10500 	mov	b,r4
      0034CB 12r00r00         [24]10501 	lcall	__gptrget
      0034CE 7E 00            [12]10502 	mov	r6,#0x00
      0034D0 42 05            [12]10503 	orl	ar5,a
      0034D2 EE               [12]10504 	mov	a,r6
      0034D3 42 07            [12]10505 	orl	ar7,a
      0034D5 7E 00            [12]10506 	mov	r6,#0x00
      0034D7 7C 00            [12]10507 	mov	r4,#0x00
      0034D9 90r00rE9         [24]10508 	mov	dptr,#_find_volume_fasize_65536_172
      0034DC ED               [12]10509 	mov	a,r5
      0034DD F0               [24]10510 	movx	@dptr,a
      0034DE EF               [12]10511 	mov	a,r7
      0034DF A3               [24]10512 	inc	dptr
      0034E0 F0               [24]10513 	movx	@dptr,a
      0034E1 EE               [12]10514 	mov	a,r6
      0034E2 A3               [24]10515 	inc	dptr
      0034E3 F0               [24]10516 	movx	@dptr,a
      0034E4 EC               [12]10517 	mov	a,r4
      0034E5 A3               [24]10518 	inc	dptr
      0034E6 F0               [24]10519 	movx	@dptr,a
                           0034E7 10520 	C$ff.c$2238$1_0$172 ==.
                                  10521 ;	FATFS\src\ff.c:2238: if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
      0034E7 D0 02            [24]10522 	pop	ar2
      0034E9 D0 01            [24]10523 	pop	ar1
      0034EB D0 00            [24]10524 	pop	ar0
      0034ED ED               [12]10525 	mov	a,r5
      0034EE 4F               [12]10526 	orl	a,r7
      0034EF 4E               [12]10527 	orl	a,r6
      0034F0 4C               [12]10528 	orl	a,r4
      0034F1 60 03            [24]10529 	jz	00323$
      0034F3 02r35rA8         [24]10530 	ljmp	00138$
      0034F6                      10531 00323$:
      0034F6 74 26            [12]10532 	mov	a,#0x26
      0034F8 28               [12]10533 	add	a,r0
      0034F9 FD               [12]10534 	mov	r5,a
      0034FA E4               [12]10535 	clr	a
      0034FB 39               [12]10536 	addc	a,r1
      0034FC FE               [12]10537 	mov	r6,a
      0034FD 8A 07            [24]10538 	mov	ar7,r2
      0034FF C0 00            [24]10539 	push	ar0
      003501 C0 01            [24]10540 	push	ar1
      003503 C0 02            [24]10541 	push	ar2
      003505 74 24            [12]10542 	mov	a,#0x24
      003507 2D               [12]10543 	add	a,r5
      003508 F5*97            [12]10544 	mov	_find_volume_sloc3_1_0,a
      00350A E4               [12]10545 	clr	a
      00350B 3E               [12]10546 	addc	a,r6
      00350C F5*98            [12]10547 	mov	(_find_volume_sloc3_1_0 + 1),a
      00350E 8F*99            [24]10548 	mov	(_find_volume_sloc3_1_0 + 2),r7
      003510 74 27            [12]10549 	mov	a,#0x27
      003512 2D               [12]10550 	add	a,r5
      003513 F8               [12]10551 	mov	r0,a
      003514 E4               [12]10552 	clr	a
      003515 3E               [12]10553 	addc	a,r6
      003516 F9               [12]10554 	mov	r1,a
      003517 8F 04            [24]10555 	mov	ar4,r7
      003519 88 82            [24]10556 	mov	dpl,r0
      00351B 89 83            [24]10557 	mov	dph,r1
      00351D 8C F0            [24]10558 	mov	b,r4
      00351F 12r00r00         [24]10559 	lcall	__gptrget
      003522 F8               [12]10560 	mov	r0,a
      003523 7C 00            [12]10561 	mov	r4,#0x00
      003525 88*9E            [24]10562 	mov	(_find_volume_sloc4_1_0 + 3),r0
                                  10563 ;	1-genFromRTrack replaced	mov	_find_volume_sloc4_1_0,#0x00
      003527 8C*9B            [24]10564 	mov	_find_volume_sloc4_1_0,r4
                                  10565 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc4_1_0 + 1),#0x00
      003529 8C*9C            [24]10566 	mov	(_find_volume_sloc4_1_0 + 1),r4
                                  10567 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc4_1_0 + 2),#0x00
      00352B 8C*9D            [24]10568 	mov	(_find_volume_sloc4_1_0 + 2),r4
      00352D 74 26            [12]10569 	mov	a,#0x26
      00352F 2D               [12]10570 	add	a,r5
      003530 F9               [12]10571 	mov	r1,a
      003531 E4               [12]10572 	clr	a
      003532 3E               [12]10573 	addc	a,r6
      003533 FB               [12]10574 	mov	r3,a
      003534 8F 04            [24]10575 	mov	ar4,r7
      003536 89 82            [24]10576 	mov	dpl,r1
      003538 8B 83            [24]10577 	mov	dph,r3
      00353A 8C F0            [24]10578 	mov	b,r4
      00353C 12r00r00         [24]10579 	lcall	__gptrget
      00353F F9               [12]10580 	mov	r1,a
      003540 7C 00            [12]10581 	mov	r4,#0x00
      003542 8C 02            [24]10582 	mov	ar2,r4
      003544 89 03            [24]10583 	mov	ar3,r1
      003546 E4               [12]10584 	clr	a
      003547 F9               [12]10585 	mov	r1,a
      003548 FC               [12]10586 	mov	r4,a
      003549 E5*9B            [12]10587 	mov	a,_find_volume_sloc4_1_0
      00354B 42 01            [12]10588 	orl	ar1,a
      00354D E5*9C            [12]10589 	mov	a,(_find_volume_sloc4_1_0 + 1)
      00354F 42 04            [12]10590 	orl	ar4,a
      003551 E5*9D            [12]10591 	mov	a,(_find_volume_sloc4_1_0 + 2)
      003553 42 03            [12]10592 	orl	ar3,a
      003555 E5*9E            [12]10593 	mov	a,(_find_volume_sloc4_1_0 + 3)
      003557 42 02            [12]10594 	orl	ar2,a
      003559 74 25            [12]10595 	mov	a,#0x25
      00355B 2D               [12]10596 	add	a,r5
      00355C FD               [12]10597 	mov	r5,a
      00355D E4               [12]10598 	clr	a
      00355E 3E               [12]10599 	addc	a,r6
      00355F FE               [12]10600 	mov	r6,a
      003560 8D 82            [24]10601 	mov	dpl,r5
      003562 8E 83            [24]10602 	mov	dph,r6
      003564 8F F0            [24]10603 	mov	b,r7
      003566 12r00r00         [24]10604 	lcall	__gptrget
      003569 FF               [12]10605 	mov	r7,a
      00356A 7D 00            [12]10606 	mov	r5,#0x00
      00356C 8F 00            [24]10607 	mov	ar0,r7
      00356E E4               [12]10608 	clr	a
      00356F FE               [12]10609 	mov	r6,a
      003570 FF               [12]10610 	mov	r7,a
      003571 ED               [12]10611 	mov	a,r5
      003572 42 01            [12]10612 	orl	ar1,a
      003574 E8               [12]10613 	mov	a,r0
      003575 42 04            [12]10614 	orl	ar4,a
      003577 EE               [12]10615 	mov	a,r6
      003578 42 03            [12]10616 	orl	ar3,a
      00357A EF               [12]10617 	mov	a,r7
      00357B 42 02            [12]10618 	orl	ar2,a
      00357D 85*97 82         [24]10619 	mov	dpl,_find_volume_sloc3_1_0
      003580 85*98 83         [24]10620 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003583 85*99 F0         [24]10621 	mov	b,(_find_volume_sloc3_1_0 + 2)
      003586 12r00r00         [24]10622 	lcall	__gptrget
      003589 F8               [12]10623 	mov	r0,a
      00358A 7D 00            [12]10624 	mov	r5,#0x00
      00358C 7E 00            [12]10625 	mov	r6,#0x00
      00358E 7F 00            [12]10626 	mov	r7,#0x00
      003590 90r00rE9         [24]10627 	mov	dptr,#_find_volume_fasize_65536_172
      003593 E8               [12]10628 	mov	a,r0
      003594 49               [12]10629 	orl	a,r1
      003595 F0               [24]10630 	movx	@dptr,a
      003596 ED               [12]10631 	mov	a,r5
      003597 4C               [12]10632 	orl	a,r4
      003598 A3               [24]10633 	inc	dptr
      003599 F0               [24]10634 	movx	@dptr,a
      00359A EE               [12]10635 	mov	a,r6
      00359B 4B               [12]10636 	orl	a,r3
      00359C A3               [24]10637 	inc	dptr
      00359D F0               [24]10638 	movx	@dptr,a
      00359E EF               [12]10639 	mov	a,r7
      00359F 4A               [12]10640 	orl	a,r2
      0035A0 A3               [24]10641 	inc	dptr
      0035A1 F0               [24]10642 	movx	@dptr,a
                           0035A2 10643 	C$ff.c$2322$1_0$172 ==.
                                  10644 ;	FATFS\src\ff.c:2322: return FR_OK;
      0035A2 D0 02            [24]10645 	pop	ar2
      0035A4 D0 01            [24]10646 	pop	ar1
      0035A6 D0 00            [24]10647 	pop	ar0
                           0035A8 10648 	C$ff.c$2238$1_0$172 ==.
                                  10649 ;	FATFS\src\ff.c:2238: if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
      0035A8                      10650 00138$:
                           0035A8 10651 	C$ff.c$2239$1_0$172 ==.
                                  10652 ;	FATFS\src\ff.c:2239: fs->fsize = fasize;
      0035A8 74 0E            [12]10653 	mov	a,#0x0e
      0035AA 28               [12]10654 	add	a,r0
      0035AB F5*9B            [12]10655 	mov	_find_volume_sloc4_1_0,a
      0035AD E4               [12]10656 	clr	a
      0035AE 39               [12]10657 	addc	a,r1
      0035AF F5*9C            [12]10658 	mov	(_find_volume_sloc4_1_0 + 1),a
      0035B1 8A*9D            [24]10659 	mov	(_find_volume_sloc4_1_0 + 2),r2
      0035B3 90r00rE9         [24]10660 	mov	dptr,#_find_volume_fasize_65536_172
      0035B6 E0               [24]10661 	movx	a,@dptr
      0035B7 FB               [12]10662 	mov	r3,a
      0035B8 A3               [24]10663 	inc	dptr
      0035B9 E0               [24]10664 	movx	a,@dptr
      0035BA FE               [12]10665 	mov	r6,a
      0035BB A3               [24]10666 	inc	dptr
      0035BC E0               [24]10667 	movx	a,@dptr
      0035BD FC               [12]10668 	mov	r4,a
      0035BE A3               [24]10669 	inc	dptr
      0035BF E0               [24]10670 	movx	a,@dptr
      0035C0 FF               [12]10671 	mov	r7,a
      0035C1 85*9B 82         [24]10672 	mov	dpl,_find_volume_sloc4_1_0
      0035C4 85*9C 83         [24]10673 	mov	dph,(_find_volume_sloc4_1_0 + 1)
      0035C7 85*9D F0         [24]10674 	mov	b,(_find_volume_sloc4_1_0 + 2)
      0035CA EB               [12]10675 	mov	a,r3
      0035CB 12r00r00         [24]10676 	lcall	__gptrput
      0035CE A3               [24]10677 	inc	dptr
      0035CF EE               [12]10678 	mov	a,r6
      0035D0 12r00r00         [24]10679 	lcall	__gptrput
      0035D3 A3               [24]10680 	inc	dptr
      0035D4 EC               [12]10681 	mov	a,r4
      0035D5 12r00r00         [24]10682 	lcall	__gptrput
      0035D8 A3               [24]10683 	inc	dptr
      0035D9 EF               [12]10684 	mov	a,r7
      0035DA 12r00r00         [24]10685 	lcall	__gptrput
                           0035DD 10686 	C$ff.c$2241$1_0$172 ==.
                                  10687 ;	FATFS\src\ff.c:2241: fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
      0035DD 74 03            [12]10688 	mov	a,#0x03
      0035DF 28               [12]10689 	add	a,r0
      0035E0 F5*97            [12]10690 	mov	_find_volume_sloc3_1_0,a
      0035E2 E4               [12]10691 	clr	a
      0035E3 39               [12]10692 	addc	a,r1
      0035E4 F5*98            [12]10693 	mov	(_find_volume_sloc3_1_0 + 1),a
      0035E6 8A*99            [24]10694 	mov	(_find_volume_sloc3_1_0 + 2),r2
      0035E8 74 26            [12]10695 	mov	a,#0x26
      0035EA 28               [12]10696 	add	a,r0
      0035EB FB               [12]10697 	mov	r3,a
      0035EC E4               [12]10698 	clr	a
      0035ED 39               [12]10699 	addc	a,r1
      0035EE FC               [12]10700 	mov	r4,a
      0035EF 8A 07            [24]10701 	mov	ar7,r2
      0035F1 74 10            [12]10702 	mov	a,#0x10
      0035F3 2B               [12]10703 	add	a,r3
      0035F4 FB               [12]10704 	mov	r3,a
      0035F5 E4               [12]10705 	clr	a
      0035F6 3C               [12]10706 	addc	a,r4
      0035F7 FC               [12]10707 	mov	r4,a
      0035F8 8B 82            [24]10708 	mov	dpl,r3
      0035FA 8C 83            [24]10709 	mov	dph,r4
      0035FC 8F F0            [24]10710 	mov	b,r7
      0035FE 12r00r00         [24]10711 	lcall	__gptrget
      003601 FB               [12]10712 	mov	r3,a
      003602 85*97 82         [24]10713 	mov	dpl,_find_volume_sloc3_1_0
      003605 85*98 83         [24]10714 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003608 85*99 F0         [24]10715 	mov	b,(_find_volume_sloc3_1_0 + 2)
      00360B 12r00r00         [24]10716 	lcall	__gptrput
                           00360E 10717 	C$ff.c$2242$1_0$172 ==.
                                  10718 ;	FATFS\src\ff.c:2242: if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
      00360E 85*97 82         [24]10719 	mov	dpl,_find_volume_sloc3_1_0
      003611 85*98 83         [24]10720 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003614 85*99 F0         [24]10721 	mov	b,(_find_volume_sloc3_1_0 + 2)
      003617 12r00r00         [24]10722 	lcall	__gptrget
      00361A FF               [12]10723 	mov	r7,a
      00361B BB 01 02         [24]10724 	cjne	r3,#0x01,00324$
      00361E 80 0B            [24]10725 	sjmp	00140$
      003620                      10726 00324$:
      003620 BF 02 02         [24]10727 	cjne	r7,#0x02,00325$
      003623 80 06            [24]10728 	sjmp	00140$
      003625                      10729 00325$:
                           003625 10730 	C$ff.c$2243$1_0$172 ==.
                                  10731 ;	FATFS\src\ff.c:2243: return FR_NO_FILESYSTEM;
      003625 75 82 0D         [24]10732 	mov	dpl,#0x0d
      003628 02r00r00         [24]10733 	ljmp	__sdcc_banked_ret
      00362B                      10734 00140$:
                           00362B 10735 	C$ff.c$2244$1_0$172 ==.
                                  10736 ;	FATFS\src\ff.c:2244: fasize *= fs->n_fats;								/* Number of sectors for FAT area */
      00362B 85*97 82         [24]10737 	mov	dpl,_find_volume_sloc3_1_0
      00362E 85*98 83         [24]10738 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003631 85*99 F0         [24]10739 	mov	b,(_find_volume_sloc3_1_0 + 2)
      003634 12r00r00         [24]10740 	lcall	__gptrget
      003637 FF               [12]10741 	mov	r7,a
      003638 90r00rE9         [24]10742 	mov	dptr,#_find_volume_fasize_65536_172
      00363B E0               [24]10743 	movx	a,@dptr
      00363C FB               [12]10744 	mov	r3,a
      00363D A3               [24]10745 	inc	dptr
      00363E E0               [24]10746 	movx	a,@dptr
      00363F FC               [12]10747 	mov	r4,a
      003640 A3               [24]10748 	inc	dptr
      003641 E0               [24]10749 	movx	a,@dptr
      003642 FD               [12]10750 	mov	r5,a
      003643 A3               [24]10751 	inc	dptr
      003644 E0               [24]10752 	movx	a,@dptr
      003645 FE               [12]10753 	mov	r6,a
      003646 90r00r00         [24]10754 	mov	dptr,#__mullong_PARM_2
      003649 EF               [12]10755 	mov	a,r7
      00364A F0               [24]10756 	movx	@dptr,a
      00364B E4               [12]10757 	clr	a
      00364C A3               [24]10758 	inc	dptr
      00364D F0               [24]10759 	movx	@dptr,a
      00364E A3               [24]10760 	inc	dptr
      00364F F0               [24]10761 	movx	@dptr,a
      003650 A3               [24]10762 	inc	dptr
      003651 F0               [24]10763 	movx	@dptr,a
      003652 8B 82            [24]10764 	mov	dpl,r3
      003654 8C 83            [24]10765 	mov	dph,r4
      003656 8D F0            [24]10766 	mov	b,r5
      003658 EE               [12]10767 	mov	a,r6
      003659 C0 02            [24]10768 	push	ar2
      00365B C0 01            [24]10769 	push	ar1
      00365D C0 00            [24]10770 	push	ar0
      00365F 12r00r00         [24]10771 	lcall	__mullong
      003662 AC 82            [24]10772 	mov	r4,dpl
      003664 AD 83            [24]10773 	mov	r5,dph
      003666 AE F0            [24]10774 	mov	r6,b
      003668 FF               [12]10775 	mov	r7,a
      003669 D0 00            [24]10776 	pop	ar0
      00366B D0 01            [24]10777 	pop	ar1
      00366D D0 02            [24]10778 	pop	ar2
      00366F 90r00rE9         [24]10779 	mov	dptr,#_find_volume_fasize_65536_172
      003672 EC               [12]10780 	mov	a,r4
      003673 F0               [24]10781 	movx	@dptr,a
      003674 ED               [12]10782 	mov	a,r5
      003675 A3               [24]10783 	inc	dptr
      003676 F0               [24]10784 	movx	@dptr,a
      003677 EE               [12]10785 	mov	a,r6
      003678 A3               [24]10786 	inc	dptr
      003679 F0               [24]10787 	movx	@dptr,a
      00367A EF               [12]10788 	mov	a,r7
      00367B A3               [24]10789 	inc	dptr
      00367C F0               [24]10790 	movx	@dptr,a
                           00367D 10791 	C$ff.c$2246$1_0$172 ==.
                                  10792 ;	FATFS\src\ff.c:2246: fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
      00367D 74 02            [12]10793 	mov	a,#0x02
      00367F 28               [12]10794 	add	a,r0
      003680 F5*97            [12]10795 	mov	_find_volume_sloc3_1_0,a
      003682 E4               [12]10796 	clr	a
      003683 39               [12]10797 	addc	a,r1
      003684 F5*98            [12]10798 	mov	(_find_volume_sloc3_1_0 + 1),a
      003686 8A*99            [24]10799 	mov	(_find_volume_sloc3_1_0 + 2),r2
      003688 74 26            [12]10800 	mov	a,#0x26
      00368A 28               [12]10801 	add	a,r0
      00368B FB               [12]10802 	mov	r3,a
      00368C E4               [12]10803 	clr	a
      00368D 39               [12]10804 	addc	a,r1
      00368E FC               [12]10805 	mov	r4,a
      00368F 8A 07            [24]10806 	mov	ar7,r2
      003691 74 0D            [12]10807 	mov	a,#0x0d
      003693 2B               [12]10808 	add	a,r3
      003694 FB               [12]10809 	mov	r3,a
      003695 E4               [12]10810 	clr	a
      003696 3C               [12]10811 	addc	a,r4
      003697 FC               [12]10812 	mov	r4,a
      003698 8B 82            [24]10813 	mov	dpl,r3
      00369A 8C 83            [24]10814 	mov	dph,r4
      00369C 8F F0            [24]10815 	mov	b,r7
      00369E 12r00r00         [24]10816 	lcall	__gptrget
      0036A1 FB               [12]10817 	mov	r3,a
      0036A2 85*97 82         [24]10818 	mov	dpl,_find_volume_sloc3_1_0
      0036A5 85*98 83         [24]10819 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      0036A8 85*99 F0         [24]10820 	mov	b,(_find_volume_sloc3_1_0 + 2)
      0036AB 12r00r00         [24]10821 	lcall	__gptrput
                           0036AE 10822 	C$ff.c$2247$1_0$172 ==.
                                  10823 ;	FATFS\src\ff.c:2247: if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
      0036AE 85*97 82         [24]10824 	mov	dpl,_find_volume_sloc3_1_0
      0036B1 85*98 83         [24]10825 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      0036B4 85*99 F0         [24]10826 	mov	b,(_find_volume_sloc3_1_0 + 2)
      0036B7 12r00r00         [24]10827 	lcall	__gptrget
      0036BA FF               [12]10828 	mov	r7,a
      0036BB EB               [12]10829 	mov	a,r3
      0036BC 60 14            [24]10830 	jz	00142$
      0036BE 7E 00            [12]10831 	mov	r6,#0x00
      0036C0 EF               [12]10832 	mov	a,r7
      0036C1 24 FF            [12]10833 	add	a,#0xff
      0036C3 FC               [12]10834 	mov	r4,a
      0036C4 EE               [12]10835 	mov	a,r6
      0036C5 34 FF            [12]10836 	addc	a,#0xff
      0036C7 FD               [12]10837 	mov	r5,a
      0036C8 EC               [12]10838 	mov	a,r4
      0036C9 52 07            [12]10839 	anl	ar7,a
      0036CB ED               [12]10840 	mov	a,r5
      0036CC 52 06            [12]10841 	anl	ar6,a
      0036CE EF               [12]10842 	mov	a,r7
      0036CF 4E               [12]10843 	orl	a,r6
      0036D0 60 06            [24]10844 	jz	00143$
      0036D2                      10845 00142$:
                           0036D2 10846 	C$ff.c$2248$1_0$172 ==.
                                  10847 ;	FATFS\src\ff.c:2248: return FR_NO_FILESYSTEM;
      0036D2 75 82 0D         [24]10848 	mov	dpl,#0x0d
      0036D5 02r00r00         [24]10849 	ljmp	__sdcc_banked_ret
      0036D8                      10850 00143$:
                           0036D8 10851 	C$ff.c$2250$1_0$172 ==.
                                  10852 ;	FATFS\src\ff.c:2250: fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
      0036D8 74 08            [12]10853 	mov	a,#0x08
      0036DA 28               [12]10854 	add	a,r0
      0036DB F5*90            [12]10855 	mov	_find_volume_sloc0_1_0,a
      0036DD E4               [12]10856 	clr	a
      0036DE 39               [12]10857 	addc	a,r1
      0036DF F5*91            [12]10858 	mov	(_find_volume_sloc0_1_0 + 1),a
      0036E1 8A*92            [24]10859 	mov	(_find_volume_sloc0_1_0 + 2),r2
      0036E3 74 26            [12]10860 	mov	a,#0x26
      0036E5 28               [12]10861 	add	a,r0
      0036E6 FB               [12]10862 	mov	r3,a
      0036E7 E4               [12]10863 	clr	a
      0036E8 39               [12]10864 	addc	a,r1
      0036E9 FC               [12]10865 	mov	r4,a
      0036EA 8A 07            [24]10866 	mov	ar7,r2
      0036EC C0 00            [24]10867 	push	ar0
      0036EE C0 01            [24]10868 	push	ar1
      0036F0 C0 02            [24]10869 	push	ar2
      0036F2 74 11            [12]10870 	mov	a,#0x11
      0036F4 2B               [12]10871 	add	a,r3
      0036F5 FA               [12]10872 	mov	r2,a
      0036F6 E4               [12]10873 	clr	a
      0036F7 3C               [12]10874 	addc	a,r4
      0036F8 FD               [12]10875 	mov	r5,a
      0036F9 8F 06            [24]10876 	mov	ar6,r7
      0036FB 74 12            [12]10877 	mov	a,#0x12
      0036FD 2B               [12]10878 	add	a,r3
      0036FE FB               [12]10879 	mov	r3,a
      0036FF E4               [12]10880 	clr	a
      003700 3C               [12]10881 	addc	a,r4
      003701 FC               [12]10882 	mov	r4,a
      003702 8B 82            [24]10883 	mov	dpl,r3
      003704 8C 83            [24]10884 	mov	dph,r4
      003706 8F F0            [24]10885 	mov	b,r7
      003708 12r00r00         [24]10886 	lcall	__gptrget
      00370B FF               [12]10887 	mov	r7,a
      00370C 7B 00            [12]10888 	mov	r3,#0x00
      00370E 8A 82            [24]10889 	mov	dpl,r2
      003710 8D 83            [24]10890 	mov	dph,r5
      003712 8E F0            [24]10891 	mov	b,r6
      003714 12r00r00         [24]10892 	lcall	__gptrget
      003717 7E 00            [12]10893 	mov	r6,#0x00
      003719 42 03            [12]10894 	orl	ar3,a
      00371B EE               [12]10895 	mov	a,r6
      00371C 42 07            [12]10896 	orl	ar7,a
      00371E 85*90 82         [24]10897 	mov	dpl,_find_volume_sloc0_1_0
      003721 85*91 83         [24]10898 	mov	dph,(_find_volume_sloc0_1_0 + 1)
      003724 85*92 F0         [24]10899 	mov	b,(_find_volume_sloc0_1_0 + 2)
      003727 EB               [12]10900 	mov	a,r3
      003728 12r00r00         [24]10901 	lcall	__gptrput
      00372B A3               [24]10902 	inc	dptr
      00372C EF               [12]10903 	mov	a,r7
      00372D 12r00r00         [24]10904 	lcall	__gptrput
                           003730 10905 	C$ff.c$2251$1_0$172 ==.
                                  10906 ;	FATFS\src\ff.c:2251: if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
      003730 EB               [12]10907 	mov	a,r3
      003731 54 0F            [12]10908 	anl	a,#0x0f
      003733 70 08            [24]10909 	jnz	00328$
      003735 D0 02            [24]10910 	pop	ar2
      003737 D0 01            [24]10911 	pop	ar1
      003739 D0 00            [24]10912 	pop	ar0
      00373B 80 0C            [24]10913 	sjmp	00146$
      00373D                      10914 00328$:
      00373D D0 02            [24]10915 	pop	ar2
      00373F D0 01            [24]10916 	pop	ar1
      003741 D0 00            [24]10917 	pop	ar0
                           003743 10918 	C$ff.c$2252$1_0$172 ==.
                                  10919 ;	FATFS\src\ff.c:2252: return FR_NO_FILESYSTEM;
      003743 75 82 0D         [24]10920 	mov	dpl,#0x0d
      003746 02r00r00         [24]10921 	ljmp	__sdcc_banked_ret
      003749                      10922 00146$:
                           003749 10923 	C$ff.c$2254$1_0$172 ==.
                                  10924 ;	FATFS\src\ff.c:2254: tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
      003749 74 26            [12]10925 	mov	a,#0x26
      00374B 28               [12]10926 	add	a,r0
      00374C FD               [12]10927 	mov	r5,a
      00374D E4               [12]10928 	clr	a
      00374E 39               [12]10929 	addc	a,r1
      00374F FE               [12]10930 	mov	r6,a
      003750 8A 07            [24]10931 	mov	ar7,r2
      003752 C0 00            [24]10932 	push	ar0
      003754 C0 01            [24]10933 	push	ar1
      003756 C0 02            [24]10934 	push	ar2
      003758 74 13            [12]10935 	mov	a,#0x13
      00375A 2D               [12]10936 	add	a,r5
      00375B FA               [12]10937 	mov	r2,a
      00375C E4               [12]10938 	clr	a
      00375D 3E               [12]10939 	addc	a,r6
      00375E FB               [12]10940 	mov	r3,a
      00375F 8F 04            [24]10941 	mov	ar4,r7
      003761 74 14            [12]10942 	mov	a,#0x14
      003763 2D               [12]10943 	add	a,r5
      003764 FD               [12]10944 	mov	r5,a
      003765 E4               [12]10945 	clr	a
      003766 3E               [12]10946 	addc	a,r6
      003767 FE               [12]10947 	mov	r6,a
      003768 8D 82            [24]10948 	mov	dpl,r5
      00376A 8E 83            [24]10949 	mov	dph,r6
      00376C 8F F0            [24]10950 	mov	b,r7
      00376E 12r00r00         [24]10951 	lcall	__gptrget
      003771 FF               [12]10952 	mov	r7,a
      003772 7D 00            [12]10953 	mov	r5,#0x00
      003774 8A 82            [24]10954 	mov	dpl,r2
      003776 8B 83            [24]10955 	mov	dph,r3
      003778 8C F0            [24]10956 	mov	b,r4
      00377A 12r00r00         [24]10957 	lcall	__gptrget
      00377D 7E 00            [12]10958 	mov	r6,#0x00
      00377F 42 05            [12]10959 	orl	ar5,a
      003781 EE               [12]10960 	mov	a,r6
      003782 42 07            [12]10961 	orl	ar7,a
      003784 7E 00            [12]10962 	mov	r6,#0x00
      003786 7C 00            [12]10963 	mov	r4,#0x00
      003788 90r00rED         [24]10964 	mov	dptr,#_find_volume_tsect_65536_172
      00378B ED               [12]10965 	mov	a,r5
      00378C F0               [24]10966 	movx	@dptr,a
      00378D EF               [12]10967 	mov	a,r7
      00378E A3               [24]10968 	inc	dptr
      00378F F0               [24]10969 	movx	@dptr,a
      003790 EE               [12]10970 	mov	a,r6
      003791 A3               [24]10971 	inc	dptr
      003792 F0               [24]10972 	movx	@dptr,a
      003793 EC               [12]10973 	mov	a,r4
      003794 A3               [24]10974 	inc	dptr
      003795 F0               [24]10975 	movx	@dptr,a
                           003796 10976 	C$ff.c$2255$1_0$172 ==.
                                  10977 ;	FATFS\src\ff.c:2255: if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
      003796 D0 02            [24]10978 	pop	ar2
      003798 D0 01            [24]10979 	pop	ar1
      00379A D0 00            [24]10980 	pop	ar0
      00379C ED               [12]10981 	mov	a,r5
      00379D 4F               [12]10982 	orl	a,r7
      00379E 4E               [12]10983 	orl	a,r6
      00379F 4C               [12]10984 	orl	a,r4
      0037A0 60 03            [24]10985 	jz	00329$
      0037A2 02r38r57         [24]10986 	ljmp	00148$
      0037A5                      10987 00329$:
      0037A5 74 26            [12]10988 	mov	a,#0x26
      0037A7 28               [12]10989 	add	a,r0
      0037A8 FD               [12]10990 	mov	r5,a
      0037A9 E4               [12]10991 	clr	a
      0037AA 39               [12]10992 	addc	a,r1
      0037AB FE               [12]10993 	mov	r6,a
      0037AC 8A 07            [24]10994 	mov	ar7,r2
      0037AE C0 00            [24]10995 	push	ar0
      0037B0 C0 01            [24]10996 	push	ar1
      0037B2 C0 02            [24]10997 	push	ar2
      0037B4 74 20            [12]10998 	mov	a,#0x20
      0037B6 2D               [12]10999 	add	a,r5
      0037B7 F5*9F            [12]11000 	mov	_find_volume_sloc5_1_0,a
      0037B9 E4               [12]11001 	clr	a
      0037BA 3E               [12]11002 	addc	a,r6
      0037BB F5*A0            [12]11003 	mov	(_find_volume_sloc5_1_0 + 1),a
      0037BD 8F*A1            [24]11004 	mov	(_find_volume_sloc5_1_0 + 2),r7
      0037BF 74 23            [12]11005 	mov	a,#0x23
      0037C1 2D               [12]11006 	add	a,r5
      0037C2 F8               [12]11007 	mov	r0,a
      0037C3 E4               [12]11008 	clr	a
      0037C4 3E               [12]11009 	addc	a,r6
      0037C5 F9               [12]11010 	mov	r1,a
      0037C6 8F 04            [24]11011 	mov	ar4,r7
      0037C8 88 82            [24]11012 	mov	dpl,r0
      0037CA 89 83            [24]11013 	mov	dph,r1
      0037CC 8C F0            [24]11014 	mov	b,r4
      0037CE 12r00r00         [24]11015 	lcall	__gptrget
      0037D1 F8               [12]11016 	mov	r0,a
      0037D2 7C 00            [12]11017 	mov	r4,#0x00
      0037D4 88*A5            [24]11018 	mov	(_find_volume_sloc6_1_0 + 3),r0
                                  11019 ;	1-genFromRTrack replaced	mov	_find_volume_sloc6_1_0,#0x00
      0037D6 8C*A2            [24]11020 	mov	_find_volume_sloc6_1_0,r4
                                  11021 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc6_1_0 + 1),#0x00
      0037D8 8C*A3            [24]11022 	mov	(_find_volume_sloc6_1_0 + 1),r4
                                  11023 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc6_1_0 + 2),#0x00
      0037DA 8C*A4            [24]11024 	mov	(_find_volume_sloc6_1_0 + 2),r4
      0037DC 74 22            [12]11025 	mov	a,#0x22
      0037DE 2D               [12]11026 	add	a,r5
      0037DF F9               [12]11027 	mov	r1,a
      0037E0 E4               [12]11028 	clr	a
      0037E1 3E               [12]11029 	addc	a,r6
      0037E2 FB               [12]11030 	mov	r3,a
      0037E3 8F 04            [24]11031 	mov	ar4,r7
      0037E5 89 82            [24]11032 	mov	dpl,r1
      0037E7 8B 83            [24]11033 	mov	dph,r3
      0037E9 8C F0            [24]11034 	mov	b,r4
      0037EB 12r00r00         [24]11035 	lcall	__gptrget
      0037EE F9               [12]11036 	mov	r1,a
      0037EF 7C 00            [12]11037 	mov	r4,#0x00
      0037F1 8C 02            [24]11038 	mov	ar2,r4
      0037F3 89 03            [24]11039 	mov	ar3,r1
      0037F5 E4               [12]11040 	clr	a
      0037F6 F9               [12]11041 	mov	r1,a
      0037F7 FC               [12]11042 	mov	r4,a
      0037F8 E5*A2            [12]11043 	mov	a,_find_volume_sloc6_1_0
      0037FA 42 01            [12]11044 	orl	ar1,a
      0037FC E5*A3            [12]11045 	mov	a,(_find_volume_sloc6_1_0 + 1)
      0037FE 42 04            [12]11046 	orl	ar4,a
      003800 E5*A4            [12]11047 	mov	a,(_find_volume_sloc6_1_0 + 2)
      003802 42 03            [12]11048 	orl	ar3,a
      003804 E5*A5            [12]11049 	mov	a,(_find_volume_sloc6_1_0 + 3)
      003806 42 02            [12]11050 	orl	ar2,a
      003808 74 21            [12]11051 	mov	a,#0x21
      00380A 2D               [12]11052 	add	a,r5
      00380B FD               [12]11053 	mov	r5,a
      00380C E4               [12]11054 	clr	a
      00380D 3E               [12]11055 	addc	a,r6
      00380E FE               [12]11056 	mov	r6,a
      00380F 8D 82            [24]11057 	mov	dpl,r5
      003811 8E 83            [24]11058 	mov	dph,r6
      003813 8F F0            [24]11059 	mov	b,r7
      003815 12r00r00         [24]11060 	lcall	__gptrget
      003818 FF               [12]11061 	mov	r7,a
      003819 7D 00            [12]11062 	mov	r5,#0x00
      00381B 8F 00            [24]11063 	mov	ar0,r7
      00381D E4               [12]11064 	clr	a
      00381E FE               [12]11065 	mov	r6,a
      00381F FF               [12]11066 	mov	r7,a
      003820 ED               [12]11067 	mov	a,r5
      003821 42 01            [12]11068 	orl	ar1,a
      003823 E8               [12]11069 	mov	a,r0
      003824 42 04            [12]11070 	orl	ar4,a
      003826 EE               [12]11071 	mov	a,r6
      003827 42 03            [12]11072 	orl	ar3,a
      003829 EF               [12]11073 	mov	a,r7
      00382A 42 02            [12]11074 	orl	ar2,a
      00382C 85*9F 82         [24]11075 	mov	dpl,_find_volume_sloc5_1_0
      00382F 85*A0 83         [24]11076 	mov	dph,(_find_volume_sloc5_1_0 + 1)
      003832 85*A1 F0         [24]11077 	mov	b,(_find_volume_sloc5_1_0 + 2)
      003835 12r00r00         [24]11078 	lcall	__gptrget
      003838 F8               [12]11079 	mov	r0,a
      003839 7D 00            [12]11080 	mov	r5,#0x00
      00383B 7E 00            [12]11081 	mov	r6,#0x00
      00383D 7F 00            [12]11082 	mov	r7,#0x00
      00383F 90r00rED         [24]11083 	mov	dptr,#_find_volume_tsect_65536_172
      003842 E8               [12]11084 	mov	a,r0
      003843 49               [12]11085 	orl	a,r1
      003844 F0               [24]11086 	movx	@dptr,a
      003845 ED               [12]11087 	mov	a,r5
      003846 4C               [12]11088 	orl	a,r4
      003847 A3               [24]11089 	inc	dptr
      003848 F0               [24]11090 	movx	@dptr,a
      003849 EE               [12]11091 	mov	a,r6
      00384A 4B               [12]11092 	orl	a,r3
      00384B A3               [24]11093 	inc	dptr
      00384C F0               [24]11094 	movx	@dptr,a
      00384D EF               [12]11095 	mov	a,r7
      00384E 4A               [12]11096 	orl	a,r2
      00384F A3               [24]11097 	inc	dptr
      003850 F0               [24]11098 	movx	@dptr,a
                           003851 11099 	C$ff.c$2322$1_0$172 ==.
                                  11100 ;	FATFS\src\ff.c:2322: return FR_OK;
      003851 D0 02            [24]11101 	pop	ar2
      003853 D0 01            [24]11102 	pop	ar1
      003855 D0 00            [24]11103 	pop	ar0
                           003857 11104 	C$ff.c$2255$1_0$172 ==.
                                  11105 ;	FATFS\src\ff.c:2255: if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
      003857                      11106 00148$:
                           003857 11107 	C$ff.c$2257$1_0$172 ==.
                                  11108 ;	FATFS\src\ff.c:2257: nrsv = LD_WORD(fs->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
      003857 74 26            [12]11109 	mov	a,#0x26
      003859 28               [12]11110 	add	a,r0
      00385A FD               [12]11111 	mov	r5,a
      00385B E4               [12]11112 	clr	a
      00385C 39               [12]11113 	addc	a,r1
      00385D FE               [12]11114 	mov	r6,a
      00385E 8A 07            [24]11115 	mov	ar7,r2
      003860 C0 00            [24]11116 	push	ar0
      003862 C0 01            [24]11117 	push	ar1
      003864 C0 02            [24]11118 	push	ar2
      003866 74 0E            [12]11119 	mov	a,#0x0e
      003868 2D               [12]11120 	add	a,r5
      003869 FA               [12]11121 	mov	r2,a
      00386A E4               [12]11122 	clr	a
      00386B 3E               [12]11123 	addc	a,r6
      00386C FB               [12]11124 	mov	r3,a
      00386D 8F 04            [24]11125 	mov	ar4,r7
      00386F 74 0F            [12]11126 	mov	a,#0x0f
      003871 2D               [12]11127 	add	a,r5
      003872 FD               [12]11128 	mov	r5,a
      003873 E4               [12]11129 	clr	a
      003874 3E               [12]11130 	addc	a,r6
      003875 FE               [12]11131 	mov	r6,a
      003876 8D 82            [24]11132 	mov	dpl,r5
      003878 8E 83            [24]11133 	mov	dph,r6
      00387A 8F F0            [24]11134 	mov	b,r7
      00387C 12r00r00         [24]11135 	lcall	__gptrget
      00387F FF               [12]11136 	mov	r7,a
      003880 7D 00            [12]11137 	mov	r5,#0x00
      003882 8A 82            [24]11138 	mov	dpl,r2
      003884 8B 83            [24]11139 	mov	dph,r3
      003886 8C F0            [24]11140 	mov	b,r4
      003888 12r00r00         [24]11141 	lcall	__gptrget
      00388B 7E 00            [12]11142 	mov	r6,#0x00
      00388D 4D               [12]11143 	orl	a,r5
      00388E F5*A2            [12]11144 	mov	_find_volume_sloc6_1_0,a
      003890 EE               [12]11145 	mov	a,r6
      003891 4F               [12]11146 	orl	a,r7
      003892 F5*A3            [12]11147 	mov	(_find_volume_sloc6_1_0 + 1),a
                           003894 11148 	C$ff.c$2258$1_0$172 ==.
                                  11149 ;	FATFS\src\ff.c:2258: if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
      003894 D0 02            [24]11150 	pop	ar2
      003896 D0 01            [24]11151 	pop	ar1
      003898 D0 00            [24]11152 	pop	ar0
      00389A E5*A2            [12]11153 	mov	a,_find_volume_sloc6_1_0
      00389C 45*A3            [12]11154 	orl	a,(_find_volume_sloc6_1_0 + 1)
      00389E 70 06            [24]11155 	jnz	00150$
      0038A0 75 82 0D         [24]11156 	mov	dpl,#0x0d
      0038A3 02r00r00         [24]11157 	ljmp	__sdcc_banked_ret
      0038A6                      11158 00150$:
                           0038A6 11159 	C$ff.c$2261$1_0$172 ==.
                                  11160 ;	FATFS\src\ff.c:2261: sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
      0038A6 C0 00            [24]11161 	push	ar0
      0038A8 C0 01            [24]11162 	push	ar1
      0038AA C0 02            [24]11163 	push	ar2
      0038AC 90r00rE9         [24]11164 	mov	dptr,#_find_volume_fasize_65536_172
      0038AF E0               [24]11165 	movx	a,@dptr
      0038B0 FC               [12]11166 	mov	r4,a
      0038B1 A3               [24]11167 	inc	dptr
      0038B2 E0               [24]11168 	movx	a,@dptr
      0038B3 FD               [12]11169 	mov	r5,a
      0038B4 A3               [24]11170 	inc	dptr
      0038B5 E0               [24]11171 	movx	a,@dptr
      0038B6 FE               [12]11172 	mov	r6,a
      0038B7 A3               [24]11173 	inc	dptr
      0038B8 E0               [24]11174 	movx	a,@dptr
      0038B9 FF               [12]11175 	mov	r7,a
      0038BA E4               [12]11176 	clr	a
      0038BB F5*A4            [12]11177 	mov	(_find_volume_sloc6_1_0 + 2),a
      0038BD F5*A5            [12]11178 	mov	(_find_volume_sloc6_1_0 + 3),a
      0038BF EC               [12]11179 	mov	a,r4
      0038C0 25*A2            [12]11180 	add	a,_find_volume_sloc6_1_0
      0038C2 FC               [12]11181 	mov	r4,a
      0038C3 ED               [12]11182 	mov	a,r5
      0038C4 35*A3            [12]11183 	addc	a,(_find_volume_sloc6_1_0 + 1)
      0038C6 FD               [12]11184 	mov	r5,a
      0038C7 EE               [12]11185 	mov	a,r6
      0038C8 35*A4            [12]11186 	addc	a,(_find_volume_sloc6_1_0 + 2)
      0038CA FE               [12]11187 	mov	r6,a
      0038CB EF               [12]11188 	mov	a,r7
      0038CC 35*A5            [12]11189 	addc	a,(_find_volume_sloc6_1_0 + 3)
      0038CE FF               [12]11190 	mov	r7,a
      0038CF 85*90 82         [24]11191 	mov	dpl,_find_volume_sloc0_1_0
      0038D2 85*91 83         [24]11192 	mov	dph,(_find_volume_sloc0_1_0 + 1)
      0038D5 85*92 F0         [24]11193 	mov	b,(_find_volume_sloc0_1_0 + 2)
      0038D8 12r00r00         [24]11194 	lcall	__gptrget
      0038DB FA               [12]11195 	mov	r2,a
      0038DC A3               [24]11196 	inc	dptr
      0038DD 12r00r00         [24]11197 	lcall	__gptrget
      0038E0 C4               [12]11198 	swap	a
      0038E1 CA               [12]11199 	xch	a,r2
      0038E2 C4               [12]11200 	swap	a
      0038E3 54 0F            [12]11201 	anl	a,#0x0f
      0038E5 6A               [12]11202 	xrl	a,r2
      0038E6 CA               [12]11203 	xch	a,r2
      0038E7 54 0F            [12]11204 	anl	a,#0x0f
      0038E9 CA               [12]11205 	xch	a,r2
      0038EA 6A               [12]11206 	xrl	a,r2
      0038EB CA               [12]11207 	xch	a,r2
      0038EC FB               [12]11208 	mov	r3,a
      0038ED 8A 00            [24]11209 	mov	ar0,r2
      0038EF 8B 01            [24]11210 	mov	ar1,r3
      0038F1 E4               [12]11211 	clr	a
      0038F2 FA               [12]11212 	mov	r2,a
      0038F3 FB               [12]11213 	mov	r3,a
      0038F4 E8               [12]11214 	mov	a,r0
      0038F5 2C               [12]11215 	add	a,r4
      0038F6 F5*A6            [12]11216 	mov	_find_volume_sloc7_1_0,a
      0038F8 E9               [12]11217 	mov	a,r1
      0038F9 3D               [12]11218 	addc	a,r5
      0038FA F5*A7            [12]11219 	mov	(_find_volume_sloc7_1_0 + 1),a
      0038FC EA               [12]11220 	mov	a,r2
      0038FD 3E               [12]11221 	addc	a,r6
      0038FE F5*A8            [12]11222 	mov	(_find_volume_sloc7_1_0 + 2),a
      003900 EB               [12]11223 	mov	a,r3
      003901 3F               [12]11224 	addc	a,r7
      003902 F5*A9            [12]11225 	mov	(_find_volume_sloc7_1_0 + 3),a
                           003904 11226 	C$ff.c$2262$1_0$172 ==.
                                  11227 ;	FATFS\src\ff.c:2262: if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
      003904 90r00rED         [24]11228 	mov	dptr,#_find_volume_tsect_65536_172
      003907 E0               [24]11229 	movx	a,@dptr
      003908 F5*AA            [12]11230 	mov	_find_volume_sloc8_1_0,a
      00390A A3               [24]11231 	inc	dptr
      00390B E0               [24]11232 	movx	a,@dptr
      00390C F5*AB            [12]11233 	mov	(_find_volume_sloc8_1_0 + 1),a
      00390E A3               [24]11234 	inc	dptr
      00390F E0               [24]11235 	movx	a,@dptr
      003910 F5*AC            [12]11236 	mov	(_find_volume_sloc8_1_0 + 2),a
      003912 A3               [24]11237 	inc	dptr
      003913 E0               [24]11238 	movx	a,@dptr
      003914 F5*AD            [12]11239 	mov	(_find_volume_sloc8_1_0 + 3),a
      003916 C3               [12]11240 	clr	c
      003917 E5*AA            [12]11241 	mov	a,_find_volume_sloc8_1_0
      003919 95*A6            [12]11242 	subb	a,_find_volume_sloc7_1_0
      00391B E5*AB            [12]11243 	mov	a,(_find_volume_sloc8_1_0 + 1)
      00391D 95*A7            [12]11244 	subb	a,(_find_volume_sloc7_1_0 + 1)
      00391F E5*AC            [12]11245 	mov	a,(_find_volume_sloc8_1_0 + 2)
      003921 95*A8            [12]11246 	subb	a,(_find_volume_sloc7_1_0 + 2)
      003923 E5*AD            [12]11247 	mov	a,(_find_volume_sloc8_1_0 + 3)
      003925 95*A9            [12]11248 	subb	a,(_find_volume_sloc7_1_0 + 3)
      003927 D0 02            [24]11249 	pop	ar2
      003929 D0 01            [24]11250 	pop	ar1
      00392B D0 00            [24]11251 	pop	ar0
      00392D 50 06            [24]11252 	jnc	00152$
      00392F 75 82 0D         [24]11253 	mov	dpl,#0x0d
      003932 02r00r00         [24]11254 	ljmp	__sdcc_banked_ret
      003935                      11255 00152$:
                           003935 11256 	C$ff.c$2263$1_0$172 ==.
                                  11257 ;	FATFS\src\ff.c:2263: nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
      003935 E5*AA            [12]11258 	mov	a,_find_volume_sloc8_1_0
      003937 C3               [12]11259 	clr	c
      003938 95*A6            [12]11260 	subb	a,_find_volume_sloc7_1_0
      00393A FC               [12]11261 	mov	r4,a
      00393B E5*AB            [12]11262 	mov	a,(_find_volume_sloc8_1_0 + 1)
      00393D 95*A7            [12]11263 	subb	a,(_find_volume_sloc7_1_0 + 1)
      00393F FD               [12]11264 	mov	r5,a
      003940 E5*AC            [12]11265 	mov	a,(_find_volume_sloc8_1_0 + 2)
      003942 95*A8            [12]11266 	subb	a,(_find_volume_sloc7_1_0 + 2)
      003944 FE               [12]11267 	mov	r6,a
      003945 E5*AD            [12]11268 	mov	a,(_find_volume_sloc8_1_0 + 3)
      003947 95*A9            [12]11269 	subb	a,(_find_volume_sloc7_1_0 + 3)
      003949 FF               [12]11270 	mov	r7,a
      00394A 85*97 82         [24]11271 	mov	dpl,_find_volume_sloc3_1_0
      00394D 85*98 83         [24]11272 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003950 85*99 F0         [24]11273 	mov	b,(_find_volume_sloc3_1_0 + 2)
      003953 12r00r00         [24]11274 	lcall	__gptrget
      003956 90r00r00         [24]11275 	mov	dptr,#__divulong_PARM_2
      003959 F0               [24]11276 	movx	@dptr,a
      00395A E4               [12]11277 	clr	a
      00395B A3               [24]11278 	inc	dptr
      00395C F0               [24]11279 	movx	@dptr,a
      00395D A3               [24]11280 	inc	dptr
      00395E F0               [24]11281 	movx	@dptr,a
      00395F A3               [24]11282 	inc	dptr
      003960 F0               [24]11283 	movx	@dptr,a
                           003961 11284 	C$ff.c$2264$1_0$172 ==.
                                  11285 ;	FATFS\src\ff.c:2264: if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
      003961 8C 82            [24]11286 	mov	dpl,r4
      003963 8D 83            [24]11287 	mov	dph,r5
      003965 8E F0            [24]11288 	mov	b,r6
      003967 EF               [12]11289 	mov	a,r7
      003968 C0 02            [24]11290 	push	ar2
      00396A C0 01            [24]11291 	push	ar1
      00396C C0 00            [24]11292 	push	ar0
      00396E 12r00r00         [24]11293 	lcall	__divulong
      003971 AC 82            [24]11294 	mov	r4,dpl
      003973 AD 83            [24]11295 	mov	r5,dph
      003975 AE F0            [24]11296 	mov	r6,b
      003977 FF               [12]11297 	mov	r7,a
      003978 D0 00            [24]11298 	pop	ar0
      00397A D0 01            [24]11299 	pop	ar1
      00397C D0 02            [24]11300 	pop	ar2
      00397E EC               [12]11301 	mov	a,r4
      00397F 4D               [12]11302 	orl	a,r5
      003980 4E               [12]11303 	orl	a,r6
      003981 4F               [12]11304 	orl	a,r7
      003982 70 06            [24]11305 	jnz	00154$
      003984 75 82 0D         [24]11306 	mov	dpl,#0x0d
      003987 02r00r00         [24]11307 	ljmp	__sdcc_banked_ret
      00398A                      11308 00154$:
                           00398A 11309 	C$ff.c$2265$1_0$172 ==.
                                  11310 ;	FATFS\src\ff.c:2265: fmt = FS_FAT12;
      00398A 90r00rE4         [24]11311 	mov	dptr,#_find_volume_fmt_65536_172
      00398D 74 01            [12]11312 	mov	a,#0x01
      00398F F0               [24]11313 	movx	@dptr,a
                           003990 11314 	C$ff.c$2266$1_0$172 ==.
                                  11315 ;	FATFS\src\ff.c:2266: if (nclst >= MIN_FAT16) fmt = FS_FAT16;
      003990 C3               [12]11316 	clr	c
      003991 EC               [12]11317 	mov	a,r4
      003992 94 F6            [12]11318 	subb	a,#0xf6
      003994 ED               [12]11319 	mov	a,r5
      003995 94 0F            [12]11320 	subb	a,#0x0f
      003997 EE               [12]11321 	mov	a,r6
      003998 94 00            [12]11322 	subb	a,#0x00
      00399A EF               [12]11323 	mov	a,r7
      00399B 94 00            [12]11324 	subb	a,#0x00
      00399D 40 06            [24]11325 	jc	00156$
      00399F 90r00rE4         [24]11326 	mov	dptr,#_find_volume_fmt_65536_172
      0039A2 74 02            [12]11327 	mov	a,#0x02
      0039A4 F0               [24]11328 	movx	@dptr,a
      0039A5                      11329 00156$:
                           0039A5 11330 	C$ff.c$2267$1_0$172 ==.
                                  11331 ;	FATFS\src\ff.c:2267: if (nclst >= MIN_FAT32) fmt = FS_FAT32;
      0039A5 C3               [12]11332 	clr	c
      0039A6 EC               [12]11333 	mov	a,r4
      0039A7 94 F6            [12]11334 	subb	a,#0xf6
      0039A9 ED               [12]11335 	mov	a,r5
      0039AA 94 FF            [12]11336 	subb	a,#0xff
      0039AC EE               [12]11337 	mov	a,r6
      0039AD 94 00            [12]11338 	subb	a,#0x00
      0039AF EF               [12]11339 	mov	a,r7
      0039B0 94 00            [12]11340 	subb	a,#0x00
      0039B2 40 06            [24]11341 	jc	00158$
      0039B4 90r00rE4         [24]11342 	mov	dptr,#_find_volume_fmt_65536_172
      0039B7 74 03            [12]11343 	mov	a,#0x03
      0039B9 F0               [24]11344 	movx	@dptr,a
      0039BA                      11345 00158$:
                           0039BA 11346 	C$ff.c$2270$1_0$172 ==.
                                  11347 ;	FATFS\src\ff.c:2270: fs->n_fatent = nclst + 2;							/* Number of FAT entries */
      0039BA 74 0A            [12]11348 	mov	a,#0x0a
      0039BC 28               [12]11349 	add	a,r0
      0039BD F5*AA            [12]11350 	mov	_find_volume_sloc8_1_0,a
      0039BF E4               [12]11351 	clr	a
      0039C0 39               [12]11352 	addc	a,r1
      0039C1 F5*AB            [12]11353 	mov	(_find_volume_sloc8_1_0 + 1),a
      0039C3 8A*AC            [24]11354 	mov	(_find_volume_sloc8_1_0 + 2),r2
      0039C5 74 02            [12]11355 	mov	a,#0x02
      0039C7 2C               [12]11356 	add	a,r4
      0039C8 FC               [12]11357 	mov	r4,a
      0039C9 E4               [12]11358 	clr	a
      0039CA 3D               [12]11359 	addc	a,r5
      0039CB FD               [12]11360 	mov	r5,a
      0039CC E4               [12]11361 	clr	a
      0039CD 3E               [12]11362 	addc	a,r6
      0039CE FE               [12]11363 	mov	r6,a
      0039CF E4               [12]11364 	clr	a
      0039D0 3F               [12]11365 	addc	a,r7
      0039D1 FF               [12]11366 	mov	r7,a
      0039D2 85*AA 82         [24]11367 	mov	dpl,_find_volume_sloc8_1_0
      0039D5 85*AB 83         [24]11368 	mov	dph,(_find_volume_sloc8_1_0 + 1)
      0039D8 85*AC F0         [24]11369 	mov	b,(_find_volume_sloc8_1_0 + 2)
      0039DB EC               [12]11370 	mov	a,r4
      0039DC 12r00r00         [24]11371 	lcall	__gptrput
      0039DF A3               [24]11372 	inc	dptr
      0039E0 ED               [12]11373 	mov	a,r5
      0039E1 12r00r00         [24]11374 	lcall	__gptrput
      0039E4 A3               [24]11375 	inc	dptr
      0039E5 EE               [12]11376 	mov	a,r6
      0039E6 12r00r00         [24]11377 	lcall	__gptrput
      0039E9 A3               [24]11378 	inc	dptr
      0039EA EF               [12]11379 	mov	a,r7
      0039EB 12r00r00         [24]11380 	lcall	__gptrput
                           0039EE 11381 	C$ff.c$2271$1_0$172 ==.
                                  11382 ;	FATFS\src\ff.c:2271: fs->volbase = bsect;								/* Volume start sector */
      0039EE 74 12            [12]11383 	mov	a,#0x12
      0039F0 28               [12]11384 	add	a,r0
      0039F1 F5*9F            [12]11385 	mov	_find_volume_sloc5_1_0,a
      0039F3 E4               [12]11386 	clr	a
      0039F4 39               [12]11387 	addc	a,r1
      0039F5 F5*A0            [12]11388 	mov	(_find_volume_sloc5_1_0 + 1),a
      0039F7 8A*A1            [24]11389 	mov	(_find_volume_sloc5_1_0 + 2),r2
      0039F9 90r00rE5         [24]11390 	mov	dptr,#_find_volume_bsect_65536_172
      0039FC E0               [24]11391 	movx	a,@dptr
      0039FD F5*97            [12]11392 	mov	_find_volume_sloc3_1_0,a
      0039FF A3               [24]11393 	inc	dptr
      003A00 E0               [24]11394 	movx	a,@dptr
      003A01 F5*98            [12]11395 	mov	(_find_volume_sloc3_1_0 + 1),a
      003A03 A3               [24]11396 	inc	dptr
      003A04 E0               [24]11397 	movx	a,@dptr
      003A05 F5*99            [12]11398 	mov	(_find_volume_sloc3_1_0 + 2),a
      003A07 A3               [24]11399 	inc	dptr
      003A08 E0               [24]11400 	movx	a,@dptr
      003A09 F5*9A            [12]11401 	mov	(_find_volume_sloc3_1_0 + 3),a
      003A0B 85*9F 82         [24]11402 	mov	dpl,_find_volume_sloc5_1_0
      003A0E 85*A0 83         [24]11403 	mov	dph,(_find_volume_sloc5_1_0 + 1)
      003A11 85*A1 F0         [24]11404 	mov	b,(_find_volume_sloc5_1_0 + 2)
      003A14 E5*97            [12]11405 	mov	a,_find_volume_sloc3_1_0
      003A16 12r00r00         [24]11406 	lcall	__gptrput
      003A19 A3               [24]11407 	inc	dptr
      003A1A E5*98            [12]11408 	mov	a,(_find_volume_sloc3_1_0 + 1)
      003A1C 12r00r00         [24]11409 	lcall	__gptrput
      003A1F A3               [24]11410 	inc	dptr
      003A20 E5*99            [12]11411 	mov	a,(_find_volume_sloc3_1_0 + 2)
      003A22 12r00r00         [24]11412 	lcall	__gptrput
      003A25 A3               [24]11413 	inc	dptr
      003A26 E5*9A            [12]11414 	mov	a,(_find_volume_sloc3_1_0 + 3)
      003A28 12r00r00         [24]11415 	lcall	__gptrput
                           003A2B 11416 	C$ff.c$2272$1_0$172 ==.
                                  11417 ;	FATFS\src\ff.c:2272: fs->fatbase = bsect + nrsv; 						/* FAT start sector */
      003A2B 74 16            [12]11418 	mov	a,#0x16
      003A2D 28               [12]11419 	add	a,r0
      003A2E F5*9F            [12]11420 	mov	_find_volume_sloc5_1_0,a
      003A30 E4               [12]11421 	clr	a
      003A31 39               [12]11422 	addc	a,r1
      003A32 F5*A0            [12]11423 	mov	(_find_volume_sloc5_1_0 + 1),a
      003A34 8A*A1            [24]11424 	mov	(_find_volume_sloc5_1_0 + 2),r2
      003A36 E5*A2            [12]11425 	mov	a,_find_volume_sloc6_1_0
      003A38 25*97            [12]11426 	add	a,_find_volume_sloc3_1_0
      003A3A FC               [12]11427 	mov	r4,a
      003A3B E5*A3            [12]11428 	mov	a,(_find_volume_sloc6_1_0 + 1)
      003A3D 35*98            [12]11429 	addc	a,(_find_volume_sloc3_1_0 + 1)
      003A3F FD               [12]11430 	mov	r5,a
      003A40 E5*A4            [12]11431 	mov	a,(_find_volume_sloc6_1_0 + 2)
      003A42 35*99            [12]11432 	addc	a,(_find_volume_sloc3_1_0 + 2)
      003A44 FE               [12]11433 	mov	r6,a
      003A45 E5*A5            [12]11434 	mov	a,(_find_volume_sloc6_1_0 + 3)
      003A47 35*9A            [12]11435 	addc	a,(_find_volume_sloc3_1_0 + 3)
      003A49 FF               [12]11436 	mov	r7,a
      003A4A 85*9F 82         [24]11437 	mov	dpl,_find_volume_sloc5_1_0
      003A4D 85*A0 83         [24]11438 	mov	dph,(_find_volume_sloc5_1_0 + 1)
      003A50 85*A1 F0         [24]11439 	mov	b,(_find_volume_sloc5_1_0 + 2)
      003A53 EC               [12]11440 	mov	a,r4
      003A54 12r00r00         [24]11441 	lcall	__gptrput
      003A57 A3               [24]11442 	inc	dptr
      003A58 ED               [12]11443 	mov	a,r5
      003A59 12r00r00         [24]11444 	lcall	__gptrput
      003A5C A3               [24]11445 	inc	dptr
      003A5D EE               [12]11446 	mov	a,r6
      003A5E 12r00r00         [24]11447 	lcall	__gptrput
      003A61 A3               [24]11448 	inc	dptr
      003A62 EF               [12]11449 	mov	a,r7
      003A63 12r00r00         [24]11450 	lcall	__gptrput
                           003A66 11451 	C$ff.c$2273$1_0$172 ==.
                                  11452 ;	FATFS\src\ff.c:2273: fs->database = bsect + sysect;						/* Data start sector */
      003A66 74 1E            [12]11453 	mov	a,#0x1e
      003A68 28               [12]11454 	add	a,r0
      003A69 FD               [12]11455 	mov	r5,a
      003A6A E4               [12]11456 	clr	a
      003A6B 39               [12]11457 	addc	a,r1
      003A6C FE               [12]11458 	mov	r6,a
      003A6D 8A 07            [24]11459 	mov	ar7,r2
      003A6F C0 00            [24]11460 	push	ar0
      003A71 C0 01            [24]11461 	push	ar1
      003A73 C0 02            [24]11462 	push	ar2
      003A75 E5*A6            [12]11463 	mov	a,_find_volume_sloc7_1_0
      003A77 25*97            [12]11464 	add	a,_find_volume_sloc3_1_0
      003A79 F9               [12]11465 	mov	r1,a
      003A7A E5*A7            [12]11466 	mov	a,(_find_volume_sloc7_1_0 + 1)
      003A7C 35*98            [12]11467 	addc	a,(_find_volume_sloc3_1_0 + 1)
      003A7E FA               [12]11468 	mov	r2,a
      003A7F E5*A8            [12]11469 	mov	a,(_find_volume_sloc7_1_0 + 2)
      003A81 35*99            [12]11470 	addc	a,(_find_volume_sloc3_1_0 + 2)
      003A83 FB               [12]11471 	mov	r3,a
      003A84 E5*A9            [12]11472 	mov	a,(_find_volume_sloc7_1_0 + 3)
      003A86 35*9A            [12]11473 	addc	a,(_find_volume_sloc3_1_0 + 3)
      003A88 FC               [12]11474 	mov	r4,a
      003A89 8D 82            [24]11475 	mov	dpl,r5
      003A8B 8E 83            [24]11476 	mov	dph,r6
      003A8D 8F F0            [24]11477 	mov	b,r7
      003A8F E9               [12]11478 	mov	a,r1
      003A90 12r00r00         [24]11479 	lcall	__gptrput
      003A93 A3               [24]11480 	inc	dptr
      003A94 EA               [12]11481 	mov	a,r2
      003A95 12r00r00         [24]11482 	lcall	__gptrput
      003A98 A3               [24]11483 	inc	dptr
      003A99 EB               [12]11484 	mov	a,r3
      003A9A 12r00r00         [24]11485 	lcall	__gptrput
      003A9D A3               [24]11486 	inc	dptr
      003A9E EC               [12]11487 	mov	a,r4
      003A9F 12r00r00         [24]11488 	lcall	__gptrput
                           003AA2 11489 	C$ff.c$2274$1_0$172 ==.
                                  11490 ;	FATFS\src\ff.c:2274: if (fmt == FS_FAT32) {
      003AA2 90r00rE4         [24]11491 	mov	dptr,#_find_volume_fmt_65536_172
      003AA5 E0               [24]11492 	movx	a,@dptr
      003AA6 F5*A6            [12]11493 	mov	_find_volume_sloc7_1_0,a
      003AA8 74 03            [12]11494 	mov	a,#0x03
      003AAA B5*A6 02         [24]11495 	cjne	a,_find_volume_sloc7_1_0,00335$
      003AAD 80 09            [24]11496 	sjmp	00336$
      003AAF                      11497 00335$:
      003AAF D0 02            [24]11498 	pop	ar2
      003AB1 D0 01            [24]11499 	pop	ar1
      003AB3 D0 00            [24]11500 	pop	ar0
      003AB5 02r3BrEF         [24]11501 	ljmp	00164$
      003AB8                      11502 00336$:
      003AB8 D0 02            [24]11503 	pop	ar2
      003ABA D0 01            [24]11504 	pop	ar1
      003ABC D0 00            [24]11505 	pop	ar0
                           003ABE 11506 	C$ff.c$2275$2_0$179 ==.
                                  11507 ;	FATFS\src\ff.c:2275: if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
      003ABE 85*90 82         [24]11508 	mov	dpl,_find_volume_sloc0_1_0
      003AC1 85*91 83         [24]11509 	mov	dph,(_find_volume_sloc0_1_0 + 1)
      003AC4 85*92 F0         [24]11510 	mov	b,(_find_volume_sloc0_1_0 + 2)
      003AC7 12r00r00         [24]11511 	lcall	__gptrget
      003ACA FE               [12]11512 	mov	r6,a
      003ACB A3               [24]11513 	inc	dptr
      003ACC 12r00r00         [24]11514 	lcall	__gptrget
      003ACF FF               [12]11515 	mov	r7,a
      003AD0 4E               [12]11516 	orl	a,r6
      003AD1 60 06            [24]11517 	jz	00160$
      003AD3 75 82 0D         [24]11518 	mov	dpl,#0x0d
      003AD6 02r00r00         [24]11519 	ljmp	__sdcc_banked_ret
      003AD9                      11520 00160$:
                           003AD9 11521 	C$ff.c$2276$2_0$179 ==.
                                  11522 ;	FATFS\src\ff.c:2276: fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
      003AD9 74 1A            [12]11523 	mov	a,#0x1a
      003ADB 28               [12]11524 	add	a,r0
      003ADC F5*A2            [12]11525 	mov	_find_volume_sloc6_1_0,a
      003ADE E4               [12]11526 	clr	a
      003ADF 39               [12]11527 	addc	a,r1
      003AE0 F5*A3            [12]11528 	mov	(_find_volume_sloc6_1_0 + 1),a
      003AE2 8A*A4            [24]11529 	mov	(_find_volume_sloc6_1_0 + 2),r2
      003AE4 74 26            [12]11530 	mov	a,#0x26
      003AE6 28               [12]11531 	add	a,r0
      003AE7 FB               [12]11532 	mov	r3,a
      003AE8 E4               [12]11533 	clr	a
      003AE9 39               [12]11534 	addc	a,r1
      003AEA FC               [12]11535 	mov	r4,a
      003AEB 8A 07            [24]11536 	mov	ar7,r2
      003AED C0 00            [24]11537 	push	ar0
      003AEF C0 01            [24]11538 	push	ar1
      003AF1 C0 02            [24]11539 	push	ar2
      003AF3 74 2C            [12]11540 	mov	a,#0x2c
      003AF5 2B               [12]11541 	add	a,r3
      003AF6 F5*97            [12]11542 	mov	_find_volume_sloc3_1_0,a
      003AF8 E4               [12]11543 	clr	a
      003AF9 3C               [12]11544 	addc	a,r4
      003AFA F5*98            [12]11545 	mov	(_find_volume_sloc3_1_0 + 1),a
      003AFC 8F*99            [24]11546 	mov	(_find_volume_sloc3_1_0 + 2),r7
      003AFE 74 2F            [12]11547 	mov	a,#0x2f
      003B00 2B               [12]11548 	add	a,r3
      003B01 F8               [12]11549 	mov	r0,a
      003B02 E4               [12]11550 	clr	a
      003B03 3C               [12]11551 	addc	a,r4
      003B04 F9               [12]11552 	mov	r1,a
      003B05 8F 06            [24]11553 	mov	ar6,r7
      003B07 88 82            [24]11554 	mov	dpl,r0
      003B09 89 83            [24]11555 	mov	dph,r1
      003B0B 8E F0            [24]11556 	mov	b,r6
      003B0D 12r00r00         [24]11557 	lcall	__gptrget
      003B10 F8               [12]11558 	mov	r0,a
      003B11 7E 00            [12]11559 	mov	r6,#0x00
      003B13 88*B1            [24]11560 	mov	(_find_volume_sloc9_1_0 + 3),r0
                                  11561 ;	1-genFromRTrack replaced	mov	_find_volume_sloc9_1_0,#0x00
      003B15 8E*AE            [24]11562 	mov	_find_volume_sloc9_1_0,r6
                                  11563 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc9_1_0 + 1),#0x00
      003B17 8E*AF            [24]11564 	mov	(_find_volume_sloc9_1_0 + 1),r6
                                  11565 ;	1-genFromRTrack replaced	mov	(_find_volume_sloc9_1_0 + 2),#0x00
      003B19 8E*B0            [24]11566 	mov	(_find_volume_sloc9_1_0 + 2),r6
      003B1B 74 2E            [12]11567 	mov	a,#0x2e
      003B1D 2B               [12]11568 	add	a,r3
      003B1E F9               [12]11569 	mov	r1,a
      003B1F E4               [12]11570 	clr	a
      003B20 3C               [12]11571 	addc	a,r4
      003B21 FD               [12]11572 	mov	r5,a
      003B22 8F 06            [24]11573 	mov	ar6,r7
      003B24 89 82            [24]11574 	mov	dpl,r1
      003B26 8D 83            [24]11575 	mov	dph,r5
      003B28 8E F0            [24]11576 	mov	b,r6
      003B2A 12r00r00         [24]11577 	lcall	__gptrget
      003B2D FD               [12]11578 	mov	r5,a
      003B2E 7E 00            [12]11579 	mov	r6,#0x00
      003B30 8E 02            [24]11580 	mov	ar2,r6
      003B32 8D 01            [24]11581 	mov	ar1,r5
      003B34 E4               [12]11582 	clr	a
      003B35 FD               [12]11583 	mov	r5,a
      003B36 FE               [12]11584 	mov	r6,a
      003B37 E5*AE            [12]11585 	mov	a,_find_volume_sloc9_1_0
      003B39 42 05            [12]11586 	orl	ar5,a
      003B3B E5*AF            [12]11587 	mov	a,(_find_volume_sloc9_1_0 + 1)
      003B3D 42 06            [12]11588 	orl	ar6,a
      003B3F E5*B0            [12]11589 	mov	a,(_find_volume_sloc9_1_0 + 2)
      003B41 42 01            [12]11590 	orl	ar1,a
      003B43 E5*B1            [12]11591 	mov	a,(_find_volume_sloc9_1_0 + 3)
      003B45 42 02            [12]11592 	orl	ar2,a
      003B47 74 2D            [12]11593 	mov	a,#0x2d
      003B49 2B               [12]11594 	add	a,r3
      003B4A FB               [12]11595 	mov	r3,a
      003B4B E4               [12]11596 	clr	a
      003B4C 3C               [12]11597 	addc	a,r4
      003B4D FC               [12]11598 	mov	r4,a
      003B4E 8B 82            [24]11599 	mov	dpl,r3
      003B50 8C 83            [24]11600 	mov	dph,r4
      003B52 8F F0            [24]11601 	mov	b,r7
      003B54 12r00r00         [24]11602 	lcall	__gptrget
      003B57 FF               [12]11603 	mov	r7,a
      003B58 7B 00            [12]11604 	mov	r3,#0x00
      003B5A 8F 00            [24]11605 	mov	ar0,r7
      003B5C E4               [12]11606 	clr	a
      003B5D FC               [12]11607 	mov	r4,a
      003B5E FF               [12]11608 	mov	r7,a
      003B5F EB               [12]11609 	mov	a,r3
      003B60 42 05            [12]11610 	orl	ar5,a
      003B62 E8               [12]11611 	mov	a,r0
      003B63 42 06            [12]11612 	orl	ar6,a
      003B65 EC               [12]11613 	mov	a,r4
      003B66 42 01            [12]11614 	orl	ar1,a
      003B68 EF               [12]11615 	mov	a,r7
      003B69 42 02            [12]11616 	orl	ar2,a
      003B6B 85*97 82         [24]11617 	mov	dpl,_find_volume_sloc3_1_0
      003B6E 85*98 83         [24]11618 	mov	dph,(_find_volume_sloc3_1_0 + 1)
      003B71 85*99 F0         [24]11619 	mov	b,(_find_volume_sloc3_1_0 + 2)
      003B74 12r00r00         [24]11620 	lcall	__gptrget
      003B77 F8               [12]11621 	mov	r0,a
      003B78 E4               [12]11622 	clr	a
      003B79 FB               [12]11623 	mov	r3,a
      003B7A FC               [12]11624 	mov	r4,a
      003B7B FF               [12]11625 	mov	r7,a
      003B7C E8               [12]11626 	mov	a,r0
      003B7D 42 05            [12]11627 	orl	ar5,a
      003B7F EB               [12]11628 	mov	a,r3
      003B80 42 06            [12]11629 	orl	ar6,a
      003B82 EC               [12]11630 	mov	a,r4
      003B83 42 01            [12]11631 	orl	ar1,a
      003B85 EF               [12]11632 	mov	a,r7
      003B86 42 02            [12]11633 	orl	ar2,a
      003B88 85*A2 82         [24]11634 	mov	dpl,_find_volume_sloc6_1_0
      003B8B 85*A3 83         [24]11635 	mov	dph,(_find_volume_sloc6_1_0 + 1)
      003B8E 85*A4 F0         [24]11636 	mov	b,(_find_volume_sloc6_1_0 + 2)
      003B91 ED               [12]11637 	mov	a,r5
      003B92 12r00r00         [24]11638 	lcall	__gptrput
      003B95 A3               [24]11639 	inc	dptr
      003B96 EE               [12]11640 	mov	a,r6
      003B97 12r00r00         [24]11641 	lcall	__gptrput
      003B9A A3               [24]11642 	inc	dptr
      003B9B E9               [12]11643 	mov	a,r1
      003B9C 12r00r00         [24]11644 	lcall	__gptrput
      003B9F A3               [24]11645 	inc	dptr
      003BA0 EA               [12]11646 	mov	a,r2
      003BA1 12r00r00         [24]11647 	lcall	__gptrput
                           003BA4 11648 	C$ff.c$2277$2_0$179 ==.
                                  11649 ;	FATFS\src\ff.c:2277: szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
      003BA4 85*AA 82         [24]11650 	mov	dpl,_find_volume_sloc8_1_0
      003BA7 85*AB 83         [24]11651 	mov	dph,(_find_volume_sloc8_1_0 + 1)
      003BAA 85*AC F0         [24]11652 	mov	b,(_find_volume_sloc8_1_0 + 2)
      003BAD 12r00r00         [24]11653 	lcall	__gptrget
      003BB0 FC               [12]11654 	mov	r4,a
      003BB1 A3               [24]11655 	inc	dptr
      003BB2 12r00r00         [24]11656 	lcall	__gptrget
      003BB5 FD               [12]11657 	mov	r5,a
      003BB6 A3               [24]11658 	inc	dptr
      003BB7 12r00r00         [24]11659 	lcall	__gptrget
      003BBA FE               [12]11660 	mov	r6,a
      003BBB A3               [24]11661 	inc	dptr
      003BBC 12r00r00         [24]11662 	lcall	__gptrget
      003BBF FF               [12]11663 	mov	r7,a
      003BC0 EC               [12]11664 	mov	a,r4
      003BC1 2C               [12]11665 	add	a,r4
      003BC2 FC               [12]11666 	mov	r4,a
      003BC3 ED               [12]11667 	mov	a,r5
      003BC4 33               [12]11668 	rlc	a
      003BC5 FD               [12]11669 	mov	r5,a
      003BC6 EE               [12]11670 	mov	a,r6
      003BC7 33               [12]11671 	rlc	a
      003BC8 FE               [12]11672 	mov	r6,a
      003BC9 EF               [12]11673 	mov	a,r7
      003BCA 33               [12]11674 	rlc	a
      003BCB FF               [12]11675 	mov	r7,a
      003BCC EC               [12]11676 	mov	a,r4
      003BCD 2C               [12]11677 	add	a,r4
      003BCE FC               [12]11678 	mov	r4,a
      003BCF ED               [12]11679 	mov	a,r5
      003BD0 33               [12]11680 	rlc	a
      003BD1 FD               [12]11681 	mov	r5,a
      003BD2 EE               [12]11682 	mov	a,r6
      003BD3 33               [12]11683 	rlc	a
      003BD4 FE               [12]11684 	mov	r6,a
      003BD5 EF               [12]11685 	mov	a,r7
      003BD6 33               [12]11686 	rlc	a
      003BD7 FF               [12]11687 	mov	r7,a
      003BD8 90r00rF1         [24]11688 	mov	dptr,#_find_volume_szbfat_65536_172
      003BDB EC               [12]11689 	mov	a,r4
      003BDC F0               [24]11690 	movx	@dptr,a
      003BDD ED               [12]11691 	mov	a,r5
      003BDE A3               [24]11692 	inc	dptr
      003BDF F0               [24]11693 	movx	@dptr,a
      003BE0 EE               [12]11694 	mov	a,r6
      003BE1 A3               [24]11695 	inc	dptr
      003BE2 F0               [24]11696 	movx	@dptr,a
      003BE3 EF               [12]11697 	mov	a,r7
      003BE4 A3               [24]11698 	inc	dptr
      003BE5 F0               [24]11699 	movx	@dptr,a
      003BE6 D0 02            [24]11700 	pop	ar2
      003BE8 D0 01            [24]11701 	pop	ar1
      003BEA D0 00            [24]11702 	pop	ar0
      003BEC 02r3Dr30         [24]11703 	ljmp	00165$
      003BEF                      11704 00164$:
                           003BEF 11705 	C$ff.c$2279$2_0$180 ==.
                                  11706 ;	FATFS\src\ff.c:2279: if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
      003BEF 85*90 82         [24]11707 	mov	dpl,_find_volume_sloc0_1_0
      003BF2 85*91 83         [24]11708 	mov	dph,(_find_volume_sloc0_1_0 + 1)
      003BF5 85*92 F0         [24]11709 	mov	b,(_find_volume_sloc0_1_0 + 2)
      003BF8 12r00r00         [24]11710 	lcall	__gptrget
      003BFB FE               [12]11711 	mov	r6,a
      003BFC A3               [24]11712 	inc	dptr
      003BFD 12r00r00         [24]11713 	lcall	__gptrget
      003C00 FF               [12]11714 	mov	r7,a
      003C01 4E               [12]11715 	orl	a,r6
      003C02 70 06            [24]11716 	jnz	00162$
      003C04 75 82 0D         [24]11717 	mov	dpl,#0x0d
      003C07 02r00r00         [24]11718 	ljmp	__sdcc_banked_ret
      003C0A                      11719 00162$:
                           003C0A 11720 	C$ff.c$2280$2_0$180 ==.
                                  11721 ;	FATFS\src\ff.c:2280: fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
      003C0A 74 1A            [12]11722 	mov	a,#0x1a
      003C0C 28               [12]11723 	add	a,r0
      003C0D F5*AE            [12]11724 	mov	_find_volume_sloc9_1_0,a
      003C0F E4               [12]11725 	clr	a
      003C10 39               [12]11726 	addc	a,r1
      003C11 F5*AF            [12]11727 	mov	(_find_volume_sloc9_1_0 + 1),a
      003C13 8A*B0            [24]11728 	mov	(_find_volume_sloc9_1_0 + 2),r2
      003C15 C0 00            [24]11729 	push	ar0
      003C17 C0 01            [24]11730 	push	ar1
      003C19 C0 02            [24]11731 	push	ar2
      003C1B 85*9F 82         [24]11732 	mov	dpl,_find_volume_sloc5_1_0
      003C1E 85*A0 83         [24]11733 	mov	dph,(_find_volume_sloc5_1_0 + 1)
      003C21 85*A1 F0         [24]11734 	mov	b,(_find_volume_sloc5_1_0 + 2)
      003C24 12r00r00         [24]11735 	lcall	__gptrget
      003C27 F9               [12]11736 	mov	r1,a
      003C28 A3               [24]11737 	inc	dptr
      003C29 12r00r00         [24]11738 	lcall	__gptrget
      003C2C FA               [12]11739 	mov	r2,a
      003C2D A3               [24]11740 	inc	dptr
      003C2E 12r00r00         [24]11741 	lcall	__gptrget
      003C31 FB               [12]11742 	mov	r3,a
      003C32 A3               [24]11743 	inc	dptr
      003C33 12r00r00         [24]11744 	lcall	__gptrget
      003C36 FC               [12]11745 	mov	r4,a
      003C37 90r00rE9         [24]11746 	mov	dptr,#_find_volume_fasize_65536_172
      003C3A E0               [24]11747 	movx	a,@dptr
      003C3B F8               [12]11748 	mov	r0,a
      003C3C A3               [24]11749 	inc	dptr
      003C3D E0               [24]11750 	movx	a,@dptr
      003C3E FD               [12]11751 	mov	r5,a
      003C3F A3               [24]11752 	inc	dptr
      003C40 E0               [24]11753 	movx	a,@dptr
      003C41 FE               [12]11754 	mov	r6,a
      003C42 A3               [24]11755 	inc	dptr
      003C43 E0               [24]11756 	movx	a,@dptr
      003C44 FF               [12]11757 	mov	r7,a
      003C45 E8               [12]11758 	mov	a,r0
      003C46 29               [12]11759 	add	a,r1
      003C47 F9               [12]11760 	mov	r1,a
      003C48 ED               [12]11761 	mov	a,r5
      003C49 3A               [12]11762 	addc	a,r2
      003C4A FA               [12]11763 	mov	r2,a
      003C4B EE               [12]11764 	mov	a,r6
      003C4C 3B               [12]11765 	addc	a,r3
      003C4D FB               [12]11766 	mov	r3,a
      003C4E EF               [12]11767 	mov	a,r7
      003C4F 3C               [12]11768 	addc	a,r4
      003C50 FC               [12]11769 	mov	r4,a
      003C51 85*AE 82         [24]11770 	mov	dpl,_find_volume_sloc9_1_0
      003C54 85*AF 83         [24]11771 	mov	dph,(_find_volume_sloc9_1_0 + 1)
      003C57 85*B0 F0         [24]11772 	mov	b,(_find_volume_sloc9_1_0 + 2)
      003C5A E9               [12]11773 	mov	a,r1
      003C5B 12r00r00         [24]11774 	lcall	__gptrput
      003C5E A3               [24]11775 	inc	dptr
      003C5F EA               [12]11776 	mov	a,r2
      003C60 12r00r00         [24]11777 	lcall	__gptrput
      003C63 A3               [24]11778 	inc	dptr
      003C64 EB               [12]11779 	mov	a,r3
      003C65 12r00r00         [24]11780 	lcall	__gptrput
      003C68 A3               [24]11781 	inc	dptr
      003C69 EC               [12]11782 	mov	a,r4
      003C6A 12r00r00         [24]11783 	lcall	__gptrput
                           003C6D 11784 	C$ff.c$2281$2_0$180 ==.
                                  11785 ;	FATFS\src\ff.c:2281: szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
      003C6D 74 02            [12]11786 	mov	a,#0x02
      003C6F B5*A6 02         [24]11787 	cjne	a,_find_volume_sloc7_1_0,00339$
      003C72 80 08            [24]11788 	sjmp	00340$
      003C74                      11789 00339$:
      003C74 D0 02            [24]11790 	pop	ar2
      003C76 D0 01            [24]11791 	pop	ar1
      003C78 D0 00            [24]11792 	pop	ar0
      003C7A 80 30            [24]11793 	sjmp	00176$
      003C7C                      11794 00340$:
      003C7C D0 02            [24]11795 	pop	ar2
      003C7E D0 01            [24]11796 	pop	ar1
      003C80 D0 00            [24]11797 	pop	ar0
                           003C82 11798 	C$ff.c$2282$2_0$180 ==.
                                  11799 ;	FATFS\src\ff.c:2282: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
      003C82 85*AA 82         [24]11800 	mov	dpl,_find_volume_sloc8_1_0
      003C85 85*AB 83         [24]11801 	mov	dph,(_find_volume_sloc8_1_0 + 1)
      003C88 85*AC F0         [24]11802 	mov	b,(_find_volume_sloc8_1_0 + 2)
      003C8B 12r00r00         [24]11803 	lcall	__gptrget
      003C8E FC               [12]11804 	mov	r4,a
      003C8F A3               [24]11805 	inc	dptr
      003C90 12r00r00         [24]11806 	lcall	__gptrget
      003C93 FD               [12]11807 	mov	r5,a
      003C94 A3               [24]11808 	inc	dptr
      003C95 12r00r00         [24]11809 	lcall	__gptrget
      003C98 FE               [12]11810 	mov	r6,a
      003C99 A3               [24]11811 	inc	dptr
      003C9A 12r00r00         [24]11812 	lcall	__gptrget
      003C9D FF               [12]11813 	mov	r7,a
      003C9E EC               [12]11814 	mov	a,r4
      003C9F 2C               [12]11815 	add	a,r4
      003CA0 FC               [12]11816 	mov	r4,a
      003CA1 ED               [12]11817 	mov	a,r5
      003CA2 33               [12]11818 	rlc	a
      003CA3 FD               [12]11819 	mov	r5,a
      003CA4 EE               [12]11820 	mov	a,r6
      003CA5 33               [12]11821 	rlc	a
      003CA6 FE               [12]11822 	mov	r6,a
      003CA7 EF               [12]11823 	mov	a,r7
      003CA8 33               [12]11824 	rlc	a
      003CA9 FF               [12]11825 	mov	r7,a
      003CAA 80 76            [24]11826 	sjmp	00177$
      003CAC                      11827 00176$:
      003CAC C0 00            [24]11828 	push	ar0
      003CAE C0 01            [24]11829 	push	ar1
      003CB0 C0 02            [24]11830 	push	ar2
      003CB2 85*AA 82         [24]11831 	mov	dpl,_find_volume_sloc8_1_0
      003CB5 85*AB 83         [24]11832 	mov	dph,(_find_volume_sloc8_1_0 + 1)
      003CB8 85*AC F0         [24]11833 	mov	b,(_find_volume_sloc8_1_0 + 2)
      003CBB 12r00r00         [24]11834 	lcall	__gptrget
      003CBE F5*AE            [12]11835 	mov	_find_volume_sloc9_1_0,a
      003CC0 A3               [24]11836 	inc	dptr
      003CC1 12r00r00         [24]11837 	lcall	__gptrget
      003CC4 F5*AF            [12]11838 	mov	(_find_volume_sloc9_1_0 + 1),a
      003CC6 A3               [24]11839 	inc	dptr
      003CC7 12r00r00         [24]11840 	lcall	__gptrget
      003CCA F5*B0            [12]11841 	mov	(_find_volume_sloc9_1_0 + 2),a
      003CCC A3               [24]11842 	inc	dptr
      003CCD 12r00r00         [24]11843 	lcall	__gptrget
      003CD0 F5*B1            [12]11844 	mov	(_find_volume_sloc9_1_0 + 3),a
      003CD2 90r00r00         [24]11845 	mov	dptr,#__mullong_PARM_2
      003CD5 E5*AE            [12]11846 	mov	a,_find_volume_sloc9_1_0
      003CD7 F0               [24]11847 	movx	@dptr,a
      003CD8 E5*AF            [12]11848 	mov	a,(_find_volume_sloc9_1_0 + 1)
      003CDA A3               [24]11849 	inc	dptr
      003CDB F0               [24]11850 	movx	@dptr,a
      003CDC E5*B0            [12]11851 	mov	a,(_find_volume_sloc9_1_0 + 2)
      003CDE A3               [24]11852 	inc	dptr
      003CDF F0               [24]11853 	movx	@dptr,a
      003CE0 E5*B1            [12]11854 	mov	a,(_find_volume_sloc9_1_0 + 3)
      003CE2 A3               [24]11855 	inc	dptr
      003CE3 F0               [24]11856 	movx	@dptr,a
      003CE4 90 00 03         [24]11857 	mov	dptr,#(0x03&0x00ff)
      003CE7 E4               [12]11858 	clr	a
      003CE8 F5 F0            [12]11859 	mov	b,a
      003CEA 12r00r00         [24]11860 	lcall	__mullong
      003CED A8 82            [24]11861 	mov	r0,dpl
      003CEF A9 83            [24]11862 	mov	r1,dph
      003CF1 AA F0            [24]11863 	mov	r2,b
      003CF3 C3               [12]11864 	clr	c
      003CF4 13               [12]11865 	rrc	a
      003CF5 F5*AD            [12]11866 	mov	(_find_volume_sloc8_1_0 + 3),a
      003CF7 EA               [12]11867 	mov	a,r2
      003CF8 13               [12]11868 	rrc	a
      003CF9 F5*AC            [12]11869 	mov	(_find_volume_sloc8_1_0 + 2),a
      003CFB E9               [12]11870 	mov	a,r1
      003CFC 13               [12]11871 	rrc	a
      003CFD F5*AB            [12]11872 	mov	(_find_volume_sloc8_1_0 + 1),a
      003CFF E8               [12]11873 	mov	a,r0
      003D00 13               [12]11874 	rrc	a
      003D01 F5*AA            [12]11875 	mov	_find_volume_sloc8_1_0,a
      003D03 74 01            [12]11876 	mov	a,#0x01
      003D05 55*AE            [12]11877 	anl	a,_find_volume_sloc9_1_0
      003D07 F8               [12]11878 	mov	r0,a
      003D08 E4               [12]11879 	clr	a
      003D09 F9               [12]11880 	mov	r1,a
      003D0A FA               [12]11881 	mov	r2,a
      003D0B FB               [12]11882 	mov	r3,a
      003D0C E8               [12]11883 	mov	a,r0
      003D0D 25*AA            [12]11884 	add	a,_find_volume_sloc8_1_0
      003D0F FC               [12]11885 	mov	r4,a
      003D10 E9               [12]11886 	mov	a,r1
      003D11 35*AB            [12]11887 	addc	a,(_find_volume_sloc8_1_0 + 1)
      003D13 FD               [12]11888 	mov	r5,a
      003D14 EA               [12]11889 	mov	a,r2
      003D15 35*AC            [12]11890 	addc	a,(_find_volume_sloc8_1_0 + 2)
      003D17 FE               [12]11891 	mov	r6,a
      003D18 EB               [12]11892 	mov	a,r3
      003D19 35*AD            [12]11893 	addc	a,(_find_volume_sloc8_1_0 + 3)
      003D1B FF               [12]11894 	mov	r7,a
                           003D1C 11895 	C$ff.c$2322$1_0$172 ==.
                                  11896 ;	FATFS\src\ff.c:2322: return FR_OK;
      003D1C D0 02            [24]11897 	pop	ar2
      003D1E D0 01            [24]11898 	pop	ar1
      003D20 D0 00            [24]11899 	pop	ar0
                           003D22 11900 	C$ff.c$2282$2_0$180 ==.
                                  11901 ;	FATFS\src\ff.c:2282: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
      003D22                      11902 00177$:
      003D22 90r00rF1         [24]11903 	mov	dptr,#_find_volume_szbfat_65536_172
      003D25 EC               [12]11904 	mov	a,r4
      003D26 F0               [24]11905 	movx	@dptr,a
      003D27 ED               [12]11906 	mov	a,r5
      003D28 A3               [24]11907 	inc	dptr
      003D29 F0               [24]11908 	movx	@dptr,a
      003D2A EE               [12]11909 	mov	a,r6
      003D2B A3               [24]11910 	inc	dptr
      003D2C F0               [24]11911 	movx	@dptr,a
      003D2D EF               [12]11912 	mov	a,r7
      003D2E A3               [24]11913 	inc	dptr
      003D2F F0               [24]11914 	movx	@dptr,a
      003D30                      11915 00165$:
                           003D30 11916 	C$ff.c$2284$1_0$172 ==.
                                  11917 ;	FATFS\src\ff.c:2284: if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
      003D30 C0 00            [24]11918 	push	ar0
      003D32 C0 01            [24]11919 	push	ar1
      003D34 C0 02            [24]11920 	push	ar2
      003D36 85*9B 82         [24]11921 	mov	dpl,_find_volume_sloc4_1_0
      003D39 85*9C 83         [24]11922 	mov	dph,(_find_volume_sloc4_1_0 + 1)
      003D3C 85*9D F0         [24]11923 	mov	b,(_find_volume_sloc4_1_0 + 2)
      003D3F 12r00r00         [24]11924 	lcall	__gptrget
      003D42 FC               [12]11925 	mov	r4,a
      003D43 A3               [24]11926 	inc	dptr
      003D44 12r00r00         [24]11927 	lcall	__gptrget
      003D47 FD               [12]11928 	mov	r5,a
      003D48 A3               [24]11929 	inc	dptr
      003D49 12r00r00         [24]11930 	lcall	__gptrget
      003D4C FE               [12]11931 	mov	r6,a
      003D4D A3               [24]11932 	inc	dptr
      003D4E 12r00r00         [24]11933 	lcall	__gptrget
      003D51 FF               [12]11934 	mov	r7,a
      003D52 90r00rF1         [24]11935 	mov	dptr,#_find_volume_szbfat_65536_172
      003D55 E0               [24]11936 	movx	a,@dptr
      003D56 F8               [12]11937 	mov	r0,a
      003D57 A3               [24]11938 	inc	dptr
      003D58 E0               [24]11939 	movx	a,@dptr
      003D59 F9               [12]11940 	mov	r1,a
      003D5A A3               [24]11941 	inc	dptr
      003D5B E0               [24]11942 	movx	a,@dptr
      003D5C FA               [12]11943 	mov	r2,a
      003D5D A3               [24]11944 	inc	dptr
      003D5E E0               [24]11945 	movx	a,@dptr
      003D5F FB               [12]11946 	mov	r3,a
      003D60 74 FF            [12]11947 	mov	a,#0xff
      003D62 28               [12]11948 	add	a,r0
      003D63 74 01            [12]11949 	mov	a,#0x01
      003D65 39               [12]11950 	addc	a,r1
      003D66 F9               [12]11951 	mov	r1,a
      003D67 E4               [12]11952 	clr	a
      003D68 3A               [12]11953 	addc	a,r2
      003D69 FA               [12]11954 	mov	r2,a
      003D6A E4               [12]11955 	clr	a
      003D6B 3B               [12]11956 	addc	a,r3
      003D6C 7B 00            [12]11957 	mov	r3,#0x00
      003D6E C3               [12]11958 	clr	c
      003D6F 13               [12]11959 	rrc	a
      003D70 CA               [12]11960 	xch	a,r2
      003D71 13               [12]11961 	rrc	a
      003D72 C9               [12]11962 	xch	a,r1
      003D73 13               [12]11963 	rrc	a
      003D74 F8               [12]11964 	mov	r0,a
      003D75 C3               [12]11965 	clr	c
      003D76 EC               [12]11966 	mov	a,r4
      003D77 98               [12]11967 	subb	a,r0
      003D78 ED               [12]11968 	mov	a,r5
      003D79 99               [12]11969 	subb	a,r1
      003D7A EE               [12]11970 	mov	a,r6
      003D7B 9A               [12]11971 	subb	a,r2
      003D7C EF               [12]11972 	mov	a,r7
      003D7D 9B               [12]11973 	subb	a,r3
      003D7E D0 02            [24]11974 	pop	ar2
      003D80 D0 01            [24]11975 	pop	ar1
      003D82 D0 00            [24]11976 	pop	ar0
      003D84 50 05            [24]11977 	jnc	00167$
                           003D86 11978 	C$ff.c$2285$1_0$172 ==.
                                  11979 ;	FATFS\src\ff.c:2285: return FR_NO_FILESYSTEM;
      003D86 75 82 0D         [24]11980 	mov	dpl,#0x0d
      003D89 80 3A            [24]11981 	sjmp	00170$
      003D8B                      11982 00167$:
                           003D8B 11983 	C$ff.c$2313$1_0$172 ==.
                                  11984 ;	FATFS\src\ff.c:2313: fs->fs_type = fmt;	/* FAT sub-type */
      003D8B 90r00rE4         [24]11985 	mov	dptr,#_find_volume_fmt_65536_172
      003D8E E0               [24]11986 	movx	a,@dptr
      003D8F 88 82            [24]11987 	mov	dpl,r0
      003D91 89 83            [24]11988 	mov	dph,r1
      003D93 8A F0            [24]11989 	mov	b,r2
      003D95 12r00r00         [24]11990 	lcall	__gptrput
                           003D98 11991 	C$ff.c$2314$1_0$172 ==.
                                  11992 ;	FATFS\src\ff.c:2314: fs->id = ++Fsid;	/* File system mount ID */
      003D98 74 06            [12]11993 	mov	a,#0x06
      003D9A 28               [12]11994 	add	a,r0
      003D9B F8               [12]11995 	mov	r0,a
      003D9C E4               [12]11996 	clr	a
      003D9D 39               [12]11997 	addc	a,r1
      003D9E F9               [12]11998 	mov	r1,a
      003D9F 90r00r06         [24]11999 	mov	dptr,#_Fsid
      003DA2 E0               [24]12000 	movx	a,@dptr
      003DA3 24 01            [12]12001 	add	a,#0x01
      003DA5 F0               [24]12002 	movx	@dptr,a
      003DA6 A3               [24]12003 	inc	dptr
      003DA7 E0               [24]12004 	movx	a,@dptr
      003DA8 34 00            [12]12005 	addc	a,#0x00
      003DAA F0               [24]12006 	movx	@dptr,a
      003DAB 90r00r06         [24]12007 	mov	dptr,#_Fsid
      003DAE E0               [24]12008 	movx	a,@dptr
      003DAF FE               [12]12009 	mov	r6,a
      003DB0 A3               [24]12010 	inc	dptr
      003DB1 E0               [24]12011 	movx	a,@dptr
      003DB2 FF               [12]12012 	mov	r7,a
      003DB3 88 82            [24]12013 	mov	dpl,r0
      003DB5 89 83            [24]12014 	mov	dph,r1
      003DB7 8A F0            [24]12015 	mov	b,r2
      003DB9 EE               [12]12016 	mov	a,r6
      003DBA 12r00r00         [24]12017 	lcall	__gptrput
      003DBD A3               [24]12018 	inc	dptr
      003DBE EF               [12]12019 	mov	a,r7
      003DBF 12r00r00         [24]12020 	lcall	__gptrput
                           003DC2 12021 	C$ff.c$2322$1_0$172 ==.
                                  12022 ;	FATFS\src\ff.c:2322: return FR_OK;
      003DC2 75 82 00         [24]12023 	mov	dpl,#0x00
      003DC5                      12024 00170$:
                           003DC5 12025 	C$ff.c$2323$1_0$172 ==.
                                  12026 ;	FATFS\src\ff.c:2323: }
                           003DC5 12027 	C$ff.c$2323$1_0$172 ==.
                           003DC5 12028 	XFff$find_volume$0$0 ==.
      003DC5 02r00r00         [24]12029 	ljmp	__sdcc_banked_ret
                                  12030 ;------------------------------------------------------------
                                  12031 ;Allocation info for local variables in function 'validate'
                                  12032 ;------------------------------------------------------------
                                  12033 ;sloc0                     Allocated with name '_validate_sloc0_1_0'
                                  12034 ;obj                       Allocated with name '_validate_obj_65536_181'
                                  12035 ;fil                       Allocated with name '_validate_fil_65536_182'
                                  12036 ;------------------------------------------------------------
                           003DC8 12037 	Fff$validate$0$0 ==.
                           003DC8 12038 	C$ff.c$2333$1_0$182 ==.
                                  12039 ;	FATFS\src\ff.c:2333: FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
                                  12040 ;	-----------------------------------------
                                  12041 ;	 function validate
                                  12042 ;	-----------------------------------------
      003DC8                      12043 _validate:
      003DC8 AF F0            [24]12044 	mov	r7,b
      003DCA AE 83            [24]12045 	mov	r6,dph
      003DCC E5 82            [12]12046 	mov	a,dpl
      003DCE 90r01r05         [24]12047 	mov	dptr,#_validate_obj_65536_181
      003DD1 F0               [24]12048 	movx	@dptr,a
      003DD2 EE               [12]12049 	mov	a,r6
      003DD3 A3               [24]12050 	inc	dptr
      003DD4 F0               [24]12051 	movx	@dptr,a
      003DD5 EF               [12]12052 	mov	a,r7
      003DD6 A3               [24]12053 	inc	dptr
      003DD7 F0               [24]12054 	movx	@dptr,a
                           003DD8 12055 	C$ff.c$2337$1_0$182 ==.
                                  12056 ;	FATFS\src\ff.c:2337: FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
      003DD8 90r01r05         [24]12057 	mov	dptr,#_validate_obj_65536_181
      003DDB E0               [24]12058 	movx	a,@dptr
      003DDC FD               [12]12059 	mov	r5,a
      003DDD A3               [24]12060 	inc	dptr
      003DDE E0               [24]12061 	movx	a,@dptr
      003DDF FE               [12]12062 	mov	r6,a
      003DE0 A3               [24]12063 	inc	dptr
      003DE1 E0               [24]12064 	movx	a,@dptr
      003DE2 FF               [12]12065 	mov	r7,a
      003DE3 8D*B2            [24]12066 	mov	_validate_sloc0_1_0,r5
      003DE5 8E*B3            [24]12067 	mov	(_validate_sloc0_1_0 + 1),r6
      003DE7 8F*B4            [24]12068 	mov	(_validate_sloc0_1_0 + 2),r7
                           003DE9 12069 	C$ff.c$2340$1_0$182 ==.
                                  12070 ;	FATFS\src\ff.c:2340: if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
      003DE9 E5*B2            [12]12071 	mov	a,_validate_sloc0_1_0
      003DEB 45*B3            [12]12072 	orl	a,(_validate_sloc0_1_0 + 1)
      003DED 60 62            [24]12073 	jz	00101$
      003DEF 85*B2 82         [24]12074 	mov	dpl,_validate_sloc0_1_0
      003DF2 85*B3 83         [24]12075 	mov	dph,(_validate_sloc0_1_0 + 1)
      003DF5 85*B4 F0         [24]12076 	mov	b,(_validate_sloc0_1_0 + 2)
      003DF8 12r00r00         [24]12077 	lcall	__gptrget
      003DFB FA               [12]12078 	mov	r2,a
      003DFC A3               [24]12079 	inc	dptr
      003DFD 12r00r00         [24]12080 	lcall	__gptrget
      003E00 FB               [12]12081 	mov	r3,a
      003E01 A3               [24]12082 	inc	dptr
      003E02 12r00r00         [24]12083 	lcall	__gptrget
      003E05 FC               [12]12084 	mov	r4,a
      003E06 EA               [12]12085 	mov	a,r2
      003E07 4B               [12]12086 	orl	a,r3
      003E08 60 47            [24]12087 	jz	00101$
      003E0A 8A 82            [24]12088 	mov	dpl,r2
      003E0C 8B 83            [24]12089 	mov	dph,r3
      003E0E 8C F0            [24]12090 	mov	b,r4
      003E10 12r00r00         [24]12091 	lcall	__gptrget
      003E13 60 3C            [24]12092 	jz	00101$
      003E15 74 06            [12]12093 	mov	a,#0x06
      003E17 2A               [12]12094 	add	a,r2
      003E18 F8               [12]12095 	mov	r0,a
      003E19 E4               [12]12096 	clr	a
      003E1A 3B               [12]12097 	addc	a,r3
      003E1B F9               [12]12098 	mov	r1,a
      003E1C 8C 07            [24]12099 	mov	ar7,r4
      003E1E 88 82            [24]12100 	mov	dpl,r0
      003E20 89 83            [24]12101 	mov	dph,r1
      003E22 8F F0            [24]12102 	mov	b,r7
      003E24 12r00r00         [24]12103 	lcall	__gptrget
      003E27 F8               [12]12104 	mov	r0,a
      003E28 A3               [24]12105 	inc	dptr
      003E29 12r00r00         [24]12106 	lcall	__gptrget
      003E2C F9               [12]12107 	mov	r1,a
      003E2D 74 03            [12]12108 	mov	a,#0x03
      003E2F 25*B2            [12]12109 	add	a,_validate_sloc0_1_0
      003E31 FD               [12]12110 	mov	r5,a
      003E32 E4               [12]12111 	clr	a
      003E33 35*B3            [12]12112 	addc	a,(_validate_sloc0_1_0 + 1)
      003E35 FE               [12]12113 	mov	r6,a
      003E36 AF*B4            [24]12114 	mov	r7,(_validate_sloc0_1_0 + 2)
      003E38 8D 82            [24]12115 	mov	dpl,r5
      003E3A 8E 83            [24]12116 	mov	dph,r6
      003E3C 8F F0            [24]12117 	mov	b,r7
      003E3E 12r00r00         [24]12118 	lcall	__gptrget
      003E41 FD               [12]12119 	mov	r5,a
      003E42 A3               [24]12120 	inc	dptr
      003E43 12r00r00         [24]12121 	lcall	__gptrget
      003E46 FE               [12]12122 	mov	r6,a
      003E47 E8               [12]12123 	mov	a,r0
      003E48 B5 05 06         [24]12124 	cjne	a,ar5,00129$
      003E4B E9               [12]12125 	mov	a,r1
      003E4C B5 06 02         [24]12126 	cjne	a,ar6,00129$
      003E4F 80 05            [24]12127 	sjmp	00102$
      003E51                      12128 00129$:
      003E51                      12129 00101$:
                           003E51 12130 	C$ff.c$2341$1_0$182 ==.
                                  12131 ;	FATFS\src\ff.c:2341: return FR_INVALID_OBJECT;
      003E51 75 82 09         [24]12132 	mov	dpl,#0x09
      003E54 80 26            [24]12133 	sjmp	00108$
      003E56                      12134 00102$:
                           003E56 12135 	C$ff.c$2345$1_0$182 ==.
                                  12136 ;	FATFS\src\ff.c:2345: if (disk_status(fil->fs->drv) & STA_NOINIT)
      003E56 0A               [12]12137 	inc	r2
      003E57 BA 00 01         [24]12138 	cjne	r2,#0x00,00130$
      003E5A 0B               [12]12139 	inc	r3
      003E5B                      12140 00130$:
      003E5B 8A 82            [24]12141 	mov	dpl,r2
      003E5D 8B 83            [24]12142 	mov	dph,r3
      003E5F 8C F0            [24]12143 	mov	b,r4
      003E61 12r00r00         [24]12144 	lcall	__gptrget
      003E64 F5 82            [12]12145 	mov	dpl,a
      003E66 78r00            [12]12146 	mov	r0,#_disk_status
      003E68 79s00            [12]12147 	mov	r1,#(_disk_status >> 8)
      003E6A 7As00            [12]12148 	mov	r2,#(_disk_status >> 16)
      003E6C 12r00r00         [24]12149 	lcall	__sdcc_banked_call
      003E6F E5 82            [12]12150 	mov	a,dpl
      003E71 30 E0 05         [24]12151 	jnb	acc.0,00107$
                           003E74 12152 	C$ff.c$2346$1_0$182 ==.
                                  12153 ;	FATFS\src\ff.c:2346: return FR_NOT_READY;
      003E74 75 82 03         [24]12154 	mov	dpl,#0x03
      003E77 80 03            [24]12155 	sjmp	00108$
      003E79                      12156 00107$:
                           003E79 12157 	C$ff.c$2348$1_0$182 ==.
                                  12158 ;	FATFS\src\ff.c:2348: return FR_OK;
      003E79 75 82 00         [24]12159 	mov	dpl,#0x00
      003E7C                      12160 00108$:
                           003E7C 12161 	C$ff.c$2349$1_0$182 ==.
                                  12162 ;	FATFS\src\ff.c:2349: }
                           003E7C 12163 	C$ff.c$2349$1_0$182 ==.
                           003E7C 12164 	XFff$validate$0$0 ==.
      003E7C 02r00r00         [24]12165 	ljmp	__sdcc_banked_ret
                                  12166 ;------------------------------------------------------------
                                  12167 ;Allocation info for local variables in function 'f_mount'
                                  12168 ;------------------------------------------------------------
                                  12169 ;path                      Allocated with name '_f_mount_PARM_2'
                                  12170 ;opt                       Allocated with name '_f_mount_PARM_3'
                                  12171 ;fs                        Allocated with name '_f_mount_fs_65536_183'
                                  12172 ;cfs                       Allocated with name '_f_mount_cfs_65536_184'
                                  12173 ;vol                       Allocated with name '_f_mount_vol_65536_184'
                                  12174 ;res                       Allocated with name '_f_mount_res_65536_184'
                                  12175 ;rp                        Allocated with name '_f_mount_rp_65536_184'
                                  12176 ;------------------------------------------------------------
                           003E7F 12177 	G$f_mount$0$0 ==.
                           003E7F 12178 	C$ff.c$2366$1_0$184 ==.
                                  12179 ;	FATFS\src\ff.c:2366: FRESULT f_mount (
                                  12180 ;	-----------------------------------------
                                  12181 ;	 function f_mount
                                  12182 ;	-----------------------------------------
      003E7F                      12183 _f_mount:
      003E7F AF F0            [24]12184 	mov	r7,b
      003E81 AE 83            [24]12185 	mov	r6,dph
      003E83 E5 82            [12]12186 	mov	a,dpl
      003E85 90r01r0C         [24]12187 	mov	dptr,#_f_mount_fs_65536_183
      003E88 F0               [24]12188 	movx	@dptr,a
      003E89 EE               [12]12189 	mov	a,r6
      003E8A A3               [24]12190 	inc	dptr
      003E8B F0               [24]12191 	movx	@dptr,a
      003E8C EF               [12]12192 	mov	a,r7
      003E8D A3               [24]12193 	inc	dptr
      003E8E F0               [24]12194 	movx	@dptr,a
                           003E8F 12195 	C$ff.c$2375$2_0$184 ==.
                                  12196 ;	FATFS\src\ff.c:2375: const TCHAR *rp = path;
      003E8F 90r01r08         [24]12197 	mov	dptr,#_f_mount_PARM_2
      003E92 E0               [24]12198 	movx	a,@dptr
      003E93 FD               [12]12199 	mov	r5,a
      003E94 A3               [24]12200 	inc	dptr
      003E95 E0               [24]12201 	movx	a,@dptr
      003E96 FE               [12]12202 	mov	r6,a
      003E97 A3               [24]12203 	inc	dptr
      003E98 E0               [24]12204 	movx	a,@dptr
      003E99 FF               [12]12205 	mov	r7,a
      003E9A 90r01r0F         [24]12206 	mov	dptr,#_f_mount_rp_65536_184
      003E9D ED               [12]12207 	mov	a,r5
      003E9E F0               [24]12208 	movx	@dptr,a
      003E9F EE               [12]12209 	mov	a,r6
      003EA0 A3               [24]12210 	inc	dptr
      003EA1 F0               [24]12211 	movx	@dptr,a
      003EA2 EF               [12]12212 	mov	a,r7
      003EA3 A3               [24]12213 	inc	dptr
      003EA4 F0               [24]12214 	movx	@dptr,a
                           003EA5 12215 	C$ff.c$2378$1_0$184 ==.
                                  12216 ;	FATFS\src\ff.c:2378: vol = get_ldnumber(&rp);
      003EA5 90r01r0F         [24]12217 	mov	dptr,#_f_mount_rp_65536_184
      003EA8 75 F0 00         [24]12218 	mov	b,#0x00
      003EAB 78r77            [12]12219 	mov	r0,#_get_ldnumber
      003EAD 79s2D            [12]12220 	mov	r1,#(_get_ldnumber >> 8)
      003EAF 7As00            [12]12221 	mov	r2,#(_get_ldnumber >> 16)
      003EB1 12r00r00         [24]12222 	lcall	__sdcc_banked_call
      003EB4 AE 82            [24]12223 	mov	r6,dpl
                           003EB6 12224 	C$ff.c$2379$1_0$184 ==.
                                  12225 ;	FATFS\src\ff.c:2379: if (vol < 0) return FR_INVALID_DRIVE;
      003EB6 E5 83            [12]12226 	mov	a,dph
      003EB8 FF               [12]12227 	mov	r7,a
      003EB9 30 E7 06         [24]12228 	jnb	acc.7,00102$
      003EBC 75 82 0B         [24]12229 	mov	dpl,#0x0b
      003EBF 02r00r00         [24]12230 	ljmp	__sdcc_banked_ret
      003EC2                      12231 00102$:
                           003EC2 12232 	C$ff.c$2380$1_0$184 ==.
                                  12233 ;	FATFS\src\ff.c:2380: cfs = FatFs[vol];					/* Pointer to fs object */
      003EC2 90r00r00         [24]12234 	mov	dptr,#__mulint_PARM_2
      003EC5 EE               [12]12235 	mov	a,r6
      003EC6 F0               [24]12236 	movx	@dptr,a
      003EC7 EF               [12]12237 	mov	a,r7
      003EC8 A3               [24]12238 	inc	dptr
      003EC9 F0               [24]12239 	movx	@dptr,a
      003ECA 90 00 03         [24]12240 	mov	dptr,#0x0003
      003ECD 12r00r00         [24]12241 	lcall	__mulint
      003ED0 AE 82            [24]12242 	mov	r6,dpl
      003ED2 AF 83            [24]12243 	mov	r7,dph
      003ED4 EE               [12]12244 	mov	a,r6
      003ED5 24r00            [12]12245 	add	a,#_FatFs
      003ED7 FE               [12]12246 	mov	r6,a
      003ED8 EF               [12]12247 	mov	a,r7
      003ED9 34s00            [12]12248 	addc	a,#(_FatFs >> 8)
      003EDB FF               [12]12249 	mov	r7,a
      003EDC 8E 82            [24]12250 	mov	dpl,r6
      003EDE 8F 83            [24]12251 	mov	dph,r7
      003EE0 E0               [24]12252 	movx	a,@dptr
      003EE1 FB               [12]12253 	mov	r3,a
      003EE2 A3               [24]12254 	inc	dptr
      003EE3 E0               [24]12255 	movx	a,@dptr
      003EE4 FC               [12]12256 	mov	r4,a
      003EE5 A3               [24]12257 	inc	dptr
      003EE6 E0               [24]12258 	movx	a,@dptr
      003EE7 FD               [12]12259 	mov	r5,a
                           003EE8 12260 	C$ff.c$2382$1_0$184 ==.
                                  12261 ;	FATFS\src\ff.c:2382: if (cfs) {
      003EE8 EB               [12]12262 	mov	a,r3
      003EE9 4C               [12]12263 	orl	a,r4
      003EEA 60 0A            [24]12264 	jz	00104$
                           003EEC 12265 	C$ff.c$2389$2_0$185 ==.
                                  12266 ;	FATFS\src\ff.c:2389: cfs->fs_type = 0;				/* Clear old fs object */
      003EEC 8B 82            [24]12267 	mov	dpl,r3
      003EEE 8C 83            [24]12268 	mov	dph,r4
      003EF0 8D F0            [24]12269 	mov	b,r5
      003EF2 E4               [12]12270 	clr	a
      003EF3 12r00r00         [24]12271 	lcall	__gptrput
      003EF6                      12272 00104$:
                           003EF6 12273 	C$ff.c$2392$1_0$184 ==.
                                  12274 ;	FATFS\src\ff.c:2392: if (fs) {
      003EF6 90r01r0C         [24]12275 	mov	dptr,#_f_mount_fs_65536_183
      003EF9 E0               [24]12276 	movx	a,@dptr
      003EFA FB               [12]12277 	mov	r3,a
      003EFB A3               [24]12278 	inc	dptr
      003EFC E0               [24]12279 	movx	a,@dptr
      003EFD FC               [12]12280 	mov	r4,a
      003EFE A3               [24]12281 	inc	dptr
      003EFF E0               [24]12282 	movx	a,@dptr
      003F00 FD               [12]12283 	mov	r5,a
      003F01 90r01r0C         [24]12284 	mov	dptr,#_f_mount_fs_65536_183
      003F04 E0               [24]12285 	movx	a,@dptr
      003F05 F5 F0            [12]12286 	mov	b,a
      003F07 A3               [24]12287 	inc	dptr
      003F08 E0               [24]12288 	movx	a,@dptr
      003F09 45 F0            [12]12289 	orl	a,b
      003F0B 60 0A            [24]12290 	jz	00106$
                           003F0D 12291 	C$ff.c$2393$2_0$186 ==.
                                  12292 ;	FATFS\src\ff.c:2393: fs->fs_type = 0;				/* Clear new fs object */
      003F0D 8B 82            [24]12293 	mov	dpl,r3
      003F0F 8C 83            [24]12294 	mov	dph,r4
      003F11 8D F0            [24]12295 	mov	b,r5
      003F13 E4               [12]12296 	clr	a
      003F14 12r00r00         [24]12297 	lcall	__gptrput
      003F17                      12298 00106$:
                           003F17 12299 	C$ff.c$2398$1_0$184 ==.
                                  12300 ;	FATFS\src\ff.c:2398: FatFs[vol] = fs;					/* Register new fs object */
      003F17 90r01r0C         [24]12301 	mov	dptr,#_f_mount_fs_65536_183
      003F1A E0               [24]12302 	movx	a,@dptr
      003F1B FB               [12]12303 	mov	r3,a
      003F1C A3               [24]12304 	inc	dptr
      003F1D E0               [24]12305 	movx	a,@dptr
      003F1E FC               [12]12306 	mov	r4,a
      003F1F A3               [24]12307 	inc	dptr
      003F20 E0               [24]12308 	movx	a,@dptr
      003F21 FD               [12]12309 	mov	r5,a
      003F22 8E 82            [24]12310 	mov	dpl,r6
      003F24 8F 83            [24]12311 	mov	dph,r7
      003F26 EB               [12]12312 	mov	a,r3
      003F27 F0               [24]12313 	movx	@dptr,a
      003F28 EC               [12]12314 	mov	a,r4
      003F29 A3               [24]12315 	inc	dptr
      003F2A F0               [24]12316 	movx	@dptr,a
      003F2B ED               [12]12317 	mov	a,r5
      003F2C A3               [24]12318 	inc	dptr
      003F2D F0               [24]12319 	movx	@dptr,a
                           003F2E 12320 	C$ff.c$2400$1_0$184 ==.
                                  12321 ;	FATFS\src\ff.c:2400: if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
      003F2E 90r01r0C         [24]12322 	mov	dptr,#_f_mount_fs_65536_183
      003F31 E0               [24]12323 	movx	a,@dptr
      003F32 F5 F0            [12]12324 	mov	b,a
      003F34 A3               [24]12325 	inc	dptr
      003F35 E0               [24]12326 	movx	a,@dptr
      003F36 45 F0            [12]12327 	orl	a,b
      003F38 60 0A            [24]12328 	jz	00107$
      003F3A 90r01r0B         [24]12329 	mov	dptr,#_f_mount_PARM_3
      003F3D E0               [24]12330 	movx	a,@dptr
      003F3E FF               [12]12331 	mov	r7,a
      003F3F BF 01 02         [24]12332 	cjne	r7,#0x01,00132$
      003F42 80 05            [24]12333 	sjmp	00108$
      003F44                      12334 00132$:
      003F44                      12335 00107$:
      003F44 75 82 00         [24]12336 	mov	dpl,#0x00
      003F47 80 22            [24]12337 	sjmp	00110$
      003F49                      12338 00108$:
                           003F49 12339 	C$ff.c$2402$1_0$184 ==.
                                  12340 ;	FATFS\src\ff.c:2402: res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
      003F49 90r00rDD         [24]12341 	mov	dptr,#_find_volume_PARM_2
      003F4C 74r08            [12]12342 	mov	a,#_f_mount_PARM_2
      003F4E F0               [24]12343 	movx	@dptr,a
      003F4F 74s01            [12]12344 	mov	a,#(_f_mount_PARM_2 >> 8)
      003F51 A3               [24]12345 	inc	dptr
      003F52 F0               [24]12346 	movx	@dptr,a
      003F53 E4               [12]12347 	clr	a
      003F54 A3               [24]12348 	inc	dptr
      003F55 F0               [24]12349 	movx	@dptr,a
      003F56 90r00rE0         [24]12350 	mov	dptr,#_find_volume_PARM_3
      003F59 F0               [24]12351 	movx	@dptr,a
      003F5A 90r01r0C         [24]12352 	mov	dptr,#_f_mount_fs_65536_183
      003F5D 75 F0 00         [24]12353 	mov	b,#0x00
      003F60 78rED            [12]12354 	mov	r0,#_find_volume
      003F62 79s30            [12]12355 	mov	r1,#(_find_volume >> 8)
      003F64 7As00            [12]12356 	mov	r2,#(_find_volume >> 16)
      003F66 12r00r00         [24]12357 	lcall	__sdcc_banked_call
                           003F69 12358 	C$ff.c$2403$1_0$184 ==.
                                  12359 ;	FATFS\src\ff.c:2403: LEAVE_FF(fs, res);
      003F69 AF 82            [24]12360 	mov  r7,dpl
      003F6B                      12361 00110$:
                           003F6B 12362 	C$ff.c$2404$1_0$184 ==.
                                  12363 ;	FATFS\src\ff.c:2404: }
                           003F6B 12364 	C$ff.c$2404$1_0$184 ==.
                           003F6B 12365 	XG$f_mount$0$0 ==.
      003F6B 02r00r00         [24]12366 	ljmp	__sdcc_banked_ret
                                  12367 ;------------------------------------------------------------
                                  12368 ;Allocation info for local variables in function 'f_open'
                                  12369 ;------------------------------------------------------------
                                  12370 ;sloc0                     Allocated with name '_f_open_sloc0_1_0'
                                  12371 ;sloc1                     Allocated with name '_f_open_sloc1_1_0'
                                  12372 ;sloc2                     Allocated with name '_f_open_sloc2_1_0'
                                  12373 ;path                      Allocated with name '_f_open_PARM_2'
                                  12374 ;mode                      Allocated with name '_f_open_PARM_3'
                                  12375 ;fp                        Allocated with name '_f_open_fp_65536_187'
                                  12376 ;res                       Allocated with name '_f_open_res_65536_188'
                                  12377 ;dj                        Allocated with name '_f_open_dj_65536_188'
                                  12378 ;dir                       Allocated with name '_f_open_dir_65536_188'
                                  12379 ;sfn                       Allocated with name '_f_open_sfn_65536_188'
                                  12380 ;lfn                       Allocated with name '_f_open_lfn_65536_188'
                                  12381 ;------------------------------------------------------------
                           003F6E 12382 	G$f_open$0$0 ==.
                           003F6E 12383 	C$ff.c$2413$1_0$188 ==.
                                  12384 ;	FATFS\src\ff.c:2413: FRESULT f_open (
                                  12385 ;	-----------------------------------------
                                  12386 ;	 function f_open
                                  12387 ;	-----------------------------------------
      003F6E                      12388 _f_open:
      003F6E AF F0            [24]12389 	mov	r7,b
      003F70 AE 83            [24]12390 	mov	r6,dph
      003F72 E5 82            [12]12391 	mov	a,dpl
      003F74 90r01r16         [24]12392 	mov	dptr,#_f_open_fp_65536_187
      003F77 F0               [24]12393 	movx	@dptr,a
      003F78 EE               [12]12394 	mov	a,r6
      003F79 A3               [24]12395 	inc	dptr
      003F7A F0               [24]12396 	movx	@dptr,a
      003F7B EF               [12]12397 	mov	a,r7
      003F7C A3               [24]12398 	inc	dptr
      003F7D F0               [24]12399 	movx	@dptr,a
                           003F7E 12400 	C$ff.c$2425$1_0$188 ==.
                                  12401 ;	FATFS\src\ff.c:2425: if (!fp) return FR_INVALID_OBJECT;
      003F7E 90r01r16         [24]12402 	mov	dptr,#_f_open_fp_65536_187
      003F81 E0               [24]12403 	movx	a,@dptr
      003F82 FD               [12]12404 	mov	r5,a
      003F83 A3               [24]12405 	inc	dptr
      003F84 E0               [24]12406 	movx	a,@dptr
      003F85 FE               [12]12407 	mov	r6,a
      003F86 A3               [24]12408 	inc	dptr
      003F87 E0               [24]12409 	movx	a,@dptr
      003F88 FF               [12]12410 	mov	r7,a
      003F89 90r01r16         [24]12411 	mov	dptr,#_f_open_fp_65536_187
      003F8C E0               [24]12412 	movx	a,@dptr
      003F8D F5 F0            [12]12413 	mov	b,a
      003F8F A3               [24]12414 	inc	dptr
      003F90 E0               [24]12415 	movx	a,@dptr
      003F91 45 F0            [12]12416 	orl	a,b
      003F93 70 06            [24]12417 	jnz	00102$
      003F95 75 82 09         [24]12418 	mov	dpl,#0x09
      003F98 02r00r00         [24]12419 	ljmp	__sdcc_banked_ret
      003F9B                      12420 00102$:
                           003F9B 12421 	C$ff.c$2426$1_0$188 ==.
                                  12422 ;	FATFS\src\ff.c:2426: fp->fs = 0;			/* Clear file object */
      003F9B 8D 82            [24]12423 	mov	dpl,r5
      003F9D 8E 83            [24]12424 	mov	dph,r6
      003F9F 8F F0            [24]12425 	mov	b,r7
      003FA1 E4               [12]12426 	clr	a
      003FA2 12r00r00         [24]12427 	lcall	__gptrput
      003FA5 A3               [24]12428 	inc	dptr
      003FA6 12r00r00         [24]12429 	lcall	__gptrput
      003FA9 A3               [24]12430 	inc	dptr
      003FAA 12r00r00         [24]12431 	lcall	__gptrput
                           003FAD 12432 	C$ff.c$2433$1_0$188 ==.
                                  12433 ;	FATFS\src\ff.c:2433: mode &= FA_READ;
      003FAD 90r01r15         [24]12434 	mov	dptr,#_f_open_PARM_3
      003FB0 E0               [24]12435 	movx	a,@dptr
      003FB1 53 E0 01         [24]12436 	anl	acc,#0x01
      003FB4 F0               [24]12437 	movx	@dptr,a
                           003FB5 12438 	C$ff.c$2434$1_0$188 ==.
                                  12439 ;	FATFS\src\ff.c:2434: res = find_volume(&dj.fs, &path, 0);
      003FB5 90r00rDD         [24]12440 	mov	dptr,#_find_volume_PARM_2
      003FB8 74r12            [12]12441 	mov	a,#_f_open_PARM_2
      003FBA F0               [24]12442 	movx	@dptr,a
      003FBB 74s01            [12]12443 	mov	a,#(_f_open_PARM_2 >> 8)
      003FBD A3               [24]12444 	inc	dptr
      003FBE F0               [24]12445 	movx	@dptr,a
      003FBF E4               [12]12446 	clr	a
      003FC0 A3               [24]12447 	inc	dptr
      003FC1 F0               [24]12448 	movx	@dptr,a
      003FC2 90r00rE0         [24]12449 	mov	dptr,#_find_volume_PARM_3
      003FC5 F0               [24]12450 	movx	@dptr,a
      003FC6 90r01r1A         [24]12451 	mov	dptr,#_f_open_dj_65536_188
      003FC9 75 F0 00         [24]12452 	mov	b,#0x00
      003FCC 78rED            [12]12453 	mov	r0,#_find_volume
      003FCE 79s30            [12]12454 	mov	r1,#(_find_volume >> 8)
      003FD0 7As00            [12]12455 	mov	r2,#(_find_volume >> 16)
      003FD2 12r00r00         [24]12456 	lcall	__sdcc_banked_call
      003FD5 AF 82            [24]12457 	mov	r7,dpl
      003FD7 90r01r19         [24]12458 	mov	dptr,#_f_open_res_65536_188
      003FDA EF               [12]12459 	mov	a,r7
      003FDB F0               [24]12460 	movx	@dptr,a
                           003FDC 12461 	C$ff.c$2436$1_0$188 ==.
                                  12462 ;	FATFS\src\ff.c:2436: if (res == FR_OK) {
      003FDC EF               [12]12463 	mov	a,r7
      003FDD 60 03            [24]12464 	jz	00147$
      003FDF 02r42rC2         [24]12465 	ljmp	00115$
      003FE2                      12466 00147$:
                           003FE2 12467 	C$ff.c$2437$3_0$190 ==.
                                  12468 ;	FATFS\src\ff.c:2437: INIT_BUF(dj);
      003FE2 90 02 00         [24]12469 	mov	dptr,#0x0200
      003FE5 78r00            [12]12470 	mov	r0,#_ff_memalloc
      003FE7 79s00            [12]12471 	mov	r1,#(_ff_memalloc >> 8)
      003FE9 7As00            [12]12472 	mov	r2,#(_ff_memalloc >> 16)
      003FEB 12r00r00         [24]12473 	lcall	__sdcc_banked_call
      003FEE AD 82            [24]12474 	mov	r5,dpl
      003FF0 AE 83            [24]12475 	mov	r6,dph
      003FF2 AF F0            [24]12476 	mov	r7,b
      003FF4 ED               [12]12477 	mov	a,r5
      003FF5 4E               [12]12478 	orl	a,r6
      003FF6 70 06            [24]12479 	jnz	00104$
      003FF8 75 82 11         [24]12480 	mov	dpl,#0x11
      003FFB 02r00r00         [24]12481 	ljmp	__sdcc_banked_ret
      003FFE                      12482 00104$:
      003FFE 90r01r33         [24]12483 	mov	dptr,#(_f_open_dj_65536_188 + 0x0019)
      004001 ED               [12]12484 	mov	a,r5
      004002 F0               [24]12485 	movx	@dptr,a
      004003 EE               [12]12486 	mov	a,r6
      004004 A3               [24]12487 	inc	dptr
      004005 F0               [24]12488 	movx	@dptr,a
      004006 EF               [12]12489 	mov	a,r7
      004007 A3               [24]12490 	inc	dptr
      004008 F0               [24]12491 	movx	@dptr,a
      004009 90r01r30         [24]12492 	mov	dptr,#(_f_open_dj_65536_188 + 0x0016)
      00400C 74r3B            [12]12493 	mov	a,#_f_open_sfn_65536_188
      00400E F0               [24]12494 	movx	@dptr,a
      00400F 74s01            [12]12495 	mov	a,#(_f_open_sfn_65536_188 >> 8)
      004011 A3               [24]12496 	inc	dptr
      004012 F0               [24]12497 	movx	@dptr,a
      004013 E4               [12]12498 	clr	a
      004014 A3               [24]12499 	inc	dptr
      004015 F0               [24]12500 	movx	@dptr,a
                           004016 12501 	C$ff.c$2438$2_0$189 ==.
                                  12502 ;	FATFS\src\ff.c:2438: res = follow_path(&dj, path);	/* Follow the file path */
      004016 90r01r12         [24]12503 	mov	dptr,#_f_open_PARM_2
      004019 E0               [24]12504 	movx	a,@dptr
      00401A FA               [12]12505 	mov	r2,a
      00401B A3               [24]12506 	inc	dptr
      00401C E0               [24]12507 	movx	a,@dptr
      00401D FB               [12]12508 	mov	r3,a
      00401E A3               [24]12509 	inc	dptr
      00401F E0               [24]12510 	movx	a,@dptr
      004020 FC               [12]12511 	mov	r4,a
      004021 90r00rCA         [24]12512 	mov	dptr,#_follow_path_PARM_2
      004024 EA               [12]12513 	mov	a,r2
      004025 F0               [24]12514 	movx	@dptr,a
      004026 EB               [12]12515 	mov	a,r3
      004027 A3               [24]12516 	inc	dptr
      004028 F0               [24]12517 	movx	@dptr,a
      004029 EC               [12]12518 	mov	a,r4
      00402A A3               [24]12519 	inc	dptr
      00402B F0               [24]12520 	movx	@dptr,a
      00402C 90r01r1A         [24]12521 	mov	dptr,#_f_open_dj_65536_188
      00402F 75 F0 00         [24]12522 	mov	b,#0x00
      004032 C0 07            [24]12523 	push	ar7
      004034 C0 06            [24]12524 	push	ar6
      004036 C0 05            [24]12525 	push	ar5
      004038 78r19            [12]12526 	mov	r0,#_follow_path
      00403A 79s2B            [12]12527 	mov	r1,#(_follow_path >> 8)
      00403C 7As00            [12]12528 	mov	r2,#(_follow_path >> 16)
      00403E 12r00r00         [24]12529 	lcall	__sdcc_banked_call
      004041 AC 82            [24]12530 	mov	r4,dpl
      004043 D0 05            [24]12531 	pop	ar5
      004045 D0 06            [24]12532 	pop	ar6
      004047 D0 07            [24]12533 	pop	ar7
      004049 90r01r19         [24]12534 	mov	dptr,#_f_open_res_65536_188
      00404C EC               [12]12535 	mov	a,r4
      00404D F0               [24]12536 	movx	@dptr,a
                           00404E 12537 	C$ff.c$2439$2_0$189 ==.
                                  12538 ;	FATFS\src\ff.c:2439: dir = dj.dir;
      00404E 90r01r2D         [24]12539 	mov	dptr,#(_f_open_dj_65536_188 + 0x0013)
      004051 E0               [24]12540 	movx	a,@dptr
      004052 F9               [12]12541 	mov	r1,a
      004053 A3               [24]12542 	inc	dptr
      004054 E0               [24]12543 	movx	a,@dptr
      004055 FA               [12]12544 	mov	r2,a
      004056 A3               [24]12545 	inc	dptr
      004057 E0               [24]12546 	movx	a,@dptr
      004058 FB               [12]12547 	mov	r3,a
      004059 90r01r38         [24]12548 	mov	dptr,#_f_open_dir_65536_188
      00405C E9               [12]12549 	mov	a,r1
      00405D F0               [24]12550 	movx	@dptr,a
      00405E EA               [12]12551 	mov	a,r2
      00405F A3               [24]12552 	inc	dptr
      004060 F0               [24]12553 	movx	@dptr,a
      004061 EB               [12]12554 	mov	a,r3
      004062 A3               [24]12555 	inc	dptr
      004063 F0               [24]12556 	movx	@dptr,a
                           004064 12557 	C$ff.c$2511$2_0$189 ==.
                                  12558 ;	FATFS\src\ff.c:2511: if (res == FR_OK) {					/* Follow succeeded */
      004064 EC               [12]12559 	mov	a,r4
      004065 70 31            [24]12560 	jnz	00111$
                           004067 12561 	C$ff.c$2512$3_0$191 ==.
                                  12562 ;	FATFS\src\ff.c:2512: dir = dj.dir;
      004067 90r01r38         [24]12563 	mov	dptr,#_f_open_dir_65536_188
      00406A E9               [12]12564 	mov	a,r1
      00406B F0               [24]12565 	movx	@dptr,a
      00406C EA               [12]12566 	mov	a,r2
      00406D A3               [24]12567 	inc	dptr
      00406E F0               [24]12568 	movx	@dptr,a
      00406F EB               [12]12569 	mov	a,r3
      004070 A3               [24]12570 	inc	dptr
      004071 F0               [24]12571 	movx	@dptr,a
                           004072 12572 	C$ff.c$2513$3_0$191 ==.
                                  12573 ;	FATFS\src\ff.c:2513: if (!dir) {						/* Current directory itself */
      004072 E9               [12]12574 	mov	a,r1
      004073 4A               [12]12575 	orl	a,r2
      004074 70 08            [24]12576 	jnz	00108$
                           004076 12577 	C$ff.c$2514$4_0$192 ==.
                                  12578 ;	FATFS\src\ff.c:2514: res = FR_INVALID_NAME;
      004076 90r01r19         [24]12579 	mov	dptr,#_f_open_res_65536_188
      004079 74 06            [12]12580 	mov	a,#0x06
      00407B F0               [24]12581 	movx	@dptr,a
      00407C 80 1A            [24]12582 	sjmp	00111$
      00407E                      12583 00108$:
                           00407E 12584 	C$ff.c$2516$4_0$193 ==.
                                  12585 ;	FATFS\src\ff.c:2516: if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
      00407E 74 0B            [12]12586 	mov	a,#0x0b
      004080 29               [12]12587 	add	a,r1
      004081 F9               [12]12588 	mov	r1,a
      004082 E4               [12]12589 	clr	a
      004083 3A               [12]12590 	addc	a,r2
      004084 FA               [12]12591 	mov	r2,a
      004085 89 82            [24]12592 	mov	dpl,r1
      004087 8A 83            [24]12593 	mov	dph,r2
      004089 8B F0            [24]12594 	mov	b,r3
      00408B 12r00r00         [24]12595 	lcall	__gptrget
      00408E F9               [12]12596 	mov	r1,a
      00408F 30 E4 06         [24]12597 	jnb	acc.4,00111$
                           004092 12598 	C$ff.c$2517$4_0$193 ==.
                                  12599 ;	FATFS\src\ff.c:2517: res = FR_NO_FILE;
      004092 90r01r19         [24]12600 	mov	dptr,#_f_open_res_65536_188
      004095 74 04            [12]12601 	mov	a,#0x04
      004097 F0               [24]12602 	movx	@dptr,a
      004098                      12603 00111$:
                           004098 12604 	C$ff.c$2521$2_0$189 ==.
                                  12605 ;	FATFS\src\ff.c:2521: FREE_BUF();
      004098 8D 82            [24]12606 	mov	dpl,r5
      00409A 8E 83            [24]12607 	mov	dph,r6
      00409C 8F F0            [24]12608 	mov	b,r7
      00409E 78r00            [12]12609 	mov	r0,#_ff_memfree
      0040A0 79s00            [12]12610 	mov	r1,#(_ff_memfree >> 8)
      0040A2 7As00            [12]12611 	mov	r2,#(_ff_memfree >> 16)
      0040A4 12r00r00         [24]12612 	lcall	__sdcc_banked_call
                           0040A7 12613 	C$ff.c$2523$2_0$189 ==.
                                  12614 ;	FATFS\src\ff.c:2523: if (res == FR_OK) {
      0040A7 90r01r19         [24]12615 	mov	dptr,#_f_open_res_65536_188
      0040AA E0               [24]12616 	movx	a,@dptr
      0040AB 60 03            [24]12617 	jz	00152$
      0040AD 02r42rC2         [24]12618 	ljmp	00115$
      0040B0                      12619 00152$:
                           0040B0 12620 	C$ff.c$2524$3_0$194 ==.
                                  12621 ;	FATFS\src\ff.c:2524: fp->flag = mode;					/* File access mode */
      0040B0 90r01r16         [24]12622 	mov	dptr,#_f_open_fp_65536_187
      0040B3 E0               [24]12623 	movx	a,@dptr
      0040B4 FD               [12]12624 	mov	r5,a
      0040B5 A3               [24]12625 	inc	dptr
      0040B6 E0               [24]12626 	movx	a,@dptr
      0040B7 FE               [12]12627 	mov	r6,a
      0040B8 A3               [24]12628 	inc	dptr
      0040B9 E0               [24]12629 	movx	a,@dptr
      0040BA FF               [12]12630 	mov	r7,a
      0040BB 74 05            [12]12631 	mov	a,#0x05
      0040BD 2D               [12]12632 	add	a,r5
      0040BE FA               [12]12633 	mov	r2,a
      0040BF E4               [12]12634 	clr	a
      0040C0 3E               [12]12635 	addc	a,r6
      0040C1 FB               [12]12636 	mov	r3,a
      0040C2 8F 04            [24]12637 	mov	ar4,r7
      0040C4 90r01r15         [24]12638 	mov	dptr,#_f_open_PARM_3
      0040C7 E0               [24]12639 	movx	a,@dptr
      0040C8 8A 82            [24]12640 	mov	dpl,r2
      0040CA 8B 83            [24]12641 	mov	dph,r3
      0040CC 8C F0            [24]12642 	mov	b,r4
      0040CE 12r00r00         [24]12643 	lcall	__gptrput
                           0040D1 12644 	C$ff.c$2525$3_0$194 ==.
                                  12645 ;	FATFS\src\ff.c:2525: fp->err = 0;						/* Clear error flag */
      0040D1 74 06            [12]12646 	mov	a,#0x06
      0040D3 2D               [12]12647 	add	a,r5
      0040D4 FA               [12]12648 	mov	r2,a
      0040D5 E4               [12]12649 	clr	a
      0040D6 3E               [12]12650 	addc	a,r6
      0040D7 FB               [12]12651 	mov	r3,a
      0040D8 8F 04            [24]12652 	mov	ar4,r7
      0040DA 8A 82            [24]12653 	mov	dpl,r2
      0040DC 8B 83            [24]12654 	mov	dph,r3
      0040DE 8C F0            [24]12655 	mov	b,r4
      0040E0 E4               [12]12656 	clr	a
      0040E1 12r00r00         [24]12657 	lcall	__gptrput
                           0040E4 12658 	C$ff.c$2526$3_0$194 ==.
                                  12659 ;	FATFS\src\ff.c:2526: fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
      0040E4 74 0F            [12]12660 	mov	a,#0x0f
      0040E6 2D               [12]12661 	add	a,r5
      0040E7 F5*B5            [12]12662 	mov	_f_open_sloc0_1_0,a
      0040E9 E4               [12]12663 	clr	a
      0040EA 3E               [12]12664 	addc	a,r6
      0040EB F5*B6            [12]12665 	mov	(_f_open_sloc0_1_0 + 1),a
      0040ED 8F*B7            [24]12666 	mov	(_f_open_sloc0_1_0 + 2),r7
      0040EF 90r01r1A         [24]12667 	mov	dptr,#_f_open_dj_65536_188
      0040F2 E0               [24]12668 	movx	a,@dptr
      0040F3 F5*B8            [12]12669 	mov	_f_open_sloc1_1_0,a
      0040F5 A3               [24]12670 	inc	dptr
      0040F6 E0               [24]12671 	movx	a,@dptr
      0040F7 F5*B9            [12]12672 	mov	(_f_open_sloc1_1_0 + 1),a
      0040F9 A3               [24]12673 	inc	dptr
      0040FA E0               [24]12674 	movx	a,@dptr
      0040FB F5*BA            [12]12675 	mov	(_f_open_sloc1_1_0 + 2),a
      0040FD 90r01r38         [24]12676 	mov	dptr,#_f_open_dir_65536_188
      004100 E0               [24]12677 	movx	a,@dptr
      004101 FA               [12]12678 	mov	r2,a
      004102 A3               [24]12679 	inc	dptr
      004103 E0               [24]12680 	movx	a,@dptr
      004104 FB               [12]12681 	mov	r3,a
      004105 A3               [24]12682 	inc	dptr
      004106 E0               [24]12683 	movx	a,@dptr
      004107 FC               [12]12684 	mov	r4,a
      004108 90r00r5B         [24]12685 	mov	dptr,#_ld_clust_PARM_2
      00410B EA               [12]12686 	mov	a,r2
      00410C F0               [24]12687 	movx	@dptr,a
      00410D EB               [12]12688 	mov	a,r3
      00410E A3               [24]12689 	inc	dptr
      00410F F0               [24]12690 	movx	@dptr,a
      004110 EC               [12]12691 	mov	a,r4
      004111 A3               [24]12692 	inc	dptr
      004112 F0               [24]12693 	movx	@dptr,a
      004113 85*B8 82         [24]12694 	mov	dpl,_f_open_sloc1_1_0
      004116 85*B9 83         [24]12695 	mov	dph,(_f_open_sloc1_1_0 + 1)
      004119 85*BA F0         [24]12696 	mov	b,(_f_open_sloc1_1_0 + 2)
      00411C C0 07            [24]12697 	push	ar7
      00411E C0 06            [24]12698 	push	ar6
      004120 C0 05            [24]12699 	push	ar5
      004122 78r57            [12]12700 	mov	r0,#_ld_clust
      004124 79s11            [12]12701 	mov	r1,#(_ld_clust >> 8)
      004126 7As00            [12]12702 	mov	r2,#(_ld_clust >> 16)
      004128 12r00r00         [24]12703 	lcall	__sdcc_banked_call
      00412B AA 82            [24]12704 	mov	r2,dpl
      00412D AB 83            [24]12705 	mov	r3,dph
      00412F A9 F0            [24]12706 	mov	r1,b
      004131 FC               [12]12707 	mov	r4,a
      004132 D0 05            [24]12708 	pop	ar5
      004134 D0 06            [24]12709 	pop	ar6
      004136 D0 07            [24]12710 	pop	ar7
      004138 85*B5 82         [24]12711 	mov	dpl,_f_open_sloc0_1_0
      00413B 85*B6 83         [24]12712 	mov	dph,(_f_open_sloc0_1_0 + 1)
      00413E 85*B7 F0         [24]12713 	mov	b,(_f_open_sloc0_1_0 + 2)
      004141 EA               [12]12714 	mov	a,r2
      004142 12r00r00         [24]12715 	lcall	__gptrput
      004145 A3               [24]12716 	inc	dptr
      004146 EB               [12]12717 	mov	a,r3
      004147 12r00r00         [24]12718 	lcall	__gptrput
      00414A A3               [24]12719 	inc	dptr
      00414B E9               [12]12720 	mov	a,r1
      00414C 12r00r00         [24]12721 	lcall	__gptrput
      00414F A3               [24]12722 	inc	dptr
      004150 EC               [12]12723 	mov	a,r4
      004151 12r00r00         [24]12724 	lcall	__gptrput
                           004154 12725 	C$ff.c$2527$3_0$194 ==.
                                  12726 ;	FATFS\src\ff.c:2527: fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
      004154 74 0B            [12]12727 	mov	a,#0x0b
      004156 2D               [12]12728 	add	a,r5
      004157 F5*B8            [12]12729 	mov	_f_open_sloc1_1_0,a
      004159 E4               [12]12730 	clr	a
      00415A 3E               [12]12731 	addc	a,r6
      00415B F5*B9            [12]12732 	mov	(_f_open_sloc1_1_0 + 1),a
      00415D 8F*BA            [24]12733 	mov	(_f_open_sloc1_1_0 + 2),r7
      00415F 90r01r38         [24]12734 	mov	dptr,#_f_open_dir_65536_188
      004162 E0               [24]12735 	movx	a,@dptr
      004163 F5*B5            [12]12736 	mov	_f_open_sloc0_1_0,a
      004165 A3               [24]12737 	inc	dptr
      004166 E0               [24]12738 	movx	a,@dptr
      004167 F5*B6            [12]12739 	mov	(_f_open_sloc0_1_0 + 1),a
      004169 A3               [24]12740 	inc	dptr
      00416A E0               [24]12741 	movx	a,@dptr
      00416B F5*B7            [12]12742 	mov	(_f_open_sloc0_1_0 + 2),a
      00416D 74 1F            [12]12743 	mov	a,#0x1f
      00416F 25*B5            [12]12744 	add	a,_f_open_sloc0_1_0
      004171 FA               [12]12745 	mov	r2,a
      004172 E4               [12]12746 	clr	a
      004173 35*B6            [12]12747 	addc	a,(_f_open_sloc0_1_0 + 1)
      004175 FB               [12]12748 	mov	r3,a
      004176 AC*B7            [24]12749 	mov	r4,(_f_open_sloc0_1_0 + 2)
      004178 8A 82            [24]12750 	mov	dpl,r2
      00417A 8B 83            [24]12751 	mov	dph,r3
      00417C 8C F0            [24]12752 	mov	b,r4
      00417E 12r00r00         [24]12753 	lcall	__gptrget
      004181 F9               [12]12754 	mov	r1,a
      004182 7C 00            [12]12755 	mov	r4,#0x00
      004184 89*BE            [24]12756 	mov	(_f_open_sloc2_1_0 + 3),r1
                                  12757 ;	1-genFromRTrack replaced	mov	_f_open_sloc2_1_0,#0x00
      004186 8C*BB            [24]12758 	mov	_f_open_sloc2_1_0,r4
                                  12759 ;	1-genFromRTrack replaced	mov	(_f_open_sloc2_1_0 + 1),#0x00
      004188 8C*BC            [24]12760 	mov	(_f_open_sloc2_1_0 + 1),r4
                                  12761 ;	1-genFromRTrack replaced	mov	(_f_open_sloc2_1_0 + 2),#0x00
      00418A 8C*BD            [24]12762 	mov	(_f_open_sloc2_1_0 + 2),r4
      00418C 74 1E            [12]12763 	mov	a,#0x1e
      00418E 25*B5            [12]12764 	add	a,_f_open_sloc0_1_0
      004190 F8               [12]12765 	mov	r0,a
      004191 E4               [12]12766 	clr	a
      004192 35*B6            [12]12767 	addc	a,(_f_open_sloc0_1_0 + 1)
      004194 FB               [12]12768 	mov	r3,a
      004195 AC*B7            [24]12769 	mov	r4,(_f_open_sloc0_1_0 + 2)
      004197 88 82            [24]12770 	mov	dpl,r0
      004199 8B 83            [24]12771 	mov	dph,r3
      00419B 8C F0            [24]12772 	mov	b,r4
      00419D 12r00r00         [24]12773 	lcall	__gptrget
      0041A0 F8               [12]12774 	mov	r0,a
      0041A1 7C 00            [12]12775 	mov	r4,#0x00
      0041A3 8C 02            [24]12776 	mov	ar2,r4
      0041A5 88 03            [24]12777 	mov	ar3,r0
      0041A7 E4               [12]12778 	clr	a
      0041A8 FC               [12]12779 	mov	r4,a
      0041A9 42*BB            [12]12780 	orl	_f_open_sloc2_1_0,a
      0041AB EC               [12]12781 	mov	a,r4
      0041AC 42*BC            [12]12782 	orl	(_f_open_sloc2_1_0 + 1),a
      0041AE EB               [12]12783 	mov	a,r3
      0041AF 42*BD            [12]12784 	orl	(_f_open_sloc2_1_0 + 2),a
      0041B1 EA               [12]12785 	mov	a,r2
      0041B2 42*BE            [12]12786 	orl	(_f_open_sloc2_1_0 + 3),a
      0041B4 74 1D            [12]12787 	mov	a,#0x1d
      0041B6 25*B5            [12]12788 	add	a,_f_open_sloc0_1_0
      0041B8 F9               [12]12789 	mov	r1,a
      0041B9 E4               [12]12790 	clr	a
      0041BA 35*B6            [12]12791 	addc	a,(_f_open_sloc0_1_0 + 1)
      0041BC FB               [12]12792 	mov	r3,a
      0041BD AC*B7            [24]12793 	mov	r4,(_f_open_sloc0_1_0 + 2)
      0041BF 89 82            [24]12794 	mov	dpl,r1
      0041C1 8B 83            [24]12795 	mov	dph,r3
      0041C3 8C F0            [24]12796 	mov	b,r4
      0041C5 12r00r00         [24]12797 	lcall	__gptrget
      0041C8 FC               [12]12798 	mov	r4,a
      0041C9 E4               [12]12799 	clr	a
      0041CA F9               [12]12800 	mov	r1,a
      0041CB FB               [12]12801 	mov	r3,a
      0041CC FA               [12]12802 	mov	r2,a
      0041CD E9               [12]12803 	mov	a,r1
      0041CE 42*BB            [12]12804 	orl	_f_open_sloc2_1_0,a
      0041D0 EC               [12]12805 	mov	a,r4
      0041D1 42*BC            [12]12806 	orl	(_f_open_sloc2_1_0 + 1),a
      0041D3 EB               [12]12807 	mov	a,r3
      0041D4 42*BD            [12]12808 	orl	(_f_open_sloc2_1_0 + 2),a
      0041D6 EA               [12]12809 	mov	a,r2
      0041D7 42*BE            [12]12810 	orl	(_f_open_sloc2_1_0 + 3),a
      0041D9 74 1C            [12]12811 	mov	a,#0x1c
      0041DB 25*B5            [12]12812 	add	a,_f_open_sloc0_1_0
      0041DD F8               [12]12813 	mov	r0,a
      0041DE E4               [12]12814 	clr	a
      0041DF 35*B6            [12]12815 	addc	a,(_f_open_sloc0_1_0 + 1)
      0041E1 FB               [12]12816 	mov	r3,a
      0041E2 AC*B7            [24]12817 	mov	r4,(_f_open_sloc0_1_0 + 2)
      0041E4 88 82            [24]12818 	mov	dpl,r0
      0041E6 8B 83            [24]12819 	mov	dph,r3
      0041E8 8C F0            [24]12820 	mov	b,r4
      0041EA 12r00r00         [24]12821 	lcall	__gptrget
      0041ED F8               [12]12822 	mov	r0,a
      0041EE E4               [12]12823 	clr	a
      0041EF FB               [12]12824 	mov	r3,a
      0041F0 FC               [12]12825 	mov	r4,a
      0041F1 FA               [12]12826 	mov	r2,a
      0041F2 E5*BB            [12]12827 	mov	a,_f_open_sloc2_1_0
      0041F4 42 00            [12]12828 	orl	ar0,a
      0041F6 E5*BC            [12]12829 	mov	a,(_f_open_sloc2_1_0 + 1)
      0041F8 42 03            [12]12830 	orl	ar3,a
      0041FA E5*BD            [12]12831 	mov	a,(_f_open_sloc2_1_0 + 2)
      0041FC 42 04            [12]12832 	orl	ar4,a
      0041FE E5*BE            [12]12833 	mov	a,(_f_open_sloc2_1_0 + 3)
      004200 42 02            [12]12834 	orl	ar2,a
      004202 85*B8 82         [24]12835 	mov	dpl,_f_open_sloc1_1_0
      004205 85*B9 83         [24]12836 	mov	dph,(_f_open_sloc1_1_0 + 1)
      004208 85*BA F0         [24]12837 	mov	b,(_f_open_sloc1_1_0 + 2)
      00420B E8               [12]12838 	mov	a,r0
      00420C 12r00r00         [24]12839 	lcall	__gptrput
      00420F A3               [24]12840 	inc	dptr
      004210 EB               [12]12841 	mov	a,r3
      004211 12r00r00         [24]12842 	lcall	__gptrput
      004214 A3               [24]12843 	inc	dptr
      004215 EC               [12]12844 	mov	a,r4
      004216 12r00r00         [24]12845 	lcall	__gptrput
      004219 A3               [24]12846 	inc	dptr
      00421A EA               [12]12847 	mov	a,r2
      00421B 12r00r00         [24]12848 	lcall	__gptrput
                           00421E 12849 	C$ff.c$2528$3_0$194 ==.
                                  12850 ;	FATFS\src\ff.c:2528: fp->fptr = 0;						/* File pointer */
      00421E 74 07            [12]12851 	mov	a,#0x07
      004220 2D               [12]12852 	add	a,r5
      004221 FA               [12]12853 	mov	r2,a
      004222 E4               [12]12854 	clr	a
      004223 3E               [12]12855 	addc	a,r6
      004224 FB               [12]12856 	mov	r3,a
      004225 8F 04            [24]12857 	mov	ar4,r7
      004227 8A 82            [24]12858 	mov	dpl,r2
      004229 8B 83            [24]12859 	mov	dph,r3
      00422B 8C F0            [24]12860 	mov	b,r4
      00422D E4               [12]12861 	clr	a
      00422E 12r00r00         [24]12862 	lcall	__gptrput
      004231 A3               [24]12863 	inc	dptr
      004232 12r00r00         [24]12864 	lcall	__gptrput
      004235 A3               [24]12865 	inc	dptr
      004236 12r00r00         [24]12866 	lcall	__gptrput
      004239 A3               [24]12867 	inc	dptr
      00423A 12r00r00         [24]12868 	lcall	__gptrput
                           00423D 12869 	C$ff.c$2529$3_0$194 ==.
                                  12870 ;	FATFS\src\ff.c:2529: fp->dsect = 0;
      00423D 74 17            [12]12871 	mov	a,#0x17
      00423F 2D               [12]12872 	add	a,r5
      004240 FA               [12]12873 	mov	r2,a
      004241 E4               [12]12874 	clr	a
      004242 3E               [12]12875 	addc	a,r6
      004243 FB               [12]12876 	mov	r3,a
      004244 8F 04            [24]12877 	mov	ar4,r7
      004246 8A 82            [24]12878 	mov	dpl,r2
      004248 8B 83            [24]12879 	mov	dph,r3
      00424A 8C F0            [24]12880 	mov	b,r4
      00424C E4               [12]12881 	clr	a
      00424D 12r00r00         [24]12882 	lcall	__gptrput
      004250 A3               [24]12883 	inc	dptr
      004251 12r00r00         [24]12884 	lcall	__gptrput
      004254 A3               [24]12885 	inc	dptr
      004255 12r00r00         [24]12886 	lcall	__gptrput
      004258 A3               [24]12887 	inc	dptr
      004259 12r00r00         [24]12888 	lcall	__gptrput
                           00425C 12889 	C$ff.c$2531$3_0$194 ==.
                                  12890 ;	FATFS\src\ff.c:2531: fp->cltbl = 0;						/* Normal seek mode */
      00425C 74 1B            [12]12891 	mov	a,#0x1b
      00425E 2D               [12]12892 	add	a,r5
      00425F FA               [12]12893 	mov	r2,a
      004260 E4               [12]12894 	clr	a
      004261 3E               [12]12895 	addc	a,r6
      004262 FB               [12]12896 	mov	r3,a
      004263 8F 04            [24]12897 	mov	ar4,r7
      004265 8A 82            [24]12898 	mov	dpl,r2
      004267 8B 83            [24]12899 	mov	dph,r3
      004269 8C F0            [24]12900 	mov	b,r4
      00426B E4               [12]12901 	clr	a
      00426C 12r00r00         [24]12902 	lcall	__gptrput
      00426F A3               [24]12903 	inc	dptr
      004270 12r00r00         [24]12904 	lcall	__gptrput
      004273 A3               [24]12905 	inc	dptr
      004274 12r00r00         [24]12906 	lcall	__gptrput
                           004277 12907 	C$ff.c$2533$3_0$194 ==.
                                  12908 ;	FATFS\src\ff.c:2533: fp->fs = dj.fs;	 					/* Validate file object */
      004277 90r01r1A         [24]12909 	mov	dptr,#_f_open_dj_65536_188
      00427A E0               [24]12910 	movx	a,@dptr
      00427B FA               [12]12911 	mov	r2,a
      00427C A3               [24]12912 	inc	dptr
      00427D E0               [24]12913 	movx	a,@dptr
      00427E FB               [12]12914 	mov	r3,a
      00427F A3               [24]12915 	inc	dptr
      004280 E0               [24]12916 	movx	a,@dptr
      004281 FC               [12]12917 	mov	r4,a
      004282 8D 82            [24]12918 	mov	dpl,r5
      004284 8E 83            [24]12919 	mov	dph,r6
      004286 8F F0            [24]12920 	mov	b,r7
      004288 EA               [12]12921 	mov	a,r2
      004289 12r00r00         [24]12922 	lcall	__gptrput
      00428C A3               [24]12923 	inc	dptr
      00428D EB               [12]12924 	mov	a,r3
      00428E 12r00r00         [24]12925 	lcall	__gptrput
      004291 A3               [24]12926 	inc	dptr
      004292 EC               [12]12927 	mov	a,r4
      004293 12r00r00         [24]12928 	lcall	__gptrput
                           004296 12929 	C$ff.c$2534$3_0$194 ==.
                                  12930 ;	FATFS\src\ff.c:2534: fp->id = fp->fs->id;
      004296 74 03            [12]12931 	mov	a,#0x03
      004298 2D               [12]12932 	add	a,r5
      004299 FD               [12]12933 	mov	r5,a
      00429A E4               [12]12934 	clr	a
      00429B 3E               [12]12935 	addc	a,r6
      00429C FE               [12]12936 	mov	r6,a
      00429D 74 06            [12]12937 	mov	a,#0x06
      00429F 2A               [12]12938 	add	a,r2
      0042A0 FA               [12]12939 	mov	r2,a
      0042A1 E4               [12]12940 	clr	a
      0042A2 3B               [12]12941 	addc	a,r3
      0042A3 FB               [12]12942 	mov	r3,a
      0042A4 8A 82            [24]12943 	mov	dpl,r2
      0042A6 8B 83            [24]12944 	mov	dph,r3
      0042A8 8C F0            [24]12945 	mov	b,r4
      0042AA 12r00r00         [24]12946 	lcall	__gptrget
      0042AD FA               [12]12947 	mov	r2,a
      0042AE A3               [24]12948 	inc	dptr
      0042AF 12r00r00         [24]12949 	lcall	__gptrget
      0042B2 FB               [12]12950 	mov	r3,a
      0042B3 8D 82            [24]12951 	mov	dpl,r5
      0042B5 8E 83            [24]12952 	mov	dph,r6
      0042B7 8F F0            [24]12953 	mov	b,r7
      0042B9 EA               [12]12954 	mov	a,r2
      0042BA 12r00r00         [24]12955 	lcall	__gptrput
      0042BD A3               [24]12956 	inc	dptr
      0042BE EB               [12]12957 	mov	a,r3
      0042BF 12r00r00         [24]12958 	lcall	__gptrput
      0042C2                      12959 00115$:
                           0042C2 12960 	C$ff.c$2538$1_0$188 ==.
                                  12961 ;	FATFS\src\ff.c:2538: LEAVE_FF(dj.fs, res);
      0042C2 90r01r19         [24]12962 	mov	dptr,#_f_open_res_65536_188
      0042C5 E0               [24]12963 	movx	a,@dptr
      0042C6 FF               [12]12964 	mov	r7,a
      0042C7 F5 82            [12]12965 	mov	dpl,a
                           0042C9 12966 	C$ff.c$2539$1_0$188 ==.
                                  12967 ;	FATFS\src\ff.c:2539: }
                           0042C9 12968 	C$ff.c$2539$1_0$188 ==.
                           0042C9 12969 	XG$f_open$0$0 ==.
      0042C9 02r00r00         [24]12970 	ljmp	__sdcc_banked_ret
                                  12971 ;------------------------------------------------------------
                                  12972 ;Allocation info for local variables in function 'f_read'
                                  12973 ;------------------------------------------------------------
                                  12974 ;sloc0                     Allocated with name '_f_read_sloc0_1_0'
                                  12975 ;sloc1                     Allocated with name '_f_read_sloc1_1_0'
                                  12976 ;sloc2                     Allocated with name '_f_read_sloc2_1_0'
                                  12977 ;sloc3                     Allocated with name '_f_read_sloc3_1_0'
                                  12978 ;sloc4                     Allocated with name '_f_read_sloc4_1_0'
                                  12979 ;sloc5                     Allocated with name '_f_read_sloc5_1_0'
                                  12980 ;sloc6                     Allocated with name '_f_read_sloc6_1_0'
                                  12981 ;sloc7                     Allocated with name '_f_read_sloc7_1_0'
                                  12982 ;sloc8                     Allocated with name '_f_read_sloc8_1_0'
                                  12983 ;sloc9                     Allocated with name '_f_read_sloc9_1_0'
                                  12984 ;buff                      Allocated with name '_f_read_PARM_2'
                                  12985 ;btr                       Allocated with name '_f_read_PARM_3'
                                  12986 ;br                        Allocated with name '_f_read_PARM_4'
                                  12987 ;fp                        Allocated with name '_f_read_fp_65536_195'
                                  12988 ;res                       Allocated with name '_f_read_res_65536_196'
                                  12989 ;clst                      Allocated with name '_f_read_clst_65536_196'
                                  12990 ;sect                      Allocated with name '_f_read_sect_65536_196'
                                  12991 ;remain                    Allocated with name '_f_read_remain_65536_196'
                                  12992 ;rcnt                      Allocated with name '_f_read_rcnt_65536_196'
                                  12993 ;cc                        Allocated with name '_f_read_cc_65536_196'
                                  12994 ;csect                     Allocated with name '_f_read_csect_65536_196'
                                  12995 ;rbuff                     Allocated with name '_f_read_rbuff_65536_196'
                                  12996 ;------------------------------------------------------------
                           0042CC 12997 	G$f_read$0$0 ==.
                           0042CC 12998 	C$ff.c$2548$1_0$196 ==.
                                  12999 ;	FATFS\src\ff.c:2548: FRESULT f_read (
                                  13000 ;	-----------------------------------------
                                  13001 ;	 function f_read
                                  13002 ;	-----------------------------------------
      0042CC                      13003 _f_read:
      0042CC AF F0            [24]13004 	mov	r7,b
      0042CE AE 83            [24]13005 	mov	r6,dph
      0042D0 E5 82            [12]13006 	mov	a,dpl
      0042D2 90r01r4F         [24]13007 	mov	dptr,#_f_read_fp_65536_195
      0042D5 F0               [24]13008 	movx	@dptr,a
      0042D6 EE               [12]13009 	mov	a,r6
      0042D7 A3               [24]13010 	inc	dptr
      0042D8 F0               [24]13011 	movx	@dptr,a
      0042D9 EF               [12]13012 	mov	a,r7
      0042DA A3               [24]13013 	inc	dptr
      0042DB F0               [24]13014 	movx	@dptr,a
                           0042DC 13015 	C$ff.c$2558$1_0$196 ==.
                                  13016 ;	FATFS\src\ff.c:2558: BYTE csect, *rbuff = (BYTE*)buff;
      0042DC 90r01r47         [24]13017 	mov	dptr,#_f_read_PARM_2
      0042DF E0               [24]13018 	movx	a,@dptr
      0042E0 FD               [12]13019 	mov	r5,a
      0042E1 A3               [24]13020 	inc	dptr
      0042E2 E0               [24]13021 	movx	a,@dptr
      0042E3 FE               [12]13022 	mov	r6,a
      0042E4 A3               [24]13023 	inc	dptr
      0042E5 E0               [24]13024 	movx	a,@dptr
      0042E6 FF               [12]13025 	mov	r7,a
      0042E7 90r01r5A         [24]13026 	mov	dptr,#_f_read_rbuff_65536_196
      0042EA ED               [12]13027 	mov	a,r5
      0042EB F0               [24]13028 	movx	@dptr,a
      0042EC EE               [12]13029 	mov	a,r6
      0042ED A3               [24]13030 	inc	dptr
      0042EE F0               [24]13031 	movx	@dptr,a
      0042EF EF               [12]13032 	mov	a,r7
      0042F0 A3               [24]13033 	inc	dptr
      0042F1 F0               [24]13034 	movx	@dptr,a
                           0042F2 13035 	C$ff.c$2561$1_0$196 ==.
                                  13036 ;	FATFS\src\ff.c:2561: *br = 0;	/* Clear read byte counter */
      0042F2 90r01r4C         [24]13037 	mov	dptr,#_f_read_PARM_4
      0042F5 E0               [24]13038 	movx	a,@dptr
      0042F6 F5*DD            [12]13039 	mov	_f_read_sloc9_1_0,a
      0042F8 A3               [24]13040 	inc	dptr
      0042F9 E0               [24]13041 	movx	a,@dptr
      0042FA F5*DE            [12]13042 	mov	(_f_read_sloc9_1_0 + 1),a
      0042FC A3               [24]13043 	inc	dptr
      0042FD E0               [24]13044 	movx	a,@dptr
      0042FE F5*DF            [12]13045 	mov	(_f_read_sloc9_1_0 + 2),a
      004300 85*DD 82         [24]13046 	mov	dpl,_f_read_sloc9_1_0
      004303 85*DE 83         [24]13047 	mov	dph,(_f_read_sloc9_1_0 + 1)
      004306 85*DF F0         [24]13048 	mov	b,(_f_read_sloc9_1_0 + 2)
      004309 E4               [12]13049 	clr	a
      00430A 12r00r00         [24]13050 	lcall	__gptrput
      00430D A3               [24]13051 	inc	dptr
      00430E 12r00r00         [24]13052 	lcall	__gptrput
                           004311 13053 	C$ff.c$2563$1_0$196 ==.
                                  13054 ;	FATFS\src\ff.c:2563: res = validate(fp);							/* Check validity */
      004311 90r01r4F         [24]13055 	mov	dptr,#_f_read_fp_65536_195
      004314 E0               [24]13056 	movx	a,@dptr
      004315 F5*BF            [12]13057 	mov	_f_read_sloc0_1_0,a
      004317 A3               [24]13058 	inc	dptr
      004318 E0               [24]13059 	movx	a,@dptr
      004319 F5*C0            [12]13060 	mov	(_f_read_sloc0_1_0 + 1),a
      00431B A3               [24]13061 	inc	dptr
      00431C E0               [24]13062 	movx	a,@dptr
      00431D F5*C1            [12]13063 	mov	(_f_read_sloc0_1_0 + 2),a
      00431F A8*BF            [24]13064 	mov	r0,_f_read_sloc0_1_0
      004321 A9*C0            [24]13065 	mov	r1,(_f_read_sloc0_1_0 + 1)
      004323 AC*C1            [24]13066 	mov	r4,(_f_read_sloc0_1_0 + 2)
      004325 88 82            [24]13067 	mov	dpl,r0
      004327 89 83            [24]13068 	mov	dph,r1
      004329 8C F0            [24]13069 	mov	b,r4
      00432B 78rC8            [12]13070 	mov	r0,#_validate
      00432D 79s3D            [12]13071 	mov	r1,#(_validate >> 8)
      00432F 7As00            [12]13072 	mov	r2,#(_validate >> 16)
      004331 12r00r00         [24]13073 	lcall	__sdcc_banked_call
                           004334 13074 	C$ff.c$2564$1_0$196 ==.
                                  13075 ;	FATFS\src\ff.c:2564: if (res != FR_OK) LEAVE_FF(fp->fs, res);
      004334 E5 82            [12]13076 	mov	a,dpl
      004336 FC               [12]13077 	mov	r4,a
      004337 60 05            [24]13078 	jz	00102$
      004339 8C 82            [24]13079 	mov	dpl,r4
      00433B 02r00r00         [24]13080 	ljmp	__sdcc_banked_ret
      00433E                      13081 00102$:
                           00433E 13082 	C$ff.c$2565$1_0$196 ==.
                                  13083 ;	FATFS\src\ff.c:2565: if (fp->err)								/* Check error */
      00433E 74 06            [12]13084 	mov	a,#0x06
      004340 25*BF            [12]13085 	add	a,_f_read_sloc0_1_0
      004342 FA               [12]13086 	mov	r2,a
      004343 E4               [12]13087 	clr	a
      004344 35*C0            [12]13088 	addc	a,(_f_read_sloc0_1_0 + 1)
      004346 FB               [12]13089 	mov	r3,a
      004347 AC*C1            [24]13090 	mov	r4,(_f_read_sloc0_1_0 + 2)
      004349 8A 82            [24]13091 	mov	dpl,r2
      00434B 8B 83            [24]13092 	mov	dph,r3
      00434D 8C F0            [24]13093 	mov	b,r4
      00434F 12r00r00         [24]13094 	lcall	__gptrget
      004352 FC               [12]13095 	mov	r4,a
      004353 60 05            [24]13096 	jz	00104$
                           004355 13097 	C$ff.c$2566$1_0$196 ==.
                                  13098 ;	FATFS\src\ff.c:2566: LEAVE_FF(fp->fs, (FRESULT)fp->err);
      004355 8C 82            [24]13099 	mov	dpl,r4
      004357 02r00r00         [24]13100 	ljmp	__sdcc_banked_ret
      00435A                      13101 00104$:
                           00435A 13102 	C$ff.c$2567$1_0$196 ==.
                                  13103 ;	FATFS\src\ff.c:2567: if (!(fp->flag & FA_READ)) 					/* Check access mode */
      00435A 74 05            [12]13104 	mov	a,#0x05
      00435C 25*BF            [12]13105 	add	a,_f_read_sloc0_1_0
      00435E FA               [12]13106 	mov	r2,a
      00435F E4               [12]13107 	clr	a
      004360 35*C0            [12]13108 	addc	a,(_f_read_sloc0_1_0 + 1)
      004362 FB               [12]13109 	mov	r3,a
      004363 AC*C1            [24]13110 	mov	r4,(_f_read_sloc0_1_0 + 2)
      004365 8A 82            [24]13111 	mov	dpl,r2
      004367 8B 83            [24]13112 	mov	dph,r3
      004369 8C F0            [24]13113 	mov	b,r4
      00436B 12r00r00         [24]13114 	lcall	__gptrget
      00436E FA               [12]13115 	mov	r2,a
      00436F 20 E0 06         [24]13116 	jb	acc.0,00106$
                           004372 13117 	C$ff.c$2568$1_0$196 ==.
                                  13118 ;	FATFS\src\ff.c:2568: LEAVE_FF(fp->fs, FR_DENIED);
      004372 75 82 07         [24]13119 	mov	dpl,#0x07
      004375 02r00r00         [24]13120 	ljmp	__sdcc_banked_ret
      004378                      13121 00106$:
                           004378 13122 	C$ff.c$2569$1_0$196 ==.
                                  13123 ;	FATFS\src\ff.c:2569: remain = fp->fsize - fp->fptr;
      004378 74 0B            [12]13124 	mov	a,#0x0b
      00437A 25*BF            [12]13125 	add	a,_f_read_sloc0_1_0
      00437C FC               [12]13126 	mov	r4,a
      00437D E4               [12]13127 	clr	a
      00437E 35*C0            [12]13128 	addc	a,(_f_read_sloc0_1_0 + 1)
      004380 FA               [12]13129 	mov	r2,a
      004381 AB*C1            [24]13130 	mov	r3,(_f_read_sloc0_1_0 + 2)
      004383 8C 82            [24]13131 	mov	dpl,r4
      004385 8A 83            [24]13132 	mov	dph,r2
      004387 8B F0            [24]13133 	mov	b,r3
      004389 12r00r00         [24]13134 	lcall	__gptrget
      00438C F9               [12]13135 	mov	r1,a
      00438D A3               [24]13136 	inc	dptr
      00438E 12r00r00         [24]13137 	lcall	__gptrget
      004391 FA               [12]13138 	mov	r2,a
      004392 A3               [24]13139 	inc	dptr
      004393 12r00r00         [24]13140 	lcall	__gptrget
      004396 FB               [12]13141 	mov	r3,a
      004397 A3               [24]13142 	inc	dptr
      004398 12r00r00         [24]13143 	lcall	__gptrget
      00439B FC               [12]13144 	mov	r4,a
      00439C 74 07            [12]13145 	mov	a,#0x07
      00439E 25*BF            [12]13146 	add	a,_f_read_sloc0_1_0
      0043A0 F8               [12]13147 	mov	r0,a
      0043A1 E4               [12]13148 	clr	a
      0043A2 35*C0            [12]13149 	addc	a,(_f_read_sloc0_1_0 + 1)
      0043A4 FE               [12]13150 	mov	r6,a
      0043A5 AF*C1            [24]13151 	mov	r7,(_f_read_sloc0_1_0 + 2)
      0043A7 88 82            [24]13152 	mov	dpl,r0
      0043A9 8E 83            [24]13153 	mov	dph,r6
      0043AB 8F F0            [24]13154 	mov	b,r7
      0043AD 12r00r00         [24]13155 	lcall	__gptrget
      0043B0 F8               [12]13156 	mov	r0,a
      0043B1 A3               [24]13157 	inc	dptr
      0043B2 12r00r00         [24]13158 	lcall	__gptrget
      0043B5 FE               [12]13159 	mov	r6,a
      0043B6 A3               [24]13160 	inc	dptr
      0043B7 12r00r00         [24]13161 	lcall	__gptrget
      0043BA FF               [12]13162 	mov	r7,a
      0043BB A3               [24]13163 	inc	dptr
      0043BC 12r00r00         [24]13164 	lcall	__gptrget
      0043BF FD               [12]13165 	mov	r5,a
      0043C0 E9               [12]13166 	mov	a,r1
      0043C1 C3               [12]13167 	clr	c
      0043C2 98               [12]13168 	subb	a,r0
      0043C3 F5*C2            [12]13169 	mov	_f_read_sloc1_1_0,a
      0043C5 EA               [12]13170 	mov	a,r2
      0043C6 9E               [12]13171 	subb	a,r6
      0043C7 F5*C3            [12]13172 	mov	(_f_read_sloc1_1_0 + 1),a
      0043C9 EB               [12]13173 	mov	a,r3
      0043CA 9F               [12]13174 	subb	a,r7
      0043CB F5*C4            [12]13175 	mov	(_f_read_sloc1_1_0 + 2),a
      0043CD EC               [12]13176 	mov	a,r4
      0043CE 9D               [12]13177 	subb	a,r5
      0043CF F5*C5            [12]13178 	mov	(_f_read_sloc1_1_0 + 3),a
                           0043D1 13179 	C$ff.c$2570$1_0$196 ==.
                                  13180 ;	FATFS\src\ff.c:2570: if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
      0043D1 90r01r4A         [24]13181 	mov	dptr,#_f_read_PARM_3
      0043D4 E0               [24]13182 	movx	a,@dptr
      0043D5 FE               [12]13183 	mov	r6,a
      0043D6 A3               [24]13184 	inc	dptr
      0043D7 E0               [24]13185 	movx	a,@dptr
      0043D8 FF               [12]13186 	mov	r7,a
      0043D9 7D 00            [12]13187 	mov	r5,#0x00
      0043DB 7C 00            [12]13188 	mov	r4,#0x00
      0043DD C3               [12]13189 	clr	c
      0043DE E5*C2            [12]13190 	mov	a,_f_read_sloc1_1_0
      0043E0 9E               [12]13191 	subb	a,r6
      0043E1 E5*C3            [12]13192 	mov	a,(_f_read_sloc1_1_0 + 1)
      0043E3 9F               [12]13193 	subb	a,r7
      0043E4 E5*C4            [12]13194 	mov	a,(_f_read_sloc1_1_0 + 2)
      0043E6 9D               [12]13195 	subb	a,r5
      0043E7 E5*C5            [12]13196 	mov	a,(_f_read_sloc1_1_0 + 3)
      0043E9 9C               [12]13197 	subb	a,r4
      0043EA 50 0A            [24]13198 	jnc	00158$
      0043EC 90r01r4A         [24]13199 	mov	dptr,#_f_read_PARM_3
      0043EF E5*C2            [12]13200 	mov	a,_f_read_sloc1_1_0
      0043F1 F0               [24]13201 	movx	@dptr,a
      0043F2 E5*C3            [12]13202 	mov	a,(_f_read_sloc1_1_0 + 1)
      0043F4 A3               [24]13203 	inc	dptr
      0043F5 F0               [24]13204 	movx	@dptr,a
      0043F6                      13205 00158$:
      0043F6 90r01r4F         [24]13206 	mov	dptr,#_f_read_fp_65536_195
      0043F9 E0               [24]13207 	movx	a,@dptr
      0043FA F5*D7            [12]13208 	mov	_f_read_sloc7_1_0,a
      0043FC A3               [24]13209 	inc	dptr
      0043FD E0               [24]13210 	movx	a,@dptr
      0043FE F5*D8            [12]13211 	mov	(_f_read_sloc7_1_0 + 1),a
      004400 A3               [24]13212 	inc	dptr
      004401 E0               [24]13213 	movx	a,@dptr
      004402 F5*D9            [12]13214 	mov	(_f_read_sloc7_1_0 + 2),a
      004404 85*D7*C2         [24]13215 	mov	_f_read_sloc1_1_0,_f_read_sloc7_1_0
      004407 85*D8*C3         [24]13216 	mov	(_f_read_sloc1_1_0 + 1),(_f_read_sloc7_1_0 + 1)
      00440A 85*D9*C4         [24]13217 	mov	(_f_read_sloc1_1_0 + 2),(_f_read_sloc7_1_0 + 2)
      00440D 74 07            [12]13218 	mov	a,#0x07
      00440F 25*D7            [12]13219 	add	a,_f_read_sloc7_1_0
      004411 F5*BF            [12]13220 	mov	_f_read_sloc0_1_0,a
      004413 E4               [12]13221 	clr	a
      004414 35*D8            [12]13222 	addc	a,(_f_read_sloc7_1_0 + 1)
      004416 F5*C0            [12]13223 	mov	(_f_read_sloc0_1_0 + 1),a
      004418 85*D9*C1         [24]13224 	mov	(_f_read_sloc0_1_0 + 2),(_f_read_sloc7_1_0 + 2)
      00441B 85*BF*C6         [24]13225 	mov	_f_read_sloc2_1_0,_f_read_sloc0_1_0
      00441E 85*C0*C7         [24]13226 	mov	(_f_read_sloc2_1_0 + 1),(_f_read_sloc0_1_0 + 1)
      004421 85*C1*C8         [24]13227 	mov	(_f_read_sloc2_1_0 + 2),(_f_read_sloc0_1_0 + 2)
      004424 85*D7*C9         [24]13228 	mov	_f_read_sloc3_1_0,_f_read_sloc7_1_0
      004427 85*D8*CA         [24]13229 	mov	(_f_read_sloc3_1_0 + 1),(_f_read_sloc7_1_0 + 1)
      00442A 85*D9*CB         [24]13230 	mov	(_f_read_sloc3_1_0 + 2),(_f_read_sloc7_1_0 + 2)
      00442D                      13231 00138$:
                           00442D 13232 	C$ff.c$2572$2_0$197 ==.
                                  13233 ;	FATFS\src\ff.c:2572: for ( ;  btr;								/* Repeat until all data read */
      00442D 90r01r4A         [24]13234 	mov	dptr,#_f_read_PARM_3
      004430 E0               [24]13235 	movx	a,@dptr
      004431 F5 F0            [12]13236 	mov	b,a
      004433 A3               [24]13237 	inc	dptr
      004434 E0               [24]13238 	movx	a,@dptr
      004435 45 F0            [12]13239 	orl	a,b
      004437 70 03            [24]13240 	jnz	00217$
      004439 02r4Ar73         [24]13241 	ljmp	00136$
      00443C                      13242 00217$:
                           00443C 13243 	C$ff.c$2574$3_0$198 ==.
                                  13244 ;	FATFS\src\ff.c:2574: if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
      00443C 85*BF 82         [24]13245 	mov	dpl,_f_read_sloc0_1_0
      00443F 85*C0 83         [24]13246 	mov	dph,(_f_read_sloc0_1_0 + 1)
      004442 85*C1 F0         [24]13247 	mov	b,(_f_read_sloc0_1_0 + 2)
      004445 12r00r00         [24]13248 	lcall	__gptrget
      004448 F5*CC            [12]13249 	mov	_f_read_sloc4_1_0,a
      00444A A3               [24]13250 	inc	dptr
      00444B 12r00r00         [24]13251 	lcall	__gptrget
      00444E F5*CD            [12]13252 	mov	(_f_read_sloc4_1_0 + 1),a
      004450 A3               [24]13253 	inc	dptr
      004451 12r00r00         [24]13254 	lcall	__gptrget
      004454 F5*CE            [12]13255 	mov	(_f_read_sloc4_1_0 + 2),a
      004456 A3               [24]13256 	inc	dptr
      004457 12r00r00         [24]13257 	lcall	__gptrget
      00445A F5*CF            [12]13258 	mov	(_f_read_sloc4_1_0 + 3),a
      00445C E5*CC            [12]13259 	mov	a,_f_read_sloc4_1_0
      00445E 70 05            [24]13260 	jnz	00218$
      004460 E5*CD            [12]13261 	mov	a,(_f_read_sloc4_1_0 + 1)
      004462 30 E0 03         [24]13262 	jnb	acc.0,00219$
      004465                      13263 00218$:
      004465 02r48r63         [24]13264 	ljmp	00130$
      004468                      13265 00219$:
                           004468 13266 	C$ff.c$2575$1_0$196 ==.
                                  13267 ;	FATFS\src\ff.c:2575: csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
      004468 E5*CF            [12]13268 	mov	a,(_f_read_sloc4_1_0 + 3)
      00446A 75*D6 00         [24]13269 	mov	(_f_read_sloc6_1_0 + 3),#0x00
      00446D C3               [12]13270 	clr	c
      00446E 13               [12]13271 	rrc	a
      00446F F5*D5            [12]13272 	mov	(_f_read_sloc6_1_0 + 2),a
      004471 E5*CE            [12]13273 	mov	a,(_f_read_sloc4_1_0 + 2)
      004473 13               [12]13274 	rrc	a
      004474 F5*D4            [12]13275 	mov	(_f_read_sloc6_1_0 + 1),a
      004476 E5*CD            [12]13276 	mov	a,(_f_read_sloc4_1_0 + 1)
      004478 13               [12]13277 	rrc	a
      004479 F5*D3            [12]13278 	mov	_f_read_sloc6_1_0,a
      00447B 85*C2 82         [24]13279 	mov	dpl,_f_read_sloc1_1_0
      00447E 85*C3 83         [24]13280 	mov	dph,(_f_read_sloc1_1_0 + 1)
      004481 85*C4 F0         [24]13281 	mov	b,(_f_read_sloc1_1_0 + 2)
      004484 12r00r00         [24]13282 	lcall	__gptrget
      004487 F5*D0            [12]13283 	mov	_f_read_sloc5_1_0,a
      004489 A3               [24]13284 	inc	dptr
      00448A 12r00r00         [24]13285 	lcall	__gptrget
      00448D F5*D1            [12]13286 	mov	(_f_read_sloc5_1_0 + 1),a
      00448F A3               [24]13287 	inc	dptr
      004490 12r00r00         [24]13288 	lcall	__gptrget
      004493 F5*D2            [12]13289 	mov	(_f_read_sloc5_1_0 + 2),a
      004495 74 02            [12]13290 	mov	a,#0x02
      004497 25*D0            [12]13291 	add	a,_f_read_sloc5_1_0
      004499 FA               [12]13292 	mov	r2,a
      00449A E4               [12]13293 	clr	a
      00449B 35*D1            [12]13294 	addc	a,(_f_read_sloc5_1_0 + 1)
      00449D FB               [12]13295 	mov	r3,a
      00449E AC*D2            [24]13296 	mov	r4,(_f_read_sloc5_1_0 + 2)
      0044A0 8A 82            [24]13297 	mov	dpl,r2
      0044A2 8B 83            [24]13298 	mov	dph,r3
      0044A4 8C F0            [24]13299 	mov	b,r4
      0044A6 12r00r00         [24]13300 	lcall	__gptrget
      0044A9 FA               [12]13301 	mov	r2,a
      0044AA 1A               [12]13302 	dec	r2
      0044AB A8*D3            [24]13303 	mov	r0,_f_read_sloc6_1_0
      0044AD EA               [12]13304 	mov	a,r2
      0044AE 58               [12]13305 	anl	a,r0
                           0044AF 13306 	C$ff.c$2576$1_0$196 ==.
                                  13307 ;	FATFS\src\ff.c:2576: if (!csect) {						/* On the cluster boundary? */
      0044AF F5*D3            [12]13308 	mov	_f_read_sloc6_1_0,a
      0044B1 60 03            [24]13309 	jz	00220$
      0044B3 02r46r60         [24]13310 	ljmp	00120$
      0044B6                      13311 00220$:
                           0044B6 13312 	C$ff.c$2577$5_0$200 ==.
                                  13313 ;	FATFS\src\ff.c:2577: if (fp->fptr == 0) {			/* On the top of the file? */
      0044B6 E5*CC            [12]13314 	mov	a,_f_read_sloc4_1_0
      0044B8 45*CD            [12]13315 	orl	a,(_f_read_sloc4_1_0 + 1)
      0044BA 45*CE            [12]13316 	orl	a,(_f_read_sloc4_1_0 + 2)
      0044BC 45*CF            [12]13317 	orl	a,(_f_read_sloc4_1_0 + 3)
      0044BE 70 35            [24]13318 	jnz	00113$
                           0044C0 13319 	C$ff.c$2578$1_0$196 ==.
                                  13320 ;	FATFS\src\ff.c:2578: clst = fp->sclust;			/* Follow from the origin */
      0044C0 74 0F            [12]13321 	mov	a,#0x0f
      0044C2 25*C2            [12]13322 	add	a,_f_read_sloc1_1_0
      0044C4 F8               [12]13323 	mov	r0,a
      0044C5 E4               [12]13324 	clr	a
      0044C6 35*C3            [12]13325 	addc	a,(_f_read_sloc1_1_0 + 1)
      0044C8 F9               [12]13326 	mov	r1,a
      0044C9 AC*C4            [24]13327 	mov	r4,(_f_read_sloc1_1_0 + 2)
      0044CB 88 82            [24]13328 	mov	dpl,r0
      0044CD 89 83            [24]13329 	mov	dph,r1
      0044CF 8C F0            [24]13330 	mov	b,r4
      0044D1 12r00r00         [24]13331 	lcall	__gptrget
      0044D4 F8               [12]13332 	mov	r0,a
      0044D5 A3               [24]13333 	inc	dptr
      0044D6 12r00r00         [24]13334 	lcall	__gptrget
      0044D9 F9               [12]13335 	mov	r1,a
      0044DA A3               [24]13336 	inc	dptr
      0044DB 12r00r00         [24]13337 	lcall	__gptrget
      0044DE FC               [12]13338 	mov	r4,a
      0044DF A3               [24]13339 	inc	dptr
      0044E0 12r00r00         [24]13340 	lcall	__gptrget
      0044E3 FB               [12]13341 	mov	r3,a
      0044E4 90r01r52         [24]13342 	mov	dptr,#_f_read_clst_65536_196
      0044E7 E8               [12]13343 	mov	a,r0
      0044E8 F0               [24]13344 	movx	@dptr,a
      0044E9 E9               [12]13345 	mov	a,r1
      0044EA A3               [24]13346 	inc	dptr
      0044EB F0               [24]13347 	movx	@dptr,a
      0044EC EC               [12]13348 	mov	a,r4
      0044ED A3               [24]13349 	inc	dptr
      0044EE F0               [24]13350 	movx	@dptr,a
      0044EF EB               [12]13351 	mov	a,r3
      0044F0 A3               [24]13352 	inc	dptr
      0044F1 F0               [24]13353 	movx	@dptr,a
      0044F2 02r45rAB         [24]13354 	ljmp	00114$
      0044F5                      13355 00113$:
                           0044F5 13356 	C$ff.c$2581$1_0$196 ==.
                                  13357 ;	FATFS\src\ff.c:2581: if (fp->cltbl)
      0044F5 74 1B            [12]13358 	mov	a,#0x1b
      0044F7 25*C2            [12]13359 	add	a,_f_read_sloc1_1_0
      0044F9 F8               [12]13360 	mov	r0,a
      0044FA E4               [12]13361 	clr	a
      0044FB 35*C3            [12]13362 	addc	a,(_f_read_sloc1_1_0 + 1)
      0044FD F9               [12]13363 	mov	r1,a
      0044FE AC*C4            [24]13364 	mov	r4,(_f_read_sloc1_1_0 + 2)
      004500 88 82            [24]13365 	mov	dpl,r0
      004502 89 83            [24]13366 	mov	dph,r1
      004504 8C F0            [24]13367 	mov	b,r4
      004506 12r00r00         [24]13368 	lcall	__gptrget
      004509 F8               [12]13369 	mov	r0,a
      00450A A3               [24]13370 	inc	dptr
      00450B 12r00r00         [24]13371 	lcall	__gptrget
      00450E F9               [12]13372 	mov	r1,a
      00450F A3               [24]13373 	inc	dptr
      004510 12r00r00         [24]13374 	lcall	__gptrget
      004513 E8               [12]13375 	mov	a,r0
      004514 49               [12]13376 	orl	a,r1
      004515 60 3B            [24]13377 	jz	00110$
                           004517 13378 	C$ff.c$2582$1_0$196 ==.
                                  13379 ;	FATFS\src\ff.c:2582: clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
      004517 90r00r3B         [24]13380 	mov	dptr,#_clmt_clust_PARM_2
      00451A E5*CC            [12]13381 	mov	a,_f_read_sloc4_1_0
      00451C F0               [24]13382 	movx	@dptr,a
      00451D E5*CD            [12]13383 	mov	a,(_f_read_sloc4_1_0 + 1)
      00451F A3               [24]13384 	inc	dptr
      004520 F0               [24]13385 	movx	@dptr,a
      004521 E5*CE            [12]13386 	mov	a,(_f_read_sloc4_1_0 + 2)
      004523 A3               [24]13387 	inc	dptr
      004524 F0               [24]13388 	movx	@dptr,a
      004525 E5*CF            [12]13389 	mov	a,(_f_read_sloc4_1_0 + 3)
      004527 A3               [24]13390 	inc	dptr
      004528 F0               [24]13391 	movx	@dptr,a
      004529 85*C2 82         [24]13392 	mov	dpl,_f_read_sloc1_1_0
      00452C 85*C3 83         [24]13393 	mov	dph,(_f_read_sloc1_1_0 + 1)
      00452F 85*C4 F0         [24]13394 	mov	b,(_f_read_sloc1_1_0 + 2)
      004532 78r23            [12]13395 	mov	r0,#_clmt_clust
      004534 79s08            [12]13396 	mov	r1,#(_clmt_clust >> 8)
      004536 7As00            [12]13397 	mov	r2,#(_clmt_clust >> 16)
      004538 12r00r00         [24]13398 	lcall	__sdcc_banked_call
      00453B A8 82            [24]13399 	mov	r0,dpl
      00453D A9 83            [24]13400 	mov	r1,dph
      00453F AB F0            [24]13401 	mov	r3,b
      004541 FC               [12]13402 	mov	r4,a
      004542 90r01r52         [24]13403 	mov	dptr,#_f_read_clst_65536_196
      004545 E8               [12]13404 	mov	a,r0
      004546 F0               [24]13405 	movx	@dptr,a
      004547 E9               [12]13406 	mov	a,r1
      004548 A3               [24]13407 	inc	dptr
      004549 F0               [24]13408 	movx	@dptr,a
      00454A EB               [12]13409 	mov	a,r3
      00454B A3               [24]13410 	inc	dptr
      00454C F0               [24]13411 	movx	@dptr,a
      00454D EC               [12]13412 	mov	a,r4
      00454E A3               [24]13413 	inc	dptr
      00454F F0               [24]13414 	movx	@dptr,a
      004550 80 59            [24]13415 	sjmp	00114$
      004552                      13416 00110$:
                           004552 13417 	C$ff.c$2585$1_0$196 ==.
                                  13418 ;	FATFS\src\ff.c:2585: clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
      004552 74 13            [12]13419 	mov	a,#0x13
      004554 25*C2            [12]13420 	add	a,_f_read_sloc1_1_0
      004556 F8               [12]13421 	mov	r0,a
      004557 E4               [12]13422 	clr	a
      004558 35*C3            [12]13423 	addc	a,(_f_read_sloc1_1_0 + 1)
      00455A F9               [12]13424 	mov	r1,a
      00455B AC*C4            [24]13425 	mov	r4,(_f_read_sloc1_1_0 + 2)
      00455D 88 82            [24]13426 	mov	dpl,r0
      00455F 89 83            [24]13427 	mov	dph,r1
      004561 8C F0            [24]13428 	mov	b,r4
      004563 12r00r00         [24]13429 	lcall	__gptrget
      004566 F8               [12]13430 	mov	r0,a
      004567 A3               [24]13431 	inc	dptr
      004568 12r00r00         [24]13432 	lcall	__gptrget
      00456B F9               [12]13433 	mov	r1,a
      00456C A3               [24]13434 	inc	dptr
      00456D 12r00r00         [24]13435 	lcall	__gptrget
      004570 FC               [12]13436 	mov	r4,a
      004571 A3               [24]13437 	inc	dptr
      004572 12r00r00         [24]13438 	lcall	__gptrget
      004575 FB               [12]13439 	mov	r3,a
      004576 90r00r34         [24]13440 	mov	dptr,#_get_fat_PARM_2
      004579 E8               [12]13441 	mov	a,r0
      00457A F0               [24]13442 	movx	@dptr,a
      00457B E9               [12]13443 	mov	a,r1
      00457C A3               [24]13444 	inc	dptr
      00457D F0               [24]13445 	movx	@dptr,a
      00457E EC               [12]13446 	mov	a,r4
      00457F A3               [24]13447 	inc	dptr
      004580 F0               [24]13448 	movx	@dptr,a
      004581 EB               [12]13449 	mov	a,r3
      004582 A3               [24]13450 	inc	dptr
      004583 F0               [24]13451 	movx	@dptr,a
      004584 85*D0 82         [24]13452 	mov	dpl,_f_read_sloc5_1_0
      004587 85*D1 83         [24]13453 	mov	dph,(_f_read_sloc5_1_0 + 1)
      00458A 85*D2 F0         [24]13454 	mov	b,(_f_read_sloc5_1_0 + 2)
      00458D 78rA5            [12]13455 	mov	r0,#_get_fat
      00458F 79s03            [12]13456 	mov	r1,#(_get_fat >> 8)
      004591 7As00            [12]13457 	mov	r2,#(_get_fat >> 16)
      004593 12r00r00         [24]13458 	lcall	__sdcc_banked_call
      004596 A9 82            [24]13459 	mov	r1,dpl
      004598 AA 83            [24]13460 	mov	r2,dph
      00459A AB F0            [24]13461 	mov	r3,b
      00459C FC               [12]13462 	mov	r4,a
      00459D 90r01r52         [24]13463 	mov	dptr,#_f_read_clst_65536_196
      0045A0 E9               [12]13464 	mov	a,r1
      0045A1 F0               [24]13465 	movx	@dptr,a
      0045A2 EA               [12]13466 	mov	a,r2
      0045A3 A3               [24]13467 	inc	dptr
      0045A4 F0               [24]13468 	movx	@dptr,a
      0045A5 EB               [12]13469 	mov	a,r3
      0045A6 A3               [24]13470 	inc	dptr
      0045A7 F0               [24]13471 	movx	@dptr,a
      0045A8 EC               [12]13472 	mov	a,r4
      0045A9 A3               [24]13473 	inc	dptr
      0045AA F0               [24]13474 	movx	@dptr,a
                           0045AB 13475 	C$ff.c$2638$1_0$196 ==.
                                  13476 ;	FATFS\src\ff.c:2638: LEAVE_FF(fp->fs, FR_OK);
                           0045AB 13477 	C$ff.c$2585$5_0$200 ==.
                                  13478 ;	FATFS\src\ff.c:2585: clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
      0045AB                      13479 00114$:
                           0045AB 13480 	C$ff.c$2587$5_0$200 ==.
                                  13481 ;	FATFS\src\ff.c:2587: if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
      0045AB 90r01r52         [24]13482 	mov	dptr,#_f_read_clst_65536_196
      0045AE E0               [24]13483 	movx	a,@dptr
      0045AF F5*CC            [12]13484 	mov	_f_read_sloc4_1_0,a
      0045B1 A3               [24]13485 	inc	dptr
      0045B2 E0               [24]13486 	movx	a,@dptr
      0045B3 F5*CD            [12]13487 	mov	(_f_read_sloc4_1_0 + 1),a
      0045B5 A3               [24]13488 	inc	dptr
      0045B6 E0               [24]13489 	movx	a,@dptr
      0045B7 F5*CE            [12]13490 	mov	(_f_read_sloc4_1_0 + 2),a
      0045B9 A3               [24]13491 	inc	dptr
      0045BA E0               [24]13492 	movx	a,@dptr
      0045BB F5*CF            [12]13493 	mov	(_f_read_sloc4_1_0 + 3),a
      0045BD C3               [12]13494 	clr	c
      0045BE E5*CC            [12]13495 	mov	a,_f_read_sloc4_1_0
      0045C0 94 02            [12]13496 	subb	a,#0x02
      0045C2 E5*CD            [12]13497 	mov	a,(_f_read_sloc4_1_0 + 1)
      0045C4 94 00            [12]13498 	subb	a,#0x00
      0045C6 E5*CE            [12]13499 	mov	a,(_f_read_sloc4_1_0 + 2)
      0045C8 94 00            [12]13500 	subb	a,#0x00
      0045CA E5*CF            [12]13501 	mov	a,(_f_read_sloc4_1_0 + 3)
      0045CC 94 00            [12]13502 	subb	a,#0x00
      0045CE 50 2D            [24]13503 	jnc	00116$
      0045D0 90r01r4F         [24]13504 	mov	dptr,#_f_read_fp_65536_195
      0045D3 E0               [24]13505 	movx	a,@dptr
      0045D4 F5*D0            [12]13506 	mov	_f_read_sloc5_1_0,a
      0045D6 A3               [24]13507 	inc	dptr
      0045D7 E0               [24]13508 	movx	a,@dptr
      0045D8 F5*D1            [12]13509 	mov	(_f_read_sloc5_1_0 + 1),a
      0045DA A3               [24]13510 	inc	dptr
      0045DB E0               [24]13511 	movx	a,@dptr
      0045DC F5*D2            [12]13512 	mov	(_f_read_sloc5_1_0 + 2),a
      0045DE 74 06            [12]13513 	mov	a,#0x06
      0045E0 25*D0            [12]13514 	add	a,_f_read_sloc5_1_0
      0045E2 F5*D0            [12]13515 	mov	_f_read_sloc5_1_0,a
      0045E4 E4               [12]13516 	clr	a
      0045E5 35*D1            [12]13517 	addc	a,(_f_read_sloc5_1_0 + 1)
      0045E7 F5*D1            [12]13518 	mov	(_f_read_sloc5_1_0 + 1),a
      0045E9 85*D0 82         [24]13519 	mov	dpl,_f_read_sloc5_1_0
      0045EC 85*D1 83         [24]13520 	mov	dph,(_f_read_sloc5_1_0 + 1)
      0045EF 85*D2 F0         [24]13521 	mov	b,(_f_read_sloc5_1_0 + 2)
      0045F2 74 02            [12]13522 	mov	a,#0x02
      0045F4 12r00r00         [24]13523 	lcall	__gptrput
      0045F7 75 82 02         [24]13524 	mov	dpl,#0x02
      0045FA 02r00r00         [24]13525 	ljmp	__sdcc_banked_ret
      0045FD                      13526 00116$:
                           0045FD 13527 	C$ff.c$2588$5_0$200 ==.
                                  13528 ;	FATFS\src\ff.c:2588: if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      0045FD 74 FF            [12]13529 	mov	a,#0xff
      0045FF B5*CC 36         [24]13530 	cjne	a,_f_read_sloc4_1_0,00118$
      004602 B5*CD 33         [24]13531 	cjne	a,(_f_read_sloc4_1_0 + 1),00118$
      004605 B5*CE 30         [24]13532 	cjne	a,(_f_read_sloc4_1_0 + 2),00118$
      004608 B5*CF 2D         [24]13533 	cjne	a,(_f_read_sloc4_1_0 + 3),00118$
      00460B 90r01r4F         [24]13534 	mov	dptr,#_f_read_fp_65536_195
      00460E E0               [24]13535 	movx	a,@dptr
      00460F F5*D0            [12]13536 	mov	_f_read_sloc5_1_0,a
      004611 A3               [24]13537 	inc	dptr
      004612 E0               [24]13538 	movx	a,@dptr
      004613 F5*D1            [12]13539 	mov	(_f_read_sloc5_1_0 + 1),a
      004615 A3               [24]13540 	inc	dptr
      004616 E0               [24]13541 	movx	a,@dptr
      004617 F5*D2            [12]13542 	mov	(_f_read_sloc5_1_0 + 2),a
      004619 74 06            [12]13543 	mov	a,#0x06
      00461B 25*D0            [12]13544 	add	a,_f_read_sloc5_1_0
      00461D F5*D0            [12]13545 	mov	_f_read_sloc5_1_0,a
      00461F E4               [12]13546 	clr	a
      004620 35*D1            [12]13547 	addc	a,(_f_read_sloc5_1_0 + 1)
      004622 F5*D1            [12]13548 	mov	(_f_read_sloc5_1_0 + 1),a
      004624 85*D0 82         [24]13549 	mov	dpl,_f_read_sloc5_1_0
      004627 85*D1 83         [24]13550 	mov	dph,(_f_read_sloc5_1_0 + 1)
      00462A 85*D2 F0         [24]13551 	mov	b,(_f_read_sloc5_1_0 + 2)
      00462D 74 01            [12]13552 	mov	a,#0x01
      00462F 12r00r00         [24]13553 	lcall	__gptrput
      004632 75 82 01         [24]13554 	mov	dpl,#0x01
      004635 02r00r00         [24]13555 	ljmp	__sdcc_banked_ret
      004638                      13556 00118$:
                           004638 13557 	C$ff.c$2589$5_0$200 ==.
                                  13558 ;	FATFS\src\ff.c:2589: fp->clust = clst;				/* Update current cluster */
      004638 74 13            [12]13559 	mov	a,#0x13
      00463A 25*D7            [12]13560 	add	a,_f_read_sloc7_1_0
      00463C F8               [12]13561 	mov	r0,a
      00463D E4               [12]13562 	clr	a
      00463E 35*D8            [12]13563 	addc	a,(_f_read_sloc7_1_0 + 1)
      004640 F9               [12]13564 	mov	r1,a
      004641 AC*D9            [24]13565 	mov	r4,(_f_read_sloc7_1_0 + 2)
      004643 88 82            [24]13566 	mov	dpl,r0
      004645 89 83            [24]13567 	mov	dph,r1
      004647 8C F0            [24]13568 	mov	b,r4
      004649 E5*CC            [12]13569 	mov	a,_f_read_sloc4_1_0
      00464B 12r00r00         [24]13570 	lcall	__gptrput
      00464E A3               [24]13571 	inc	dptr
      00464F E5*CD            [12]13572 	mov	a,(_f_read_sloc4_1_0 + 1)
      004651 12r00r00         [24]13573 	lcall	__gptrput
      004654 A3               [24]13574 	inc	dptr
      004655 E5*CE            [12]13575 	mov	a,(_f_read_sloc4_1_0 + 2)
      004657 12r00r00         [24]13576 	lcall	__gptrput
      00465A A3               [24]13577 	inc	dptr
      00465B E5*CF            [12]13578 	mov	a,(_f_read_sloc4_1_0 + 3)
      00465D 12r00r00         [24]13579 	lcall	__gptrput
      004660                      13580 00120$:
                           004660 13581 	C$ff.c$2591$1_0$196 ==.
                                  13582 ;	FATFS\src\ff.c:2591: sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
      004660 90r01r4F         [24]13583 	mov	dptr,#_f_read_fp_65536_195
      004663 E0               [24]13584 	movx	a,@dptr
      004664 F5*DA            [12]13585 	mov	_f_read_sloc8_1_0,a
      004666 A3               [24]13586 	inc	dptr
      004667 E0               [24]13587 	movx	a,@dptr
      004668 F5*DB            [12]13588 	mov	(_f_read_sloc8_1_0 + 1),a
      00466A A3               [24]13589 	inc	dptr
      00466B E0               [24]13590 	movx	a,@dptr
      00466C F5*DC            [12]13591 	mov	(_f_read_sloc8_1_0 + 2),a
      00466E 85*DA 82         [24]13592 	mov	dpl,_f_read_sloc8_1_0
      004671 85*DB 83         [24]13593 	mov	dph,(_f_read_sloc8_1_0 + 1)
      004674 85*DC F0         [24]13594 	mov	b,(_f_read_sloc8_1_0 + 2)
      004677 12r00r00         [24]13595 	lcall	__gptrget
      00467A F5*D0            [12]13596 	mov	_f_read_sloc5_1_0,a
      00467C A3               [24]13597 	inc	dptr
      00467D 12r00r00         [24]13598 	lcall	__gptrget
      004680 F5*D1            [12]13599 	mov	(_f_read_sloc5_1_0 + 1),a
      004682 A3               [24]13600 	inc	dptr
      004683 12r00r00         [24]13601 	lcall	__gptrget
      004686 F5*D2            [12]13602 	mov	(_f_read_sloc5_1_0 + 2),a
      004688 74 13            [12]13603 	mov	a,#0x13
      00468A 25*DA            [12]13604 	add	a,_f_read_sloc8_1_0
      00468C FF               [12]13605 	mov	r7,a
      00468D E4               [12]13606 	clr	a
      00468E 35*DB            [12]13607 	addc	a,(_f_read_sloc8_1_0 + 1)
      004690 FD               [12]13608 	mov	r5,a
      004691 AE*DC            [24]13609 	mov	r6,(_f_read_sloc8_1_0 + 2)
      004693 8F 82            [24]13610 	mov	dpl,r7
      004695 8D 83            [24]13611 	mov	dph,r5
      004697 8E F0            [24]13612 	mov	b,r6
      004699 12r00r00         [24]13613 	lcall	__gptrget
      00469C F9               [12]13614 	mov	r1,a
      00469D A3               [24]13615 	inc	dptr
      00469E 12r00r00         [24]13616 	lcall	__gptrget
      0046A1 FD               [12]13617 	mov	r5,a
      0046A2 A3               [24]13618 	inc	dptr
      0046A3 12r00r00         [24]13619 	lcall	__gptrget
      0046A6 FE               [12]13620 	mov	r6,a
      0046A7 A3               [24]13621 	inc	dptr
      0046A8 12r00r00         [24]13622 	lcall	__gptrget
      0046AB FF               [12]13623 	mov	r7,a
      0046AC 90r00r2D         [24]13624 	mov	dptr,#_clust2sect_PARM_2
      0046AF E9               [12]13625 	mov	a,r1
      0046B0 F0               [24]13626 	movx	@dptr,a
      0046B1 ED               [12]13627 	mov	a,r5
      0046B2 A3               [24]13628 	inc	dptr
      0046B3 F0               [24]13629 	movx	@dptr,a
      0046B4 EE               [12]13630 	mov	a,r6
      0046B5 A3               [24]13631 	inc	dptr
      0046B6 F0               [24]13632 	movx	@dptr,a
      0046B7 EF               [12]13633 	mov	a,r7
      0046B8 A3               [24]13634 	inc	dptr
      0046B9 F0               [24]13635 	movx	@dptr,a
      0046BA 85*D0 82         [24]13636 	mov	dpl,_f_read_sloc5_1_0
      0046BD 85*D1 83         [24]13637 	mov	dph,(_f_read_sloc5_1_0 + 1)
      0046C0 85*D2 F0         [24]13638 	mov	b,(_f_read_sloc5_1_0 + 2)
      0046C3 78r90            [12]13639 	mov	r0,#_clust2sect
      0046C5 79s02            [12]13640 	mov	r1,#(_clust2sect >> 8)
      0046C7 7As00            [12]13641 	mov	r2,#(_clust2sect >> 16)
      0046C9 12r00r00         [24]13642 	lcall	__sdcc_banked_call
      0046CC 85 82*CC         [24]13643 	mov	_f_read_sloc4_1_0,dpl
      0046CF 85 83*CD         [24]13644 	mov	(_f_read_sloc4_1_0 + 1),dph
      0046D2 85 F0*CE         [24]13645 	mov	(_f_read_sloc4_1_0 + 2),b
      0046D5 F5*CF            [12]13646 	mov	(_f_read_sloc4_1_0 + 3),a
                           0046D7 13647 	C$ff.c$2592$1_0$196 ==.
                                  13648 ;	FATFS\src\ff.c:2592: if (!sect) ABORT(fp->fs, FR_INT_ERR);
      0046D7 E5*CC            [12]13649 	mov	a,_f_read_sloc4_1_0
      0046D9 45*CD            [12]13650 	orl	a,(_f_read_sloc4_1_0 + 1)
      0046DB 45*CE            [12]13651 	orl	a,(_f_read_sloc4_1_0 + 2)
      0046DD 45*CF            [12]13652 	orl	a,(_f_read_sloc4_1_0 + 3)
      0046DF 70 1C            [24]13653 	jnz	00122$
      0046E1 74 06            [12]13654 	mov	a,#0x06
      0046E3 25*DA            [12]13655 	add	a,_f_read_sloc8_1_0
      0046E5 F8               [12]13656 	mov	r0,a
      0046E6 E4               [12]13657 	clr	a
      0046E7 35*DB            [12]13658 	addc	a,(_f_read_sloc8_1_0 + 1)
      0046E9 F9               [12]13659 	mov	r1,a
      0046EA AC*DC            [24]13660 	mov	r4,(_f_read_sloc8_1_0 + 2)
      0046EC 88 82            [24]13661 	mov	dpl,r0
      0046EE 89 83            [24]13662 	mov	dph,r1
      0046F0 8C F0            [24]13663 	mov	b,r4
      0046F2 74 02            [12]13664 	mov	a,#0x02
      0046F4 12r00r00         [24]13665 	lcall	__gptrput
      0046F7 75 82 02         [24]13666 	mov	dpl,#0x02
      0046FA 02r00r00         [24]13667 	ljmp	__sdcc_banked_ret
      0046FD                      13668 00122$:
                           0046FD 13669 	C$ff.c$2593$1_0$196 ==.
                                  13670 ;	FATFS\src\ff.c:2593: sect += csect;
      0046FD A9*D3            [24]13671 	mov	r1,_f_read_sloc6_1_0
      0046FF E4               [12]13672 	clr	a
      004700 FA               [12]13673 	mov	r2,a
      004701 FB               [12]13674 	mov	r3,a
      004702 FC               [12]13675 	mov	r4,a
      004703 E9               [12]13676 	mov	a,r1
      004704 25*CC            [12]13677 	add	a,_f_read_sloc4_1_0
      004706 F5*CC            [12]13678 	mov	_f_read_sloc4_1_0,a
      004708 EA               [12]13679 	mov	a,r2
      004709 35*CD            [12]13680 	addc	a,(_f_read_sloc4_1_0 + 1)
      00470B F5*CD            [12]13681 	mov	(_f_read_sloc4_1_0 + 1),a
      00470D EB               [12]13682 	mov	a,r3
      00470E 35*CE            [12]13683 	addc	a,(_f_read_sloc4_1_0 + 2)
      004710 F5*CE            [12]13684 	mov	(_f_read_sloc4_1_0 + 2),a
      004712 EC               [12]13685 	mov	a,r4
      004713 35*CF            [12]13686 	addc	a,(_f_read_sloc4_1_0 + 3)
      004715 F5*CF            [12]13687 	mov	(_f_read_sloc4_1_0 + 3),a
                           004717 13688 	C$ff.c$2594$4_0$199 ==.
                                  13689 ;	FATFS\src\ff.c:2594: cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
      004717 90r01r4A         [24]13690 	mov	dptr,#_f_read_PARM_3
      00471A E0               [24]13691 	movx	a,@dptr
      00471B F8               [12]13692 	mov	r0,a
      00471C A3               [24]13693 	inc	dptr
      00471D E0               [24]13694 	movx	a,@dptr
      00471E FF               [12]13695 	mov	r7,a
      00471F C3               [12]13696 	clr	c
      004720 13               [12]13697 	rrc	a
      004721 F5*D0            [12]13698 	mov	_f_read_sloc5_1_0,a
                                  13699 ;	1-genFromRTrack replaced	mov	(_f_read_sloc5_1_0 + 1),#0x00
      004723 8C*D1            [24]13700 	mov	(_f_read_sloc5_1_0 + 1),r4
      004725 90r01r58         [24]13701 	mov	dptr,#_f_read_cc_65536_196
      004728 E5*D0            [12]13702 	mov	a,_f_read_sloc5_1_0
      00472A F0               [24]13703 	movx	@dptr,a
      00472B E5*D1            [12]13704 	mov	a,(_f_read_sloc5_1_0 + 1)
      00472D A3               [24]13705 	inc	dptr
      00472E F0               [24]13706 	movx	@dptr,a
                           00472F 13707 	C$ff.c$2595$1_0$196 ==.
                                  13708 ;	FATFS\src\ff.c:2595: if (cc) {							/* Read maximum contiguous sectors directly */
      00472F E5*D0            [12]13709 	mov	a,_f_read_sloc5_1_0
      004731 45*D1            [12]13710 	orl	a,(_f_read_sloc5_1_0 + 1)
      004733 70 03            [24]13711 	jnz	00227$
      004735 02r48r3B         [24]13712 	ljmp	00128$
      004738                      13713 00227$:
                           004738 13714 	C$ff.c$2596$1_0$196 ==.
                                  13715 ;	FATFS\src\ff.c:2596: if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
      004738 75*D4 00         [24]13716 	mov	(_f_read_sloc6_1_0 + 1),#0x00
      00473B A8*D3            [24]13717 	mov	r0,_f_read_sloc6_1_0
      00473D AC*D4            [24]13718 	mov	r4,(_f_read_sloc6_1_0 + 1)
      00473F E5*D0            [12]13719 	mov	a,_f_read_sloc5_1_0
      004741 28               [12]13720 	add	a,r0
      004742 F8               [12]13721 	mov	r0,a
      004743 E5*D1            [12]13722 	mov	a,(_f_read_sloc5_1_0 + 1)
      004745 3C               [12]13723 	addc	a,r4
      004746 FC               [12]13724 	mov	r4,a
      004747 85*DA 82         [24]13725 	mov	dpl,_f_read_sloc8_1_0
      00474A 85*DB 83         [24]13726 	mov	dph,(_f_read_sloc8_1_0 + 1)
      00474D 85*DC F0         [24]13727 	mov	b,(_f_read_sloc8_1_0 + 2)
      004750 12r00r00         [24]13728 	lcall	__gptrget
      004753 F9               [12]13729 	mov	r1,a
      004754 A3               [24]13730 	inc	dptr
      004755 12r00r00         [24]13731 	lcall	__gptrget
      004758 FA               [12]13732 	mov	r2,a
      004759 A3               [24]13733 	inc	dptr
      00475A 12r00r00         [24]13734 	lcall	__gptrget
      00475D FB               [12]13735 	mov	r3,a
      00475E 74 02            [12]13736 	mov	a,#0x02
      004760 29               [12]13737 	add	a,r1
      004761 F9               [12]13738 	mov	r1,a
      004762 E4               [12]13739 	clr	a
      004763 3A               [12]13740 	addc	a,r2
      004764 FA               [12]13741 	mov	r2,a
      004765 89 82            [24]13742 	mov	dpl,r1
      004767 8A 83            [24]13743 	mov	dph,r2
      004769 8B F0            [24]13744 	mov	b,r3
      00476B 12r00r00         [24]13745 	lcall	__gptrget
      00476E F5*D0            [12]13746 	mov	_f_read_sloc5_1_0,a
      004770 AA*D0            [24]13747 	mov	r2,_f_read_sloc5_1_0
      004772 7B 00            [12]13748 	mov	r3,#0x00
      004774 C3               [12]13749 	clr	c
      004775 EA               [12]13750 	mov	a,r2
      004776 98               [12]13751 	subb	a,r0
      004777 EB               [12]13752 	mov	a,r3
      004778 9C               [12]13753 	subb	a,r4
      004779 50 11            [24]13754 	jnc	00124$
                           00477B 13755 	C$ff.c$2597$5_0$206 ==.
                                  13756 ;	FATFS\src\ff.c:2597: cc = fp->fs->csize - csect;
      00477B A8*D0            [24]13757 	mov	r0,_f_read_sloc5_1_0
      00477D 7C 00            [12]13758 	mov	r4,#0x00
      00477F 90r01r58         [24]13759 	mov	dptr,#_f_read_cc_65536_196
      004782 E8               [12]13760 	mov	a,r0
      004783 C3               [12]13761 	clr	c
      004784 95*D3            [12]13762 	subb	a,_f_read_sloc6_1_0
      004786 F0               [24]13763 	movx	@dptr,a
      004787 EC               [12]13764 	mov	a,r4
      004788 95*D4            [12]13765 	subb	a,(_f_read_sloc6_1_0 + 1)
      00478A A3               [24]13766 	inc	dptr
      00478B F0               [24]13767 	movx	@dptr,a
      00478C                      13768 00124$:
                           00478C 13769 	C$ff.c$2598$1_0$196 ==.
                                  13770 ;	FATFS\src\ff.c:2598: if (disk_read(fp->fs->drv, rbuff, sect, cc))
      00478C 90r01r4F         [24]13771 	mov	dptr,#_f_read_fp_65536_195
      00478F E0               [24]13772 	movx	a,@dptr
      004790 FA               [12]13773 	mov	r2,a
      004791 A3               [24]13774 	inc	dptr
      004792 E0               [24]13775 	movx	a,@dptr
      004793 FB               [12]13776 	mov	r3,a
      004794 A3               [24]13777 	inc	dptr
      004795 E0               [24]13778 	movx	a,@dptr
      004796 FC               [12]13779 	mov	r4,a
      004797 8A 82            [24]13780 	mov	dpl,r2
      004799 8B 83            [24]13781 	mov	dph,r3
      00479B 8C F0            [24]13782 	mov	b,r4
      00479D 12r00r00         [24]13783 	lcall	__gptrget
      0047A0 F8               [12]13784 	mov	r0,a
      0047A1 A3               [24]13785 	inc	dptr
      0047A2 12r00r00         [24]13786 	lcall	__gptrget
      0047A5 F9               [12]13787 	mov	r1,a
      0047A6 A3               [24]13788 	inc	dptr
      0047A7 12r00r00         [24]13789 	lcall	__gptrget
      0047AA FF               [12]13790 	mov	r7,a
      0047AB 08               [12]13791 	inc	r0
      0047AC B8 00 01         [24]13792 	cjne	r0,#0x00,00229$
      0047AF 09               [12]13793 	inc	r1
      0047B0                      13794 00229$:
      0047B0 88 82            [24]13795 	mov	dpl,r0
      0047B2 89 83            [24]13796 	mov	dph,r1
      0047B4 8F F0            [24]13797 	mov	b,r7
      0047B6 12r00r00         [24]13798 	lcall	__gptrget
      0047B9 F8               [12]13799 	mov	r0,a
      0047BA 90r01r5A         [24]13800 	mov	dptr,#_f_read_rbuff_65536_196
      0047BD E0               [24]13801 	movx	a,@dptr
      0047BE FD               [12]13802 	mov	r5,a
      0047BF A3               [24]13803 	inc	dptr
      0047C0 E0               [24]13804 	movx	a,@dptr
      0047C1 FE               [12]13805 	mov	r6,a
      0047C2 A3               [24]13806 	inc	dptr
      0047C3 E0               [24]13807 	movx	a,@dptr
      0047C4 FF               [12]13808 	mov	r7,a
      0047C5 90r01r58         [24]13809 	mov	dptr,#_f_read_cc_65536_196
      0047C8 E0               [24]13810 	movx	a,@dptr
      0047C9 F5*D3            [12]13811 	mov	_f_read_sloc6_1_0,a
      0047CB A3               [24]13812 	inc	dptr
      0047CC E0               [24]13813 	movx	a,@dptr
      0047CD F5*D4            [12]13814 	mov	(_f_read_sloc6_1_0 + 1),a
      0047CF 90r00r00         [24]13815 	mov	dptr,#_disk_read_PARM_2
      0047D2 ED               [12]13816 	mov	a,r5
      0047D3 F0               [24]13817 	movx	@dptr,a
      0047D4 EE               [12]13818 	mov	a,r6
      0047D5 A3               [24]13819 	inc	dptr
      0047D6 F0               [24]13820 	movx	@dptr,a
      0047D7 EF               [12]13821 	mov	a,r7
      0047D8 A3               [24]13822 	inc	dptr
      0047D9 F0               [24]13823 	movx	@dptr,a
      0047DA 90r00r00         [24]13824 	mov	dptr,#_disk_read_PARM_3
      0047DD E5*CC            [12]13825 	mov	a,_f_read_sloc4_1_0
      0047DF F0               [24]13826 	movx	@dptr,a
      0047E0 E5*CD            [12]13827 	mov	a,(_f_read_sloc4_1_0 + 1)
      0047E2 A3               [24]13828 	inc	dptr
      0047E3 F0               [24]13829 	movx	@dptr,a
      0047E4 E5*CE            [12]13830 	mov	a,(_f_read_sloc4_1_0 + 2)
      0047E6 A3               [24]13831 	inc	dptr
      0047E7 F0               [24]13832 	movx	@dptr,a
      0047E8 E5*CF            [12]13833 	mov	a,(_f_read_sloc4_1_0 + 3)
      0047EA A3               [24]13834 	inc	dptr
      0047EB F0               [24]13835 	movx	@dptr,a
      0047EC 90r00r00         [24]13836 	mov	dptr,#_disk_read_PARM_4
      0047EF E5*D3            [12]13837 	mov	a,_f_read_sloc6_1_0
      0047F1 F0               [24]13838 	movx	@dptr,a
      0047F2 E5*D4            [12]13839 	mov	a,(_f_read_sloc6_1_0 + 1)
      0047F4 A3               [24]13840 	inc	dptr
      0047F5 F0               [24]13841 	movx	@dptr,a
      0047F6 88 82            [24]13842 	mov	dpl,r0
      0047F8 C0 04            [24]13843 	push	ar4
      0047FA C0 03            [24]13844 	push	ar3
      0047FC C0 02            [24]13845 	push	ar2
      0047FE 78r00            [12]13846 	mov	r0,#_disk_read
      004800 79s00            [12]13847 	mov	r1,#(_disk_read >> 8)
      004802 7As00            [12]13848 	mov	r2,#(_disk_read >> 16)
      004804 12r00r00         [24]13849 	lcall	__sdcc_banked_call
      004807 E5 82            [12]13850 	mov	a,dpl
      004809 D0 02            [24]13851 	pop	ar2
      00480B D0 03            [24]13852 	pop	ar3
      00480D D0 04            [24]13853 	pop	ar4
      00480F 60 18            [24]13854 	jz	00126$
                           004811 13855 	C$ff.c$2599$6_0$207 ==.
                                  13856 ;	FATFS\src\ff.c:2599: ABORT(fp->fs, FR_DISK_ERR);
      004811 74 06            [12]13857 	mov	a,#0x06
      004813 2A               [12]13858 	add	a,r2
      004814 FA               [12]13859 	mov	r2,a
      004815 E4               [12]13860 	clr	a
      004816 3B               [12]13861 	addc	a,r3
      004817 FB               [12]13862 	mov	r3,a
      004818 8A 82            [24]13863 	mov	dpl,r2
      00481A 8B 83            [24]13864 	mov	dph,r3
      00481C 8C F0            [24]13865 	mov	b,r4
      00481E 74 01            [12]13866 	mov	a,#0x01
      004820 12r00r00         [24]13867 	lcall	__gptrput
      004823 75 82 01         [24]13868 	mov	dpl,#0x01
      004826 02r00r00         [24]13869 	ljmp	__sdcc_banked_ret
      004829                      13870 00126$:
                           004829 13871 	C$ff.c$2609$5_0$206 ==.
                                  13872 ;	FATFS\src\ff.c:2609: rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
      004829 E5*D3            [12]13873 	mov	a,_f_read_sloc6_1_0
      00482B 25*D3            [12]13874 	add	a,_f_read_sloc6_1_0
      00482D FC               [12]13875 	mov	r4,a
      00482E 7B 00            [12]13876 	mov	r3,#0x00
      004830 90r01r56         [24]13877 	mov	dptr,#_f_read_rcnt_65536_196
      004833 EB               [12]13878 	mov	a,r3
      004834 F0               [24]13879 	movx	@dptr,a
      004835 EC               [12]13880 	mov	a,r4
      004836 A3               [24]13881 	inc	dptr
      004837 F0               [24]13882 	movx	@dptr,a
                           004838 13883 	C$ff.c$2610$5_0$206 ==.
                                  13884 ;	FATFS\src\ff.c:2610: continue;
      004838 02r49rB2         [24]13885 	ljmp	00135$
      00483B                      13886 00128$:
                           00483B 13887 	C$ff.c$2625$4_0$199 ==.
                                  13888 ;	FATFS\src\ff.c:2625: fp->dsect = sect;
      00483B 74 17            [12]13889 	mov	a,#0x17
      00483D 25*DA            [12]13890 	add	a,_f_read_sloc8_1_0
      00483F FA               [12]13891 	mov	r2,a
      004840 E4               [12]13892 	clr	a
      004841 35*DB            [12]13893 	addc	a,(_f_read_sloc8_1_0 + 1)
      004843 FB               [12]13894 	mov	r3,a
      004844 AC*DC            [24]13895 	mov	r4,(_f_read_sloc8_1_0 + 2)
      004846 8A 82            [24]13896 	mov	dpl,r2
      004848 8B 83            [24]13897 	mov	dph,r3
      00484A 8C F0            [24]13898 	mov	b,r4
      00484C E5*CC            [12]13899 	mov	a,_f_read_sloc4_1_0
      00484E 12r00r00         [24]13900 	lcall	__gptrput
      004851 A3               [24]13901 	inc	dptr
      004852 E5*CD            [12]13902 	mov	a,(_f_read_sloc4_1_0 + 1)
      004854 12r00r00         [24]13903 	lcall	__gptrput
      004857 A3               [24]13904 	inc	dptr
      004858 E5*CE            [12]13905 	mov	a,(_f_read_sloc4_1_0 + 2)
      00485A 12r00r00         [24]13906 	lcall	__gptrput
      00485D A3               [24]13907 	inc	dptr
      00485E E5*CF            [12]13908 	mov	a,(_f_read_sloc4_1_0 + 3)
      004860 12r00r00         [24]13909 	lcall	__gptrput
      004863                      13910 00130$:
                           004863 13911 	C$ff.c$2627$3_0$198 ==.
                                  13912 ;	FATFS\src\ff.c:2627: rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
      004863 85*C6 82         [24]13913 	mov	dpl,_f_read_sloc2_1_0
      004866 85*C7 83         [24]13914 	mov	dph,(_f_read_sloc2_1_0 + 1)
      004869 85*C8 F0         [24]13915 	mov	b,(_f_read_sloc2_1_0 + 2)
      00486C 12r00r00         [24]13916 	lcall	__gptrget
      00486F FB               [12]13917 	mov	r3,a
      004870 A3               [24]13918 	inc	dptr
      004871 12r00r00         [24]13919 	lcall	__gptrget
      004874 FC               [12]13920 	mov	r4,a
      004875 53 04 01         [24]13921 	anl	ar4,#0x01
      004878 E4               [12]13922 	clr	a
      004879 C3               [12]13923 	clr	c
      00487A 9B               [12]13924 	subb	a,r3
      00487B FB               [12]13925 	mov	r3,a
      00487C 74 02            [12]13926 	mov	a,#0x02
      00487E 9C               [12]13927 	subb	a,r4
      00487F FC               [12]13928 	mov	r4,a
      004880 90r01r56         [24]13929 	mov	dptr,#_f_read_rcnt_65536_196
      004883 EB               [12]13930 	mov	a,r3
      004884 F0               [24]13931 	movx	@dptr,a
      004885 EC               [12]13932 	mov	a,r4
      004886 A3               [24]13933 	inc	dptr
      004887 F0               [24]13934 	movx	@dptr,a
                           004888 13935 	C$ff.c$2628$3_0$198 ==.
                                  13936 ;	FATFS\src\ff.c:2628: if (rcnt > btr) rcnt = btr;
      004888 90r01r4A         [24]13937 	mov	dptr,#_f_read_PARM_3
      00488B E0               [24]13938 	movx	a,@dptr
      00488C F9               [12]13939 	mov	r1,a
      00488D A3               [24]13940 	inc	dptr
      00488E E0               [24]13941 	movx	a,@dptr
      00488F FA               [12]13942 	mov	r2,a
      004890 C3               [12]13943 	clr	c
      004891 E9               [12]13944 	mov	a,r1
      004892 9B               [12]13945 	subb	a,r3
      004893 EA               [12]13946 	mov	a,r2
      004894 9C               [12]13947 	subb	a,r4
      004895 50 08            [24]13948 	jnc	00132$
      004897 90r01r56         [24]13949 	mov	dptr,#_f_read_rcnt_65536_196
      00489A E9               [12]13950 	mov	a,r1
      00489B F0               [24]13951 	movx	@dptr,a
      00489C EA               [12]13952 	mov	a,r2
      00489D A3               [24]13953 	inc	dptr
      00489E F0               [24]13954 	movx	@dptr,a
      00489F                      13955 00132$:
                           00489F 13956 	C$ff.c$2630$1_0$196 ==.
                                  13957 ;	FATFS\src\ff.c:2630: if (move_window(fp->fs, fp->dsect))		/* Move sector window */
      00489F 90r01r4F         [24]13958 	mov	dptr,#_f_read_fp_65536_195
      0048A2 E0               [24]13959 	movx	a,@dptr
      0048A3 F5*D3            [12]13960 	mov	_f_read_sloc6_1_0,a
      0048A5 A3               [24]13961 	inc	dptr
      0048A6 E0               [24]13962 	movx	a,@dptr
      0048A7 F5*D4            [12]13963 	mov	(_f_read_sloc6_1_0 + 1),a
      0048A9 A3               [24]13964 	inc	dptr
      0048AA E0               [24]13965 	movx	a,@dptr
      0048AB F5*D5            [12]13966 	mov	(_f_read_sloc6_1_0 + 2),a
      0048AD 85*D3 82         [24]13967 	mov	dpl,_f_read_sloc6_1_0
      0048B0 85*D4 83         [24]13968 	mov	dph,(_f_read_sloc6_1_0 + 1)
      0048B3 85*D5 F0         [24]13969 	mov	b,(_f_read_sloc6_1_0 + 2)
      0048B6 12r00r00         [24]13970 	lcall	__gptrget
      0048B9 F5*DA            [12]13971 	mov	_f_read_sloc8_1_0,a
      0048BB A3               [24]13972 	inc	dptr
      0048BC 12r00r00         [24]13973 	lcall	__gptrget
      0048BF F5*DB            [12]13974 	mov	(_f_read_sloc8_1_0 + 1),a
      0048C1 A3               [24]13975 	inc	dptr
      0048C2 12r00r00         [24]13976 	lcall	__gptrget
      0048C5 F5*DC            [12]13977 	mov	(_f_read_sloc8_1_0 + 2),a
      0048C7 74 17            [12]13978 	mov	a,#0x17
      0048C9 25*D3            [12]13979 	add	a,_f_read_sloc6_1_0
      0048CB FF               [12]13980 	mov	r7,a
      0048CC E4               [12]13981 	clr	a
      0048CD 35*D4            [12]13982 	addc	a,(_f_read_sloc6_1_0 + 1)
      0048CF FD               [12]13983 	mov	r5,a
      0048D0 AE*D5            [24]13984 	mov	r6,(_f_read_sloc6_1_0 + 2)
      0048D2 8F 82            [24]13985 	mov	dpl,r7
      0048D4 8D 83            [24]13986 	mov	dph,r5
      0048D6 8E F0            [24]13987 	mov	b,r6
      0048D8 12r00r00         [24]13988 	lcall	__gptrget
      0048DB F9               [12]13989 	mov	r1,a
      0048DC A3               [24]13990 	inc	dptr
      0048DD 12r00r00         [24]13991 	lcall	__gptrget
      0048E0 FD               [12]13992 	mov	r5,a
      0048E1 A3               [24]13993 	inc	dptr
      0048E2 12r00r00         [24]13994 	lcall	__gptrget
      0048E5 FE               [12]13995 	mov	r6,a
      0048E6 A3               [24]13996 	inc	dptr
      0048E7 12r00r00         [24]13997 	lcall	__gptrget
      0048EA FF               [12]13998 	mov	r7,a
      0048EB 90r00r26         [24]13999 	mov	dptr,#_move_window_PARM_2
      0048EE E9               [12]14000 	mov	a,r1
      0048EF F0               [24]14001 	movx	@dptr,a
      0048F0 ED               [12]14002 	mov	a,r5
      0048F1 A3               [24]14003 	inc	dptr
      0048F2 F0               [24]14004 	movx	@dptr,a
      0048F3 EE               [12]14005 	mov	a,r6
      0048F4 A3               [24]14006 	inc	dptr
      0048F5 F0               [24]14007 	movx	@dptr,a
      0048F6 EF               [12]14008 	mov	a,r7
      0048F7 A3               [24]14009 	inc	dptr
      0048F8 F0               [24]14010 	movx	@dptr,a
      0048F9 85*DA 82         [24]14011 	mov	dpl,_f_read_sloc8_1_0
      0048FC 85*DB 83         [24]14012 	mov	dph,(_f_read_sloc8_1_0 + 1)
      0048FF 85*DC F0         [24]14013 	mov	b,(_f_read_sloc8_1_0 + 2)
      004902 78rB4            [12]14014 	mov	r0,#_move_window
      004904 79s01            [12]14015 	mov	r1,#(_move_window >> 8)
      004906 7As00            [12]14016 	mov	r2,#(_move_window >> 16)
      004908 12r00r00         [24]14017 	lcall	__sdcc_banked_call
      00490B E5 82            [12]14018 	mov	a,dpl
      00490D 60 1C            [24]14019 	jz	00134$
                           00490F 14020 	C$ff.c$2631$4_0$208 ==.
                                  14021 ;	FATFS\src\ff.c:2631: ABORT(fp->fs, FR_DISK_ERR);
      00490F 74 06            [12]14022 	mov	a,#0x06
      004911 25*D3            [12]14023 	add	a,_f_read_sloc6_1_0
      004913 F8               [12]14024 	mov	r0,a
      004914 E4               [12]14025 	clr	a
      004915 35*D4            [12]14026 	addc	a,(_f_read_sloc6_1_0 + 1)
      004917 F9               [12]14027 	mov	r1,a
      004918 AC*D5            [24]14028 	mov	r4,(_f_read_sloc6_1_0 + 2)
      00491A 88 82            [24]14029 	mov	dpl,r0
      00491C 89 83            [24]14030 	mov	dph,r1
      00491E 8C F0            [24]14031 	mov	b,r4
      004920 74 01            [12]14032 	mov	a,#0x01
      004922 12r00r00         [24]14033 	lcall	__gptrput
      004925 75 82 01         [24]14034 	mov	dpl,#0x01
      004928 02r00r00         [24]14035 	ljmp	__sdcc_banked_ret
      00492B                      14036 00134$:
                           00492B 14037 	C$ff.c$2632$1_0$196 ==.
                                  14038 ;	FATFS\src\ff.c:2632: mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
      00492B 90r01r5A         [24]14039 	mov	dptr,#_f_read_rbuff_65536_196
      00492E E0               [24]14040 	movx	a,@dptr
      00492F FA               [12]14041 	mov	r2,a
      004930 A3               [24]14042 	inc	dptr
      004931 E0               [24]14043 	movx	a,@dptr
      004932 FB               [12]14044 	mov	r3,a
      004933 A3               [24]14045 	inc	dptr
      004934 E0               [24]14046 	movx	a,@dptr
      004935 FC               [12]14047 	mov	r4,a
      004936 85*D3 82         [24]14048 	mov	dpl,_f_read_sloc6_1_0
      004939 85*D4 83         [24]14049 	mov	dph,(_f_read_sloc6_1_0 + 1)
      00493C 85*D5 F0         [24]14050 	mov	b,(_f_read_sloc6_1_0 + 2)
      00493F 12r00r00         [24]14051 	lcall	__gptrget
      004942 F8               [12]14052 	mov	r0,a
      004943 A3               [24]14053 	inc	dptr
      004944 12r00r00         [24]14054 	lcall	__gptrget
      004947 F9               [12]14055 	mov	r1,a
      004948 A3               [24]14056 	inc	dptr
      004949 12r00r00         [24]14057 	lcall	__gptrget
      00494C FF               [12]14058 	mov	r7,a
      00494D 74 26            [12]14059 	mov	a,#0x26
      00494F 28               [12]14060 	add	a,r0
      004950 F5*DA            [12]14061 	mov	_f_read_sloc8_1_0,a
      004952 E4               [12]14062 	clr	a
      004953 39               [12]14063 	addc	a,r1
      004954 F5*DB            [12]14064 	mov	(_f_read_sloc8_1_0 + 1),a
      004956 8F*DC            [24]14065 	mov	(_f_read_sloc8_1_0 + 2),r7
      004958 74 07            [12]14066 	mov	a,#0x07
      00495A 25*D3            [12]14067 	add	a,_f_read_sloc6_1_0
      00495C FF               [12]14068 	mov	r7,a
      00495D E4               [12]14069 	clr	a
      00495E 35*D4            [12]14070 	addc	a,(_f_read_sloc6_1_0 + 1)
      004960 FD               [12]14071 	mov	r5,a
      004961 AE*D5            [24]14072 	mov	r6,(_f_read_sloc6_1_0 + 2)
      004963 8F 82            [24]14073 	mov	dpl,r7
      004965 8D 83            [24]14074 	mov	dph,r5
      004967 8E F0            [24]14075 	mov	b,r6
      004969 12r00r00         [24]14076 	lcall	__gptrget
      00496C F9               [12]14077 	mov	r1,a
      00496D A3               [24]14078 	inc	dptr
      00496E 12r00r00         [24]14079 	lcall	__gptrget
      004971 FD               [12]14080 	mov	r5,a
      004972 A3               [24]14081 	inc	dptr
      004973 12r00r00         [24]14082 	lcall	__gptrget
      004976 A3               [24]14083 	inc	dptr
      004977 12r00r00         [24]14084 	lcall	__gptrget
      00497A 53 05 01         [24]14085 	anl	ar5,#0x01
      00497D E4               [12]14086 	clr	a
      00497E E9               [12]14087 	mov	a,r1
      00497F 25*DA            [12]14088 	add	a,_f_read_sloc8_1_0
      004981 F9               [12]14089 	mov	r1,a
      004982 ED               [12]14090 	mov	a,r5
      004983 35*DB            [12]14091 	addc	a,(_f_read_sloc8_1_0 + 1)
      004985 FD               [12]14092 	mov	r5,a
      004986 AE*DC            [24]14093 	mov	r6,(_f_read_sloc8_1_0 + 2)
      004988 90r01r56         [24]14094 	mov	dptr,#_f_read_rcnt_65536_196
      00498B E0               [24]14095 	movx	a,@dptr
      00498C F8               [12]14096 	mov	r0,a
      00498D A3               [24]14097 	inc	dptr
      00498E E0               [24]14098 	movx	a,@dptr
      00498F FF               [12]14099 	mov	r7,a
      004990 90r00r08         [24]14100 	mov	dptr,#_mem_cpy_PARM_2
      004993 E9               [12]14101 	mov	a,r1
      004994 F0               [24]14102 	movx	@dptr,a
      004995 ED               [12]14103 	mov	a,r5
      004996 A3               [24]14104 	inc	dptr
      004997 F0               [24]14105 	movx	@dptr,a
      004998 EE               [12]14106 	mov	a,r6
      004999 A3               [24]14107 	inc	dptr
      00499A F0               [24]14108 	movx	@dptr,a
      00499B 90r00r0B         [24]14109 	mov	dptr,#_mem_cpy_PARM_3
      00499E E8               [12]14110 	mov	a,r0
      00499F F0               [24]14111 	movx	@dptr,a
      0049A0 EF               [12]14112 	mov	a,r7
      0049A1 A3               [24]14113 	inc	dptr
      0049A2 F0               [24]14114 	movx	@dptr,a
      0049A3 8A 82            [24]14115 	mov	dpl,r2
      0049A5 8B 83            [24]14116 	mov	dph,r3
      0049A7 8C F0            [24]14117 	mov	b,r4
      0049A9 78r00            [12]14118 	mov	r0,#_mem_cpy
      0049AB 79s00            [12]14119 	mov	r1,#(_mem_cpy >> 8)
      0049AD 7As00            [12]14120 	mov	r2,#(_mem_cpy >> 16)
      0049AF 12r00r00         [24]14121 	lcall	__sdcc_banked_call
                           0049B2 14122 	C$ff.c$2638$1_0$196 ==.
                                  14123 ;	FATFS\src\ff.c:2638: LEAVE_FF(fp->fs, FR_OK);
                           0049B2 14124 	C$ff.c$2632$2_0$197 ==.
                                  14125 ;	FATFS\src\ff.c:2632: mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
      0049B2                      14126 00135$:
                           0049B2 14127 	C$ff.c$2573$2_0$197 ==.
                                  14128 ;	FATFS\src\ff.c:2573: rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
      0049B2 90r01r56         [24]14129 	mov	dptr,#_f_read_rcnt_65536_196
      0049B5 E0               [24]14130 	movx	a,@dptr
      0049B6 FB               [12]14131 	mov	r3,a
      0049B7 A3               [24]14132 	inc	dptr
      0049B8 E0               [24]14133 	movx	a,@dptr
      0049B9 FC               [12]14134 	mov	r4,a
      0049BA 90r01r5A         [24]14135 	mov	dptr,#_f_read_rbuff_65536_196
      0049BD E0               [24]14136 	movx	a,@dptr
      0049BE F8               [12]14137 	mov	r0,a
      0049BF A3               [24]14138 	inc	dptr
      0049C0 E0               [24]14139 	movx	a,@dptr
      0049C1 F9               [12]14140 	mov	r1,a
      0049C2 A3               [24]14141 	inc	dptr
      0049C3 E0               [24]14142 	movx	a,@dptr
      0049C4 FA               [12]14143 	mov	r2,a
      0049C5 90r01r5A         [24]14144 	mov	dptr,#_f_read_rbuff_65536_196
      0049C8 EB               [12]14145 	mov	a,r3
      0049C9 28               [12]14146 	add	a,r0
      0049CA F0               [24]14147 	movx	@dptr,a
      0049CB EC               [12]14148 	mov	a,r4
      0049CC 39               [12]14149 	addc	a,r1
      0049CD A3               [24]14150 	inc	dptr
      0049CE F0               [24]14151 	movx	@dptr,a
      0049CF EA               [12]14152 	mov	a,r2
      0049D0 A3               [24]14153 	inc	dptr
      0049D1 F0               [24]14154 	movx	@dptr,a
      0049D2 74 07            [12]14155 	mov	a,#0x07
      0049D4 25*C9            [12]14156 	add	a,_f_read_sloc3_1_0
      0049D6 F5*DA            [12]14157 	mov	_f_read_sloc8_1_0,a
      0049D8 E4               [12]14158 	clr	a
      0049D9 35*CA            [12]14159 	addc	a,(_f_read_sloc3_1_0 + 1)
      0049DB F5*DB            [12]14160 	mov	(_f_read_sloc8_1_0 + 1),a
      0049DD 85*CB*DC         [24]14161 	mov	(_f_read_sloc8_1_0 + 2),(_f_read_sloc3_1_0 + 2)
      0049E0 85*DA 82         [24]14162 	mov	dpl,_f_read_sloc8_1_0
      0049E3 85*DB 83         [24]14163 	mov	dph,(_f_read_sloc8_1_0 + 1)
      0049E6 85*DC F0         [24]14164 	mov	b,(_f_read_sloc8_1_0 + 2)
      0049E9 12r00r00         [24]14165 	lcall	__gptrget
      0049EC F5*D3            [12]14166 	mov	_f_read_sloc6_1_0,a
      0049EE A3               [24]14167 	inc	dptr
      0049EF 12r00r00         [24]14168 	lcall	__gptrget
      0049F2 F5*D4            [12]14169 	mov	(_f_read_sloc6_1_0 + 1),a
      0049F4 A3               [24]14170 	inc	dptr
      0049F5 12r00r00         [24]14171 	lcall	__gptrget
      0049F8 F5*D5            [12]14172 	mov	(_f_read_sloc6_1_0 + 2),a
      0049FA A3               [24]14173 	inc	dptr
      0049FB 12r00r00         [24]14174 	lcall	__gptrget
      0049FE F5*D6            [12]14175 	mov	(_f_read_sloc6_1_0 + 3),a
      004A00 8B 06            [24]14176 	mov	ar6,r3
      004A02 8C 05            [24]14177 	mov	ar5,r4
      004A04 E4               [12]14178 	clr	a
      004A05 FA               [12]14179 	mov	r2,a
      004A06 FF               [12]14180 	mov	r7,a
      004A07 EE               [12]14181 	mov	a,r6
      004A08 25*D3            [12]14182 	add	a,_f_read_sloc6_1_0
      004A0A FE               [12]14183 	mov	r6,a
      004A0B ED               [12]14184 	mov	a,r5
      004A0C 35*D4            [12]14185 	addc	a,(_f_read_sloc6_1_0 + 1)
      004A0E FD               [12]14186 	mov	r5,a
      004A0F EA               [12]14187 	mov	a,r2
      004A10 35*D5            [12]14188 	addc	a,(_f_read_sloc6_1_0 + 2)
      004A12 FA               [12]14189 	mov	r2,a
      004A13 EF               [12]14190 	mov	a,r7
      004A14 35*D6            [12]14191 	addc	a,(_f_read_sloc6_1_0 + 3)
      004A16 FF               [12]14192 	mov	r7,a
      004A17 85*DA 82         [24]14193 	mov	dpl,_f_read_sloc8_1_0
      004A1A 85*DB 83         [24]14194 	mov	dph,(_f_read_sloc8_1_0 + 1)
      004A1D 85*DC F0         [24]14195 	mov	b,(_f_read_sloc8_1_0 + 2)
      004A20 EE               [12]14196 	mov	a,r6
      004A21 12r00r00         [24]14197 	lcall	__gptrput
      004A24 A3               [24]14198 	inc	dptr
      004A25 ED               [12]14199 	mov	a,r5
      004A26 12r00r00         [24]14200 	lcall	__gptrput
      004A29 A3               [24]14201 	inc	dptr
      004A2A EA               [12]14202 	mov	a,r2
      004A2B 12r00r00         [24]14203 	lcall	__gptrput
      004A2E A3               [24]14204 	inc	dptr
      004A2F EF               [12]14205 	mov	a,r7
      004A30 12r00r00         [24]14206 	lcall	__gptrput
      004A33 85*DD 82         [24]14207 	mov	dpl,_f_read_sloc9_1_0
      004A36 85*DE 83         [24]14208 	mov	dph,(_f_read_sloc9_1_0 + 1)
      004A39 85*DF F0         [24]14209 	mov	b,(_f_read_sloc9_1_0 + 2)
      004A3C 12r00r00         [24]14210 	lcall	__gptrget
      004A3F FF               [12]14211 	mov	r7,a
      004A40 A3               [24]14212 	inc	dptr
      004A41 12r00r00         [24]14213 	lcall	__gptrget
      004A44 FE               [12]14214 	mov	r6,a
      004A45 EB               [12]14215 	mov	a,r3
      004A46 2F               [12]14216 	add	a,r7
      004A47 FF               [12]14217 	mov	r7,a
      004A48 EC               [12]14218 	mov	a,r4
      004A49 3E               [12]14219 	addc	a,r6
      004A4A FE               [12]14220 	mov	r6,a
      004A4B 85*DD 82         [24]14221 	mov	dpl,_f_read_sloc9_1_0
      004A4E 85*DE 83         [24]14222 	mov	dph,(_f_read_sloc9_1_0 + 1)
      004A51 85*DF F0         [24]14223 	mov	b,(_f_read_sloc9_1_0 + 2)
      004A54 EF               [12]14224 	mov	a,r7
      004A55 12r00r00         [24]14225 	lcall	__gptrput
      004A58 A3               [24]14226 	inc	dptr
      004A59 EE               [12]14227 	mov	a,r6
      004A5A 12r00r00         [24]14228 	lcall	__gptrput
      004A5D 90r01r4A         [24]14229 	mov	dptr,#_f_read_PARM_3
      004A60 E0               [24]14230 	movx	a,@dptr
      004A61 FE               [12]14231 	mov	r6,a
      004A62 A3               [24]14232 	inc	dptr
      004A63 E0               [24]14233 	movx	a,@dptr
      004A64 FF               [12]14234 	mov	r7,a
      004A65 90r01r4A         [24]14235 	mov	dptr,#_f_read_PARM_3
      004A68 EE               [12]14236 	mov	a,r6
      004A69 C3               [12]14237 	clr	c
      004A6A 9B               [12]14238 	subb	a,r3
      004A6B F0               [24]14239 	movx	@dptr,a
      004A6C EF               [12]14240 	mov	a,r7
      004A6D 9C               [12]14241 	subb	a,r4
      004A6E A3               [24]14242 	inc	dptr
      004A6F F0               [24]14243 	movx	@dptr,a
      004A70 02r44r2D         [24]14244 	ljmp	00138$
      004A73                      14245 00136$:
                           004A73 14246 	C$ff.c$2638$1_0$196 ==.
                                  14247 ;	FATFS\src\ff.c:2638: LEAVE_FF(fp->fs, FR_OK);
      004A73 75 82 00         [24]14248 	mov	dpl,#0x00
                           004A76 14249 	C$ff.c$2639$1_0$196 ==.
                                  14250 ;	FATFS\src\ff.c:2639: }
                           004A76 14251 	C$ff.c$2639$1_0$196 ==.
                           004A76 14252 	XG$f_read$0$0 ==.
      004A76 02r00r00         [24]14253 	ljmp	__sdcc_banked_ret
                                  14254 ;------------------------------------------------------------
                                  14255 ;Allocation info for local variables in function 'f_close'
                                  14256 ;------------------------------------------------------------
                                  14257 ;fp                        Allocated with name '_f_close_fp_65536_209'
                                  14258 ;res                       Allocated with name '_f_close_res_65536_210'
                                  14259 ;------------------------------------------------------------
                           004A79 14260 	G$f_close$0$0 ==.
                           004A79 14261 	C$ff.c$2819$1_0$210 ==.
                                  14262 ;	FATFS\src\ff.c:2819: FRESULT f_close (
                                  14263 ;	-----------------------------------------
                                  14264 ;	 function f_close
                                  14265 ;	-----------------------------------------
      004A79                      14266 _f_close:
      004A79 AF F0            [24]14267 	mov	r7,b
      004A7B AE 83            [24]14268 	mov	r6,dph
      004A7D E5 82            [12]14269 	mov	a,dpl
      004A7F 90r01r5D         [24]14270 	mov	dptr,#_f_close_fp_65536_209
      004A82 F0               [24]14271 	movx	@dptr,a
      004A83 EE               [12]14272 	mov	a,r6
      004A84 A3               [24]14273 	inc	dptr
      004A85 F0               [24]14274 	movx	@dptr,a
      004A86 EF               [12]14275 	mov	a,r7
      004A87 A3               [24]14276 	inc	dptr
      004A88 F0               [24]14277 	movx	@dptr,a
                           004A89 14278 	C$ff.c$2831$2_0$211 ==.
                                  14279 ;	FATFS\src\ff.c:2831: res = validate(fp);				/* Lock volume */
      004A89 90r01r5D         [24]14280 	mov	dptr,#_f_close_fp_65536_209
      004A8C E0               [24]14281 	movx	a,@dptr
      004A8D FD               [12]14282 	mov	r5,a
      004A8E A3               [24]14283 	inc	dptr
      004A8F E0               [24]14284 	movx	a,@dptr
      004A90 FE               [12]14285 	mov	r6,a
      004A91 A3               [24]14286 	inc	dptr
      004A92 E0               [24]14287 	movx	a,@dptr
      004A93 FF               [12]14288 	mov	r7,a
      004A94 8D 02            [24]14289 	mov	ar2,r5
      004A96 8E 03            [24]14290 	mov	ar3,r6
      004A98 8F 04            [24]14291 	mov	ar4,r7
      004A9A 8A 82            [24]14292 	mov	dpl,r2
      004A9C 8B 83            [24]14293 	mov	dph,r3
      004A9E 8C F0            [24]14294 	mov	b,r4
      004AA0 C0 07            [24]14295 	push	ar7
      004AA2 C0 06            [24]14296 	push	ar6
      004AA4 C0 05            [24]14297 	push	ar5
      004AA6 78rC8            [12]14298 	mov	r0,#_validate
      004AA8 79s3D            [12]14299 	mov	r1,#(_validate >> 8)
      004AAA 7As00            [12]14300 	mov	r2,#(_validate >> 16)
      004AAC 12r00r00         [24]14301 	lcall	__sdcc_banked_call
      004AAF AC 82            [24]14302 	mov	r4,dpl
      004AB1 D0 05            [24]14303 	pop	ar5
      004AB3 D0 06            [24]14304 	pop	ar6
      004AB5 D0 07            [24]14305 	pop	ar7
                           004AB7 14306 	C$ff.c$2832$2_0$211 ==.
                                  14307 ;	FATFS\src\ff.c:2832: if (res == FR_OK) {
      004AB7 EC               [12]14308 	mov	a,r4
      004AB8 70 12            [24]14309 	jnz	00102$
                           004ABA 14310 	C$ff.c$2840$3_0$212 ==.
                                  14311 ;	FATFS\src\ff.c:2840: fp->fs = 0;				/* Invalidate file object */
      004ABA 8D 82            [24]14312 	mov	dpl,r5
      004ABC 8E 83            [24]14313 	mov	dph,r6
      004ABE 8F F0            [24]14314 	mov	b,r7
      004AC0 E4               [12]14315 	clr	a
      004AC1 12r00r00         [24]14316 	lcall	__gptrput
      004AC4 A3               [24]14317 	inc	dptr
      004AC5 12r00r00         [24]14318 	lcall	__gptrput
      004AC8 A3               [24]14319 	inc	dptr
      004AC9 12r00r00         [24]14320 	lcall	__gptrput
      004ACC                      14321 00102$:
                           004ACC 14322 	C$ff.c$2846$1_0$210 ==.
                                  14323 ;	FATFS\src\ff.c:2846: return res;
      004ACC 8C 82            [24]14324 	mov	dpl,r4
                           004ACE 14325 	C$ff.c$2847$1_0$210 ==.
                                  14326 ;	FATFS\src\ff.c:2847: }
                           004ACE 14327 	C$ff.c$2847$1_0$210 ==.
                           004ACE 14328 	XG$f_close$0$0 ==.
      004ACE 02r00r00         [24]14329 	ljmp	__sdcc_banked_ret
                                  14330 ;------------------------------------------------------------
                                  14331 ;Allocation info for local variables in function 'f_lseek'
                                  14332 ;------------------------------------------------------------
                                  14333 ;sloc0                     Allocated with name '_f_lseek_sloc0_1_0'
                                  14334 ;sloc1                     Allocated with name '_f_lseek_sloc1_1_0'
                                  14335 ;sloc2                     Allocated with name '_f_lseek_sloc2_1_0'
                                  14336 ;sloc3                     Allocated with name '_f_lseek_sloc3_1_0'
                                  14337 ;sloc4                     Allocated with name '_f_lseek_sloc4_1_0'
                                  14338 ;sloc5                     Allocated with name '_f_lseek_sloc5_1_0'
                                  14339 ;sloc6                     Allocated with name '_f_lseek_sloc6_1_0'
                                  14340 ;ofs                       Allocated with name '_f_lseek_PARM_2'
                                  14341 ;fp                        Allocated with name '_f_lseek_fp_65536_213'
                                  14342 ;res                       Allocated with name '_f_lseek_res_65536_214'
                                  14343 ;cl                        Allocated with name '_f_lseek_cl_131072_215'
                                  14344 ;pcl                       Allocated with name '_f_lseek_pcl_131072_215'
                                  14345 ;ncl                       Allocated with name '_f_lseek_ncl_131072_215'
                                  14346 ;tcl                       Allocated with name '_f_lseek_tcl_131072_215'
                                  14347 ;dsc                       Allocated with name '_f_lseek_dsc_131072_215'
                                  14348 ;tlen                      Allocated with name '_f_lseek_tlen_131072_215'
                                  14349 ;ulen                      Allocated with name '_f_lseek_ulen_131072_215'
                                  14350 ;tbl                       Allocated with name '_f_lseek_tbl_131072_215'
                                  14351 ;clst                      Allocated with name '_f_lseek_clst_131072_227'
                                  14352 ;bcs                       Allocated with name '_f_lseek_bcs_131072_227'
                                  14353 ;nsect                     Allocated with name '_f_lseek_nsect_131072_227'
                                  14354 ;ifptr                     Allocated with name '_f_lseek_ifptr_131072_227'
                                  14355 ;------------------------------------------------------------
                           004AD1 14356 	G$f_lseek$0$0 ==.
                           004AD1 14357 	C$ff.c$2991$1_0$214 ==.
                                  14358 ;	FATFS\src\ff.c:2991: FRESULT f_lseek (
                                  14359 ;	-----------------------------------------
                                  14360 ;	 function f_lseek
                                  14361 ;	-----------------------------------------
      004AD1                      14362 _f_lseek:
      004AD1 AF F0            [24]14363 	mov	r7,b
      004AD3 AE 83            [24]14364 	mov	r6,dph
      004AD5 E5 82            [12]14365 	mov	a,dpl
      004AD7 90r01r64         [24]14366 	mov	dptr,#_f_lseek_fp_65536_213
      004ADA F0               [24]14367 	movx	@dptr,a
      004ADB EE               [12]14368 	mov	a,r6
      004ADC A3               [24]14369 	inc	dptr
      004ADD F0               [24]14370 	movx	@dptr,a
      004ADE EF               [12]14371 	mov	a,r7
      004ADF A3               [24]14372 	inc	dptr
      004AE0 F0               [24]14373 	movx	@dptr,a
                           004AE1 14374 	C$ff.c$2999$1_0$214 ==.
                                  14375 ;	FATFS\src\ff.c:2999: res = validate(fp);					/* Check validity of the object */
      004AE1 90r01r64         [24]14376 	mov	dptr,#_f_lseek_fp_65536_213
      004AE4 E0               [24]14377 	movx	a,@dptr
      004AE5 FF               [12]14378 	mov	r7,a
      004AE6 A3               [24]14379 	inc	dptr
      004AE7 E0               [24]14380 	movx	a,@dptr
      004AE8 FD               [12]14381 	mov	r5,a
      004AE9 A3               [24]14382 	inc	dptr
      004AEA E0               [24]14383 	movx	a,@dptr
      004AEB FE               [12]14384 	mov	r6,a
      004AEC 8F 02            [24]14385 	mov	ar2,r7
      004AEE 8D 03            [24]14386 	mov	ar3,r5
      004AF0 8E 04            [24]14387 	mov	ar4,r6
      004AF2 8A 82            [24]14388 	mov	dpl,r2
      004AF4 8B 83            [24]14389 	mov	dph,r3
      004AF6 8C F0            [24]14390 	mov	b,r4
      004AF8 C0 07            [24]14391 	push	ar7
      004AFA C0 06            [24]14392 	push	ar6
      004AFC C0 05            [24]14393 	push	ar5
      004AFE 78rC8            [12]14394 	mov	r0,#_validate
      004B00 79s3D            [12]14395 	mov	r1,#(_validate >> 8)
      004B02 7As00            [12]14396 	mov	r2,#(_validate >> 16)
      004B04 12r00r00         [24]14397 	lcall	__sdcc_banked_call
      004B07 AC 82            [24]14398 	mov	r4,dpl
      004B09 D0 05            [24]14399 	pop	ar5
      004B0B D0 06            [24]14400 	pop	ar6
      004B0D D0 07            [24]14401 	pop	ar7
      004B0F 90r01r67         [24]14402 	mov	dptr,#_f_lseek_res_65536_214
      004B12 EC               [12]14403 	mov	a,r4
      004B13 F0               [24]14404 	movx	@dptr,a
                           004B14 14405 	C$ff.c$3000$1_0$214 ==.
                                  14406 ;	FATFS\src\ff.c:3000: if (res != FR_OK) LEAVE_FF(fp->fs, res);
      004B14 EC               [12]14407 	mov	a,r4
      004B15 60 05            [24]14408 	jz	00102$
      004B17 8C 82            [24]14409 	mov	dpl,r4
      004B19 02r00r00         [24]14410 	ljmp	__sdcc_banked_ret
      004B1C                      14411 00102$:
                           004B1C 14412 	C$ff.c$3001$1_0$214 ==.
                                  14413 ;	FATFS\src\ff.c:3001: if (fp->err)						/* Check error */
      004B1C 74 06            [12]14414 	mov	a,#0x06
      004B1E 2F               [12]14415 	add	a,r7
      004B1F FA               [12]14416 	mov	r2,a
      004B20 E4               [12]14417 	clr	a
      004B21 3D               [12]14418 	addc	a,r5
      004B22 FB               [12]14419 	mov	r3,a
      004B23 8E 04            [24]14420 	mov	ar4,r6
      004B25 8A 82            [24]14421 	mov	dpl,r2
      004B27 8B 83            [24]14422 	mov	dph,r3
      004B29 8C F0            [24]14423 	mov	b,r4
      004B2B 12r00r00         [24]14424 	lcall	__gptrget
      004B2E FC               [12]14425 	mov	r4,a
      004B2F 60 05            [24]14426 	jz	00104$
                           004B31 14427 	C$ff.c$3002$1_0$214 ==.
                                  14428 ;	FATFS\src\ff.c:3002: LEAVE_FF(fp->fs, (FRESULT)fp->err);
      004B31 8C 82            [24]14429 	mov	dpl,r4
      004B33 02r00r00         [24]14430 	ljmp	__sdcc_banked_ret
      004B36                      14431 00104$:
                           004B36 14432 	C$ff.c$3005$1_0$214 ==.
                                  14433 ;	FATFS\src\ff.c:3005: if (fp->cltbl) {	/* Fast seek */
      004B36 74 1B            [12]14434 	mov	a,#0x1b
      004B38 2F               [12]14435 	add	a,r7
      004B39 FA               [12]14436 	mov	r2,a
      004B3A E4               [12]14437 	clr	a
      004B3B 3D               [12]14438 	addc	a,r5
      004B3C FB               [12]14439 	mov	r3,a
      004B3D 8E 04            [24]14440 	mov	ar4,r6
      004B3F 8A 82            [24]14441 	mov	dpl,r2
      004B41 8B 83            [24]14442 	mov	dph,r3
      004B43 8C F0            [24]14443 	mov	b,r4
      004B45 12r00r00         [24]14444 	lcall	__gptrget
      004B48 FA               [12]14445 	mov	r2,a
      004B49 A3               [24]14446 	inc	dptr
      004B4A 12r00r00         [24]14447 	lcall	__gptrget
      004B4D FB               [12]14448 	mov	r3,a
      004B4E A3               [24]14449 	inc	dptr
      004B4F 12r00r00         [24]14450 	lcall	__gptrget
      004B52 FC               [12]14451 	mov	r4,a
      004B53 EA               [12]14452 	mov	a,r2
      004B54 4B               [12]14453 	orl	a,r3
      004B55 70 03            [24]14454 	jnz	00281$
      004B57 02r51r7B         [24]14455 	ljmp	00160$
      004B5A                      14456 00281$:
                           004B5A 14457 	C$ff.c$3008$2_0$215 ==.
                                  14458 ;	FATFS\src\ff.c:3008: if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
      004B5A 90r01r60         [24]14459 	mov	dptr,#_f_lseek_PARM_2
      004B5D E0               [24]14460 	movx	a,@dptr
      004B5E F5*E0            [12]14461 	mov	_f_lseek_sloc0_1_0,a
      004B60 A3               [24]14462 	inc	dptr
      004B61 E0               [24]14463 	movx	a,@dptr
      004B62 F5*E1            [12]14464 	mov	(_f_lseek_sloc0_1_0 + 1),a
      004B64 A3               [24]14465 	inc	dptr
      004B65 E0               [24]14466 	movx	a,@dptr
      004B66 F5*E2            [12]14467 	mov	(_f_lseek_sloc0_1_0 + 2),a
      004B68 A3               [24]14468 	inc	dptr
      004B69 E0               [24]14469 	movx	a,@dptr
      004B6A F5*E3            [12]14470 	mov	(_f_lseek_sloc0_1_0 + 3),a
      004B6C 74 FF            [12]14471 	mov	a,#0xff
      004B6E B5*E0 0B         [24]14472 	cjne	a,_f_lseek_sloc0_1_0,00282$
      004B71 B5*E1 08         [24]14473 	cjne	a,(_f_lseek_sloc0_1_0 + 1),00282$
      004B74 B5*E2 05         [24]14474 	cjne	a,(_f_lseek_sloc0_1_0 + 2),00282$
      004B77 B5*E3 02         [24]14475 	cjne	a,(_f_lseek_sloc0_1_0 + 3),00282$
      004B7A 80 03            [24]14476 	sjmp	00283$
      004B7C                      14477 00282$:
      004B7C 02r4ErDA         [24]14478 	ljmp	00132$
      004B7F                      14479 00283$:
                           004B7F 14480 	C$ff.c$3010$3_0$216 ==.
                                  14481 ;	FATFS\src\ff.c:3010: tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
      004B7F 8A 82            [24]14482 	mov	dpl,r2
      004B81 8B 83            [24]14483 	mov	dph,r3
      004B83 8C F0            [24]14484 	mov	b,r4
      004B85 12r00r00         [24]14485 	lcall	__gptrget
      004B88 F5*E4            [12]14486 	mov	_f_lseek_sloc1_1_0,a
      004B8A A3               [24]14487 	inc	dptr
      004B8B 12r00r00         [24]14488 	lcall	__gptrget
      004B8E F5*E5            [12]14489 	mov	(_f_lseek_sloc1_1_0 + 1),a
      004B90 A3               [24]14490 	inc	dptr
      004B91 12r00r00         [24]14491 	lcall	__gptrget
      004B94 F5*E6            [12]14492 	mov	(_f_lseek_sloc1_1_0 + 2),a
      004B96 A3               [24]14493 	inc	dptr
      004B97 12r00r00         [24]14494 	lcall	__gptrget
      004B9A F5*E7            [12]14495 	mov	(_f_lseek_sloc1_1_0 + 3),a
      004B9C 90r01r78         [24]14496 	mov	dptr,#_f_lseek_tbl_131072_215
      004B9F 74 04            [12]14497 	mov	a,#0x04
      004BA1 2A               [12]14498 	add	a,r2
      004BA2 F0               [24]14499 	movx	@dptr,a
      004BA3 E4               [12]14500 	clr	a
      004BA4 3B               [12]14501 	addc	a,r3
      004BA5 A3               [24]14502 	inc	dptr
      004BA6 F0               [24]14503 	movx	@dptr,a
      004BA7 EC               [12]14504 	mov	a,r4
      004BA8 A3               [24]14505 	inc	dptr
      004BA9 F0               [24]14506 	movx	@dptr,a
      004BAA 90r01r74         [24]14507 	mov	dptr,#_f_lseek_ulen_131072_215
      004BAD 74 02            [12]14508 	mov	a,#0x02
      004BAF F0               [24]14509 	movx	@dptr,a
      004BB0 E4               [12]14510 	clr	a
      004BB1 A3               [24]14511 	inc	dptr
      004BB2 F0               [24]14512 	movx	@dptr,a
      004BB3 A3               [24]14513 	inc	dptr
      004BB4 F0               [24]14514 	movx	@dptr,a
      004BB5 A3               [24]14515 	inc	dptr
      004BB6 F0               [24]14516 	movx	@dptr,a
                           004BB7 14517 	C$ff.c$3011$3_0$216 ==.
                                  14518 ;	FATFS\src\ff.c:3011: cl = fp->sclust;			/* Top of the chain */
      004BB7 74 0F            [12]14519 	mov	a,#0x0f
      004BB9 2F               [12]14520 	add	a,r7
      004BBA FC               [12]14521 	mov	r4,a
      004BBB E4               [12]14522 	clr	a
      004BBC 3D               [12]14523 	addc	a,r5
      004BBD FA               [12]14524 	mov	r2,a
      004BBE 8E 03            [24]14525 	mov	ar3,r6
      004BC0 8C 82            [24]14526 	mov	dpl,r4
      004BC2 8A 83            [24]14527 	mov	dph,r2
      004BC4 8B F0            [24]14528 	mov	b,r3
      004BC6 12r00r00         [24]14529 	lcall	__gptrget
      004BC9 F9               [12]14530 	mov	r1,a
      004BCA A3               [24]14531 	inc	dptr
      004BCB 12r00r00         [24]14532 	lcall	__gptrget
      004BCE FA               [12]14533 	mov	r2,a
      004BCF A3               [24]14534 	inc	dptr
      004BD0 12r00r00         [24]14535 	lcall	__gptrget
      004BD3 FB               [12]14536 	mov	r3,a
      004BD4 A3               [24]14537 	inc	dptr
      004BD5 12r00r00         [24]14538 	lcall	__gptrget
      004BD8 FC               [12]14539 	mov	r4,a
      004BD9 90r01r68         [24]14540 	mov	dptr,#_f_lseek_cl_131072_215
      004BDC E9               [12]14541 	mov	a,r1
      004BDD F0               [24]14542 	movx	@dptr,a
      004BDE EA               [12]14543 	mov	a,r2
      004BDF A3               [24]14544 	inc	dptr
      004BE0 F0               [24]14545 	movx	@dptr,a
      004BE1 EB               [12]14546 	mov	a,r3
      004BE2 A3               [24]14547 	inc	dptr
      004BE3 F0               [24]14548 	movx	@dptr,a
      004BE4 EC               [12]14549 	mov	a,r4
      004BE5 A3               [24]14550 	inc	dptr
      004BE6 F0               [24]14551 	movx	@dptr,a
                           004BE7 14552 	C$ff.c$3012$3_0$216 ==.
                                  14553 ;	FATFS\src\ff.c:3012: if (cl) {
      004BE7 E9               [12]14554 	mov	a,r1
      004BE8 4A               [12]14555 	orl	a,r2
      004BE9 4B               [12]14556 	orl	a,r3
      004BEA 4C               [12]14557 	orl	a,r4
      004BEB 70 03            [24]14558 	jnz	00284$
      004BED 02r4Er4B         [24]14559 	ljmp	00118$
      004BF0                      14560 00284$:
                           004BF0 14561 	C$ff.c$3013$6_0$219 ==.
                                  14562 ;	FATFS\src\ff.c:3013: do {
      004BF0 8F*F3            [24]14563 	mov	_f_lseek_sloc5_1_0,r7
      004BF2 8D*F4            [24]14564 	mov	(_f_lseek_sloc5_1_0 + 1),r5
      004BF4 8E*F5            [24]14565 	mov	(_f_lseek_sloc5_1_0 + 2),r6
      004BF6 8F*E8            [24]14566 	mov	_f_lseek_sloc2_1_0,r7
      004BF8 8D*E9            [24]14567 	mov	(_f_lseek_sloc2_1_0 + 1),r5
      004BFA 8E*EA            [24]14568 	mov	(_f_lseek_sloc2_1_0 + 2),r6
      004BFC 75*EB 02         [24]14569 	mov	_f_lseek_sloc3_1_0,#0x02
      004BFF E4               [12]14570 	clr	a
      004C00 F5*EC            [12]14571 	mov	(_f_lseek_sloc3_1_0 + 1),a
      004C02 F5*ED            [12]14572 	mov	(_f_lseek_sloc3_1_0 + 2),a
      004C04 F5*EE            [12]14573 	mov	(_f_lseek_sloc3_1_0 + 3),a
      004C06                      14574 00114$:
                           004C06 14575 	C$ff.c$3015$1_0$214 ==.
                                  14576 ;	FATFS\src\ff.c:3015: tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
      004C06 90r01r68         [24]14577 	mov	dptr,#_f_lseek_cl_131072_215
      004C09 E0               [24]14578 	movx	a,@dptr
      004C0A F8               [12]14579 	mov	r0,a
      004C0B A3               [24]14580 	inc	dptr
      004C0C E0               [24]14581 	movx	a,@dptr
      004C0D F9               [12]14582 	mov	r1,a
      004C0E A3               [24]14583 	inc	dptr
      004C0F E0               [24]14584 	movx	a,@dptr
      004C10 FB               [12]14585 	mov	r3,a
      004C11 A3               [24]14586 	inc	dptr
      004C12 E0               [24]14587 	movx	a,@dptr
      004C13 FC               [12]14588 	mov	r4,a
      004C14 90r01r70         [24]14589 	mov	dptr,#_f_lseek_tcl_131072_215
      004C17 E8               [12]14590 	mov	a,r0
      004C18 F0               [24]14591 	movx	@dptr,a
      004C19 E9               [12]14592 	mov	a,r1
      004C1A A3               [24]14593 	inc	dptr
      004C1B F0               [24]14594 	movx	@dptr,a
      004C1C EB               [12]14595 	mov	a,r3
      004C1D A3               [24]14596 	inc	dptr
      004C1E F0               [24]14597 	movx	@dptr,a
      004C1F EC               [12]14598 	mov	a,r4
      004C20 A3               [24]14599 	inc	dptr
      004C21 F0               [24]14600 	movx	@dptr,a
      004C22 74 02            [12]14601 	mov	a,#0x02
      004C24 25*EB            [12]14602 	add	a,_f_lseek_sloc3_1_0
      004C26 F5*EB            [12]14603 	mov	_f_lseek_sloc3_1_0,a
      004C28 E4               [12]14604 	clr	a
      004C29 35*EC            [12]14605 	addc	a,(_f_lseek_sloc3_1_0 + 1)
      004C2B F5*EC            [12]14606 	mov	(_f_lseek_sloc3_1_0 + 1),a
      004C2D E4               [12]14607 	clr	a
      004C2E 35*ED            [12]14608 	addc	a,(_f_lseek_sloc3_1_0 + 2)
      004C30 F5*ED            [12]14609 	mov	(_f_lseek_sloc3_1_0 + 2),a
      004C32 E4               [12]14610 	clr	a
      004C33 35*EE            [12]14611 	addc	a,(_f_lseek_sloc3_1_0 + 3)
      004C35 F5*EE            [12]14612 	mov	(_f_lseek_sloc3_1_0 + 3),a
      004C37 90r01r74         [24]14613 	mov	dptr,#_f_lseek_ulen_131072_215
      004C3A E5*EB            [12]14614 	mov	a,_f_lseek_sloc3_1_0
      004C3C F0               [24]14615 	movx	@dptr,a
      004C3D E5*EC            [12]14616 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      004C3F A3               [24]14617 	inc	dptr
      004C40 F0               [24]14618 	movx	@dptr,a
      004C41 E5*ED            [12]14619 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      004C43 A3               [24]14620 	inc	dptr
      004C44 F0               [24]14621 	movx	@dptr,a
      004C45 E5*EE            [12]14622 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      004C47 A3               [24]14623 	inc	dptr
      004C48 F0               [24]14624 	movx	@dptr,a
                           004C49 14625 	C$ff.c$3016$1_0$214 ==.
                                  14626 ;	FATFS\src\ff.c:3016: do {
      004C49 E4               [12]14627 	clr	a
      004C4A F5*EF            [12]14628 	mov	_f_lseek_sloc4_1_0,a
      004C4C F5*F0            [12]14629 	mov	(_f_lseek_sloc4_1_0 + 1),a
      004C4E F5*F1            [12]14630 	mov	(_f_lseek_sloc4_1_0 + 2),a
      004C50 F5*F2            [12]14631 	mov	(_f_lseek_sloc4_1_0 + 3),a
                           004C52 14632 	C$ff.c$3139$1_0$214 ==.
                                  14633 ;	FATFS\src\ff.c:3139: LEAVE_FF(fp->fs, res);
                           004C52 14634 	C$ff.c$3016$5_0$218 ==.
                                  14635 ;	FATFS\src\ff.c:3016: do {
      004C52                      14636 00109$:
                           004C52 14637 	C$ff.c$3017$6_0$219 ==.
                                  14638 ;	FATFS\src\ff.c:3017: pcl = cl; ncl++;
      004C52 90r01r68         [24]14639 	mov	dptr,#_f_lseek_cl_131072_215
      004C55 E0               [24]14640 	movx	a,@dptr
      004C56 F5*F6            [12]14641 	mov	_f_lseek_sloc6_1_0,a
      004C58 A3               [24]14642 	inc	dptr
      004C59 E0               [24]14643 	movx	a,@dptr
      004C5A F5*F7            [12]14644 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004C5C A3               [24]14645 	inc	dptr
      004C5D E0               [24]14646 	movx	a,@dptr
      004C5E F5*F8            [12]14647 	mov	(_f_lseek_sloc6_1_0 + 2),a
      004C60 A3               [24]14648 	inc	dptr
      004C61 E0               [24]14649 	movx	a,@dptr
      004C62 F5*F9            [12]14650 	mov	(_f_lseek_sloc6_1_0 + 3),a
      004C64 90r01r6C         [24]14651 	mov	dptr,#_f_lseek_pcl_131072_215
      004C67 E5*F6            [12]14652 	mov	a,_f_lseek_sloc6_1_0
      004C69 F0               [24]14653 	movx	@dptr,a
      004C6A E5*F7            [12]14654 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      004C6C A3               [24]14655 	inc	dptr
      004C6D F0               [24]14656 	movx	@dptr,a
      004C6E E5*F8            [12]14657 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      004C70 A3               [24]14658 	inc	dptr
      004C71 F0               [24]14659 	movx	@dptr,a
      004C72 E5*F9            [12]14660 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      004C74 A3               [24]14661 	inc	dptr
      004C75 F0               [24]14662 	movx	@dptr,a
      004C76 05*EF            [12]14663 	inc	_f_lseek_sloc4_1_0
      004C78 E4               [12]14664 	clr	a
      004C79 B5*EF 0C         [24]14665 	cjne	a,_f_lseek_sloc4_1_0,00285$
      004C7C 05*F0            [12]14666 	inc	(_f_lseek_sloc4_1_0 + 1)
      004C7E B5*F0 07         [24]14667 	cjne	a,(_f_lseek_sloc4_1_0 + 1),00285$
      004C81 05*F1            [12]14668 	inc	(_f_lseek_sloc4_1_0 + 2)
      004C83 B5*F1 02         [24]14669 	cjne	a,(_f_lseek_sloc4_1_0 + 2),00285$
      004C86 05*F2            [12]14670 	inc	(_f_lseek_sloc4_1_0 + 3)
      004C88                      14671 00285$:
                           004C88 14672 	C$ff.c$3018$6_0$219 ==.
                                  14673 ;	FATFS\src\ff.c:3018: cl = get_fat(fp->fs, cl);
      004C88 85*F3 82         [24]14674 	mov	dpl,_f_lseek_sloc5_1_0
      004C8B 85*F4 83         [24]14675 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      004C8E 85*F5 F0         [24]14676 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      004C91 12r00r00         [24]14677 	lcall	__gptrget
      004C94 FA               [12]14678 	mov	r2,a
      004C95 A3               [24]14679 	inc	dptr
      004C96 12r00r00         [24]14680 	lcall	__gptrget
      004C99 FB               [12]14681 	mov	r3,a
      004C9A A3               [24]14682 	inc	dptr
      004C9B 12r00r00         [24]14683 	lcall	__gptrget
      004C9E FC               [12]14684 	mov	r4,a
      004C9F 90r00r34         [24]14685 	mov	dptr,#_get_fat_PARM_2
      004CA2 E5*F6            [12]14686 	mov	a,_f_lseek_sloc6_1_0
      004CA4 F0               [24]14687 	movx	@dptr,a
      004CA5 E5*F7            [12]14688 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      004CA7 A3               [24]14689 	inc	dptr
      004CA8 F0               [24]14690 	movx	@dptr,a
      004CA9 E5*F8            [12]14691 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      004CAB A3               [24]14692 	inc	dptr
      004CAC F0               [24]14693 	movx	@dptr,a
      004CAD E5*F9            [12]14694 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      004CAF A3               [24]14695 	inc	dptr
      004CB0 F0               [24]14696 	movx	@dptr,a
      004CB1 8A 82            [24]14697 	mov	dpl,r2
      004CB3 8B 83            [24]14698 	mov	dph,r3
      004CB5 8C F0            [24]14699 	mov	b,r4
      004CB7 78rA5            [12]14700 	mov	r0,#_get_fat
      004CB9 79s03            [12]14701 	mov	r1,#(_get_fat >> 8)
      004CBB 7As00            [12]14702 	mov	r2,#(_get_fat >> 16)
      004CBD 12r00r00         [24]14703 	lcall	__sdcc_banked_call
      004CC0 85 82*F6         [24]14704 	mov	_f_lseek_sloc6_1_0,dpl
      004CC3 85 83*F7         [24]14705 	mov	(_f_lseek_sloc6_1_0 + 1),dph
      004CC6 85 F0*F8         [24]14706 	mov	(_f_lseek_sloc6_1_0 + 2),b
      004CC9 F5*F9            [12]14707 	mov	(_f_lseek_sloc6_1_0 + 3),a
      004CCB 90r01r68         [24]14708 	mov	dptr,#_f_lseek_cl_131072_215
      004CCE E5*F6            [12]14709 	mov	a,_f_lseek_sloc6_1_0
      004CD0 F0               [24]14710 	movx	@dptr,a
      004CD1 E5*F7            [12]14711 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      004CD3 A3               [24]14712 	inc	dptr
      004CD4 F0               [24]14713 	movx	@dptr,a
      004CD5 E5*F8            [12]14714 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      004CD7 A3               [24]14715 	inc	dptr
      004CD8 F0               [24]14716 	movx	@dptr,a
      004CD9 E5*F9            [12]14717 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      004CDB A3               [24]14718 	inc	dptr
      004CDC F0               [24]14719 	movx	@dptr,a
                           004CDD 14720 	C$ff.c$3019$6_0$219 ==.
                                  14721 ;	FATFS\src\ff.c:3019: if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
      004CDD C3               [12]14722 	clr	c
      004CDE 74 01            [12]14723 	mov	a,#0x01
      004CE0 95*F6            [12]14724 	subb	a,_f_lseek_sloc6_1_0
      004CE2 E4               [12]14725 	clr	a
      004CE3 95*F7            [12]14726 	subb	a,(_f_lseek_sloc6_1_0 + 1)
      004CE5 E4               [12]14727 	clr	a
      004CE6 95*F8            [12]14728 	subb	a,(_f_lseek_sloc6_1_0 + 2)
      004CE8 E4               [12]14729 	clr	a
      004CE9 95*F9            [12]14730 	subb	a,(_f_lseek_sloc6_1_0 + 3)
      004CEB 40 22            [24]14731 	jc	00106$
      004CED 74 06            [12]14732 	mov	a,#0x06
      004CEF 25*F3            [12]14733 	add	a,_f_lseek_sloc5_1_0
      004CF1 F5*F6            [12]14734 	mov	_f_lseek_sloc6_1_0,a
      004CF3 E4               [12]14735 	clr	a
      004CF4 35*F4            [12]14736 	addc	a,(_f_lseek_sloc5_1_0 + 1)
      004CF6 F5*F7            [12]14737 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004CF8 85*F5*F8         [24]14738 	mov	(_f_lseek_sloc6_1_0 + 2),(_f_lseek_sloc5_1_0 + 2)
      004CFB 85*F6 82         [24]14739 	mov	dpl,_f_lseek_sloc6_1_0
      004CFE 85*F7 83         [24]14740 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      004D01 85*F8 F0         [24]14741 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      004D04 74 02            [12]14742 	mov	a,#0x02
      004D06 12r00r00         [24]14743 	lcall	__gptrput
      004D09 75 82 02         [24]14744 	mov	dpl,#0x02
      004D0C 02r00r00         [24]14745 	ljmp	__sdcc_banked_ret
      004D0F                      14746 00106$:
                           004D0F 14747 	C$ff.c$3020$6_0$219 ==.
                                  14748 ;	FATFS\src\ff.c:3020: if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      004D0F 74 FF            [12]14749 	mov	a,#0xff
      004D11 B5*F6 2B         [24]14750 	cjne	a,_f_lseek_sloc6_1_0,00110$
      004D14 B5*F7 28         [24]14751 	cjne	a,(_f_lseek_sloc6_1_0 + 1),00110$
      004D17 B5*F8 25         [24]14752 	cjne	a,(_f_lseek_sloc6_1_0 + 2),00110$
      004D1A B5*F9 22         [24]14753 	cjne	a,(_f_lseek_sloc6_1_0 + 3),00110$
      004D1D 74 06            [12]14754 	mov	a,#0x06
      004D1F 25*F3            [12]14755 	add	a,_f_lseek_sloc5_1_0
      004D21 F5*F6            [12]14756 	mov	_f_lseek_sloc6_1_0,a
      004D23 E4               [12]14757 	clr	a
      004D24 35*F4            [12]14758 	addc	a,(_f_lseek_sloc5_1_0 + 1)
      004D26 F5*F7            [12]14759 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004D28 85*F5*F8         [24]14760 	mov	(_f_lseek_sloc6_1_0 + 2),(_f_lseek_sloc5_1_0 + 2)
      004D2B 85*F6 82         [24]14761 	mov	dpl,_f_lseek_sloc6_1_0
      004D2E 85*F7 83         [24]14762 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      004D31 85*F8 F0         [24]14763 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      004D34 74 01            [12]14764 	mov	a,#0x01
      004D36 12r00r00         [24]14765 	lcall	__gptrput
      004D39 75 82 01         [24]14766 	mov	dpl,#0x01
      004D3C 02r00r00         [24]14767 	ljmp	__sdcc_banked_ret
      004D3F                      14768 00110$:
                           004D3F 14769 	C$ff.c$3021$5_0$218 ==.
                                  14770 ;	FATFS\src\ff.c:3021: } while (cl == pcl + 1);
      004D3F 90r01r6C         [24]14771 	mov	dptr,#_f_lseek_pcl_131072_215
      004D42 E0               [24]14772 	movx	a,@dptr
      004D43 F8               [12]14773 	mov	r0,a
      004D44 A3               [24]14774 	inc	dptr
      004D45 E0               [24]14775 	movx	a,@dptr
      004D46 FA               [12]14776 	mov	r2,a
      004D47 A3               [24]14777 	inc	dptr
      004D48 E0               [24]14778 	movx	a,@dptr
      004D49 FB               [12]14779 	mov	r3,a
      004D4A A3               [24]14780 	inc	dptr
      004D4B E0               [24]14781 	movx	a,@dptr
      004D4C FC               [12]14782 	mov	r4,a
      004D4D 08               [12]14783 	inc	r0
      004D4E B8 00 09         [24]14784 	cjne	r0,#0x00,00289$
      004D51 0A               [12]14785 	inc	r2
      004D52 BA 00 05         [24]14786 	cjne	r2,#0x00,00289$
      004D55 0B               [12]14787 	inc	r3
      004D56 BB 00 01         [24]14788 	cjne	r3,#0x00,00289$
      004D59 0C               [12]14789 	inc	r4
      004D5A                      14790 00289$:
      004D5A E8               [12]14791 	mov	a,r0
      004D5B B5*F6 0F         [24]14792 	cjne	a,_f_lseek_sloc6_1_0,00290$
      004D5E EA               [12]14793 	mov	a,r2
      004D5F B5*F7 0B         [24]14794 	cjne	a,(_f_lseek_sloc6_1_0 + 1),00290$
      004D62 EB               [12]14795 	mov	a,r3
      004D63 B5*F8 07         [24]14796 	cjne	a,(_f_lseek_sloc6_1_0 + 2),00290$
      004D66 EC               [12]14797 	mov	a,r4
      004D67 B5*F9 03         [24]14798 	cjne	a,(_f_lseek_sloc6_1_0 + 3),00290$
      004D6A 02r4Cr52         [24]14799 	ljmp	00109$
      004D6D                      14800 00290$:
                           004D6D 14801 	C$ff.c$3022$5_0$218 ==.
                                  14802 ;	FATFS\src\ff.c:3022: if (ulen <= tlen) {		/* Store the length and top of the fragment */
      004D6D C3               [12]14803 	clr	c
      004D6E E5*E4            [12]14804 	mov	a,_f_lseek_sloc1_1_0
      004D70 95*EB            [12]14805 	subb	a,_f_lseek_sloc3_1_0
      004D72 E5*E5            [12]14806 	mov	a,(_f_lseek_sloc1_1_0 + 1)
      004D74 95*EC            [12]14807 	subb	a,(_f_lseek_sloc3_1_0 + 1)
      004D76 E5*E6            [12]14808 	mov	a,(_f_lseek_sloc1_1_0 + 2)
      004D78 95*ED            [12]14809 	subb	a,(_f_lseek_sloc3_1_0 + 2)
      004D7A E5*E7            [12]14810 	mov	a,(_f_lseek_sloc1_1_0 + 3)
      004D7C 95*EE            [12]14811 	subb	a,(_f_lseek_sloc3_1_0 + 3)
      004D7E 50 03            [24]14812 	jnc	00291$
      004D80 02r4Er02         [24]14813 	ljmp	00115$
      004D83                      14814 00291$:
                           004D83 14815 	C$ff.c$3023$6_0$222 ==.
                                  14816 ;	FATFS\src\ff.c:3023: *tbl++ = ncl; *tbl++ = tcl;
      004D83 90r01r78         [24]14817 	mov	dptr,#_f_lseek_tbl_131072_215
      004D86 E0               [24]14818 	movx	a,@dptr
      004D87 FA               [12]14819 	mov	r2,a
      004D88 A3               [24]14820 	inc	dptr
      004D89 E0               [24]14821 	movx	a,@dptr
      004D8A FB               [12]14822 	mov	r3,a
      004D8B A3               [24]14823 	inc	dptr
      004D8C E0               [24]14824 	movx	a,@dptr
      004D8D FC               [12]14825 	mov	r4,a
      004D8E 8A 82            [24]14826 	mov	dpl,r2
      004D90 8B 83            [24]14827 	mov	dph,r3
      004D92 8C F0            [24]14828 	mov	b,r4
      004D94 E5*EF            [12]14829 	mov	a,_f_lseek_sloc4_1_0
      004D96 12r00r00         [24]14830 	lcall	__gptrput
      004D99 A3               [24]14831 	inc	dptr
      004D9A E5*F0            [12]14832 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      004D9C 12r00r00         [24]14833 	lcall	__gptrput
      004D9F A3               [24]14834 	inc	dptr
      004DA0 E5*F1            [12]14835 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      004DA2 12r00r00         [24]14836 	lcall	__gptrput
      004DA5 A3               [24]14837 	inc	dptr
      004DA6 E5*F2            [12]14838 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      004DA8 12r00r00         [24]14839 	lcall	__gptrput
      004DAB 90r01r78         [24]14840 	mov	dptr,#_f_lseek_tbl_131072_215
      004DAE 74 04            [12]14841 	mov	a,#0x04
      004DB0 2A               [12]14842 	add	a,r2
      004DB1 F0               [24]14843 	movx	@dptr,a
      004DB2 E4               [12]14844 	clr	a
      004DB3 3B               [12]14845 	addc	a,r3
      004DB4 A3               [24]14846 	inc	dptr
      004DB5 F0               [24]14847 	movx	@dptr,a
      004DB6 EC               [12]14848 	mov	a,r4
      004DB7 A3               [24]14849 	inc	dptr
      004DB8 F0               [24]14850 	movx	@dptr,a
      004DB9 90r01r78         [24]14851 	mov	dptr,#_f_lseek_tbl_131072_215
      004DBC E0               [24]14852 	movx	a,@dptr
      004DBD F5*EF            [12]14853 	mov	_f_lseek_sloc4_1_0,a
      004DBF A3               [24]14854 	inc	dptr
      004DC0 E0               [24]14855 	movx	a,@dptr
      004DC1 F5*F0            [12]14856 	mov	(_f_lseek_sloc4_1_0 + 1),a
      004DC3 A3               [24]14857 	inc	dptr
      004DC4 E0               [24]14858 	movx	a,@dptr
      004DC5 F5*F1            [12]14859 	mov	(_f_lseek_sloc4_1_0 + 2),a
      004DC7 90r01r70         [24]14860 	mov	dptr,#_f_lseek_tcl_131072_215
      004DCA E0               [24]14861 	movx	a,@dptr
      004DCB F8               [12]14862 	mov	r0,a
      004DCC A3               [24]14863 	inc	dptr
      004DCD E0               [24]14864 	movx	a,@dptr
      004DCE FB               [12]14865 	mov	r3,a
      004DCF A3               [24]14866 	inc	dptr
      004DD0 E0               [24]14867 	movx	a,@dptr
      004DD1 F9               [12]14868 	mov	r1,a
      004DD2 A3               [24]14869 	inc	dptr
      004DD3 E0               [24]14870 	movx	a,@dptr
      004DD4 FC               [12]14871 	mov	r4,a
      004DD5 85*EF 82         [24]14872 	mov	dpl,_f_lseek_sloc4_1_0
      004DD8 85*F0 83         [24]14873 	mov	dph,(_f_lseek_sloc4_1_0 + 1)
      004DDB 85*F1 F0         [24]14874 	mov	b,(_f_lseek_sloc4_1_0 + 2)
      004DDE E8               [12]14875 	mov	a,r0
      004DDF 12r00r00         [24]14876 	lcall	__gptrput
      004DE2 A3               [24]14877 	inc	dptr
      004DE3 EB               [12]14878 	mov	a,r3
      004DE4 12r00r00         [24]14879 	lcall	__gptrput
      004DE7 A3               [24]14880 	inc	dptr
      004DE8 E9               [12]14881 	mov	a,r1
      004DE9 12r00r00         [24]14882 	lcall	__gptrput
      004DEC A3               [24]14883 	inc	dptr
      004DED EC               [12]14884 	mov	a,r4
      004DEE 12r00r00         [24]14885 	lcall	__gptrput
      004DF1 90r01r78         [24]14886 	mov	dptr,#_f_lseek_tbl_131072_215
      004DF4 74 04            [12]14887 	mov	a,#0x04
      004DF6 25*EF            [12]14888 	add	a,_f_lseek_sloc4_1_0
      004DF8 F0               [24]14889 	movx	@dptr,a
      004DF9 E4               [12]14890 	clr	a
      004DFA 35*F0            [12]14891 	addc	a,(_f_lseek_sloc4_1_0 + 1)
      004DFC A3               [24]14892 	inc	dptr
      004DFD F0               [24]14893 	movx	@dptr,a
      004DFE E5*F1            [12]14894 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      004E00 A3               [24]14895 	inc	dptr
      004E01 F0               [24]14896 	movx	@dptr,a
      004E02                      14897 00115$:
                           004E02 14898 	C$ff.c$3025$4_0$217 ==.
                                  14899 ;	FATFS\src\ff.c:3025: } while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
      004E02 85*E8 82         [24]14900 	mov	dpl,_f_lseek_sloc2_1_0
      004E05 85*E9 83         [24]14901 	mov	dph,(_f_lseek_sloc2_1_0 + 1)
      004E08 85*EA F0         [24]14902 	mov	b,(_f_lseek_sloc2_1_0 + 2)
      004E0B 12r00r00         [24]14903 	lcall	__gptrget
      004E0E FC               [12]14904 	mov	r4,a
      004E0F A3               [24]14905 	inc	dptr
      004E10 12r00r00         [24]14906 	lcall	__gptrget
      004E13 FA               [12]14907 	mov	r2,a
      004E14 A3               [24]14908 	inc	dptr
      004E15 12r00r00         [24]14909 	lcall	__gptrget
      004E18 FB               [12]14910 	mov	r3,a
      004E19 74 0A            [12]14911 	mov	a,#0x0a
      004E1B 2C               [12]14912 	add	a,r4
      004E1C FC               [12]14913 	mov	r4,a
      004E1D E4               [12]14914 	clr	a
      004E1E 3A               [12]14915 	addc	a,r2
      004E1F FA               [12]14916 	mov	r2,a
      004E20 8C 82            [24]14917 	mov	dpl,r4
      004E22 8A 83            [24]14918 	mov	dph,r2
      004E24 8B F0            [24]14919 	mov	b,r3
      004E26 12r00r00         [24]14920 	lcall	__gptrget
      004E29 F9               [12]14921 	mov	r1,a
      004E2A A3               [24]14922 	inc	dptr
      004E2B 12r00r00         [24]14923 	lcall	__gptrget
      004E2E FA               [12]14924 	mov	r2,a
      004E2F A3               [24]14925 	inc	dptr
      004E30 12r00r00         [24]14926 	lcall	__gptrget
      004E33 FB               [12]14927 	mov	r3,a
      004E34 A3               [24]14928 	inc	dptr
      004E35 12r00r00         [24]14929 	lcall	__gptrget
      004E38 FC               [12]14930 	mov	r4,a
      004E39 C3               [12]14931 	clr	c
      004E3A E5*F6            [12]14932 	mov	a,_f_lseek_sloc6_1_0
      004E3C 99               [12]14933 	subb	a,r1
      004E3D E5*F7            [12]14934 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      004E3F 9A               [12]14935 	subb	a,r2
      004E40 E5*F8            [12]14936 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      004E42 9B               [12]14937 	subb	a,r3
      004E43 E5*F9            [12]14938 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      004E45 9C               [12]14939 	subb	a,r4
      004E46 50 03            [24]14940 	jnc	00292$
      004E48 02r4Cr06         [24]14941 	ljmp	00114$
      004E4B                      14942 00292$:
      004E4B                      14943 00118$:
                           004E4B 14944 	C$ff.c$3027$3_0$216 ==.
                                  14945 ;	FATFS\src\ff.c:3027: *fp->cltbl = ulen;	/* Number of items used */
      004E4B 90r01r64         [24]14946 	mov	dptr,#_f_lseek_fp_65536_213
      004E4E E0               [24]14947 	movx	a,@dptr
      004E4F FA               [12]14948 	mov	r2,a
      004E50 A3               [24]14949 	inc	dptr
      004E51 E0               [24]14950 	movx	a,@dptr
      004E52 FB               [12]14951 	mov	r3,a
      004E53 A3               [24]14952 	inc	dptr
      004E54 E0               [24]14953 	movx	a,@dptr
      004E55 FC               [12]14954 	mov	r4,a
      004E56 74 1B            [12]14955 	mov	a,#0x1b
      004E58 2A               [12]14956 	add	a,r2
      004E59 FA               [12]14957 	mov	r2,a
      004E5A E4               [12]14958 	clr	a
      004E5B 3B               [12]14959 	addc	a,r3
      004E5C FB               [12]14960 	mov	r3,a
      004E5D 8A 82            [24]14961 	mov	dpl,r2
      004E5F 8B 83            [24]14962 	mov	dph,r3
      004E61 8C F0            [24]14963 	mov	b,r4
      004E63 12r00r00         [24]14964 	lcall	__gptrget
      004E66 F5*F6            [12]14965 	mov	_f_lseek_sloc6_1_0,a
      004E68 A3               [24]14966 	inc	dptr
      004E69 12r00r00         [24]14967 	lcall	__gptrget
      004E6C F5*F7            [12]14968 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004E6E A3               [24]14969 	inc	dptr
      004E6F 12r00r00         [24]14970 	lcall	__gptrget
      004E72 F5*F8            [12]14971 	mov	(_f_lseek_sloc6_1_0 + 2),a
      004E74 90r01r74         [24]14972 	mov	dptr,#_f_lseek_ulen_131072_215
      004E77 E0               [24]14973 	movx	a,@dptr
      004E78 F8               [12]14974 	mov	r0,a
      004E79 A3               [24]14975 	inc	dptr
      004E7A E0               [24]14976 	movx	a,@dptr
      004E7B FB               [12]14977 	mov	r3,a
      004E7C A3               [24]14978 	inc	dptr
      004E7D E0               [24]14979 	movx	a,@dptr
      004E7E F9               [12]14980 	mov	r1,a
      004E7F A3               [24]14981 	inc	dptr
      004E80 E0               [24]14982 	movx	a,@dptr
      004E81 FC               [12]14983 	mov	r4,a
      004E82 85*F6 82         [24]14984 	mov	dpl,_f_lseek_sloc6_1_0
      004E85 85*F7 83         [24]14985 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      004E88 85*F8 F0         [24]14986 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      004E8B E8               [12]14987 	mov	a,r0
      004E8C 12r00r00         [24]14988 	lcall	__gptrput
      004E8F A3               [24]14989 	inc	dptr
      004E90 EB               [12]14990 	mov	a,r3
      004E91 12r00r00         [24]14991 	lcall	__gptrput
      004E94 A3               [24]14992 	inc	dptr
      004E95 E9               [12]14993 	mov	a,r1
      004E96 12r00r00         [24]14994 	lcall	__gptrput
      004E99 A3               [24]14995 	inc	dptr
      004E9A EC               [12]14996 	mov	a,r4
      004E9B 12r00r00         [24]14997 	lcall	__gptrput
                           004E9E 14998 	C$ff.c$3028$3_0$216 ==.
                                  14999 ;	FATFS\src\ff.c:3028: if (ulen <= tlen)
      004E9E C3               [12]15000 	clr	c
      004E9F E5*E4            [12]15001 	mov	a,_f_lseek_sloc1_1_0
      004EA1 98               [12]15002 	subb	a,r0
      004EA2 E5*E5            [12]15003 	mov	a,(_f_lseek_sloc1_1_0 + 1)
      004EA4 9B               [12]15004 	subb	a,r3
      004EA5 E5*E6            [12]15005 	mov	a,(_f_lseek_sloc1_1_0 + 2)
      004EA7 99               [12]15006 	subb	a,r1
      004EA8 E5*E7            [12]15007 	mov	a,(_f_lseek_sloc1_1_0 + 3)
      004EAA 9C               [12]15008 	subb	a,r4
      004EAB 40 24            [24]15009 	jc	00120$
                           004EAD 15010 	C$ff.c$3029$3_0$216 ==.
                                  15011 ;	FATFS\src\ff.c:3029: *tbl = 0;		/* Terminate table */
      004EAD 90r01r78         [24]15012 	mov	dptr,#_f_lseek_tbl_131072_215
      004EB0 E0               [24]15013 	movx	a,@dptr
      004EB1 FA               [12]15014 	mov	r2,a
      004EB2 A3               [24]15015 	inc	dptr
      004EB3 E0               [24]15016 	movx	a,@dptr
      004EB4 FB               [12]15017 	mov	r3,a
      004EB5 A3               [24]15018 	inc	dptr
      004EB6 E0               [24]15019 	movx	a,@dptr
      004EB7 FC               [12]15020 	mov	r4,a
      004EB8 8A 82            [24]15021 	mov	dpl,r2
      004EBA 8B 83            [24]15022 	mov	dph,r3
      004EBC 8C F0            [24]15023 	mov	b,r4
      004EBE E4               [12]15024 	clr	a
      004EBF 12r00r00         [24]15025 	lcall	__gptrput
      004EC2 A3               [24]15026 	inc	dptr
      004EC3 12r00r00         [24]15027 	lcall	__gptrput
      004EC6 A3               [24]15028 	inc	dptr
      004EC7 12r00r00         [24]15029 	lcall	__gptrput
      004ECA A3               [24]15030 	inc	dptr
      004ECB 12r00r00         [24]15031 	lcall	__gptrput
      004ECE 02r57rD1         [24]15032 	ljmp	00161$
      004ED1                      15033 00120$:
                           004ED1 15034 	C$ff.c$3031$3_0$216 ==.
                                  15035 ;	FATFS\src\ff.c:3031: res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
      004ED1 90r01r67         [24]15036 	mov	dptr,#_f_lseek_res_65536_214
      004ED4 74 11            [12]15037 	mov	a,#0x11
      004ED6 F0               [24]15038 	movx	@dptr,a
      004ED7 02r57rD1         [24]15039 	ljmp	00161$
      004EDA                      15040 00132$:
                           004EDA 15041 	C$ff.c$3034$3_0$223 ==.
                                  15042 ;	FATFS\src\ff.c:3034: if (ofs > fp->fsize)		/* Clip offset at the file size */
      004EDA 74 0B            [12]15043 	mov	a,#0x0b
      004EDC 2F               [12]15044 	add	a,r7
      004EDD FC               [12]15045 	mov	r4,a
      004EDE E4               [12]15046 	clr	a
      004EDF 3D               [12]15047 	addc	a,r5
      004EE0 FA               [12]15048 	mov	r2,a
      004EE1 8E 03            [24]15049 	mov	ar3,r6
      004EE3 8C 82            [24]15050 	mov	dpl,r4
      004EE5 8A 83            [24]15051 	mov	dph,r2
      004EE7 8B F0            [24]15052 	mov	b,r3
      004EE9 12r00r00         [24]15053 	lcall	__gptrget
      004EEC F9               [12]15054 	mov	r1,a
      004EED A3               [24]15055 	inc	dptr
      004EEE 12r00r00         [24]15056 	lcall	__gptrget
      004EF1 FA               [12]15057 	mov	r2,a
      004EF2 A3               [24]15058 	inc	dptr
      004EF3 12r00r00         [24]15059 	lcall	__gptrget
      004EF6 FB               [12]15060 	mov	r3,a
      004EF7 A3               [24]15061 	inc	dptr
      004EF8 12r00r00         [24]15062 	lcall	__gptrget
      004EFB FC               [12]15063 	mov	r4,a
      004EFC C3               [12]15064 	clr	c
      004EFD E9               [12]15065 	mov	a,r1
      004EFE 95*E0            [12]15066 	subb	a,_f_lseek_sloc0_1_0
      004F00 EA               [12]15067 	mov	a,r2
      004F01 95*E1            [12]15068 	subb	a,(_f_lseek_sloc0_1_0 + 1)
      004F03 EB               [12]15069 	mov	a,r3
      004F04 95*E2            [12]15070 	subb	a,(_f_lseek_sloc0_1_0 + 2)
      004F06 EC               [12]15071 	mov	a,r4
      004F07 95*E3            [12]15072 	subb	a,(_f_lseek_sloc0_1_0 + 3)
      004F09 50 0E            [24]15073 	jnc	00123$
                           004F0B 15074 	C$ff.c$3035$3_0$223 ==.
                                  15075 ;	FATFS\src\ff.c:3035: ofs = fp->fsize;
      004F0B 90r01r60         [24]15076 	mov	dptr,#_f_lseek_PARM_2
      004F0E E9               [12]15077 	mov	a,r1
      004F0F F0               [24]15078 	movx	@dptr,a
      004F10 EA               [12]15079 	mov	a,r2
      004F11 A3               [24]15080 	inc	dptr
      004F12 F0               [24]15081 	movx	@dptr,a
      004F13 EB               [12]15082 	mov	a,r3
      004F14 A3               [24]15083 	inc	dptr
      004F15 F0               [24]15084 	movx	@dptr,a
      004F16 EC               [12]15085 	mov	a,r4
      004F17 A3               [24]15086 	inc	dptr
      004F18 F0               [24]15087 	movx	@dptr,a
      004F19                      15088 00123$:
                           004F19 15089 	C$ff.c$3036$3_0$223 ==.
                                  15090 ;	FATFS\src\ff.c:3036: fp->fptr = ofs;				/* Set file pointer */
      004F19 90r01r64         [24]15091 	mov	dptr,#_f_lseek_fp_65536_213
      004F1C E0               [24]15092 	movx	a,@dptr
      004F1D F5*F6            [12]15093 	mov	_f_lseek_sloc6_1_0,a
      004F1F A3               [24]15094 	inc	dptr
      004F20 E0               [24]15095 	movx	a,@dptr
      004F21 F5*F7            [12]15096 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004F23 A3               [24]15097 	inc	dptr
      004F24 E0               [24]15098 	movx	a,@dptr
      004F25 F5*F8            [12]15099 	mov	(_f_lseek_sloc6_1_0 + 2),a
      004F27 74 07            [12]15100 	mov	a,#0x07
      004F29 25*F6            [12]15101 	add	a,_f_lseek_sloc6_1_0
      004F2B F8               [12]15102 	mov	r0,a
      004F2C E4               [12]15103 	clr	a
      004F2D 35*F7            [12]15104 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      004F2F F9               [12]15105 	mov	r1,a
      004F30 AC*F8            [24]15106 	mov	r4,(_f_lseek_sloc6_1_0 + 2)
      004F32 90r01r60         [24]15107 	mov	dptr,#_f_lseek_PARM_2
      004F35 E0               [24]15108 	movx	a,@dptr
      004F36 F5*EF            [12]15109 	mov	_f_lseek_sloc4_1_0,a
      004F38 A3               [24]15110 	inc	dptr
      004F39 E0               [24]15111 	movx	a,@dptr
      004F3A F5*F0            [12]15112 	mov	(_f_lseek_sloc4_1_0 + 1),a
      004F3C A3               [24]15113 	inc	dptr
      004F3D E0               [24]15114 	movx	a,@dptr
      004F3E F5*F1            [12]15115 	mov	(_f_lseek_sloc4_1_0 + 2),a
      004F40 A3               [24]15116 	inc	dptr
      004F41 E0               [24]15117 	movx	a,@dptr
      004F42 F5*F2            [12]15118 	mov	(_f_lseek_sloc4_1_0 + 3),a
      004F44 88 82            [24]15119 	mov	dpl,r0
      004F46 89 83            [24]15120 	mov	dph,r1
      004F48 8C F0            [24]15121 	mov	b,r4
      004F4A E5*EF            [12]15122 	mov	a,_f_lseek_sloc4_1_0
      004F4C 12r00r00         [24]15123 	lcall	__gptrput
      004F4F A3               [24]15124 	inc	dptr
      004F50 E5*F0            [12]15125 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      004F52 12r00r00         [24]15126 	lcall	__gptrput
      004F55 A3               [24]15127 	inc	dptr
      004F56 E5*F1            [12]15128 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      004F58 12r00r00         [24]15129 	lcall	__gptrput
      004F5B A3               [24]15130 	inc	dptr
      004F5C E5*F2            [12]15131 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      004F5E 12r00r00         [24]15132 	lcall	__gptrput
                           004F61 15133 	C$ff.c$3037$3_0$223 ==.
                                  15134 ;	FATFS\src\ff.c:3037: if (ofs) {
      004F61 E5*EF            [12]15135 	mov	a,_f_lseek_sloc4_1_0
      004F63 45*F0            [12]15136 	orl	a,(_f_lseek_sloc4_1_0 + 1)
      004F65 45*F1            [12]15137 	orl	a,(_f_lseek_sloc4_1_0 + 2)
      004F67 45*F2            [12]15138 	orl	a,(_f_lseek_sloc4_1_0 + 3)
      004F69 70 03            [24]15139 	jnz	00295$
      004F6B 02r57rD1         [24]15140 	ljmp	00161$
      004F6E                      15141 00295$:
                           004F6E 15142 	C$ff.c$3038$4_0$224 ==.
                                  15143 ;	FATFS\src\ff.c:3038: fp->clust = clmt_clust(fp, ofs - 1);
      004F6E 74 13            [12]15144 	mov	a,#0x13
      004F70 25*F6            [12]15145 	add	a,_f_lseek_sloc6_1_0
      004F72 F5*F3            [12]15146 	mov	_f_lseek_sloc5_1_0,a
      004F74 E4               [12]15147 	clr	a
      004F75 35*F7            [12]15148 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      004F77 F5*F4            [12]15149 	mov	(_f_lseek_sloc5_1_0 + 1),a
      004F79 85*F8*F5         [24]15150 	mov	(_f_lseek_sloc5_1_0 + 2),(_f_lseek_sloc6_1_0 + 2)
      004F7C E5*EF            [12]15151 	mov	a,_f_lseek_sloc4_1_0
      004F7E 24 FF            [12]15152 	add	a,#0xff
      004F80 F8               [12]15153 	mov	r0,a
      004F81 E5*F0            [12]15154 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      004F83 34 FF            [12]15155 	addc	a,#0xff
      004F85 F9               [12]15156 	mov	r1,a
      004F86 E5*F1            [12]15157 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      004F88 34 FF            [12]15158 	addc	a,#0xff
      004F8A FB               [12]15159 	mov	r3,a
      004F8B E5*F2            [12]15160 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      004F8D 34 FF            [12]15161 	addc	a,#0xff
      004F8F FC               [12]15162 	mov	r4,a
      004F90 90r00r3B         [24]15163 	mov	dptr,#_clmt_clust_PARM_2
      004F93 E8               [12]15164 	mov	a,r0
      004F94 F0               [24]15165 	movx	@dptr,a
      004F95 E9               [12]15166 	mov	a,r1
      004F96 A3               [24]15167 	inc	dptr
      004F97 F0               [24]15168 	movx	@dptr,a
      004F98 EB               [12]15169 	mov	a,r3
      004F99 A3               [24]15170 	inc	dptr
      004F9A F0               [24]15171 	movx	@dptr,a
      004F9B EC               [12]15172 	mov	a,r4
      004F9C A3               [24]15173 	inc	dptr
      004F9D F0               [24]15174 	movx	@dptr,a
      004F9E 85*F6 82         [24]15175 	mov	dpl,_f_lseek_sloc6_1_0
      004FA1 85*F7 83         [24]15176 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      004FA4 85*F8 F0         [24]15177 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      004FA7 78r23            [12]15178 	mov	r0,#_clmt_clust
      004FA9 79s08            [12]15179 	mov	r1,#(_clmt_clust >> 8)
      004FAB 7As00            [12]15180 	mov	r2,#(_clmt_clust >> 16)
      004FAD 12r00r00         [24]15181 	lcall	__sdcc_banked_call
      004FB0 AA 82            [24]15182 	mov	r2,dpl
      004FB2 AB 83            [24]15183 	mov	r3,dph
      004FB4 A9 F0            [24]15184 	mov	r1,b
      004FB6 FC               [12]15185 	mov	r4,a
      004FB7 85*F3 82         [24]15186 	mov	dpl,_f_lseek_sloc5_1_0
      004FBA 85*F4 83         [24]15187 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      004FBD 85*F5 F0         [24]15188 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      004FC0 EA               [12]15189 	mov	a,r2
      004FC1 12r00r00         [24]15190 	lcall	__gptrput
      004FC4 A3               [24]15191 	inc	dptr
      004FC5 EB               [12]15192 	mov	a,r3
      004FC6 12r00r00         [24]15193 	lcall	__gptrput
      004FC9 A3               [24]15194 	inc	dptr
      004FCA E9               [12]15195 	mov	a,r1
      004FCB 12r00r00         [24]15196 	lcall	__gptrput
      004FCE A3               [24]15197 	inc	dptr
      004FCF EC               [12]15198 	mov	a,r4
      004FD0 12r00r00         [24]15199 	lcall	__gptrput
                           004FD3 15200 	C$ff.c$3039$4_0$224 ==.
                                  15201 ;	FATFS\src\ff.c:3039: dsc = clust2sect(fp->fs, fp->clust);
      004FD3 90r01r64         [24]15202 	mov	dptr,#_f_lseek_fp_65536_213
      004FD6 E0               [24]15203 	movx	a,@dptr
      004FD7 F5*F6            [12]15204 	mov	_f_lseek_sloc6_1_0,a
      004FD9 A3               [24]15205 	inc	dptr
      004FDA E0               [24]15206 	movx	a,@dptr
      004FDB F5*F7            [12]15207 	mov	(_f_lseek_sloc6_1_0 + 1),a
      004FDD A3               [24]15208 	inc	dptr
      004FDE E0               [24]15209 	movx	a,@dptr
      004FDF F5*F8            [12]15210 	mov	(_f_lseek_sloc6_1_0 + 2),a
      004FE1 85*F6 82         [24]15211 	mov	dpl,_f_lseek_sloc6_1_0
      004FE4 85*F7 83         [24]15212 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      004FE7 85*F8 F0         [24]15213 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      004FEA 12r00r00         [24]15214 	lcall	__gptrget
      004FED F5*F3            [12]15215 	mov	_f_lseek_sloc5_1_0,a
      004FEF A3               [24]15216 	inc	dptr
      004FF0 12r00r00         [24]15217 	lcall	__gptrget
      004FF3 F5*F4            [12]15218 	mov	(_f_lseek_sloc5_1_0 + 1),a
      004FF5 A3               [24]15219 	inc	dptr
      004FF6 12r00r00         [24]15220 	lcall	__gptrget
      004FF9 F5*F5            [12]15221 	mov	(_f_lseek_sloc5_1_0 + 2),a
      004FFB 74 13            [12]15222 	mov	a,#0x13
      004FFD 25*F6            [12]15223 	add	a,_f_lseek_sloc6_1_0
      004FFF FC               [12]15224 	mov	r4,a
      005000 E4               [12]15225 	clr	a
      005001 35*F7            [12]15226 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      005003 FA               [12]15227 	mov	r2,a
      005004 AB*F8            [24]15228 	mov	r3,(_f_lseek_sloc6_1_0 + 2)
      005006 8C 82            [24]15229 	mov	dpl,r4
      005008 8A 83            [24]15230 	mov	dph,r2
      00500A 8B F0            [24]15231 	mov	b,r3
      00500C 12r00r00         [24]15232 	lcall	__gptrget
      00500F F9               [12]15233 	mov	r1,a
      005010 A3               [24]15234 	inc	dptr
      005011 12r00r00         [24]15235 	lcall	__gptrget
      005014 FA               [12]15236 	mov	r2,a
      005015 A3               [24]15237 	inc	dptr
      005016 12r00r00         [24]15238 	lcall	__gptrget
      005019 FB               [12]15239 	mov	r3,a
      00501A A3               [24]15240 	inc	dptr
      00501B 12r00r00         [24]15241 	lcall	__gptrget
      00501E FC               [12]15242 	mov	r4,a
      00501F 90r00r2D         [24]15243 	mov	dptr,#_clust2sect_PARM_2
      005022 E9               [12]15244 	mov	a,r1
      005023 F0               [24]15245 	movx	@dptr,a
      005024 EA               [12]15246 	mov	a,r2
      005025 A3               [24]15247 	inc	dptr
      005026 F0               [24]15248 	movx	@dptr,a
      005027 EB               [12]15249 	mov	a,r3
      005028 A3               [24]15250 	inc	dptr
      005029 F0               [24]15251 	movx	@dptr,a
      00502A EC               [12]15252 	mov	a,r4
      00502B A3               [24]15253 	inc	dptr
      00502C F0               [24]15254 	movx	@dptr,a
      00502D 85*F3 82         [24]15255 	mov	dpl,_f_lseek_sloc5_1_0
      005030 85*F4 83         [24]15256 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005033 85*F5 F0         [24]15257 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      005036 78r90            [12]15258 	mov	r0,#_clust2sect
      005038 79s02            [12]15259 	mov	r1,#(_clust2sect >> 8)
      00503A 7As00            [12]15260 	mov	r2,#(_clust2sect >> 16)
      00503C 12r00r00         [24]15261 	lcall	__sdcc_banked_call
      00503F 85 82*EB         [24]15262 	mov	_f_lseek_sloc3_1_0,dpl
      005042 85 83*EC         [24]15263 	mov	(_f_lseek_sloc3_1_0 + 1),dph
      005045 85 F0*ED         [24]15264 	mov	(_f_lseek_sloc3_1_0 + 2),b
      005048 F5*EE            [12]15265 	mov	(_f_lseek_sloc3_1_0 + 3),a
                           00504A 15266 	C$ff.c$3040$4_0$224 ==.
                                  15267 ;	FATFS\src\ff.c:3040: if (!dsc) ABORT(fp->fs, FR_INT_ERR);
      00504A E5*EB            [12]15268 	mov	a,_f_lseek_sloc3_1_0
      00504C 45*EC            [12]15269 	orl	a,(_f_lseek_sloc3_1_0 + 1)
      00504E 45*ED            [12]15270 	orl	a,(_f_lseek_sloc3_1_0 + 2)
      005050 45*EE            [12]15271 	orl	a,(_f_lseek_sloc3_1_0 + 3)
      005052 70 22            [24]15272 	jnz	00125$
      005054 74 06            [12]15273 	mov	a,#0x06
      005056 25*F6            [12]15274 	add	a,_f_lseek_sloc6_1_0
      005058 F5*F3            [12]15275 	mov	_f_lseek_sloc5_1_0,a
      00505A E4               [12]15276 	clr	a
      00505B 35*F7            [12]15277 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      00505D F5*F4            [12]15278 	mov	(_f_lseek_sloc5_1_0 + 1),a
      00505F 85*F8*F5         [24]15279 	mov	(_f_lseek_sloc5_1_0 + 2),(_f_lseek_sloc6_1_0 + 2)
      005062 85*F3 82         [24]15280 	mov	dpl,_f_lseek_sloc5_1_0
      005065 85*F4 83         [24]15281 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005068 85*F5 F0         [24]15282 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      00506B 74 02            [12]15283 	mov	a,#0x02
      00506D 12r00r00         [24]15284 	lcall	__gptrput
      005070 75 82 02         [24]15285 	mov	dpl,#0x02
      005073 02r00r00         [24]15286 	ljmp	__sdcc_banked_ret
      005076                      15287 00125$:
                           005076 15288 	C$ff.c$3041$4_0$224 ==.
                                  15289 ;	FATFS\src\ff.c:3041: dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
      005076 E5*EF            [12]15290 	mov	a,_f_lseek_sloc4_1_0
      005078 24 FF            [12]15291 	add	a,#0xff
      00507A E5*F0            [12]15292 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      00507C 34 FF            [12]15293 	addc	a,#0xff
      00507E FA               [12]15294 	mov	r2,a
      00507F E5*F1            [12]15295 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      005081 34 FF            [12]15296 	addc	a,#0xff
      005083 FB               [12]15297 	mov	r3,a
      005084 E5*F2            [12]15298 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      005086 34 FF            [12]15299 	addc	a,#0xff
      005088 75*F2 00         [24]15300 	mov	(_f_lseek_sloc4_1_0 + 3),#0x00
      00508B C3               [12]15301 	clr	c
      00508C 13               [12]15302 	rrc	a
      00508D F5*F1            [12]15303 	mov	(_f_lseek_sloc4_1_0 + 2),a
      00508F EB               [12]15304 	mov	a,r3
      005090 13               [12]15305 	rrc	a
      005091 F5*F0            [12]15306 	mov	(_f_lseek_sloc4_1_0 + 1),a
      005093 EA               [12]15307 	mov	a,r2
      005094 13               [12]15308 	rrc	a
      005095 F5*EF            [12]15309 	mov	_f_lseek_sloc4_1_0,a
      005097 85*F6 82         [24]15310 	mov	dpl,_f_lseek_sloc6_1_0
      00509A 85*F7 83         [24]15311 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      00509D 85*F8 F0         [24]15312 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      0050A0 12r00r00         [24]15313 	lcall	__gptrget
      0050A3 F9               [12]15314 	mov	r1,a
      0050A4 A3               [24]15315 	inc	dptr
      0050A5 12r00r00         [24]15316 	lcall	__gptrget
      0050A8 FB               [12]15317 	mov	r3,a
      0050A9 A3               [24]15318 	inc	dptr
      0050AA 12r00r00         [24]15319 	lcall	__gptrget
      0050AD FC               [12]15320 	mov	r4,a
      0050AE 74 02            [12]15321 	mov	a,#0x02
      0050B0 29               [12]15322 	add	a,r1
      0050B1 F9               [12]15323 	mov	r1,a
      0050B2 E4               [12]15324 	clr	a
      0050B3 3B               [12]15325 	addc	a,r3
      0050B4 FB               [12]15326 	mov	r3,a
      0050B5 89 82            [24]15327 	mov	dpl,r1
      0050B7 8B 83            [24]15328 	mov	dph,r3
      0050B9 8C F0            [24]15329 	mov	b,r4
      0050BB 12r00r00         [24]15330 	lcall	__gptrget
      0050BE F9               [12]15331 	mov	r1,a
      0050BF 7C 00            [12]15332 	mov	r4,#0x00
      0050C1 19               [12]15333 	dec	r1
      0050C2 B9 FF 01         [24]15334 	cjne	r1,#0xff,00297$
      0050C5 1C               [12]15335 	dec	r4
      0050C6                      15336 00297$:
      0050C6 EC               [12]15337 	mov	a,r4
      0050C7 33               [12]15338 	rlc	a
      0050C8 95 E0            [12]15339 	subb	a,acc
      0050CA FB               [12]15340 	mov	r3,a
      0050CB FA               [12]15341 	mov	r2,a
      0050CC E5*EF            [12]15342 	mov	a,_f_lseek_sloc4_1_0
      0050CE 52 01            [12]15343 	anl	ar1,a
      0050D0 E5*F0            [12]15344 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      0050D2 52 04            [12]15345 	anl	ar4,a
      0050D4 E5*F1            [12]15346 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      0050D6 52 03            [12]15347 	anl	ar3,a
      0050D8 E5*F2            [12]15348 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      0050DA 52 02            [12]15349 	anl	ar2,a
      0050DC E9               [12]15350 	mov	a,r1
      0050DD 25*EB            [12]15351 	add	a,_f_lseek_sloc3_1_0
      0050DF F5*EF            [12]15352 	mov	_f_lseek_sloc4_1_0,a
      0050E1 EC               [12]15353 	mov	a,r4
      0050E2 35*EC            [12]15354 	addc	a,(_f_lseek_sloc3_1_0 + 1)
      0050E4 F5*F0            [12]15355 	mov	(_f_lseek_sloc4_1_0 + 1),a
      0050E6 EB               [12]15356 	mov	a,r3
      0050E7 35*ED            [12]15357 	addc	a,(_f_lseek_sloc3_1_0 + 2)
      0050E9 F5*F1            [12]15358 	mov	(_f_lseek_sloc4_1_0 + 2),a
      0050EB EA               [12]15359 	mov	a,r2
      0050EC 35*EE            [12]15360 	addc	a,(_f_lseek_sloc3_1_0 + 3)
      0050EE F5*F2            [12]15361 	mov	(_f_lseek_sloc4_1_0 + 3),a
                           0050F0 15362 	C$ff.c$3042$4_0$224 ==.
                                  15363 ;	FATFS\src\ff.c:3042: if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
      0050F0 74 07            [12]15364 	mov	a,#0x07
      0050F2 25*F6            [12]15365 	add	a,_f_lseek_sloc6_1_0
      0050F4 F8               [12]15366 	mov	r0,a
      0050F5 E4               [12]15367 	clr	a
      0050F6 35*F7            [12]15368 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      0050F8 FB               [12]15369 	mov	r3,a
      0050F9 AC*F8            [24]15370 	mov	r4,(_f_lseek_sloc6_1_0 + 2)
      0050FB 88 82            [24]15371 	mov	dpl,r0
      0050FD 8B 83            [24]15372 	mov	dph,r3
      0050FF 8C F0            [24]15373 	mov	b,r4
      005101 12r00r00         [24]15374 	lcall	__gptrget
      005104 F8               [12]15375 	mov	r0,a
      005105 A3               [24]15376 	inc	dptr
      005106 12r00r00         [24]15377 	lcall	__gptrget
      005109 FB               [12]15378 	mov	r3,a
      00510A A3               [24]15379 	inc	dptr
      00510B 12r00r00         [24]15380 	lcall	__gptrget
      00510E FC               [12]15381 	mov	r4,a
      00510F A3               [24]15382 	inc	dptr
      005110 12r00r00         [24]15383 	lcall	__gptrget
      005113 FA               [12]15384 	mov	r2,a
      005114 E8               [12]15385 	mov	a,r0
      005115 70 07            [24]15386 	jnz	00298$
      005117 EB               [12]15387 	mov	a,r3
      005118 20 E0 03         [24]15388 	jb	acc.0,00298$
      00511B 02r57rD1         [24]15389 	ljmp	00161$
      00511E                      15390 00298$:
      00511E 74 17            [12]15391 	mov	a,#0x17
      005120 25*F6            [12]15392 	add	a,_f_lseek_sloc6_1_0
      005122 F5*F6            [12]15393 	mov	_f_lseek_sloc6_1_0,a
      005124 E4               [12]15394 	clr	a
      005125 35*F7            [12]15395 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      005127 F5*F7            [12]15396 	mov	(_f_lseek_sloc6_1_0 + 1),a
      005129 85*F6 82         [24]15397 	mov	dpl,_f_lseek_sloc6_1_0
      00512C 85*F7 83         [24]15398 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      00512F 85*F8 F0         [24]15399 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      005132 12r00r00         [24]15400 	lcall	__gptrget
      005135 F8               [12]15401 	mov	r0,a
      005136 A3               [24]15402 	inc	dptr
      005137 12r00r00         [24]15403 	lcall	__gptrget
      00513A F9               [12]15404 	mov	r1,a
      00513B A3               [24]15405 	inc	dptr
      00513C 12r00r00         [24]15406 	lcall	__gptrget
      00513F FB               [12]15407 	mov	r3,a
      005140 A3               [24]15408 	inc	dptr
      005141 12r00r00         [24]15409 	lcall	__gptrget
      005144 FC               [12]15410 	mov	r4,a
      005145 E8               [12]15411 	mov	a,r0
      005146 B5*EF 0F         [24]15412 	cjne	a,_f_lseek_sloc4_1_0,00299$
      005149 E9               [12]15413 	mov	a,r1
      00514A B5*F0 0B         [24]15414 	cjne	a,(_f_lseek_sloc4_1_0 + 1),00299$
      00514D EB               [12]15415 	mov	a,r3
      00514E B5*F1 07         [24]15416 	cjne	a,(_f_lseek_sloc4_1_0 + 2),00299$
      005151 EC               [12]15417 	mov	a,r4
      005152 B5*F2 03         [24]15418 	cjne	a,(_f_lseek_sloc4_1_0 + 3),00299$
      005155 02r57rD1         [24]15419 	ljmp	00161$
      005158                      15420 00299$:
                           005158 15421 	C$ff.c$3054$5_0$226 ==.
                                  15422 ;	FATFS\src\ff.c:3054: fp->dsect = dsc;
      005158 85*F6 82         [24]15423 	mov	dpl,_f_lseek_sloc6_1_0
      00515B 85*F7 83         [24]15424 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      00515E 85*F8 F0         [24]15425 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      005161 E5*EF            [12]15426 	mov	a,_f_lseek_sloc4_1_0
      005163 12r00r00         [24]15427 	lcall	__gptrput
      005166 A3               [24]15428 	inc	dptr
      005167 E5*F0            [12]15429 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      005169 12r00r00         [24]15430 	lcall	__gptrput
      00516C A3               [24]15431 	inc	dptr
      00516D E5*F1            [12]15432 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      00516F 12r00r00         [24]15433 	lcall	__gptrput
      005172 A3               [24]15434 	inc	dptr
      005173 E5*F2            [12]15435 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      005175 12r00r00         [24]15436 	lcall	__gptrput
      005178 02r57rD1         [24]15437 	ljmp	00161$
      00517B                      15438 00160$:
                           00517B 15439 	C$ff.c$3065$2_0$227 ==.
                                  15440 ;	FATFS\src\ff.c:3065: if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
      00517B 74 0B            [12]15441 	mov	a,#0x0b
      00517D 2F               [12]15442 	add	a,r7
      00517E FF               [12]15443 	mov	r7,a
      00517F E4               [12]15444 	clr	a
      005180 3D               [12]15445 	addc	a,r5
      005181 FD               [12]15446 	mov	r5,a
      005182 8F 82            [24]15447 	mov	dpl,r7
      005184 8D 83            [24]15448 	mov	dph,r5
      005186 8E F0            [24]15449 	mov	b,r6
      005188 12r00r00         [24]15450 	lcall	__gptrget
      00518B FC               [12]15451 	mov	r4,a
      00518C A3               [24]15452 	inc	dptr
      00518D 12r00r00         [24]15453 	lcall	__gptrget
      005190 FD               [12]15454 	mov	r5,a
      005191 A3               [24]15455 	inc	dptr
      005192 12r00r00         [24]15456 	lcall	__gptrget
      005195 FE               [12]15457 	mov	r6,a
      005196 A3               [24]15458 	inc	dptr
      005197 12r00r00         [24]15459 	lcall	__gptrget
      00519A FF               [12]15460 	mov	r7,a
      00519B 90r01r60         [24]15461 	mov	dptr,#_f_lseek_PARM_2
      00519E E0               [24]15462 	movx	a,@dptr
      00519F F8               [12]15463 	mov	r0,a
      0051A0 A3               [24]15464 	inc	dptr
      0051A1 E0               [24]15465 	movx	a,@dptr
      0051A2 F9               [12]15466 	mov	r1,a
      0051A3 A3               [24]15467 	inc	dptr
      0051A4 E0               [24]15468 	movx	a,@dptr
      0051A5 FA               [12]15469 	mov	r2,a
      0051A6 A3               [24]15470 	inc	dptr
      0051A7 E0               [24]15471 	movx	a,@dptr
      0051A8 FB               [12]15472 	mov	r3,a
      0051A9 C3               [12]15473 	clr	c
      0051AA EC               [12]15474 	mov	a,r4
      0051AB 98               [12]15475 	subb	a,r0
      0051AC ED               [12]15476 	mov	a,r5
      0051AD 99               [12]15477 	subb	a,r1
      0051AE EE               [12]15478 	mov	a,r6
      0051AF 9A               [12]15479 	subb	a,r2
      0051B0 EF               [12]15480 	mov	a,r7
      0051B1 9B               [12]15481 	subb	a,r3
      0051B2 50 0E            [24]15482 	jnc	00135$
                           0051B4 15483 	C$ff.c$3069$2_0$227 ==.
                                  15484 ;	FATFS\src\ff.c:3069: ) ofs = fp->fsize;
      0051B4 90r01r60         [24]15485 	mov	dptr,#_f_lseek_PARM_2
      0051B7 EC               [12]15486 	mov	a,r4
      0051B8 F0               [24]15487 	movx	@dptr,a
      0051B9 ED               [12]15488 	mov	a,r5
      0051BA A3               [24]15489 	inc	dptr
      0051BB F0               [24]15490 	movx	@dptr,a
      0051BC EE               [12]15491 	mov	a,r6
      0051BD A3               [24]15492 	inc	dptr
      0051BE F0               [24]15493 	movx	@dptr,a
      0051BF EF               [12]15494 	mov	a,r7
      0051C0 A3               [24]15495 	inc	dptr
      0051C1 F0               [24]15496 	movx	@dptr,a
      0051C2                      15497 00135$:
                           0051C2 15498 	C$ff.c$3071$2_0$227 ==.
                                  15499 ;	FATFS\src\ff.c:3071: ifptr = fp->fptr;
      0051C2 90r01r64         [24]15500 	mov	dptr,#_f_lseek_fp_65536_213
      0051C5 E0               [24]15501 	movx	a,@dptr
      0051C6 FD               [12]15502 	mov	r5,a
      0051C7 A3               [24]15503 	inc	dptr
      0051C8 E0               [24]15504 	movx	a,@dptr
      0051C9 FE               [12]15505 	mov	r6,a
      0051CA A3               [24]15506 	inc	dptr
      0051CB E0               [24]15507 	movx	a,@dptr
      0051CC FF               [12]15508 	mov	r7,a
      0051CD 74 07            [12]15509 	mov	a,#0x07
      0051CF 2D               [12]15510 	add	a,r5
      0051D0 F5*F3            [12]15511 	mov	_f_lseek_sloc5_1_0,a
      0051D2 E4               [12]15512 	clr	a
      0051D3 3E               [12]15513 	addc	a,r6
      0051D4 F5*F4            [12]15514 	mov	(_f_lseek_sloc5_1_0 + 1),a
      0051D6 8F*F5            [24]15515 	mov	(_f_lseek_sloc5_1_0 + 2),r7
      0051D8 85*F3 82         [24]15516 	mov	dpl,_f_lseek_sloc5_1_0
      0051DB 85*F4 83         [24]15517 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      0051DE 85*F5 F0         [24]15518 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      0051E1 12r00r00         [24]15519 	lcall	__gptrget
      0051E4 F5*F6            [12]15520 	mov	_f_lseek_sloc6_1_0,a
      0051E6 A3               [24]15521 	inc	dptr
      0051E7 12r00r00         [24]15522 	lcall	__gptrget
      0051EA F5*F7            [12]15523 	mov	(_f_lseek_sloc6_1_0 + 1),a
      0051EC A3               [24]15524 	inc	dptr
      0051ED 12r00r00         [24]15525 	lcall	__gptrget
      0051F0 F5*F8            [12]15526 	mov	(_f_lseek_sloc6_1_0 + 2),a
      0051F2 A3               [24]15527 	inc	dptr
      0051F3 12r00r00         [24]15528 	lcall	__gptrget
      0051F6 F5*F9            [12]15529 	mov	(_f_lseek_sloc6_1_0 + 3),a
                           0051F8 15530 	C$ff.c$3072$2_0$227 ==.
                                  15531 ;	FATFS\src\ff.c:3072: fp->fptr = nsect = 0;
      0051F8 90r01r7F         [24]15532 	mov	dptr,#_f_lseek_nsect_131072_227
      0051FB E4               [12]15533 	clr	a
      0051FC F0               [24]15534 	movx	@dptr,a
      0051FD A3               [24]15535 	inc	dptr
      0051FE F0               [24]15536 	movx	@dptr,a
      0051FF A3               [24]15537 	inc	dptr
      005200 F0               [24]15538 	movx	@dptr,a
      005201 A3               [24]15539 	inc	dptr
      005202 F0               [24]15540 	movx	@dptr,a
      005203 85*F3 82         [24]15541 	mov	dpl,_f_lseek_sloc5_1_0
      005206 85*F4 83         [24]15542 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005209 85*F5 F0         [24]15543 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      00520C 12r00r00         [24]15544 	lcall	__gptrput
      00520F A3               [24]15545 	inc	dptr
      005210 12r00r00         [24]15546 	lcall	__gptrput
      005213 A3               [24]15547 	inc	dptr
      005214 12r00r00         [24]15548 	lcall	__gptrput
      005217 A3               [24]15549 	inc	dptr
      005218 12r00r00         [24]15550 	lcall	__gptrput
                           00521B 15551 	C$ff.c$3073$2_0$227 ==.
                                  15552 ;	FATFS\src\ff.c:3073: if (ofs) {
      00521B 90r01r60         [24]15553 	mov	dptr,#_f_lseek_PARM_2
      00521E E0               [24]15554 	movx	a,@dptr
      00521F F5*EF            [12]15555 	mov	_f_lseek_sloc4_1_0,a
      005221 A3               [24]15556 	inc	dptr
      005222 E0               [24]15557 	movx	a,@dptr
      005223 F5*F0            [12]15558 	mov	(_f_lseek_sloc4_1_0 + 1),a
      005225 A3               [24]15559 	inc	dptr
      005226 E0               [24]15560 	movx	a,@dptr
      005227 F5*F1            [12]15561 	mov	(_f_lseek_sloc4_1_0 + 2),a
      005229 A3               [24]15562 	inc	dptr
      00522A E0               [24]15563 	movx	a,@dptr
      00522B F5*F2            [12]15564 	mov	(_f_lseek_sloc4_1_0 + 3),a
      00522D E5*EF            [12]15565 	mov	a,_f_lseek_sloc4_1_0
      00522F 45*F0            [12]15566 	orl	a,(_f_lseek_sloc4_1_0 + 1)
      005231 45*F1            [12]15567 	orl	a,(_f_lseek_sloc4_1_0 + 2)
      005233 45*F2            [12]15568 	orl	a,(_f_lseek_sloc4_1_0 + 3)
      005235 70 03            [24]15569 	jnz	00301$
      005237 02r57r3C         [24]15570 	ljmp	00155$
      00523A                      15571 00301$:
                           00523A 15572 	C$ff.c$3074$1_0$214 ==.
                                  15573 ;	FATFS\src\ff.c:3074: bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
      00523A 8D 82            [24]15574 	mov	dpl,r5
      00523C 8E 83            [24]15575 	mov	dph,r6
      00523E 8F F0            [24]15576 	mov	b,r7
      005240 12r00r00         [24]15577 	lcall	__gptrget
      005243 F8               [12]15578 	mov	r0,a
      005244 A3               [24]15579 	inc	dptr
      005245 12r00r00         [24]15580 	lcall	__gptrget
      005248 F9               [12]15581 	mov	r1,a
      005249 A3               [24]15582 	inc	dptr
      00524A 12r00r00         [24]15583 	lcall	__gptrget
      00524D FC               [12]15584 	mov	r4,a
      00524E 74 02            [12]15585 	mov	a,#0x02
      005250 28               [12]15586 	add	a,r0
      005251 F8               [12]15587 	mov	r0,a
      005252 E4               [12]15588 	clr	a
      005253 39               [12]15589 	addc	a,r1
      005254 F9               [12]15590 	mov	r1,a
      005255 88 82            [24]15591 	mov	dpl,r0
      005257 89 83            [24]15592 	mov	dph,r1
      005259 8C F0            [24]15593 	mov	b,r4
      00525B 12r00r00         [24]15594 	lcall	__gptrget
      00525E F8               [12]15595 	mov	r0,a
      00525F E4               [12]15596 	clr	a
      005260 FC               [12]15597 	mov	r4,a
      005261 FB               [12]15598 	mov	r3,a
      005262 FA               [12]15599 	mov	r2,a
      005263 E8               [12]15600 	mov	a,r0
      005264 28               [12]15601 	add	a,r0
      005265 F5*EC            [12]15602 	mov	(_f_lseek_sloc3_1_0 + 1),a
      005267 EC               [12]15603 	mov	a,r4
      005268 33               [12]15604 	rlc	a
      005269 F5*ED            [12]15605 	mov	(_f_lseek_sloc3_1_0 + 2),a
      00526B EB               [12]15606 	mov	a,r3
      00526C 33               [12]15607 	rlc	a
      00526D F5*EE            [12]15608 	mov	(_f_lseek_sloc3_1_0 + 3),a
                                  15609 ;	1-genFromRTrack replaced	mov	_f_lseek_sloc3_1_0,#0x00
      00526F 8C*EB            [24]15610 	mov	_f_lseek_sloc3_1_0,r4
                           005271 15611 	C$ff.c$3075$1_0$214 ==.
                                  15612 ;	FATFS\src\ff.c:3075: if (ifptr > 0 &&
      005271 E5*F6            [12]15613 	mov	a,_f_lseek_sloc6_1_0
      005273 45*F7            [12]15614 	orl	a,(_f_lseek_sloc6_1_0 + 1)
      005275 45*F8            [12]15615 	orl	a,(_f_lseek_sloc6_1_0 + 2)
      005277 45*F9            [12]15616 	orl	a,(_f_lseek_sloc6_1_0 + 3)
      005279 70 03            [24]15617 	jnz	00302$
      00527B 02r53rB4         [24]15618 	ljmp	00137$
      00527E                      15619 00302$:
                           00527E 15620 	C$ff.c$3076$1_0$214 ==.
                                  15621 ;	FATFS\src\ff.c:3076: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
      00527E E5*EF            [12]15622 	mov	a,_f_lseek_sloc4_1_0
      005280 24 FF            [12]15623 	add	a,#0xff
      005282 F8               [12]15624 	mov	r0,a
      005283 E5*F0            [12]15625 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      005285 34 FF            [12]15626 	addc	a,#0xff
      005287 F9               [12]15627 	mov	r1,a
      005288 E5*F1            [12]15628 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      00528A 34 FF            [12]15629 	addc	a,#0xff
      00528C FB               [12]15630 	mov	r3,a
      00528D E5*F2            [12]15631 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      00528F 34 FF            [12]15632 	addc	a,#0xff
      005291 FC               [12]15633 	mov	r4,a
      005292 90r00r00         [24]15634 	mov	dptr,#__divulong_PARM_2
      005295 E5*EB            [12]15635 	mov	a,_f_lseek_sloc3_1_0
      005297 F0               [24]15636 	movx	@dptr,a
      005298 E5*EC            [12]15637 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      00529A A3               [24]15638 	inc	dptr
      00529B F0               [24]15639 	movx	@dptr,a
      00529C E5*ED            [12]15640 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      00529E A3               [24]15641 	inc	dptr
      00529F F0               [24]15642 	movx	@dptr,a
      0052A0 E5*EE            [12]15643 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      0052A2 A3               [24]15644 	inc	dptr
      0052A3 F0               [24]15645 	movx	@dptr,a
      0052A4 88 82            [24]15646 	mov	dpl,r0
      0052A6 89 83            [24]15647 	mov	dph,r1
      0052A8 8B F0            [24]15648 	mov	b,r3
      0052AA EC               [12]15649 	mov	a,r4
      0052AB C0 07            [24]15650 	push	ar7
      0052AD C0 06            [24]15651 	push	ar6
      0052AF C0 05            [24]15652 	push	ar5
      0052B1 12r00r00         [24]15653 	lcall	__divulong
      0052B4 85 82*E4         [24]15654 	mov	_f_lseek_sloc1_1_0,dpl
      0052B7 85 83*E5         [24]15655 	mov	(_f_lseek_sloc1_1_0 + 1),dph
      0052BA 85 F0*E6         [24]15656 	mov	(_f_lseek_sloc1_1_0 + 2),b
      0052BD F5*E7            [12]15657 	mov	(_f_lseek_sloc1_1_0 + 3),a
      0052BF E5*F6            [12]15658 	mov	a,_f_lseek_sloc6_1_0
      0052C1 24 FF            [12]15659 	add	a,#0xff
      0052C3 F8               [12]15660 	mov	r0,a
      0052C4 E5*F7            [12]15661 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      0052C6 34 FF            [12]15662 	addc	a,#0xff
      0052C8 FA               [12]15663 	mov	r2,a
      0052C9 E5*F8            [12]15664 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      0052CB 34 FF            [12]15665 	addc	a,#0xff
      0052CD FB               [12]15666 	mov	r3,a
      0052CE E5*F9            [12]15667 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      0052D0 34 FF            [12]15668 	addc	a,#0xff
      0052D2 FC               [12]15669 	mov	r4,a
      0052D3 90r00r00         [24]15670 	mov	dptr,#__divulong_PARM_2
      0052D6 E5*EB            [12]15671 	mov	a,_f_lseek_sloc3_1_0
      0052D8 F0               [24]15672 	movx	@dptr,a
      0052D9 E5*EC            [12]15673 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      0052DB A3               [24]15674 	inc	dptr
      0052DC F0               [24]15675 	movx	@dptr,a
      0052DD E5*ED            [12]15676 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      0052DF A3               [24]15677 	inc	dptr
      0052E0 F0               [24]15678 	movx	@dptr,a
      0052E1 E5*EE            [12]15679 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      0052E3 A3               [24]15680 	inc	dptr
      0052E4 F0               [24]15681 	movx	@dptr,a
      0052E5 88 82            [24]15682 	mov	dpl,r0
      0052E7 8A 83            [24]15683 	mov	dph,r2
      0052E9 8B F0            [24]15684 	mov	b,r3
      0052EB EC               [12]15685 	mov	a,r4
      0052EC 12r00r00         [24]15686 	lcall	__divulong
      0052EF A9 82            [24]15687 	mov	r1,dpl
      0052F1 AA 83            [24]15688 	mov	r2,dph
      0052F3 AB F0            [24]15689 	mov	r3,b
      0052F5 FC               [12]15690 	mov	r4,a
      0052F6 D0 05            [24]15691 	pop	ar5
      0052F8 D0 06            [24]15692 	pop	ar6
      0052FA D0 07            [24]15693 	pop	ar7
      0052FC C3               [12]15694 	clr	c
      0052FD E5*E4            [12]15695 	mov	a,_f_lseek_sloc1_1_0
      0052FF 99               [12]15696 	subb	a,r1
      005300 E5*E5            [12]15697 	mov	a,(_f_lseek_sloc1_1_0 + 1)
      005302 9A               [12]15698 	subb	a,r2
      005303 E5*E6            [12]15699 	mov	a,(_f_lseek_sloc1_1_0 + 2)
      005305 9B               [12]15700 	subb	a,r3
      005306 E5*E7            [12]15701 	mov	a,(_f_lseek_sloc1_1_0 + 3)
      005308 9C               [12]15702 	subb	a,r4
      005309 50 03            [24]15703 	jnc	00303$
      00530B 02r53rB4         [24]15704 	ljmp	00137$
      00530E                      15705 00303$:
                           00530E 15706 	C$ff.c$3077$4_0$229 ==.
                                  15707 ;	FATFS\src\ff.c:3077: fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
      00530E 15*F6            [12]15708 	dec	_f_lseek_sloc6_1_0
      005310 74 FF            [12]15709 	mov	a,#0xff
      005312 B5*F6 0C         [24]15710 	cjne	a,_f_lseek_sloc6_1_0,00304$
      005315 15*F7            [12]15711 	dec	(_f_lseek_sloc6_1_0 + 1)
      005317 B5*F7 07         [24]15712 	cjne	a,(_f_lseek_sloc6_1_0 + 1),00304$
      00531A 15*F8            [12]15713 	dec	(_f_lseek_sloc6_1_0 + 2)
      00531C B5*F8 02         [24]15714 	cjne	a,(_f_lseek_sloc6_1_0 + 2),00304$
      00531F 15*F9            [12]15715 	dec	(_f_lseek_sloc6_1_0 + 3)
      005321                      15716 00304$:
      005321 E5*EB            [12]15717 	mov	a,_f_lseek_sloc3_1_0
      005323 24 FF            [12]15718 	add	a,#0xff
      005325 FA               [12]15719 	mov	r2,a
      005326 E5*EC            [12]15720 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      005328 34 FF            [12]15721 	addc	a,#0xff
      00532A FB               [12]15722 	mov	r3,a
      00532B E5*ED            [12]15723 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      00532D 34 FF            [12]15724 	addc	a,#0xff
      00532F F9               [12]15725 	mov	r1,a
      005330 E5*EE            [12]15726 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      005332 34 FF            [12]15727 	addc	a,#0xff
      005334 FC               [12]15728 	mov	r4,a
      005335 EA               [12]15729 	mov	a,r2
      005336 F4               [12]15730 	cpl	a
      005337 FA               [12]15731 	mov	r2,a
      005338 EB               [12]15732 	mov	a,r3
      005339 F4               [12]15733 	cpl	a
      00533A FB               [12]15734 	mov	r3,a
      00533B E9               [12]15735 	mov	a,r1
      00533C F4               [12]15736 	cpl	a
      00533D F9               [12]15737 	mov	r1,a
      00533E EC               [12]15738 	mov	a,r4
      00533F F4               [12]15739 	cpl	a
      005340 FC               [12]15740 	mov	r4,a
      005341 E5*F6            [12]15741 	mov	a,_f_lseek_sloc6_1_0
      005343 52 02            [12]15742 	anl	ar2,a
      005345 E5*F7            [12]15743 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      005347 52 03            [12]15744 	anl	ar3,a
      005349 E5*F8            [12]15745 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      00534B 52 01            [12]15746 	anl	ar1,a
      00534D E5*F9            [12]15747 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      00534F 52 04            [12]15748 	anl	ar4,a
      005351 85*F3 82         [24]15749 	mov	dpl,_f_lseek_sloc5_1_0
      005354 85*F4 83         [24]15750 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005357 85*F5 F0         [24]15751 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      00535A EA               [12]15752 	mov	a,r2
      00535B 12r00r00         [24]15753 	lcall	__gptrput
      00535E A3               [24]15754 	inc	dptr
      00535F EB               [12]15755 	mov	a,r3
      005360 12r00r00         [24]15756 	lcall	__gptrput
      005363 A3               [24]15757 	inc	dptr
      005364 E9               [12]15758 	mov	a,r1
      005365 12r00r00         [24]15759 	lcall	__gptrput
      005368 A3               [24]15760 	inc	dptr
      005369 EC               [12]15761 	mov	a,r4
      00536A 12r00r00         [24]15762 	lcall	__gptrput
                           00536D 15763 	C$ff.c$3078$4_0$229 ==.
                                  15764 ;	FATFS\src\ff.c:3078: ofs -= fp->fptr;
      00536D 90r01r60         [24]15765 	mov	dptr,#_f_lseek_PARM_2
      005370 E5*EF            [12]15766 	mov	a,_f_lseek_sloc4_1_0
      005372 C3               [12]15767 	clr	c
      005373 9A               [12]15768 	subb	a,r2
      005374 F0               [24]15769 	movx	@dptr,a
      005375 E5*F0            [12]15770 	mov	a,(_f_lseek_sloc4_1_0 + 1)
      005377 9B               [12]15771 	subb	a,r3
      005378 A3               [24]15772 	inc	dptr
      005379 F0               [24]15773 	movx	@dptr,a
      00537A E5*F1            [12]15774 	mov	a,(_f_lseek_sloc4_1_0 + 2)
      00537C 99               [12]15775 	subb	a,r1
      00537D A3               [24]15776 	inc	dptr
      00537E F0               [24]15777 	movx	@dptr,a
      00537F E5*F2            [12]15778 	mov	a,(_f_lseek_sloc4_1_0 + 3)
      005381 9C               [12]15779 	subb	a,r4
      005382 A3               [24]15780 	inc	dptr
      005383 F0               [24]15781 	movx	@dptr,a
                           005384 15782 	C$ff.c$3079$4_0$229 ==.
                                  15783 ;	FATFS\src\ff.c:3079: clst = fp->clust;
      005384 74 13            [12]15784 	mov	a,#0x13
      005386 2D               [12]15785 	add	a,r5
      005387 FD               [12]15786 	mov	r5,a
      005388 E4               [12]15787 	clr	a
      005389 3E               [12]15788 	addc	a,r6
      00538A FE               [12]15789 	mov	r6,a
      00538B 8D 82            [24]15790 	mov	dpl,r5
      00538D 8E 83            [24]15791 	mov	dph,r6
      00538F 8F F0            [24]15792 	mov	b,r7
      005391 12r00r00         [24]15793 	lcall	__gptrget
      005394 FD               [12]15794 	mov	r5,a
      005395 A3               [24]15795 	inc	dptr
      005396 12r00r00         [24]15796 	lcall	__gptrget
      005399 FE               [12]15797 	mov	r6,a
      00539A A3               [24]15798 	inc	dptr
      00539B 12r00r00         [24]15799 	lcall	__gptrget
      00539E FF               [12]15800 	mov	r7,a
      00539F A3               [24]15801 	inc	dptr
      0053A0 12r00r00         [24]15802 	lcall	__gptrget
      0053A3 FC               [12]15803 	mov	r4,a
      0053A4 90r01r7B         [24]15804 	mov	dptr,#_f_lseek_clst_131072_227
      0053A7 ED               [12]15805 	mov	a,r5
      0053A8 F0               [24]15806 	movx	@dptr,a
      0053A9 EE               [12]15807 	mov	a,r6
      0053AA A3               [24]15808 	inc	dptr
      0053AB F0               [24]15809 	movx	@dptr,a
      0053AC EF               [12]15810 	mov	a,r7
      0053AD A3               [24]15811 	inc	dptr
      0053AE F0               [24]15812 	movx	@dptr,a
      0053AF EC               [12]15813 	mov	a,r4
      0053B0 A3               [24]15814 	inc	dptr
      0053B1 F0               [24]15815 	movx	@dptr,a
      0053B2 80 5B            [24]15816 	sjmp	00138$
      0053B4                      15817 00137$:
                           0053B4 15818 	C$ff.c$3081$4_0$230 ==.
                                  15819 ;	FATFS\src\ff.c:3081: clst = fp->sclust;						/* start from the first cluster */
      0053B4 90r01r64         [24]15820 	mov	dptr,#_f_lseek_fp_65536_213
      0053B7 E0               [24]15821 	movx	a,@dptr
      0053B8 FD               [12]15822 	mov	r5,a
      0053B9 A3               [24]15823 	inc	dptr
      0053BA E0               [24]15824 	movx	a,@dptr
      0053BB FE               [12]15825 	mov	r6,a
      0053BC A3               [24]15826 	inc	dptr
      0053BD E0               [24]15827 	movx	a,@dptr
      0053BE FF               [12]15828 	mov	r7,a
      0053BF 74 0F            [12]15829 	mov	a,#0x0f
      0053C1 2D               [12]15830 	add	a,r5
      0053C2 FC               [12]15831 	mov	r4,a
      0053C3 E4               [12]15832 	clr	a
      0053C4 3E               [12]15833 	addc	a,r6
      0053C5 FA               [12]15834 	mov	r2,a
      0053C6 8F 03            [24]15835 	mov	ar3,r7
      0053C8 8C 82            [24]15836 	mov	dpl,r4
      0053CA 8A 83            [24]15837 	mov	dph,r2
      0053CC 8B F0            [24]15838 	mov	b,r3
      0053CE 12r00r00         [24]15839 	lcall	__gptrget
      0053D1 F9               [12]15840 	mov	r1,a
      0053D2 A3               [24]15841 	inc	dptr
      0053D3 12r00r00         [24]15842 	lcall	__gptrget
      0053D6 FA               [12]15843 	mov	r2,a
      0053D7 A3               [24]15844 	inc	dptr
      0053D8 12r00r00         [24]15845 	lcall	__gptrget
      0053DB FB               [12]15846 	mov	r3,a
      0053DC A3               [24]15847 	inc	dptr
      0053DD 12r00r00         [24]15848 	lcall	__gptrget
      0053E0 FC               [12]15849 	mov	r4,a
      0053E1 90r01r7B         [24]15850 	mov	dptr,#_f_lseek_clst_131072_227
      0053E4 E9               [12]15851 	mov	a,r1
      0053E5 F0               [24]15852 	movx	@dptr,a
      0053E6 EA               [12]15853 	mov	a,r2
      0053E7 A3               [24]15854 	inc	dptr
      0053E8 F0               [24]15855 	movx	@dptr,a
      0053E9 EB               [12]15856 	mov	a,r3
      0053EA A3               [24]15857 	inc	dptr
      0053EB F0               [24]15858 	movx	@dptr,a
      0053EC EC               [12]15859 	mov	a,r4
      0053ED A3               [24]15860 	inc	dptr
      0053EE F0               [24]15861 	movx	@dptr,a
                           0053EF 15862 	C$ff.c$3090$4_0$230 ==.
                                  15863 ;	FATFS\src\ff.c:3090: fp->clust = clst;
      0053EF 74 13            [12]15864 	mov	a,#0x13
      0053F1 2D               [12]15865 	add	a,r5
      0053F2 FD               [12]15866 	mov	r5,a
      0053F3 E4               [12]15867 	clr	a
      0053F4 3E               [12]15868 	addc	a,r6
      0053F5 FE               [12]15869 	mov	r6,a
      0053F6 8D 82            [24]15870 	mov	dpl,r5
      0053F8 8E 83            [24]15871 	mov	dph,r6
      0053FA 8F F0            [24]15872 	mov	b,r7
      0053FC E9               [12]15873 	mov	a,r1
      0053FD 12r00r00         [24]15874 	lcall	__gptrput
      005400 A3               [24]15875 	inc	dptr
      005401 EA               [12]15876 	mov	a,r2
      005402 12r00r00         [24]15877 	lcall	__gptrput
      005405 A3               [24]15878 	inc	dptr
      005406 EB               [12]15879 	mov	a,r3
      005407 12r00r00         [24]15880 	lcall	__gptrput
      00540A A3               [24]15881 	inc	dptr
      00540B EC               [12]15882 	mov	a,r4
      00540C 12r00r00         [24]15883 	lcall	__gptrput
      00540F                      15884 00138$:
                           00540F 15885 	C$ff.c$3092$3_0$228 ==.
                                  15886 ;	FATFS\src\ff.c:3092: if (clst != 0) {
      00540F 90r01r7B         [24]15887 	mov	dptr,#_f_lseek_clst_131072_227
      005412 E0               [24]15888 	movx	a,@dptr
      005413 F5 F0            [12]15889 	mov	b,a
      005415 A3               [24]15890 	inc	dptr
      005416 E0               [24]15891 	movx	a,@dptr
      005417 42 F0            [12]15892 	orl	b,a
      005419 A3               [24]15893 	inc	dptr
      00541A E0               [24]15894 	movx	a,@dptr
      00541B 42 F0            [12]15895 	orl	b,a
      00541D A3               [24]15896 	inc	dptr
      00541E E0               [24]15897 	movx	a,@dptr
      00541F 45 F0            [12]15898 	orl	a,b
      005421 70 03            [24]15899 	jnz	00305$
      005423 02r57r3C         [24]15900 	ljmp	00155$
      005426                      15901 00305$:
                           005426 15902 	C$ff.c$3093$4_0$231 ==.
                                  15903 ;	FATFS\src\ff.c:3093: while (ofs > bcs) {						/* Cluster following loop */
      005426                      15904 00145$:
      005426 90r01r60         [24]15905 	mov	dptr,#_f_lseek_PARM_2
      005429 E0               [24]15906 	movx	a,@dptr
      00542A FC               [12]15907 	mov	r4,a
      00542B A3               [24]15908 	inc	dptr
      00542C E0               [24]15909 	movx	a,@dptr
      00542D FD               [12]15910 	mov	r5,a
      00542E A3               [24]15911 	inc	dptr
      00542F E0               [24]15912 	movx	a,@dptr
      005430 FE               [12]15913 	mov	r6,a
      005431 A3               [24]15914 	inc	dptr
      005432 E0               [24]15915 	movx	a,@dptr
      005433 FF               [12]15916 	mov	r7,a
      005434 C3               [12]15917 	clr	c
      005435 E5*EB            [12]15918 	mov	a,_f_lseek_sloc3_1_0
      005437 9C               [12]15919 	subb	a,r4
      005438 E5*EC            [12]15920 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      00543A 9D               [12]15921 	subb	a,r5
      00543B E5*ED            [12]15922 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      00543D 9E               [12]15923 	subb	a,r6
      00543E E5*EE            [12]15924 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      005440 9F               [12]15925 	subb	a,r7
      005441 40 03            [24]15926 	jc	00306$
      005443 02r56r20         [24]15927 	ljmp	00147$
      005446                      15928 00306$:
                           005446 15929 	C$ff.c$3102$1_0$214 ==.
                                  15930 ;	FATFS\src\ff.c:3102: clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
      005446 C0 04            [24]15931 	push	ar4
      005448 C0 05            [24]15932 	push	ar5
      00544A C0 06            [24]15933 	push	ar6
      00544C C0 07            [24]15934 	push	ar7
      00544E 90r01r64         [24]15935 	mov	dptr,#_f_lseek_fp_65536_213
      005451 E0               [24]15936 	movx	a,@dptr
      005452 F5*F3            [12]15937 	mov	_f_lseek_sloc5_1_0,a
      005454 A3               [24]15938 	inc	dptr
      005455 E0               [24]15939 	movx	a,@dptr
      005456 F5*F4            [12]15940 	mov	(_f_lseek_sloc5_1_0 + 1),a
      005458 A3               [24]15941 	inc	dptr
      005459 E0               [24]15942 	movx	a,@dptr
      00545A F5*F5            [12]15943 	mov	(_f_lseek_sloc5_1_0 + 2),a
      00545C 85*F3 82         [24]15944 	mov	dpl,_f_lseek_sloc5_1_0
      00545F 85*F4 83         [24]15945 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005462 85*F5 F0         [24]15946 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      005465 12r00r00         [24]15947 	lcall	__gptrget
      005468 F5*F6            [12]15948 	mov	_f_lseek_sloc6_1_0,a
      00546A A3               [24]15949 	inc	dptr
      00546B 12r00r00         [24]15950 	lcall	__gptrget
      00546E F5*F7            [12]15951 	mov	(_f_lseek_sloc6_1_0 + 1),a
      005470 A3               [24]15952 	inc	dptr
      005471 12r00r00         [24]15953 	lcall	__gptrget
      005474 F5*F8            [12]15954 	mov	(_f_lseek_sloc6_1_0 + 2),a
      005476 90r01r7B         [24]15955 	mov	dptr,#_f_lseek_clst_131072_227
      005479 E0               [24]15956 	movx	a,@dptr
      00547A FC               [12]15957 	mov	r4,a
      00547B A3               [24]15958 	inc	dptr
      00547C E0               [24]15959 	movx	a,@dptr
      00547D FD               [12]15960 	mov	r5,a
      00547E A3               [24]15961 	inc	dptr
      00547F E0               [24]15962 	movx	a,@dptr
      005480 FE               [12]15963 	mov	r6,a
      005481 A3               [24]15964 	inc	dptr
      005482 E0               [24]15965 	movx	a,@dptr
      005483 FF               [12]15966 	mov	r7,a
      005484 90r00r34         [24]15967 	mov	dptr,#_get_fat_PARM_2
      005487 EC               [12]15968 	mov	a,r4
      005488 F0               [24]15969 	movx	@dptr,a
      005489 ED               [12]15970 	mov	a,r5
      00548A A3               [24]15971 	inc	dptr
      00548B F0               [24]15972 	movx	@dptr,a
      00548C EE               [12]15973 	mov	a,r6
      00548D A3               [24]15974 	inc	dptr
      00548E F0               [24]15975 	movx	@dptr,a
      00548F EF               [12]15976 	mov	a,r7
      005490 A3               [24]15977 	inc	dptr
      005491 F0               [24]15978 	movx	@dptr,a
      005492 85*F6 82         [24]15979 	mov	dpl,_f_lseek_sloc6_1_0
      005495 85*F7 83         [24]15980 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      005498 85*F8 F0         [24]15981 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      00549B C0 07            [24]15982 	push	ar7
      00549D C0 06            [24]15983 	push	ar6
      00549F C0 05            [24]15984 	push	ar5
      0054A1 C0 04            [24]15985 	push	ar4
      0054A3 78rA5            [12]15986 	mov	r0,#_get_fat
      0054A5 79s03            [12]15987 	mov	r1,#(_get_fat >> 8)
      0054A7 7As00            [12]15988 	mov	r2,#(_get_fat >> 16)
      0054A9 12r00r00         [24]15989 	lcall	__sdcc_banked_call
      0054AC 85 82*F6         [24]15990 	mov	_f_lseek_sloc6_1_0,dpl
      0054AF 85 83*F7         [24]15991 	mov	(_f_lseek_sloc6_1_0 + 1),dph
      0054B2 85 F0*F8         [24]15992 	mov	(_f_lseek_sloc6_1_0 + 2),b
      0054B5 F5*F9            [12]15993 	mov	(_f_lseek_sloc6_1_0 + 3),a
      0054B7 D0 04            [24]15994 	pop	ar4
      0054B9 D0 05            [24]15995 	pop	ar5
      0054BB D0 06            [24]15996 	pop	ar6
      0054BD D0 07            [24]15997 	pop	ar7
      0054BF 90r01r7B         [24]15998 	mov	dptr,#_f_lseek_clst_131072_227
      0054C2 E5*F6            [12]15999 	mov	a,_f_lseek_sloc6_1_0
      0054C4 F0               [24]16000 	movx	@dptr,a
      0054C5 E5*F7            [12]16001 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      0054C7 A3               [24]16002 	inc	dptr
      0054C8 F0               [24]16003 	movx	@dptr,a
      0054C9 E5*F8            [12]16004 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      0054CB A3               [24]16005 	inc	dptr
      0054CC F0               [24]16006 	movx	@dptr,a
      0054CD E5*F9            [12]16007 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      0054CF A3               [24]16008 	inc	dptr
      0054D0 F0               [24]16009 	movx	@dptr,a
                           0054D1 16010 	C$ff.c$3103$5_0$232 ==.
                                  16011 ;	FATFS\src\ff.c:3103: if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
      0054D1 74 FF            [12]16012 	mov	a,#0xff
      0054D3 B5*F6 0B         [24]16013 	cjne	a,_f_lseek_sloc6_1_0,00307$
      0054D6 B5*F7 08         [24]16014 	cjne	a,(_f_lseek_sloc6_1_0 + 1),00307$
      0054D9 B5*F8 05         [24]16015 	cjne	a,(_f_lseek_sloc6_1_0 + 2),00307$
      0054DC B5*F9 02         [24]16016 	cjne	a,(_f_lseek_sloc6_1_0 + 3),00307$
      0054DF 80 0A            [24]16017 	sjmp	00308$
      0054E1                      16018 00307$:
      0054E1 D0 07            [24]16019 	pop	ar7
      0054E3 D0 06            [24]16020 	pop	ar6
      0054E5 D0 05            [24]16021 	pop	ar5
      0054E7 D0 04            [24]16022 	pop	ar4
      0054E9 80 24            [24]16023 	sjmp	00141$
      0054EB                      16024 00308$:
      0054EB D0 07            [24]16025 	pop	ar7
      0054ED D0 06            [24]16026 	pop	ar6
      0054EF D0 05            [24]16027 	pop	ar5
      0054F1 D0 04            [24]16028 	pop	ar4
      0054F3 74 06            [12]16029 	mov	a,#0x06
      0054F5 25*F3            [12]16030 	add	a,_f_lseek_sloc5_1_0
      0054F7 F8               [12]16031 	mov	r0,a
      0054F8 E4               [12]16032 	clr	a
      0054F9 35*F4            [12]16033 	addc	a,(_f_lseek_sloc5_1_0 + 1)
      0054FB FA               [12]16034 	mov	r2,a
      0054FC AB*F5            [24]16035 	mov	r3,(_f_lseek_sloc5_1_0 + 2)
      0054FE 88 82            [24]16036 	mov	dpl,r0
      005500 8A 83            [24]16037 	mov	dph,r2
      005502 8B F0            [24]16038 	mov	b,r3
      005504 74 01            [12]16039 	mov	a,#0x01
      005506 12r00r00         [24]16040 	lcall	__gptrput
      005509 75 82 01         [24]16041 	mov	dpl,#0x01
      00550C 02r00r00         [24]16042 	ljmp	__sdcc_banked_ret
      00550F                      16043 00141$:
                           00550F 16044 	C$ff.c$3104$5_0$232 ==.
                                  16045 ;	FATFS\src\ff.c:3104: if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
      00550F C3               [12]16046 	clr	c
      005510 74 01            [12]16047 	mov	a,#0x01
      005512 95*F6            [12]16048 	subb	a,_f_lseek_sloc6_1_0
      005514 E4               [12]16049 	clr	a
      005515 95*F7            [12]16050 	subb	a,(_f_lseek_sloc6_1_0 + 1)
      005517 E4               [12]16051 	clr	a
      005518 95*F8            [12]16052 	subb	a,(_f_lseek_sloc6_1_0 + 2)
      00551A E4               [12]16053 	clr	a
      00551B 95*F9            [12]16054 	subb	a,(_f_lseek_sloc6_1_0 + 3)
      00551D 50 46            [24]16055 	jnc	00142$
      00551F 85*F3 82         [24]16056 	mov	dpl,_f_lseek_sloc5_1_0
      005522 85*F4 83         [24]16057 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005525 85*F5 F0         [24]16058 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      005528 12r00r00         [24]16059 	lcall	__gptrget
      00552B FB               [12]16060 	mov	r3,a
      00552C A3               [24]16061 	inc	dptr
      00552D 12r00r00         [24]16062 	lcall	__gptrget
      005530 F9               [12]16063 	mov	r1,a
      005531 A3               [24]16064 	inc	dptr
      005532 12r00r00         [24]16065 	lcall	__gptrget
      005535 FA               [12]16066 	mov	r2,a
      005536 74 0A            [12]16067 	mov	a,#0x0a
      005538 2B               [12]16068 	add	a,r3
      005539 FB               [12]16069 	mov	r3,a
      00553A E4               [12]16070 	clr	a
      00553B 39               [12]16071 	addc	a,r1
      00553C F9               [12]16072 	mov	r1,a
      00553D 8B 82            [24]16073 	mov	dpl,r3
      00553F 89 83            [24]16074 	mov	dph,r1
      005541 8A F0            [24]16075 	mov	b,r2
      005543 12r00r00         [24]16076 	lcall	__gptrget
      005546 F8               [12]16077 	mov	r0,a
      005547 A3               [24]16078 	inc	dptr
      005548 12r00r00         [24]16079 	lcall	__gptrget
      00554B F9               [12]16080 	mov	r1,a
      00554C A3               [24]16081 	inc	dptr
      00554D 12r00r00         [24]16082 	lcall	__gptrget
      005550 FA               [12]16083 	mov	r2,a
      005551 A3               [24]16084 	inc	dptr
      005552 12r00r00         [24]16085 	lcall	__gptrget
      005555 FB               [12]16086 	mov	r3,a
      005556 C3               [12]16087 	clr	c
      005557 E5*F6            [12]16088 	mov	a,_f_lseek_sloc6_1_0
      005559 98               [12]16089 	subb	a,r0
      00555A E5*F7            [12]16090 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      00555C 99               [12]16091 	subb	a,r1
      00555D E5*F8            [12]16092 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      00555F 9A               [12]16093 	subb	a,r2
      005560 E5*F9            [12]16094 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      005562 9B               [12]16095 	subb	a,r3
      005563 40 23            [24]16096 	jc	00143$
      005565                      16097 00142$:
      005565 90r01r64         [24]16098 	mov	dptr,#_f_lseek_fp_65536_213
      005568 E0               [24]16099 	movx	a,@dptr
      005569 F9               [12]16100 	mov	r1,a
      00556A A3               [24]16101 	inc	dptr
      00556B E0               [24]16102 	movx	a,@dptr
      00556C FA               [12]16103 	mov	r2,a
      00556D A3               [24]16104 	inc	dptr
      00556E E0               [24]16105 	movx	a,@dptr
      00556F FB               [12]16106 	mov	r3,a
      005570 74 06            [12]16107 	mov	a,#0x06
      005572 29               [12]16108 	add	a,r1
      005573 F9               [12]16109 	mov	r1,a
      005574 E4               [12]16110 	clr	a
      005575 3A               [12]16111 	addc	a,r2
      005576 FA               [12]16112 	mov	r2,a
      005577 89 82            [24]16113 	mov	dpl,r1
      005579 8A 83            [24]16114 	mov	dph,r2
      00557B 8B F0            [24]16115 	mov	b,r3
      00557D 74 02            [12]16116 	mov	a,#0x02
      00557F 12r00r00         [24]16117 	lcall	__gptrput
      005582 75 82 02         [24]16118 	mov	dpl,#0x02
      005585 02r00r00         [24]16119 	ljmp	__sdcc_banked_ret
      005588                      16120 00143$:
                           005588 16121 	C$ff.c$3105$5_0$232 ==.
                                  16122 ;	FATFS\src\ff.c:3105: fp->clust = clst;
      005588 74 13            [12]16123 	mov	a,#0x13
      00558A 25*F3            [12]16124 	add	a,_f_lseek_sloc5_1_0
      00558C F9               [12]16125 	mov	r1,a
      00558D E4               [12]16126 	clr	a
      00558E 35*F4            [12]16127 	addc	a,(_f_lseek_sloc5_1_0 + 1)
      005590 FA               [12]16128 	mov	r2,a
      005591 AB*F5            [24]16129 	mov	r3,(_f_lseek_sloc5_1_0 + 2)
      005593 89 82            [24]16130 	mov	dpl,r1
      005595 8A 83            [24]16131 	mov	dph,r2
      005597 8B F0            [24]16132 	mov	b,r3
      005599 E5*F6            [12]16133 	mov	a,_f_lseek_sloc6_1_0
      00559B 12r00r00         [24]16134 	lcall	__gptrput
      00559E A3               [24]16135 	inc	dptr
      00559F E5*F7            [12]16136 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      0055A1 12r00r00         [24]16137 	lcall	__gptrput
      0055A4 A3               [24]16138 	inc	dptr
      0055A5 E5*F8            [12]16139 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      0055A7 12r00r00         [24]16140 	lcall	__gptrput
      0055AA A3               [24]16141 	inc	dptr
      0055AB E5*F9            [12]16142 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      0055AD 12r00r00         [24]16143 	lcall	__gptrput
                           0055B0 16144 	C$ff.c$3106$5_0$232 ==.
                                  16145 ;	FATFS\src\ff.c:3106: fp->fptr += bcs;
      0055B0 74 07            [12]16146 	mov	a,#0x07
      0055B2 25*F3            [12]16147 	add	a,_f_lseek_sloc5_1_0
      0055B4 F5*F6            [12]16148 	mov	_f_lseek_sloc6_1_0,a
      0055B6 E4               [12]16149 	clr	a
      0055B7 35*F4            [12]16150 	addc	a,(_f_lseek_sloc5_1_0 + 1)
      0055B9 F5*F7            [12]16151 	mov	(_f_lseek_sloc6_1_0 + 1),a
      0055BB 85*F5*F8         [24]16152 	mov	(_f_lseek_sloc6_1_0 + 2),(_f_lseek_sloc5_1_0 + 2)
      0055BE 85*F6 82         [24]16153 	mov	dpl,_f_lseek_sloc6_1_0
      0055C1 85*F7 83         [24]16154 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      0055C4 85*F8 F0         [24]16155 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      0055C7 12r00r00         [24]16156 	lcall	__gptrget
      0055CA F9               [12]16157 	mov	r1,a
      0055CB A3               [24]16158 	inc	dptr
      0055CC 12r00r00         [24]16159 	lcall	__gptrget
      0055CF FA               [12]16160 	mov	r2,a
      0055D0 A3               [24]16161 	inc	dptr
      0055D1 12r00r00         [24]16162 	lcall	__gptrget
      0055D4 F8               [12]16163 	mov	r0,a
      0055D5 A3               [24]16164 	inc	dptr
      0055D6 12r00r00         [24]16165 	lcall	__gptrget
      0055D9 FB               [12]16166 	mov	r3,a
      0055DA E5*EB            [12]16167 	mov	a,_f_lseek_sloc3_1_0
      0055DC 29               [12]16168 	add	a,r1
      0055DD F9               [12]16169 	mov	r1,a
      0055DE E5*EC            [12]16170 	mov	a,(_f_lseek_sloc3_1_0 + 1)
      0055E0 3A               [12]16171 	addc	a,r2
      0055E1 FA               [12]16172 	mov	r2,a
      0055E2 E5*ED            [12]16173 	mov	a,(_f_lseek_sloc3_1_0 + 2)
      0055E4 38               [12]16174 	addc	a,r0
      0055E5 F8               [12]16175 	mov	r0,a
      0055E6 E5*EE            [12]16176 	mov	a,(_f_lseek_sloc3_1_0 + 3)
      0055E8 3B               [12]16177 	addc	a,r3
      0055E9 FB               [12]16178 	mov	r3,a
      0055EA 85*F6 82         [24]16179 	mov	dpl,_f_lseek_sloc6_1_0
      0055ED 85*F7 83         [24]16180 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      0055F0 85*F8 F0         [24]16181 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      0055F3 E9               [12]16182 	mov	a,r1
      0055F4 12r00r00         [24]16183 	lcall	__gptrput
      0055F7 A3               [24]16184 	inc	dptr
      0055F8 EA               [12]16185 	mov	a,r2
      0055F9 12r00r00         [24]16186 	lcall	__gptrput
      0055FC A3               [24]16187 	inc	dptr
      0055FD E8               [12]16188 	mov	a,r0
      0055FE 12r00r00         [24]16189 	lcall	__gptrput
      005601 A3               [24]16190 	inc	dptr
      005602 EB               [12]16191 	mov	a,r3
      005603 12r00r00         [24]16192 	lcall	__gptrput
                           005606 16193 	C$ff.c$3107$5_0$232 ==.
                                  16194 ;	FATFS\src\ff.c:3107: ofs -= bcs;
      005606 90r01r60         [24]16195 	mov	dptr,#_f_lseek_PARM_2
      005609 EC               [12]16196 	mov	a,r4
      00560A C3               [12]16197 	clr	c
      00560B 95*EB            [12]16198 	subb	a,_f_lseek_sloc3_1_0
      00560D F0               [24]16199 	movx	@dptr,a
      00560E ED               [12]16200 	mov	a,r5
      00560F 95*EC            [12]16201 	subb	a,(_f_lseek_sloc3_1_0 + 1)
      005611 A3               [24]16202 	inc	dptr
      005612 F0               [24]16203 	movx	@dptr,a
      005613 EE               [12]16204 	mov	a,r6
      005614 95*ED            [12]16205 	subb	a,(_f_lseek_sloc3_1_0 + 2)
      005616 A3               [24]16206 	inc	dptr
      005617 F0               [24]16207 	movx	@dptr,a
      005618 EF               [12]16208 	mov	a,r7
      005619 95*EE            [12]16209 	subb	a,(_f_lseek_sloc3_1_0 + 3)
      00561B A3               [24]16210 	inc	dptr
      00561C F0               [24]16211 	movx	@dptr,a
      00561D 02r54r26         [24]16212 	ljmp	00145$
      005620                      16213 00147$:
                           005620 16214 	C$ff.c$3109$4_0$231 ==.
                                  16215 ;	FATFS\src\ff.c:3109: fp->fptr += ofs;
      005620 90r01r64         [24]16216 	mov	dptr,#_f_lseek_fp_65536_213
      005623 E0               [24]16217 	movx	a,@dptr
      005624 F5*F6            [12]16218 	mov	_f_lseek_sloc6_1_0,a
      005626 A3               [24]16219 	inc	dptr
      005627 E0               [24]16220 	movx	a,@dptr
      005628 F5*F7            [12]16221 	mov	(_f_lseek_sloc6_1_0 + 1),a
      00562A A3               [24]16222 	inc	dptr
      00562B E0               [24]16223 	movx	a,@dptr
      00562C F5*F8            [12]16224 	mov	(_f_lseek_sloc6_1_0 + 2),a
      00562E 74 07            [12]16225 	mov	a,#0x07
      005630 25*F6            [12]16226 	add	a,_f_lseek_sloc6_1_0
      005632 F5*F3            [12]16227 	mov	_f_lseek_sloc5_1_0,a
      005634 E4               [12]16228 	clr	a
      005635 35*F7            [12]16229 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      005637 F5*F4            [12]16230 	mov	(_f_lseek_sloc5_1_0 + 1),a
      005639 85*F8*F5         [24]16231 	mov	(_f_lseek_sloc5_1_0 + 2),(_f_lseek_sloc6_1_0 + 2)
      00563C 85*F3 82         [24]16232 	mov	dpl,_f_lseek_sloc5_1_0
      00563F 85*F4 83         [24]16233 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      005642 85*F5 F0         [24]16234 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      005645 12r00r00         [24]16235 	lcall	__gptrget
      005648 F8               [12]16236 	mov	r0,a
      005649 A3               [24]16237 	inc	dptr
      00564A 12r00r00         [24]16238 	lcall	__gptrget
      00564D FA               [12]16239 	mov	r2,a
      00564E A3               [24]16240 	inc	dptr
      00564F 12r00r00         [24]16241 	lcall	__gptrget
      005652 F9               [12]16242 	mov	r1,a
      005653 A3               [24]16243 	inc	dptr
      005654 12r00r00         [24]16244 	lcall	__gptrget
      005657 FB               [12]16245 	mov	r3,a
      005658 EC               [12]16246 	mov	a,r4
      005659 28               [12]16247 	add	a,r0
      00565A F8               [12]16248 	mov	r0,a
      00565B ED               [12]16249 	mov	a,r5
      00565C 3A               [12]16250 	addc	a,r2
      00565D FA               [12]16251 	mov	r2,a
      00565E EE               [12]16252 	mov	a,r6
      00565F 39               [12]16253 	addc	a,r1
      005660 F9               [12]16254 	mov	r1,a
      005661 EF               [12]16255 	mov	a,r7
      005662 3B               [12]16256 	addc	a,r3
      005663 FB               [12]16257 	mov	r3,a
      005664 85*F3 82         [24]16258 	mov	dpl,_f_lseek_sloc5_1_0
      005667 85*F4 83         [24]16259 	mov	dph,(_f_lseek_sloc5_1_0 + 1)
      00566A 85*F5 F0         [24]16260 	mov	b,(_f_lseek_sloc5_1_0 + 2)
      00566D E8               [12]16261 	mov	a,r0
      00566E 12r00r00         [24]16262 	lcall	__gptrput
      005671 A3               [24]16263 	inc	dptr
      005672 EA               [12]16264 	mov	a,r2
      005673 12r00r00         [24]16265 	lcall	__gptrput
      005676 A3               [24]16266 	inc	dptr
      005677 E9               [12]16267 	mov	a,r1
      005678 12r00r00         [24]16268 	lcall	__gptrput
      00567B A3               [24]16269 	inc	dptr
      00567C EB               [12]16270 	mov	a,r3
      00567D 12r00r00         [24]16271 	lcall	__gptrput
                           005680 16272 	C$ff.c$3110$4_0$231 ==.
                                  16273 ;	FATFS\src\ff.c:3110: if (ofs % SS(fp->fs)) {
      005680 EC               [12]16274 	mov	a,r4
      005681 70 07            [24]16275 	jnz	00311$
      005683 ED               [12]16276 	mov	a,r5
      005684 20 E0 03         [24]16277 	jb	acc.0,00311$
      005687 02r57r3C         [24]16278 	ljmp	00155$
      00568A                      16279 00311$:
                           00568A 16280 	C$ff.c$3111$1_0$214 ==.
                                  16281 ;	FATFS\src\ff.c:3111: nsect = clust2sect(fp->fs, clst);	/* Current sector */
      00568A C0 04            [24]16282 	push	ar4
      00568C C0 05            [24]16283 	push	ar5
      00568E C0 06            [24]16284 	push	ar6
      005690 C0 07            [24]16285 	push	ar7
      005692 85*F6 82         [24]16286 	mov	dpl,_f_lseek_sloc6_1_0
      005695 85*F7 83         [24]16287 	mov	dph,(_f_lseek_sloc6_1_0 + 1)
      005698 85*F8 F0         [24]16288 	mov	b,(_f_lseek_sloc6_1_0 + 2)
      00569B 12r00r00         [24]16289 	lcall	__gptrget
      00569E F9               [12]16290 	mov	r1,a
      00569F A3               [24]16291 	inc	dptr
      0056A0 12r00r00         [24]16292 	lcall	__gptrget
      0056A3 FA               [12]16293 	mov	r2,a
      0056A4 A3               [24]16294 	inc	dptr
      0056A5 12r00r00         [24]16295 	lcall	__gptrget
      0056A8 FB               [12]16296 	mov	r3,a
      0056A9 90r01r7B         [24]16297 	mov	dptr,#_f_lseek_clst_131072_227
      0056AC E0               [24]16298 	movx	a,@dptr
      0056AD F8               [12]16299 	mov	r0,a
      0056AE A3               [24]16300 	inc	dptr
      0056AF E0               [24]16301 	movx	a,@dptr
      0056B0 FD               [12]16302 	mov	r5,a
      0056B1 A3               [24]16303 	inc	dptr
      0056B2 E0               [24]16304 	movx	a,@dptr
      0056B3 FE               [12]16305 	mov	r6,a
      0056B4 A3               [24]16306 	inc	dptr
      0056B5 E0               [24]16307 	movx	a,@dptr
      0056B6 FF               [12]16308 	mov	r7,a
      0056B7 90r00r2D         [24]16309 	mov	dptr,#_clust2sect_PARM_2
      0056BA E8               [12]16310 	mov	a,r0
      0056BB F0               [24]16311 	movx	@dptr,a
      0056BC ED               [12]16312 	mov	a,r5
      0056BD A3               [24]16313 	inc	dptr
      0056BE F0               [24]16314 	movx	@dptr,a
      0056BF EE               [12]16315 	mov	a,r6
      0056C0 A3               [24]16316 	inc	dptr
      0056C1 F0               [24]16317 	movx	@dptr,a
      0056C2 EF               [12]16318 	mov	a,r7
      0056C3 A3               [24]16319 	inc	dptr
      0056C4 F0               [24]16320 	movx	@dptr,a
      0056C5 89 82            [24]16321 	mov	dpl,r1
      0056C7 8A 83            [24]16322 	mov	dph,r2
      0056C9 8B F0            [24]16323 	mov	b,r3
      0056CB C0 07            [24]16324 	push	ar7
      0056CD C0 06            [24]16325 	push	ar6
      0056CF C0 05            [24]16326 	push	ar5
      0056D1 C0 04            [24]16327 	push	ar4
      0056D3 78r90            [12]16328 	mov	r0,#_clust2sect
      0056D5 79s02            [12]16329 	mov	r1,#(_clust2sect >> 8)
      0056D7 7As00            [12]16330 	mov	r2,#(_clust2sect >> 16)
      0056D9 12r00r00         [24]16331 	lcall	__sdcc_banked_call
      0056DC 85 82*EF         [24]16332 	mov	_f_lseek_sloc4_1_0,dpl
      0056DF 85 83*F0         [24]16333 	mov	(_f_lseek_sloc4_1_0 + 1),dph
      0056E2 85 F0*F1         [24]16334 	mov	(_f_lseek_sloc4_1_0 + 2),b
      0056E5 F5*F2            [12]16335 	mov	(_f_lseek_sloc4_1_0 + 3),a
      0056E7 D0 04            [24]16336 	pop	ar4
      0056E9 D0 05            [24]16337 	pop	ar5
      0056EB D0 06            [24]16338 	pop	ar6
      0056ED D0 07            [24]16339 	pop	ar7
                           0056EF 16340 	C$ff.c$3112$1_0$214 ==.
                                  16341 ;	FATFS\src\ff.c:3112: if (!nsect) ABORT(fp->fs, FR_INT_ERR);
      0056EF D0 07            [24]16342 	pop	ar7
      0056F1 D0 06            [24]16343 	pop	ar6
      0056F3 D0 05            [24]16344 	pop	ar5
      0056F5 D0 04            [24]16345 	pop	ar4
      0056F7 E5*EF            [12]16346 	mov	a,_f_lseek_sloc4_1_0
      0056F9 45*F0            [12]16347 	orl	a,(_f_lseek_sloc4_1_0 + 1)
      0056FB 45*F1            [12]16348 	orl	a,(_f_lseek_sloc4_1_0 + 2)
      0056FD 45*F2            [12]16349 	orl	a,(_f_lseek_sloc4_1_0 + 3)
      0056FF 70 1C            [24]16350 	jnz	00149$
      005701 74 06            [12]16351 	mov	a,#0x06
      005703 25*F6            [12]16352 	add	a,_f_lseek_sloc6_1_0
      005705 F9               [12]16353 	mov	r1,a
      005706 E4               [12]16354 	clr	a
      005707 35*F7            [12]16355 	addc	a,(_f_lseek_sloc6_1_0 + 1)
      005709 FA               [12]16356 	mov	r2,a
      00570A AB*F8            [24]16357 	mov	r3,(_f_lseek_sloc6_1_0 + 2)
      00570C 89 82            [24]16358 	mov	dpl,r1
      00570E 8A 83            [24]16359 	mov	dph,r2
      005710 8B F0            [24]16360 	mov	b,r3
      005712 74 02            [12]16361 	mov	a,#0x02
      005714 12r00r00         [24]16362 	lcall	__gptrput
      005717 75 82 02         [24]16363 	mov	dpl,#0x02
      00571A 02r00r00         [24]16364 	ljmp	__sdcc_banked_ret
      00571D                      16365 00149$:
                           00571D 16366 	C$ff.c$3113$5_0$235 ==.
                                  16367 ;	FATFS\src\ff.c:3113: nsect += ofs / SS(fp->fs);
      00571D EF               [12]16368 	mov	a,r7
      00571E 7F 00            [12]16369 	mov	r7,#0x00
      005720 C3               [12]16370 	clr	c
      005721 13               [12]16371 	rrc	a
      005722 CE               [12]16372 	xch	a,r6
      005723 13               [12]16373 	rrc	a
      005724 CD               [12]16374 	xch	a,r5
      005725 13               [12]16375 	rrc	a
      005726 FC               [12]16376 	mov	r4,a
      005727 90r01r7F         [24]16377 	mov	dptr,#_f_lseek_nsect_131072_227
      00572A 25*EF            [12]16378 	add	a,_f_lseek_sloc4_1_0
      00572C F0               [24]16379 	movx	@dptr,a
      00572D ED               [12]16380 	mov	a,r5
      00572E 35*F0            [12]16381 	addc	a,(_f_lseek_sloc4_1_0 + 1)
      005730 A3               [24]16382 	inc	dptr
      005731 F0               [24]16383 	movx	@dptr,a
      005732 EE               [12]16384 	mov	a,r6
      005733 35*F1            [12]16385 	addc	a,(_f_lseek_sloc4_1_0 + 2)
      005735 A3               [24]16386 	inc	dptr
      005736 F0               [24]16387 	movx	@dptr,a
      005737 EF               [12]16388 	mov	a,r7
      005738 35*F2            [12]16389 	addc	a,(_f_lseek_sloc4_1_0 + 3)
      00573A A3               [24]16390 	inc	dptr
      00573B F0               [24]16391 	movx	@dptr,a
      00573C                      16392 00155$:
                           00573C 16393 	C$ff.c$3117$2_0$227 ==.
                                  16394 ;	FATFS\src\ff.c:3117: if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
      00573C 90r01r64         [24]16395 	mov	dptr,#_f_lseek_fp_65536_213
      00573F E0               [24]16396 	movx	a,@dptr
      005740 FD               [12]16397 	mov	r5,a
      005741 A3               [24]16398 	inc	dptr
      005742 E0               [24]16399 	movx	a,@dptr
      005743 FE               [12]16400 	mov	r6,a
      005744 A3               [24]16401 	inc	dptr
      005745 E0               [24]16402 	movx	a,@dptr
      005746 FF               [12]16403 	mov	r7,a
      005747 74 07            [12]16404 	mov	a,#0x07
      005749 2D               [12]16405 	add	a,r5
      00574A FC               [12]16406 	mov	r4,a
      00574B E4               [12]16407 	clr	a
      00574C 3E               [12]16408 	addc	a,r6
      00574D FA               [12]16409 	mov	r2,a
      00574E 8F 03            [24]16410 	mov	ar3,r7
      005750 8C 82            [24]16411 	mov	dpl,r4
      005752 8A 83            [24]16412 	mov	dph,r2
      005754 8B F0            [24]16413 	mov	b,r3
      005756 12r00r00         [24]16414 	lcall	__gptrget
      005759 F9               [12]16415 	mov	r1,a
      00575A A3               [24]16416 	inc	dptr
      00575B 12r00r00         [24]16417 	lcall	__gptrget
      00575E FA               [12]16418 	mov	r2,a
      00575F A3               [24]16419 	inc	dptr
      005760 12r00r00         [24]16420 	lcall	__gptrget
      005763 FB               [12]16421 	mov	r3,a
      005764 A3               [24]16422 	inc	dptr
      005765 12r00r00         [24]16423 	lcall	__gptrget
      005768 FC               [12]16424 	mov	r4,a
      005769 E9               [12]16425 	mov	a,r1
      00576A 70 04            [24]16426 	jnz	00313$
      00576C EA               [12]16427 	mov	a,r2
      00576D 30 E0 61         [24]16428 	jnb	acc.0,00161$
      005770                      16429 00313$:
      005770 74 17            [12]16430 	mov	a,#0x17
      005772 2D               [12]16431 	add	a,r5
      005773 FD               [12]16432 	mov	r5,a
      005774 E4               [12]16433 	clr	a
      005775 3E               [12]16434 	addc	a,r6
      005776 FE               [12]16435 	mov	r6,a
      005777 8D 82            [24]16436 	mov	dpl,r5
      005779 8E 83            [24]16437 	mov	dph,r6
      00577B 8F F0            [24]16438 	mov	b,r7
      00577D 12r00r00         [24]16439 	lcall	__gptrget
      005780 F9               [12]16440 	mov	r1,a
      005781 A3               [24]16441 	inc	dptr
      005782 12r00r00         [24]16442 	lcall	__gptrget
      005785 FA               [12]16443 	mov	r2,a
      005786 A3               [24]16444 	inc	dptr
      005787 12r00r00         [24]16445 	lcall	__gptrget
      00578A FB               [12]16446 	mov	r3,a
      00578B A3               [24]16447 	inc	dptr
      00578C 12r00r00         [24]16448 	lcall	__gptrget
      00578F FC               [12]16449 	mov	r4,a
      005790 90r01r7F         [24]16450 	mov	dptr,#_f_lseek_nsect_131072_227
      005793 E0               [24]16451 	movx	a,@dptr
      005794 F5*F6            [12]16452 	mov	_f_lseek_sloc6_1_0,a
      005796 A3               [24]16453 	inc	dptr
      005797 E0               [24]16454 	movx	a,@dptr
      005798 F5*F7            [12]16455 	mov	(_f_lseek_sloc6_1_0 + 1),a
      00579A A3               [24]16456 	inc	dptr
      00579B E0               [24]16457 	movx	a,@dptr
      00579C F5*F8            [12]16458 	mov	(_f_lseek_sloc6_1_0 + 2),a
      00579E A3               [24]16459 	inc	dptr
      00579F E0               [24]16460 	movx	a,@dptr
      0057A0 F5*F9            [12]16461 	mov	(_f_lseek_sloc6_1_0 + 3),a
      0057A2 E9               [12]16462 	mov	a,r1
      0057A3 B5*F6 0E         [24]16463 	cjne	a,_f_lseek_sloc6_1_0,00314$
      0057A6 EA               [12]16464 	mov	a,r2
      0057A7 B5*F7 0A         [24]16465 	cjne	a,(_f_lseek_sloc6_1_0 + 1),00314$
      0057AA EB               [12]16466 	mov	a,r3
      0057AB B5*F8 06         [24]16467 	cjne	a,(_f_lseek_sloc6_1_0 + 2),00314$
      0057AE EC               [12]16468 	mov	a,r4
      0057AF B5*F9 02         [24]16469 	cjne	a,(_f_lseek_sloc6_1_0 + 3),00314$
      0057B2 80 1D            [24]16470 	sjmp	00161$
      0057B4                      16471 00314$:
                           0057B4 16472 	C$ff.c$3129$3_0$237 ==.
                                  16473 ;	FATFS\src\ff.c:3129: fp->dsect = nsect;
      0057B4 8D 82            [24]16474 	mov	dpl,r5
      0057B6 8E 83            [24]16475 	mov	dph,r6
      0057B8 8F F0            [24]16476 	mov	b,r7
      0057BA E5*F6            [12]16477 	mov	a,_f_lseek_sloc6_1_0
      0057BC 12r00r00         [24]16478 	lcall	__gptrput
      0057BF A3               [24]16479 	inc	dptr
      0057C0 E5*F7            [12]16480 	mov	a,(_f_lseek_sloc6_1_0 + 1)
      0057C2 12r00r00         [24]16481 	lcall	__gptrput
      0057C5 A3               [24]16482 	inc	dptr
      0057C6 E5*F8            [12]16483 	mov	a,(_f_lseek_sloc6_1_0 + 2)
      0057C8 12r00r00         [24]16484 	lcall	__gptrput
      0057CB A3               [24]16485 	inc	dptr
      0057CC E5*F9            [12]16486 	mov	a,(_f_lseek_sloc6_1_0 + 3)
      0057CE 12r00r00         [24]16487 	lcall	__gptrput
      0057D1                      16488 00161$:
                           0057D1 16489 	C$ff.c$3139$1_0$214 ==.
                                  16490 ;	FATFS\src\ff.c:3139: LEAVE_FF(fp->fs, res);
      0057D1 90r01r67         [24]16491 	mov	dptr,#_f_lseek_res_65536_214
      0057D4 E0               [24]16492 	movx	a,@dptr
      0057D5 FF               [12]16493 	mov	r7,a
      0057D6 F5 82            [12]16494 	mov	dpl,a
                           0057D8 16495 	C$ff.c$3140$1_0$214 ==.
                                  16496 ;	FATFS\src\ff.c:3140: }
                           0057D8 16497 	C$ff.c$3140$1_0$214 ==.
                           0057D8 16498 	XG$f_lseek$0$0 ==.
      0057D8 02r00r00         [24]16499 	ljmp	__sdcc_banked_ret
                                  16500 ;------------------------------------------------------------
                                  16501 ;Allocation info for local variables in function 'f_opendir'
                                  16502 ;------------------------------------------------------------
                                  16503 ;sloc0                     Allocated with name '_f_opendir_sloc0_1_0'
                                  16504 ;path                      Allocated with name '_f_opendir_PARM_2'
                                  16505 ;dp                        Allocated with name '_f_opendir_dp_65536_238'
                                  16506 ;res                       Allocated with name '_f_opendir_res_65536_239'
                                  16507 ;fs                        Allocated with name '_f_opendir_fs_65536_239'
                                  16508 ;sfn                       Allocated with name '_f_opendir_sfn_65536_239'
                                  16509 ;lfn                       Allocated with name '_f_opendir_lfn_65536_239'
                                  16510 ;------------------------------------------------------------
                           0057DB 16511 	G$f_opendir$0$0 ==.
                           0057DB 16512 	C$ff.c$3149$1_0$239 ==.
                                  16513 ;	FATFS\src\ff.c:3149: FRESULT f_opendir (
                                  16514 ;	-----------------------------------------
                                  16515 ;	 function f_opendir
                                  16516 ;	-----------------------------------------
      0057DB                      16517 _f_opendir:
      0057DB AF F0            [24]16518 	mov	r7,b
      0057DD AE 83            [24]16519 	mov	r6,dph
      0057DF E5 82            [12]16520 	mov	a,dpl
      0057E1 90r01r86         [24]16521 	mov	dptr,#_f_opendir_dp_65536_238
      0057E4 F0               [24]16522 	movx	@dptr,a
      0057E5 EE               [12]16523 	mov	a,r6
      0057E6 A3               [24]16524 	inc	dptr
      0057E7 F0               [24]16525 	movx	@dptr,a
      0057E8 EF               [12]16526 	mov	a,r7
      0057E9 A3               [24]16527 	inc	dptr
      0057EA F0               [24]16528 	movx	@dptr,a
                           0057EB 16529 	C$ff.c$3159$1_0$239 ==.
                                  16530 ;	FATFS\src\ff.c:3159: if (!dp) return FR_INVALID_OBJECT;
      0057EB 90r01r86         [24]16531 	mov	dptr,#_f_opendir_dp_65536_238
      0057EE E0               [24]16532 	movx	a,@dptr
      0057EF FD               [12]16533 	mov	r5,a
      0057F0 A3               [24]16534 	inc	dptr
      0057F1 E0               [24]16535 	movx	a,@dptr
      0057F2 FE               [12]16536 	mov	r6,a
      0057F3 A3               [24]16537 	inc	dptr
      0057F4 E0               [24]16538 	movx	a,@dptr
      0057F5 FF               [12]16539 	mov	r7,a
      0057F6 ED               [12]16540 	mov	a,r5
      0057F7 4E               [12]16541 	orl	a,r6
      0057F8 70 06            [24]16542 	jnz	00102$
      0057FA 75 82 09         [24]16543 	mov	dpl,#0x09
      0057FD 02r00r00         [24]16544 	ljmp	__sdcc_banked_ret
      005800                      16545 00102$:
                           005800 16546 	C$ff.c$3162$1_0$239 ==.
                                  16547 ;	FATFS\src\ff.c:3162: res = find_volume(&fs, &path, 0);
      005800 90r00rDD         [24]16548 	mov	dptr,#_find_volume_PARM_2
      005803 74r83            [12]16549 	mov	a,#_f_opendir_PARM_2
      005805 F0               [24]16550 	movx	@dptr,a
      005806 74s01            [12]16551 	mov	a,#(_f_opendir_PARM_2 >> 8)
      005808 A3               [24]16552 	inc	dptr
      005809 F0               [24]16553 	movx	@dptr,a
      00580A E4               [12]16554 	clr	a
      00580B A3               [24]16555 	inc	dptr
      00580C F0               [24]16556 	movx	@dptr,a
      00580D 90r00rE0         [24]16557 	mov	dptr,#_find_volume_PARM_3
      005810 F0               [24]16558 	movx	@dptr,a
      005811 90r01r8A         [24]16559 	mov	dptr,#_f_opendir_fs_65536_239
      005814 75 F0 00         [24]16560 	mov	b,#0x00
      005817 C0 07            [24]16561 	push	ar7
      005819 C0 06            [24]16562 	push	ar6
      00581B C0 05            [24]16563 	push	ar5
      00581D 78rED            [12]16564 	mov	r0,#_find_volume
      00581F 79s30            [12]16565 	mov	r1,#(_find_volume >> 8)
      005821 7As00            [12]16566 	mov	r2,#(_find_volume >> 16)
      005823 12r00r00         [24]16567 	lcall	__sdcc_banked_call
      005826 AC 82            [24]16568 	mov	r4,dpl
      005828 D0 05            [24]16569 	pop	ar5
      00582A D0 06            [24]16570 	pop	ar6
      00582C D0 07            [24]16571 	pop	ar7
      00582E 90r01r89         [24]16572 	mov	dptr,#_f_opendir_res_65536_239
      005831 EC               [12]16573 	mov	a,r4
      005832 F0               [24]16574 	movx	@dptr,a
                           005833 16575 	C$ff.c$3163$1_0$239 ==.
                                  16576 ;	FATFS\src\ff.c:3163: if (res == FR_OK) {
      005833 EC               [12]16577 	mov	a,r4
      005834 60 03            [24]16578 	jz	00159$
      005836 02r5Ar37         [24]16579 	ljmp	00117$
      005839                      16580 00159$:
                           005839 16581 	C$ff.c$3164$2_0$240 ==.
                                  16582 ;	FATFS\src\ff.c:3164: dp->fs = fs;
      005839 90r01r8A         [24]16583 	mov	dptr,#_f_opendir_fs_65536_239
      00583C E0               [24]16584 	movx	a,@dptr
      00583D FA               [12]16585 	mov	r2,a
      00583E A3               [24]16586 	inc	dptr
      00583F E0               [24]16587 	movx	a,@dptr
      005840 FB               [12]16588 	mov	r3,a
      005841 A3               [24]16589 	inc	dptr
      005842 E0               [24]16590 	movx	a,@dptr
      005843 FC               [12]16591 	mov	r4,a
      005844 8D 82            [24]16592 	mov	dpl,r5
      005846 8E 83            [24]16593 	mov	dph,r6
      005848 8F F0            [24]16594 	mov	b,r7
      00584A EA               [12]16595 	mov	a,r2
      00584B 12r00r00         [24]16596 	lcall	__gptrput
      00584E A3               [24]16597 	inc	dptr
      00584F EB               [12]16598 	mov	a,r3
      005850 12r00r00         [24]16599 	lcall	__gptrput
      005853 A3               [24]16600 	inc	dptr
      005854 EC               [12]16601 	mov	a,r4
      005855 12r00r00         [24]16602 	lcall	__gptrput
                           005858 16603 	C$ff.c$3165$3_0$241 ==.
                                  16604 ;	FATFS\src\ff.c:3165: INIT_BUF(*dp);
      005858 90 02 00         [24]16605 	mov	dptr,#0x0200
      00585B C0 07            [24]16606 	push	ar7
      00585D C0 06            [24]16607 	push	ar6
      00585F C0 05            [24]16608 	push	ar5
      005861 78r00            [12]16609 	mov	r0,#_ff_memalloc
      005863 79s00            [12]16610 	mov	r1,#(_ff_memalloc >> 8)
      005865 7As00            [12]16611 	mov	r2,#(_ff_memalloc >> 16)
      005867 12r00r00         [24]16612 	lcall	__sdcc_banked_call
      00586A AA 82            [24]16613 	mov	r2,dpl
      00586C AB 83            [24]16614 	mov	r3,dph
      00586E AC F0            [24]16615 	mov	r4,b
      005870 D0 05            [24]16616 	pop	ar5
      005872 D0 06            [24]16617 	pop	ar6
      005874 D0 07            [24]16618 	pop	ar7
      005876 8A*FA            [24]16619 	mov	_f_opendir_sloc0_1_0,r2
      005878 8B*FB            [24]16620 	mov	(_f_opendir_sloc0_1_0 + 1),r3
      00587A 8C*FC            [24]16621 	mov	(_f_opendir_sloc0_1_0 + 2),r4
      00587C E5*FA            [12]16622 	mov	a,_f_opendir_sloc0_1_0
      00587E 45*FB            [12]16623 	orl	a,(_f_opendir_sloc0_1_0 + 1)
      005880 70 06            [24]16624 	jnz	00104$
      005882 75 82 11         [24]16625 	mov	dpl,#0x11
      005885 02r00r00         [24]16626 	ljmp	__sdcc_banked_ret
      005888                      16627 00104$:
      005888 74 19            [12]16628 	mov	a,#0x19
      00588A 2D               [12]16629 	add	a,r5
      00588B F8               [12]16630 	mov	r0,a
      00588C E4               [12]16631 	clr	a
      00588D 3E               [12]16632 	addc	a,r6
      00588E F9               [12]16633 	mov	r1,a
      00588F 8F 04            [24]16634 	mov	ar4,r7
      005891 88 82            [24]16635 	mov	dpl,r0
      005893 89 83            [24]16636 	mov	dph,r1
      005895 8C F0            [24]16637 	mov	b,r4
      005897 E5*FA            [12]16638 	mov	a,_f_opendir_sloc0_1_0
      005899 12r00r00         [24]16639 	lcall	__gptrput
      00589C A3               [24]16640 	inc	dptr
      00589D E5*FB            [12]16641 	mov	a,(_f_opendir_sloc0_1_0 + 1)
      00589F 12r00r00         [24]16642 	lcall	__gptrput
      0058A2 A3               [24]16643 	inc	dptr
      0058A3 E5*FC            [12]16644 	mov	a,(_f_opendir_sloc0_1_0 + 2)
      0058A5 12r00r00         [24]16645 	lcall	__gptrput
      0058A8 74 16            [12]16646 	mov	a,#0x16
      0058AA 2D               [12]16647 	add	a,r5
      0058AB FA               [12]16648 	mov	r2,a
      0058AC E4               [12]16649 	clr	a
      0058AD 3E               [12]16650 	addc	a,r6
      0058AE FB               [12]16651 	mov	r3,a
      0058AF 8F 04            [24]16652 	mov	ar4,r7
      0058B1 8A 82            [24]16653 	mov	dpl,r2
      0058B3 8B 83            [24]16654 	mov	dph,r3
      0058B5 8C F0            [24]16655 	mov	b,r4
      0058B7 74r8D            [12]16656 	mov	a,#_f_opendir_sfn_65536_239
      0058B9 12r00r00         [24]16657 	lcall	__gptrput
      0058BC A3               [24]16658 	inc	dptr
      0058BD 74s01            [12]16659 	mov	a,#(_f_opendir_sfn_65536_239 >> 8)
      0058BF 12r00r00         [24]16660 	lcall	__gptrput
      0058C2 A3               [24]16661 	inc	dptr
      0058C3 E4               [12]16662 	clr	a
      0058C4 12r00r00         [24]16663 	lcall	__gptrput
                           0058C7 16664 	C$ff.c$3166$2_0$240 ==.
                                  16665 ;	FATFS\src\ff.c:3166: res = follow_path(dp, path);			/* Follow the path to the directory */
      0058C7 90r01r83         [24]16666 	mov	dptr,#_f_opendir_PARM_2
      0058CA E0               [24]16667 	movx	a,@dptr
      0058CB FA               [12]16668 	mov	r2,a
      0058CC A3               [24]16669 	inc	dptr
      0058CD E0               [24]16670 	movx	a,@dptr
      0058CE FB               [12]16671 	mov	r3,a
      0058CF A3               [24]16672 	inc	dptr
      0058D0 E0               [24]16673 	movx	a,@dptr
      0058D1 FC               [12]16674 	mov	r4,a
      0058D2 90r00rCA         [24]16675 	mov	dptr,#_follow_path_PARM_2
      0058D5 EA               [12]16676 	mov	a,r2
      0058D6 F0               [24]16677 	movx	@dptr,a
      0058D7 EB               [12]16678 	mov	a,r3
      0058D8 A3               [24]16679 	inc	dptr
      0058D9 F0               [24]16680 	movx	@dptr,a
      0058DA EC               [12]16681 	mov	a,r4
      0058DB A3               [24]16682 	inc	dptr
      0058DC F0               [24]16683 	movx	@dptr,a
      0058DD 8D 82            [24]16684 	mov	dpl,r5
      0058DF 8E 83            [24]16685 	mov	dph,r6
      0058E1 8F F0            [24]16686 	mov	b,r7
      0058E3 78r19            [12]16687 	mov	r0,#_follow_path
      0058E5 79s2B            [12]16688 	mov	r1,#(_follow_path >> 8)
      0058E7 7As00            [12]16689 	mov	r2,#(_follow_path >> 16)
      0058E9 12r00r00         [24]16690 	lcall	__sdcc_banked_call
      0058EC AF 82            [24]16691 	mov	r7,dpl
      0058EE 90r01r89         [24]16692 	mov	dptr,#_f_opendir_res_65536_239
      0058F1 EF               [12]16693 	mov	a,r7
      0058F2 F0               [24]16694 	movx	@dptr,a
                           0058F3 16695 	C$ff.c$3167$2_0$240 ==.
                                  16696 ;	FATFS\src\ff.c:3167: FREE_BUF();
      0058F3 AC*FA            [24]16697 	mov	r4,_f_opendir_sloc0_1_0
      0058F5 AD*FB            [24]16698 	mov	r5,(_f_opendir_sloc0_1_0 + 1)
      0058F7 AE*FC            [24]16699 	mov	r6,(_f_opendir_sloc0_1_0 + 2)
      0058F9 8C 82            [24]16700 	mov	dpl,r4
      0058FB 8D 83            [24]16701 	mov	dph,r5
      0058FD 8E F0            [24]16702 	mov	b,r6
      0058FF C0 07            [24]16703 	push	ar7
      005901 78r00            [12]16704 	mov	r0,#_ff_memfree
      005903 79s00            [12]16705 	mov	r1,#(_ff_memfree >> 8)
      005905 7As00            [12]16706 	mov	r2,#(_ff_memfree >> 16)
      005907 12r00r00         [24]16707 	lcall	__sdcc_banked_call
      00590A D0 07            [24]16708 	pop	ar7
                           00590C 16709 	C$ff.c$3168$2_0$240 ==.
                                  16710 ;	FATFS\src\ff.c:3168: if (res == FR_OK) {						/* Follow completed */
      00590C EF               [12]16711 	mov	a,r7
      00590D 60 03            [24]16712 	jz	00161$
      00590F 02r5Ar29         [24]16713 	ljmp	00113$
      005912                      16714 00161$:
                           005912 16715 	C$ff.c$3169$3_0$242 ==.
                                  16716 ;	FATFS\src\ff.c:3169: if (dp->dir) {						/* It is not the origin directory itself */
      005912 90r01r86         [24]16717 	mov	dptr,#_f_opendir_dp_65536_238
      005915 E0               [24]16718 	movx	a,@dptr
      005916 FD               [12]16719 	mov	r5,a
      005917 A3               [24]16720 	inc	dptr
      005918 E0               [24]16721 	movx	a,@dptr
      005919 FE               [12]16722 	mov	r6,a
      00591A A3               [24]16723 	inc	dptr
      00591B E0               [24]16724 	movx	a,@dptr
      00591C FF               [12]16725 	mov	r7,a
      00591D 74 13            [12]16726 	mov	a,#0x13
      00591F 2D               [12]16727 	add	a,r5
      005920 FA               [12]16728 	mov	r2,a
      005921 E4               [12]16729 	clr	a
      005922 3E               [12]16730 	addc	a,r6
      005923 FB               [12]16731 	mov	r3,a
      005924 8F 04            [24]16732 	mov	ar4,r7
      005926 8A 82            [24]16733 	mov	dpl,r2
      005928 8B 83            [24]16734 	mov	dph,r3
      00592A 8C F0            [24]16735 	mov	b,r4
      00592C 12r00r00         [24]16736 	lcall	__gptrget
      00592F FA               [12]16737 	mov	r2,a
      005930 A3               [24]16738 	inc	dptr
      005931 12r00r00         [24]16739 	lcall	__gptrget
      005934 FB               [12]16740 	mov	r3,a
      005935 A3               [24]16741 	inc	dptr
      005936 12r00r00         [24]16742 	lcall	__gptrget
      005939 FC               [12]16743 	mov	r4,a
      00593A EA               [12]16744 	mov	a,r2
      00593B 4B               [12]16745 	orl	a,r3
      00593C 70 03            [24]16746 	jnz	00162$
      00593E 02r59rBE         [24]16747 	ljmp	00109$
      005941                      16748 00162$:
                           005941 16749 	C$ff.c$3170$1_0$239 ==.
                                  16750 ;	FATFS\src\ff.c:3170: if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
      005941 C0 05            [24]16751 	push	ar5
      005943 C0 06            [24]16752 	push	ar6
      005945 C0 07            [24]16753 	push	ar7
      005947 74 0B            [12]16754 	mov	a,#0x0b
      005949 2A               [12]16755 	add	a,r2
      00594A F8               [12]16756 	mov	r0,a
      00594B E4               [12]16757 	clr	a
      00594C 3B               [12]16758 	addc	a,r3
      00594D F9               [12]16759 	mov	r1,a
      00594E 8C 07            [24]16760 	mov	ar7,r4
      005950 88 82            [24]16761 	mov	dpl,r0
      005952 89 83            [24]16762 	mov	dph,r1
      005954 8F F0            [24]16763 	mov	b,r7
      005956 12r00r00         [24]16764 	lcall	__gptrget
      005959 F8               [12]16765 	mov	r0,a
      00595A D0 07            [24]16766 	pop	ar7
      00595C D0 06            [24]16767 	pop	ar6
      00595E D0 05            [24]16768 	pop	ar5
      005960 30 E4 55         [24]16769 	jnb	acc.4,00106$
                           005963 16770 	C$ff.c$3171$4_0$243 ==.
                                  16771 ;	FATFS\src\ff.c:3171: dp->sclust = ld_clust(fs, dp->dir);
      005963 74 07            [12]16772 	mov	a,#0x07
      005965 2D               [12]16773 	add	a,r5
      005966 F5*FA            [12]16774 	mov	_f_opendir_sloc0_1_0,a
      005968 E4               [12]16775 	clr	a
      005969 3E               [12]16776 	addc	a,r6
      00596A F5*FB            [12]16777 	mov	(_f_opendir_sloc0_1_0 + 1),a
      00596C 8F*FC            [24]16778 	mov	(_f_opendir_sloc0_1_0 + 2),r7
      00596E 90r01r8A         [24]16779 	mov	dptr,#_f_opendir_fs_65536_239
      005971 E0               [24]16780 	movx	a,@dptr
      005972 F8               [12]16781 	mov	r0,a
      005973 A3               [24]16782 	inc	dptr
      005974 E0               [24]16783 	movx	a,@dptr
      005975 F9               [12]16784 	mov	r1,a
      005976 A3               [24]16785 	inc	dptr
      005977 E0               [24]16786 	movx	a,@dptr
      005978 FF               [12]16787 	mov	r7,a
      005979 90r00r5B         [24]16788 	mov	dptr,#_ld_clust_PARM_2
      00597C EA               [12]16789 	mov	a,r2
      00597D F0               [24]16790 	movx	@dptr,a
      00597E EB               [12]16791 	mov	a,r3
      00597F A3               [24]16792 	inc	dptr
      005980 F0               [24]16793 	movx	@dptr,a
      005981 EC               [12]16794 	mov	a,r4
      005982 A3               [24]16795 	inc	dptr
      005983 F0               [24]16796 	movx	@dptr,a
      005984 88 82            [24]16797 	mov	dpl,r0
      005986 89 83            [24]16798 	mov	dph,r1
      005988 8F F0            [24]16799 	mov	b,r7
      00598A 78r57            [12]16800 	mov	r0,#_ld_clust
      00598C 79s11            [12]16801 	mov	r1,#(_ld_clust >> 8)
      00598E 7As00            [12]16802 	mov	r2,#(_ld_clust >> 16)
      005990 12r00r00         [24]16803 	lcall	__sdcc_banked_call
      005993 AD 82            [24]16804 	mov	r5,dpl
      005995 AE 83            [24]16805 	mov	r6,dph
      005997 AC F0            [24]16806 	mov	r4,b
      005999 FF               [12]16807 	mov	r7,a
      00599A 85*FA 82         [24]16808 	mov	dpl,_f_opendir_sloc0_1_0
      00599D 85*FB 83         [24]16809 	mov	dph,(_f_opendir_sloc0_1_0 + 1)
      0059A0 85*FC F0         [24]16810 	mov	b,(_f_opendir_sloc0_1_0 + 2)
      0059A3 ED               [12]16811 	mov	a,r5
      0059A4 12r00r00         [24]16812 	lcall	__gptrput
      0059A7 A3               [24]16813 	inc	dptr
      0059A8 EE               [12]16814 	mov	a,r6
      0059A9 12r00r00         [24]16815 	lcall	__gptrput
      0059AC A3               [24]16816 	inc	dptr
      0059AD EC               [12]16817 	mov	a,r4
      0059AE 12r00r00         [24]16818 	lcall	__gptrput
      0059B1 A3               [24]16819 	inc	dptr
      0059B2 EF               [12]16820 	mov	a,r7
      0059B3 12r00r00         [24]16821 	lcall	__gptrput
      0059B6 80 06            [24]16822 	sjmp	00109$
      0059B8                      16823 00106$:
                           0059B8 16824 	C$ff.c$3173$4_0$243 ==.
                                  16825 ;	FATFS\src\ff.c:3173: res = FR_NO_PATH;
      0059B8 90r01r89         [24]16826 	mov	dptr,#_f_opendir_res_65536_239
      0059BB 74 05            [12]16827 	mov	a,#0x05
      0059BD F0               [24]16828 	movx	@dptr,a
      0059BE                      16829 00109$:
                           0059BE 16830 	C$ff.c$3175$3_0$242 ==.
                                  16831 ;	FATFS\src\ff.c:3175: if (res == FR_OK) {
      0059BE 90r01r89         [24]16832 	mov	dptr,#_f_opendir_res_65536_239
      0059C1 E0               [24]16833 	movx	a,@dptr
      0059C2 70 65            [24]16834 	jnz	00113$
                           0059C4 16835 	C$ff.c$3176$4_0$244 ==.
                                  16836 ;	FATFS\src\ff.c:3176: dp->id = fs->id;
      0059C4 90r01r86         [24]16837 	mov	dptr,#_f_opendir_dp_65536_238
      0059C7 E0               [24]16838 	movx	a,@dptr
      0059C8 FD               [12]16839 	mov	r5,a
      0059C9 A3               [24]16840 	inc	dptr
      0059CA E0               [24]16841 	movx	a,@dptr
      0059CB FE               [12]16842 	mov	r6,a
      0059CC A3               [24]16843 	inc	dptr
      0059CD E0               [24]16844 	movx	a,@dptr
      0059CE FF               [12]16845 	mov	r7,a
      0059CF 74 03            [12]16846 	mov	a,#0x03
      0059D1 2D               [12]16847 	add	a,r5
      0059D2 F5*FA            [12]16848 	mov	_f_opendir_sloc0_1_0,a
      0059D4 E4               [12]16849 	clr	a
      0059D5 3E               [12]16850 	addc	a,r6
      0059D6 F5*FB            [12]16851 	mov	(_f_opendir_sloc0_1_0 + 1),a
      0059D8 8F*FC            [24]16852 	mov	(_f_opendir_sloc0_1_0 + 2),r7
      0059DA 90r01r8A         [24]16853 	mov	dptr,#_f_opendir_fs_65536_239
      0059DD E0               [24]16854 	movx	a,@dptr
      0059DE F8               [12]16855 	mov	r0,a
      0059DF A3               [24]16856 	inc	dptr
      0059E0 E0               [24]16857 	movx	a,@dptr
      0059E1 F9               [12]16858 	mov	r1,a
      0059E2 A3               [24]16859 	inc	dptr
      0059E3 E0               [24]16860 	movx	a,@dptr
      0059E4 FC               [12]16861 	mov	r4,a
      0059E5 74 06            [12]16862 	mov	a,#0x06
      0059E7 28               [12]16863 	add	a,r0
      0059E8 F8               [12]16864 	mov	r0,a
      0059E9 E4               [12]16865 	clr	a
      0059EA 39               [12]16866 	addc	a,r1
      0059EB F9               [12]16867 	mov	r1,a
      0059EC 88 82            [24]16868 	mov	dpl,r0
      0059EE 89 83            [24]16869 	mov	dph,r1
      0059F0 8C F0            [24]16870 	mov	b,r4
      0059F2 12r00r00         [24]16871 	lcall	__gptrget
      0059F5 F8               [12]16872 	mov	r0,a
      0059F6 A3               [24]16873 	inc	dptr
      0059F7 12r00r00         [24]16874 	lcall	__gptrget
      0059FA F9               [12]16875 	mov	r1,a
      0059FB 85*FA 82         [24]16876 	mov	dpl,_f_opendir_sloc0_1_0
      0059FE 85*FB 83         [24]16877 	mov	dph,(_f_opendir_sloc0_1_0 + 1)
      005A01 85*FC F0         [24]16878 	mov	b,(_f_opendir_sloc0_1_0 + 2)
      005A04 E8               [12]16879 	mov	a,r0
      005A05 12r00r00         [24]16880 	lcall	__gptrput
      005A08 A3               [24]16881 	inc	dptr
      005A09 E9               [12]16882 	mov	a,r1
      005A0A 12r00r00         [24]16883 	lcall	__gptrput
                           005A0D 16884 	C$ff.c$3177$4_0$244 ==.
                                  16885 ;	FATFS\src\ff.c:3177: res = dir_sdi(dp, 0);			/* Rewind directory */
      005A0D 90r00r49         [24]16886 	mov	dptr,#_dir_sdi_PARM_2
      005A10 E4               [12]16887 	clr	a
      005A11 F0               [24]16888 	movx	@dptr,a
      005A12 A3               [24]16889 	inc	dptr
      005A13 F0               [24]16890 	movx	@dptr,a
      005A14 8D 82            [24]16891 	mov	dpl,r5
      005A16 8E 83            [24]16892 	mov	dph,r6
      005A18 8F F0            [24]16893 	mov	b,r7
      005A1A 78r7F            [12]16894 	mov	r0,#_dir_sdi
      005A1C 79s09            [12]16895 	mov	r1,#(_dir_sdi >> 8)
      005A1E 7As00            [12]16896 	mov	r2,#(_dir_sdi >> 16)
      005A20 12r00r00         [24]16897 	lcall	__sdcc_banked_call
      005A23 E5 82            [12]16898 	mov	a,dpl
      005A25 90r01r89         [24]16899 	mov	dptr,#_f_opendir_res_65536_239
      005A28 F0               [24]16900 	movx	@dptr,a
      005A29                      16901 00113$:
                           005A29 16902 	C$ff.c$3191$2_0$240 ==.
                                  16903 ;	FATFS\src\ff.c:3191: if (res == FR_NO_FILE) res = FR_NO_PATH;
      005A29 90r01r89         [24]16904 	mov	dptr,#_f_opendir_res_65536_239
      005A2C E0               [24]16905 	movx	a,@dptr
      005A2D FF               [12]16906 	mov	r7,a
      005A2E BF 04 06         [24]16907 	cjne	r7,#0x04,00117$
      005A31 90r01r89         [24]16908 	mov	dptr,#_f_opendir_res_65536_239
      005A34 74 05            [12]16909 	mov	a,#0x05
      005A36 F0               [24]16910 	movx	@dptr,a
      005A37                      16911 00117$:
                           005A37 16912 	C$ff.c$3193$1_0$239 ==.
                                  16913 ;	FATFS\src\ff.c:3193: if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
      005A37 90r01r89         [24]16914 	mov	dptr,#_f_opendir_res_65536_239
      005A3A E0               [24]16915 	movx	a,@dptr
      005A3B FF               [12]16916 	mov	r7,a
      005A3C E0               [24]16917 	movx	a,@dptr
      005A3D 60 1D            [24]16918 	jz	00119$
      005A3F 90r01r86         [24]16919 	mov	dptr,#_f_opendir_dp_65536_238
      005A42 E0               [24]16920 	movx	a,@dptr
      005A43 FC               [12]16921 	mov	r4,a
      005A44 A3               [24]16922 	inc	dptr
      005A45 E0               [24]16923 	movx	a,@dptr
      005A46 FD               [12]16924 	mov	r5,a
      005A47 A3               [24]16925 	inc	dptr
      005A48 E0               [24]16926 	movx	a,@dptr
      005A49 FE               [12]16927 	mov	r6,a
      005A4A 8C 82            [24]16928 	mov	dpl,r4
      005A4C 8D 83            [24]16929 	mov	dph,r5
      005A4E 8E F0            [24]16930 	mov	b,r6
      005A50 E4               [12]16931 	clr	a
      005A51 12r00r00         [24]16932 	lcall	__gptrput
      005A54 A3               [24]16933 	inc	dptr
      005A55 12r00r00         [24]16934 	lcall	__gptrput
      005A58 A3               [24]16935 	inc	dptr
      005A59 12r00r00         [24]16936 	lcall	__gptrput
      005A5C                      16937 00119$:
                           005A5C 16938 	C$ff.c$3195$1_0$239 ==.
                                  16939 ;	FATFS\src\ff.c:3195: LEAVE_FF(fs, res);
      005A5C 8F 82            [24]16940 	mov	dpl,r7
                           005A5E 16941 	C$ff.c$3196$1_0$239 ==.
                                  16942 ;	FATFS\src\ff.c:3196: }
                           005A5E 16943 	C$ff.c$3196$1_0$239 ==.
                           005A5E 16944 	XG$f_opendir$0$0 ==.
      005A5E 02r00r00         [24]16945 	ljmp	__sdcc_banked_ret
                                  16946 ;------------------------------------------------------------
                                  16947 ;Allocation info for local variables in function 'f_closedir'
                                  16948 ;------------------------------------------------------------
                                  16949 ;dp                        Allocated with name '_f_closedir_dp_65536_245'
                                  16950 ;res                       Allocated with name '_f_closedir_res_65536_246'
                                  16951 ;------------------------------------------------------------
                           005A61 16952 	G$f_closedir$0$0 ==.
                           005A61 16953 	C$ff.c$3205$1_0$246 ==.
                                  16954 ;	FATFS\src\ff.c:3205: FRESULT f_closedir (
                                  16955 ;	-----------------------------------------
                                  16956 ;	 function f_closedir
                                  16957 ;	-----------------------------------------
      005A61                      16958 _f_closedir:
      005A61 AF F0            [24]16959 	mov	r7,b
      005A63 AE 83            [24]16960 	mov	r6,dph
      005A65 E5 82            [12]16961 	mov	a,dpl
      005A67 90r01r99         [24]16962 	mov	dptr,#_f_closedir_dp_65536_245
      005A6A F0               [24]16963 	movx	@dptr,a
      005A6B EE               [12]16964 	mov	a,r6
      005A6C A3               [24]16965 	inc	dptr
      005A6D F0               [24]16966 	movx	@dptr,a
      005A6E EF               [12]16967 	mov	a,r7
      005A6F A3               [24]16968 	inc	dptr
      005A70 F0               [24]16969 	movx	@dptr,a
                           005A71 16970 	C$ff.c$3212$1_0$246 ==.
                                  16971 ;	FATFS\src\ff.c:3212: res = validate(dp);
      005A71 90r01r99         [24]16972 	mov	dptr,#_f_closedir_dp_65536_245
      005A74 E0               [24]16973 	movx	a,@dptr
      005A75 FD               [12]16974 	mov	r5,a
      005A76 A3               [24]16975 	inc	dptr
      005A77 E0               [24]16976 	movx	a,@dptr
      005A78 FE               [12]16977 	mov	r6,a
      005A79 A3               [24]16978 	inc	dptr
      005A7A E0               [24]16979 	movx	a,@dptr
      005A7B FF               [12]16980 	mov	r7,a
      005A7C 8D 02            [24]16981 	mov	ar2,r5
      005A7E 8E 03            [24]16982 	mov	ar3,r6
      005A80 8F 04            [24]16983 	mov	ar4,r7
      005A82 8A 82            [24]16984 	mov	dpl,r2
      005A84 8B 83            [24]16985 	mov	dph,r3
      005A86 8C F0            [24]16986 	mov	b,r4
      005A88 C0 07            [24]16987 	push	ar7
      005A8A C0 06            [24]16988 	push	ar6
      005A8C C0 05            [24]16989 	push	ar5
      005A8E 78rC8            [12]16990 	mov	r0,#_validate
      005A90 79s3D            [12]16991 	mov	r1,#(_validate >> 8)
      005A92 7As00            [12]16992 	mov	r2,#(_validate >> 16)
      005A94 12r00r00         [24]16993 	lcall	__sdcc_banked_call
      005A97 AC 82            [24]16994 	mov	r4,dpl
      005A99 D0 05            [24]16995 	pop	ar5
      005A9B D0 06            [24]16996 	pop	ar6
      005A9D D0 07            [24]16997 	pop	ar7
                           005A9F 16998 	C$ff.c$3213$1_0$246 ==.
                                  16999 ;	FATFS\src\ff.c:3213: if (res == FR_OK) {
      005A9F EC               [12]17000 	mov	a,r4
      005AA0 70 12            [24]17001 	jnz	00102$
                           005AA2 17002 	C$ff.c$3222$2_0$247 ==.
                                  17003 ;	FATFS\src\ff.c:3222: dp->fs = 0;				/* Invalidate directory object */
      005AA2 8D 82            [24]17004 	mov	dpl,r5
      005AA4 8E 83            [24]17005 	mov	dph,r6
      005AA6 8F F0            [24]17006 	mov	b,r7
      005AA8 E4               [12]17007 	clr	a
      005AA9 12r00r00         [24]17008 	lcall	__gptrput
      005AAC A3               [24]17009 	inc	dptr
      005AAD 12r00r00         [24]17010 	lcall	__gptrput
      005AB0 A3               [24]17011 	inc	dptr
      005AB1 12r00r00         [24]17012 	lcall	__gptrput
      005AB4                      17013 00102$:
                           005AB4 17014 	C$ff.c$3227$1_0$246 ==.
                                  17015 ;	FATFS\src\ff.c:3227: return res;
      005AB4 8C 82            [24]17016 	mov	dpl,r4
                           005AB6 17017 	C$ff.c$3228$1_0$246 ==.
                                  17018 ;	FATFS\src\ff.c:3228: }
                           005AB6 17019 	C$ff.c$3228$1_0$246 ==.
                           005AB6 17020 	XG$f_closedir$0$0 ==.
      005AB6 02r00r00         [24]17021 	ljmp	__sdcc_banked_ret
                                  17022 ;------------------------------------------------------------
                                  17023 ;Allocation info for local variables in function 'f_readdir'
                                  17024 ;------------------------------------------------------------
                                  17025 ;sloc0                     Allocated with name '_f_readdir_sloc0_1_0'
                                  17026 ;fno                       Allocated with name '_f_readdir_PARM_2'
                                  17027 ;dp                        Allocated with name '_f_readdir_dp_65536_248'
                                  17028 ;res                       Allocated with name '_f_readdir_res_65536_249'
                                  17029 ;sfn                       Allocated with name '_f_readdir_sfn_65536_249'
                                  17030 ;lfn                       Allocated with name '_f_readdir_lfn_65536_249'
                                  17031 ;------------------------------------------------------------
                           005AB9 17032 	G$f_readdir$0$0 ==.
                           005AB9 17033 	C$ff.c$3237$1_0$249 ==.
                                  17034 ;	FATFS\src\ff.c:3237: FRESULT f_readdir (
                                  17035 ;	-----------------------------------------
                                  17036 ;	 function f_readdir
                                  17037 ;	-----------------------------------------
      005AB9                      17038 _f_readdir:
      005AB9 AF F0            [24]17039 	mov	r7,b
      005ABB AE 83            [24]17040 	mov	r6,dph
      005ABD E5 82            [12]17041 	mov	a,dpl
      005ABF 90r01r9F         [24]17042 	mov	dptr,#_f_readdir_dp_65536_248
      005AC2 F0               [24]17043 	movx	@dptr,a
      005AC3 EE               [12]17044 	mov	a,r6
      005AC4 A3               [24]17045 	inc	dptr
      005AC5 F0               [24]17046 	movx	@dptr,a
      005AC6 EF               [12]17047 	mov	a,r7
      005AC7 A3               [24]17048 	inc	dptr
      005AC8 F0               [24]17049 	movx	@dptr,a
                           005AC9 17050 	C$ff.c$3245$1_0$249 ==.
                                  17051 ;	FATFS\src\ff.c:3245: res = validate(dp);						/* Check validity of the object */
      005AC9 90r01r9F         [24]17052 	mov	dptr,#_f_readdir_dp_65536_248
      005ACC E0               [24]17053 	movx	a,@dptr
      005ACD FD               [12]17054 	mov	r5,a
      005ACE A3               [24]17055 	inc	dptr
      005ACF E0               [24]17056 	movx	a,@dptr
      005AD0 FE               [12]17057 	mov	r6,a
      005AD1 A3               [24]17058 	inc	dptr
      005AD2 E0               [24]17059 	movx	a,@dptr
      005AD3 FF               [12]17060 	mov	r7,a
      005AD4 8D 02            [24]17061 	mov	ar2,r5
      005AD6 8E 03            [24]17062 	mov	ar3,r6
      005AD8 8F 04            [24]17063 	mov	ar4,r7
      005ADA 8A 82            [24]17064 	mov	dpl,r2
      005ADC 8B 83            [24]17065 	mov	dph,r3
      005ADE 8C F0            [24]17066 	mov	b,r4
      005AE0 C0 07            [24]17067 	push	ar7
      005AE2 C0 06            [24]17068 	push	ar6
      005AE4 C0 05            [24]17069 	push	ar5
      005AE6 78rC8            [12]17070 	mov	r0,#_validate
      005AE8 79s3D            [12]17071 	mov	r1,#(_validate >> 8)
      005AEA 7As00            [12]17072 	mov	r2,#(_validate >> 16)
      005AEC 12r00r00         [24]17073 	lcall	__sdcc_banked_call
      005AEF AC 82            [24]17074 	mov	r4,dpl
      005AF1 D0 05            [24]17075 	pop	ar5
      005AF3 D0 06            [24]17076 	pop	ar6
      005AF5 D0 07            [24]17077 	pop	ar7
      005AF7 90r01rA2         [24]17078 	mov	dptr,#_f_readdir_res_65536_249
      005AFA EC               [12]17079 	mov	a,r4
      005AFB F0               [24]17080 	movx	@dptr,a
                           005AFC 17081 	C$ff.c$3246$1_0$249 ==.
                                  17082 ;	FATFS\src\ff.c:3246: if (res == FR_OK) 
      005AFC EC               [12]17083 	mov	a,r4
      005AFD 60 03            [24]17084 	jz	00140$
      005AFF 02r5CrBF         [24]17085 	ljmp	00113$
      005B02                      17086 00140$:
                           005B02 17087 	C$ff.c$3248$2_0$250 ==.
                                  17088 ;	FATFS\src\ff.c:3248: if (!fno) 
      005B02 90r01r9C         [24]17089 	mov	dptr,#_f_readdir_PARM_2
      005B05 E0               [24]17090 	movx	a,@dptr
      005B06 FA               [12]17091 	mov	r2,a
      005B07 A3               [24]17092 	inc	dptr
      005B08 E0               [24]17093 	movx	a,@dptr
      005B09 FB               [12]17094 	mov	r3,a
      005B0A A3               [24]17095 	inc	dptr
      005B0B E0               [24]17096 	movx	a,@dptr
      005B0C FC               [12]17097 	mov	r4,a
      005B0D 90r01r9C         [24]17098 	mov	dptr,#_f_readdir_PARM_2
      005B10 E0               [24]17099 	movx	a,@dptr
      005B11 F5 F0            [12]17100 	mov	b,a
      005B13 A3               [24]17101 	inc	dptr
      005B14 E0               [24]17102 	movx	a,@dptr
      005B15 45 F0            [12]17103 	orl	a,b
      005B17 70 1F            [24]17104 	jnz	00110$
                           005B19 17105 	C$ff.c$3250$3_0$251 ==.
                                  17106 ;	FATFS\src\ff.c:3250: res = dir_sdi(dp, 0);			/* Rewind the directory object */
      005B19 90r00r49         [24]17107 	mov	dptr,#_dir_sdi_PARM_2
      005B1C E4               [12]17108 	clr	a
      005B1D F0               [24]17109 	movx	@dptr,a
      005B1E A3               [24]17110 	inc	dptr
      005B1F F0               [24]17111 	movx	@dptr,a
      005B20 8D 82            [24]17112 	mov	dpl,r5
      005B22 8E 83            [24]17113 	mov	dph,r6
      005B24 8F F0            [24]17114 	mov	b,r7
      005B26 78r7F            [12]17115 	mov	r0,#_dir_sdi
      005B28 79s09            [12]17116 	mov	r1,#(_dir_sdi >> 8)
      005B2A 7As00            [12]17117 	mov	r2,#(_dir_sdi >> 16)
      005B2C 12r00r00         [24]17118 	lcall	__sdcc_banked_call
      005B2F E5 82            [12]17119 	mov	a,dpl
      005B31 90r01rA2         [24]17120 	mov	dptr,#_f_readdir_res_65536_249
      005B34 F0               [24]17121 	movx	@dptr,a
      005B35 02r5CrBF         [24]17122 	ljmp	00113$
      005B38                      17123 00110$:
                           005B38 17124 	C$ff.c$3254$1_0$249 ==.
                                  17125 ;	FATFS\src\ff.c:3254: INIT_BUF(*dp);
      005B38 C0 02            [24]17126 	push	ar2
      005B3A C0 03            [24]17127 	push	ar3
      005B3C C0 04            [24]17128 	push	ar4
      005B3E 90 02 00         [24]17129 	mov	dptr,#0x0200
      005B41 C0 07            [24]17130 	push	ar7
      005B43 C0 06            [24]17131 	push	ar6
      005B45 C0 05            [24]17132 	push	ar5
      005B47 C0 03            [24]17133 	push	ar3
      005B49 C0 02            [24]17134 	push	ar2
      005B4B 78r00            [12]17135 	mov	r0,#_ff_memalloc
      005B4D 79s00            [12]17136 	mov	r1,#(_ff_memalloc >> 8)
      005B4F 7As00            [12]17137 	mov	r2,#(_ff_memalloc >> 16)
      005B51 12r00r00         [24]17138 	lcall	__sdcc_banked_call
      005B54 A8 82            [24]17139 	mov	r0,dpl
      005B56 A9 83            [24]17140 	mov	r1,dph
      005B58 AC F0            [24]17141 	mov	r4,b
      005B5A D0 02            [24]17142 	pop	ar2
      005B5C D0 03            [24]17143 	pop	ar3
      005B5E D0 05            [24]17144 	pop	ar5
      005B60 D0 06            [24]17145 	pop	ar6
      005B62 D0 07            [24]17146 	pop	ar7
      005B64 88*FD            [24]17147 	mov	_f_readdir_sloc0_1_0,r0
      005B66 89*FE            [24]17148 	mov	(_f_readdir_sloc0_1_0 + 1),r1
      005B68 8C*FF            [24]17149 	mov	(_f_readdir_sloc0_1_0 + 2),r4
      005B6A D0 04            [24]17150 	pop	ar4
      005B6C D0 03            [24]17151 	pop	ar3
      005B6E D0 02            [24]17152 	pop	ar2
      005B70 E5*FD            [12]17153 	mov	a,_f_readdir_sloc0_1_0
      005B72 45*FE            [12]17154 	orl	a,(_f_readdir_sloc0_1_0 + 1)
      005B74 70 06            [24]17155 	jnz	00102$
      005B76 75 82 11         [24]17156 	mov	dpl,#0x11
      005B79 02r00r00         [24]17157 	ljmp	__sdcc_banked_ret
      005B7C                      17158 00102$:
      005B7C C0 02            [24]17159 	push	ar2
      005B7E C0 03            [24]17160 	push	ar3
      005B80 C0 04            [24]17161 	push	ar4
      005B82 74 19            [12]17162 	mov	a,#0x19
      005B84 2D               [12]17163 	add	a,r5
      005B85 F8               [12]17164 	mov	r0,a
      005B86 E4               [12]17165 	clr	a
      005B87 3E               [12]17166 	addc	a,r6
      005B88 F9               [12]17167 	mov	r1,a
      005B89 8F 04            [24]17168 	mov	ar4,r7
      005B8B 88 82            [24]17169 	mov	dpl,r0
      005B8D 89 83            [24]17170 	mov	dph,r1
      005B8F 8C F0            [24]17171 	mov	b,r4
      005B91 E5*FD            [12]17172 	mov	a,_f_readdir_sloc0_1_0
      005B93 12r00r00         [24]17173 	lcall	__gptrput
      005B96 A3               [24]17174 	inc	dptr
      005B97 E5*FE            [12]17175 	mov	a,(_f_readdir_sloc0_1_0 + 1)
      005B99 12r00r00         [24]17176 	lcall	__gptrput
      005B9C A3               [24]17177 	inc	dptr
      005B9D E5*FF            [12]17178 	mov	a,(_f_readdir_sloc0_1_0 + 2)
      005B9F 12r00r00         [24]17179 	lcall	__gptrput
      005BA2 74 16            [12]17180 	mov	a,#0x16
      005BA4 2D               [12]17181 	add	a,r5
      005BA5 FA               [12]17182 	mov	r2,a
      005BA6 E4               [12]17183 	clr	a
      005BA7 3E               [12]17184 	addc	a,r6
      005BA8 FB               [12]17185 	mov	r3,a
      005BA9 8F 04            [24]17186 	mov	ar4,r7
      005BAB 8A 82            [24]17187 	mov	dpl,r2
      005BAD 8B 83            [24]17188 	mov	dph,r3
      005BAF 8C F0            [24]17189 	mov	b,r4
      005BB1 74rA3            [12]17190 	mov	a,#_f_readdir_sfn_65536_249
      005BB3 12r00r00         [24]17191 	lcall	__gptrput
      005BB6 A3               [24]17192 	inc	dptr
      005BB7 74s01            [12]17193 	mov	a,#(_f_readdir_sfn_65536_249 >> 8)
      005BB9 12r00r00         [24]17194 	lcall	__gptrput
      005BBC A3               [24]17195 	inc	dptr
      005BBD E4               [12]17196 	clr	a
      005BBE 12r00r00         [24]17197 	lcall	__gptrput
                           005BC1 17198 	C$ff.c$3255$3_0$252 ==.
                                  17199 ;	FATFS\src\ff.c:3255: res = dir_read(dp, 0);			/* Read an item */
      005BC1 90r00rA0         [24]17200 	mov	dptr,#_dir_read_PARM_2
      005BC4 F0               [24]17201 	movx	@dptr,a
      005BC5 A3               [24]17202 	inc	dptr
      005BC6 F0               [24]17203 	movx	@dptr,a
      005BC7 8D 82            [24]17204 	mov	dpl,r5
      005BC9 8E 83            [24]17205 	mov	dph,r6
      005BCB 8F F0            [24]17206 	mov	b,r7
      005BCD C0 04            [24]17207 	push	ar4
      005BCF C0 03            [24]17208 	push	ar3
      005BD1 C0 02            [24]17209 	push	ar2
      005BD3 78rC1            [12]17210 	mov	r0,#_dir_read
      005BD5 79s1B            [12]17211 	mov	r1,#(_dir_read >> 8)
      005BD7 7As00            [12]17212 	mov	r2,#(_dir_read >> 16)
      005BD9 12r00r00         [24]17213 	lcall	__sdcc_banked_call
      005BDC AF 82            [24]17214 	mov	r7,dpl
      005BDE D0 02            [24]17215 	pop	ar2
      005BE0 D0 03            [24]17216 	pop	ar3
      005BE2 D0 04            [24]17217 	pop	ar4
      005BE4 90r01rA2         [24]17218 	mov	dptr,#_f_readdir_res_65536_249
      005BE7 EF               [12]17219 	mov	a,r7
      005BE8 F0               [24]17220 	movx	@dptr,a
                           005BE9 17221 	C$ff.c$3256$3_0$252 ==.
                                  17222 ;	FATFS\src\ff.c:3256: if (res == FR_NO_FILE) 			/* Reached end of directory */
      005BE9 BF 04 02         [24]17223 	cjne	r7,#0x04,00143$
      005BEC 80 08            [24]17224 	sjmp	00144$
      005BEE                      17225 00143$:
      005BEE D0 04            [24]17226 	pop	ar4
      005BF0 D0 03            [24]17227 	pop	ar3
      005BF2 D0 02            [24]17228 	pop	ar2
      005BF4 80 32            [24]17229 	sjmp	00104$
      005BF6                      17230 00144$:
      005BF6 D0 04            [24]17231 	pop	ar4
      005BF8 D0 03            [24]17232 	pop	ar3
      005BFA D0 02            [24]17233 	pop	ar2
                           005BFC 17234 	C$ff.c$3258$4_0$254 ==.
                                  17235 ;	FATFS\src\ff.c:3258: dp->sect = 0;
      005BFC 90r01r9F         [24]17236 	mov	dptr,#_f_readdir_dp_65536_248
      005BFF E0               [24]17237 	movx	a,@dptr
      005C00 FD               [12]17238 	mov	r5,a
      005C01 A3               [24]17239 	inc	dptr
      005C02 E0               [24]17240 	movx	a,@dptr
      005C03 FE               [12]17241 	mov	r6,a
      005C04 A3               [24]17242 	inc	dptr
      005C05 E0               [24]17243 	movx	a,@dptr
      005C06 FF               [12]17244 	mov	r7,a
      005C07 74 0F            [12]17245 	mov	a,#0x0f
      005C09 2D               [12]17246 	add	a,r5
      005C0A FD               [12]17247 	mov	r5,a
      005C0B E4               [12]17248 	clr	a
      005C0C 3E               [12]17249 	addc	a,r6
      005C0D FE               [12]17250 	mov	r6,a
      005C0E 8D 82            [24]17251 	mov	dpl,r5
      005C10 8E 83            [24]17252 	mov	dph,r6
      005C12 8F F0            [24]17253 	mov	b,r7
      005C14 E4               [12]17254 	clr	a
      005C15 12r00r00         [24]17255 	lcall	__gptrput
      005C18 A3               [24]17256 	inc	dptr
      005C19 12r00r00         [24]17257 	lcall	__gptrput
      005C1C A3               [24]17258 	inc	dptr
      005C1D 12r00r00         [24]17259 	lcall	__gptrput
      005C20 A3               [24]17260 	inc	dptr
      005C21 12r00r00         [24]17261 	lcall	__gptrput
                           005C24 17262 	C$ff.c$3259$4_0$254 ==.
                                  17263 ;	FATFS\src\ff.c:3259: res = FR_OK;
      005C24 90r01rA2         [24]17264 	mov	dptr,#_f_readdir_res_65536_249
      005C27 F0               [24]17265 	movx	@dptr,a
      005C28                      17266 00104$:
                           005C28 17267 	C$ff.c$3261$3_0$252 ==.
                                  17268 ;	FATFS\src\ff.c:3261: if (res == FR_OK) 
      005C28 90r01rA2         [24]17269 	mov	dptr,#_f_readdir_res_65536_249
      005C2B E0               [24]17270 	movx	a,@dptr
      005C2C 70 7C            [24]17271 	jnz	00108$
                           005C2E 17272 	C$ff.c$3263$4_0$255 ==.
                                  17273 ;	FATFS\src\ff.c:3263: get_fileinfo(dp, fno);		/* Get the object information */
      005C2E 90r01r9F         [24]17274 	mov	dptr,#_f_readdir_dp_65536_248
      005C31 E0               [24]17275 	movx	a,@dptr
      005C32 FD               [12]17276 	mov	r5,a
      005C33 A3               [24]17277 	inc	dptr
      005C34 E0               [24]17278 	movx	a,@dptr
      005C35 FE               [12]17279 	mov	r6,a
      005C36 A3               [24]17280 	inc	dptr
      005C37 E0               [24]17281 	movx	a,@dptr
      005C38 FF               [12]17282 	mov	r7,a
      005C39 90r00rA9         [24]17283 	mov	dptr,#_get_fileinfo_PARM_2
      005C3C EA               [12]17284 	mov	a,r2
      005C3D F0               [24]17285 	movx	@dptr,a
      005C3E EB               [12]17286 	mov	a,r3
      005C3F A3               [24]17287 	inc	dptr
      005C40 F0               [24]17288 	movx	@dptr,a
      005C41 EC               [12]17289 	mov	a,r4
      005C42 A3               [24]17290 	inc	dptr
      005C43 F0               [24]17291 	movx	@dptr,a
      005C44 8D 82            [24]17292 	mov	dpl,r5
      005C46 8E 83            [24]17293 	mov	dph,r6
      005C48 8F F0            [24]17294 	mov	b,r7
      005C4A 78rDE            [12]17295 	mov	r0,#_get_fileinfo
      005C4C 79s1E            [12]17296 	mov	r1,#(_get_fileinfo >> 8)
      005C4E 7As00            [12]17297 	mov	r2,#(_get_fileinfo >> 16)
      005C50 12r00r00         [24]17298 	lcall	__sdcc_banked_call
                           005C53 17299 	C$ff.c$3264$4_0$255 ==.
                                  17300 ;	FATFS\src\ff.c:3264: res = dir_next(dp, 0);		/* Increment index for next */
      005C53 90r01r9F         [24]17301 	mov	dptr,#_f_readdir_dp_65536_248
      005C56 E0               [24]17302 	movx	a,@dptr
      005C57 FD               [12]17303 	mov	r5,a
      005C58 A3               [24]17304 	inc	dptr
      005C59 E0               [24]17305 	movx	a,@dptr
      005C5A FE               [12]17306 	mov	r6,a
      005C5B A3               [24]17307 	inc	dptr
      005C5C E0               [24]17308 	movx	a,@dptr
      005C5D FF               [12]17309 	mov	r7,a
      005C5E 90r00r56         [24]17310 	mov	dptr,#_dir_next_PARM_2
      005C61 E4               [12]17311 	clr	a
      005C62 F0               [24]17312 	movx	@dptr,a
      005C63 A3               [24]17313 	inc	dptr
      005C64 F0               [24]17314 	movx	@dptr,a
      005C65 8D 82            [24]17315 	mov	dpl,r5
      005C67 8E 83            [24]17316 	mov	dph,r6
      005C69 8F F0            [24]17317 	mov	b,r7
      005C6B 78r0A            [12]17318 	mov	r0,#_dir_next
      005C6D 79s0E            [12]17319 	mov	r1,#(_dir_next >> 8)
      005C6F 7As00            [12]17320 	mov	r2,#(_dir_next >> 16)
      005C71 12r00r00         [24]17321 	lcall	__sdcc_banked_call
      005C74 AF 82            [24]17322 	mov	r7,dpl
      005C76 90r01rA2         [24]17323 	mov	dptr,#_f_readdir_res_65536_249
      005C79 EF               [12]17324 	mov	a,r7
      005C7A F0               [24]17325 	movx	@dptr,a
                           005C7B 17326 	C$ff.c$3265$4_0$255 ==.
                                  17327 ;	FATFS\src\ff.c:3265: if(res == FR_NO_FILE)
      005C7B BF 04 2C         [24]17328 	cjne	r7,#0x04,00108$
                           005C7E 17329 	C$ff.c$3267$5_0$256 ==.
                                  17330 ;	FATFS\src\ff.c:3267: dp->sect = 0;
      005C7E 90r01r9F         [24]17331 	mov	dptr,#_f_readdir_dp_65536_248
      005C81 E0               [24]17332 	movx	a,@dptr
      005C82 FD               [12]17333 	mov	r5,a
      005C83 A3               [24]17334 	inc	dptr
      005C84 E0               [24]17335 	movx	a,@dptr
      005C85 FE               [12]17336 	mov	r6,a
      005C86 A3               [24]17337 	inc	dptr
      005C87 E0               [24]17338 	movx	a,@dptr
      005C88 FF               [12]17339 	mov	r7,a
      005C89 74 0F            [12]17340 	mov	a,#0x0f
      005C8B 2D               [12]17341 	add	a,r5
      005C8C FD               [12]17342 	mov	r5,a
      005C8D E4               [12]17343 	clr	a
      005C8E 3E               [12]17344 	addc	a,r6
      005C8F FE               [12]17345 	mov	r6,a
      005C90 8D 82            [24]17346 	mov	dpl,r5
      005C92 8E 83            [24]17347 	mov	dph,r6
      005C94 8F F0            [24]17348 	mov	b,r7
      005C96 E4               [12]17349 	clr	a
      005C97 12r00r00         [24]17350 	lcall	__gptrput
      005C9A A3               [24]17351 	inc	dptr
      005C9B 12r00r00         [24]17352 	lcall	__gptrput
      005C9E A3               [24]17353 	inc	dptr
      005C9F 12r00r00         [24]17354 	lcall	__gptrput
      005CA2 A3               [24]17355 	inc	dptr
      005CA3 12r00r00         [24]17356 	lcall	__gptrput
                           005CA6 17357 	C$ff.c$3268$5_0$256 ==.
                                  17358 ;	FATFS\src\ff.c:3268: res = FR_OK;
      005CA6 90r01rA2         [24]17359 	mov	dptr,#_f_readdir_res_65536_249
      005CA9 F0               [24]17360 	movx	@dptr,a
      005CAA                      17361 00108$:
                           005CAA 17362 	C$ff.c$3271$3_0$252 ==.
                                  17363 ;	FATFS\src\ff.c:3271: FREE_BUF();
      005CAA AD*FD            [24]17364 	mov	r5,_f_readdir_sloc0_1_0
      005CAC AE*FE            [24]17365 	mov	r6,(_f_readdir_sloc0_1_0 + 1)
      005CAE AF*FF            [24]17366 	mov	r7,(_f_readdir_sloc0_1_0 + 2)
      005CB0 8D 82            [24]17367 	mov	dpl,r5
      005CB2 8E 83            [24]17368 	mov	dph,r6
      005CB4 8F F0            [24]17369 	mov	b,r7
      005CB6 78r00            [12]17370 	mov	r0,#_ff_memfree
      005CB8 79s00            [12]17371 	mov	r1,#(_ff_memfree >> 8)
      005CBA 7As00            [12]17372 	mov	r2,#(_ff_memfree >> 16)
      005CBC 12r00r00         [24]17373 	lcall	__sdcc_banked_call
      005CBF                      17374 00113$:
                           005CBF 17375 	C$ff.c$3275$1_0$249 ==.
                                  17376 ;	FATFS\src\ff.c:3275: LEAVE_FF(dp->fs, res);
      005CBF 90r01rA2         [24]17377 	mov	dptr,#_f_readdir_res_65536_249
      005CC2 E0               [24]17378 	movx	a,@dptr
      005CC3 FF               [12]17379 	mov	r7,a
      005CC4 F5 82            [12]17380 	mov	dpl,a
                           005CC6 17381 	C$ff.c$3276$1_0$249 ==.
                                  17382 ;	FATFS\src\ff.c:3276: }
                           005CC6 17383 	C$ff.c$3276$1_0$249 ==.
                           005CC6 17384 	XG$f_readdir$0$0 ==.
      005CC6 02r00r00         [24]17385 	ljmp	__sdcc_banked_ret
                                  17386 ;------------------------------------------------------------
                                  17387 ;Allocation info for local variables in function 'f_stat'
                                  17388 ;------------------------------------------------------------
                                  17389 ;fno                       Allocated with name '_f_stat_PARM_2'
                                  17390 ;path                      Allocated with name '_f_stat_path_65536_257'
                                  17391 ;res                       Allocated with name '_f_stat_res_65536_258'
                                  17392 ;dj                        Allocated with name '_f_stat_dj_65536_258'
                                  17393 ;sfn                       Allocated with name '_f_stat_sfn_65536_258'
                                  17394 ;lfn                       Allocated with name '_f_stat_lfn_65536_258'
                                  17395 ;------------------------------------------------------------
                           005CC9 17396 	G$f_stat$0$0 ==.
                           005CC9 17397 	C$ff.c$3285$1_0$258 ==.
                                  17398 ;	FATFS\src\ff.c:3285: FRESULT f_stat (
                                  17399 ;	-----------------------------------------
                                  17400 ;	 function f_stat
                                  17401 ;	-----------------------------------------
      005CC9                      17402 _f_stat:
      005CC9 AF F0            [24]17403 	mov	r7,b
      005CCB AE 83            [24]17404 	mov	r6,dph
      005CCD E5 82            [12]17405 	mov	a,dpl
      005CCF 90r01rB2         [24]17406 	mov	dptr,#_f_stat_path_65536_257
      005CD2 F0               [24]17407 	movx	@dptr,a
      005CD3 EE               [12]17408 	mov	a,r6
      005CD4 A3               [24]17409 	inc	dptr
      005CD5 F0               [24]17410 	movx	@dptr,a
      005CD6 EF               [12]17411 	mov	a,r7
      005CD7 A3               [24]17412 	inc	dptr
      005CD8 F0               [24]17413 	movx	@dptr,a
                           005CD9 17414 	C$ff.c$3296$1_0$258 ==.
                                  17415 ;	FATFS\src\ff.c:3296: res = find_volume(&dj.fs, &path, 0);
      005CD9 90r00rDD         [24]17416 	mov	dptr,#_find_volume_PARM_2
      005CDC 74rB2            [12]17417 	mov	a,#_f_stat_path_65536_257
      005CDE F0               [24]17418 	movx	@dptr,a
      005CDF 74s01            [12]17419 	mov	a,#(_f_stat_path_65536_257 >> 8)
      005CE1 A3               [24]17420 	inc	dptr
      005CE2 F0               [24]17421 	movx	@dptr,a
      005CE3 E4               [12]17422 	clr	a
      005CE4 A3               [24]17423 	inc	dptr
      005CE5 F0               [24]17424 	movx	@dptr,a
      005CE6 90r00rE0         [24]17425 	mov	dptr,#_find_volume_PARM_3
      005CE9 F0               [24]17426 	movx	@dptr,a
      005CEA 90r01rB6         [24]17427 	mov	dptr,#_f_stat_dj_65536_258
      005CED 75 F0 00         [24]17428 	mov	b,#0x00
      005CF0 78rED            [12]17429 	mov	r0,#_find_volume
      005CF2 79s30            [12]17430 	mov	r1,#(_find_volume >> 8)
      005CF4 7As00            [12]17431 	mov	r2,#(_find_volume >> 16)
      005CF6 12r00r00         [24]17432 	lcall	__sdcc_banked_call
      005CF9 AF 82            [24]17433 	mov	r7,dpl
      005CFB 90r01rB5         [24]17434 	mov	dptr,#_f_stat_res_65536_258
      005CFE EF               [12]17435 	mov	a,r7
      005CFF F0               [24]17436 	movx	@dptr,a
                           005D00 17437 	C$ff.c$3297$1_0$258 ==.
                                  17438 ;	FATFS\src\ff.c:3297: if (res == FR_OK) {
      005D00 EF               [12]17439 	mov	a,r7
      005D01 60 03            [24]17440 	jz	00134$
      005D03 02r5DrD8         [24]17441 	ljmp	00111$
      005D06                      17442 00134$:
                           005D06 17443 	C$ff.c$3298$3_0$260 ==.
                                  17444 ;	FATFS\src\ff.c:3298: INIT_BUF(dj);
      005D06 90 02 00         [24]17445 	mov	dptr,#0x0200
      005D09 78r00            [12]17446 	mov	r0,#_ff_memalloc
      005D0B 79s00            [12]17447 	mov	r1,#(_ff_memalloc >> 8)
      005D0D 7As00            [12]17448 	mov	r2,#(_ff_memalloc >> 16)
      005D0F 12r00r00         [24]17449 	lcall	__sdcc_banked_call
      005D12 AD 82            [24]17450 	mov	r5,dpl
      005D14 AE 83            [24]17451 	mov	r6,dph
      005D16 AF F0            [24]17452 	mov	r7,b
      005D18 ED               [12]17453 	mov	a,r5
      005D19 4E               [12]17454 	orl	a,r6
      005D1A 70 06            [24]17455 	jnz	00102$
      005D1C 75 82 11         [24]17456 	mov	dpl,#0x11
      005D1F 02r00r00         [24]17457 	ljmp	__sdcc_banked_ret
      005D22                      17458 00102$:
      005D22 90r01rCF         [24]17459 	mov	dptr,#(_f_stat_dj_65536_258 + 0x0019)
      005D25 ED               [12]17460 	mov	a,r5
      005D26 F0               [24]17461 	movx	@dptr,a
      005D27 EE               [12]17462 	mov	a,r6
      005D28 A3               [24]17463 	inc	dptr
      005D29 F0               [24]17464 	movx	@dptr,a
      005D2A EF               [12]17465 	mov	a,r7
      005D2B A3               [24]17466 	inc	dptr
      005D2C F0               [24]17467 	movx	@dptr,a
      005D2D 90r01rCC         [24]17468 	mov	dptr,#(_f_stat_dj_65536_258 + 0x0016)
      005D30 74rD4            [12]17469 	mov	a,#_f_stat_sfn_65536_258
      005D32 F0               [24]17470 	movx	@dptr,a
      005D33 74s01            [12]17471 	mov	a,#(_f_stat_sfn_65536_258 >> 8)
      005D35 A3               [24]17472 	inc	dptr
      005D36 F0               [24]17473 	movx	@dptr,a
      005D37 E4               [12]17474 	clr	a
      005D38 A3               [24]17475 	inc	dptr
      005D39 F0               [24]17476 	movx	@dptr,a
                           005D3A 17477 	C$ff.c$3299$2_0$259 ==.
                                  17478 ;	FATFS\src\ff.c:3299: res = follow_path(&dj, path);	/* Follow the file path */
      005D3A 90r01rB2         [24]17479 	mov	dptr,#_f_stat_path_65536_257
      005D3D E0               [24]17480 	movx	a,@dptr
      005D3E FA               [12]17481 	mov	r2,a
      005D3F A3               [24]17482 	inc	dptr
      005D40 E0               [24]17483 	movx	a,@dptr
      005D41 FB               [12]17484 	mov	r3,a
      005D42 A3               [24]17485 	inc	dptr
      005D43 E0               [24]17486 	movx	a,@dptr
      005D44 FC               [12]17487 	mov	r4,a
      005D45 90r00rCA         [24]17488 	mov	dptr,#_follow_path_PARM_2
      005D48 EA               [12]17489 	mov	a,r2
      005D49 F0               [24]17490 	movx	@dptr,a
      005D4A EB               [12]17491 	mov	a,r3
      005D4B A3               [24]17492 	inc	dptr
      005D4C F0               [24]17493 	movx	@dptr,a
      005D4D EC               [12]17494 	mov	a,r4
      005D4E A3               [24]17495 	inc	dptr
      005D4F F0               [24]17496 	movx	@dptr,a
      005D50 90r01rB6         [24]17497 	mov	dptr,#_f_stat_dj_65536_258
      005D53 75 F0 00         [24]17498 	mov	b,#0x00
      005D56 C0 07            [24]17499 	push	ar7
      005D58 C0 06            [24]17500 	push	ar6
      005D5A C0 05            [24]17501 	push	ar5
      005D5C 78r19            [12]17502 	mov	r0,#_follow_path
      005D5E 79s2B            [12]17503 	mov	r1,#(_follow_path >> 8)
      005D60 7As00            [12]17504 	mov	r2,#(_follow_path >> 16)
      005D62 12r00r00         [24]17505 	lcall	__sdcc_banked_call
      005D65 AC 82            [24]17506 	mov	r4,dpl
      005D67 D0 05            [24]17507 	pop	ar5
      005D69 D0 06            [24]17508 	pop	ar6
      005D6B D0 07            [24]17509 	pop	ar7
      005D6D 90r01rB5         [24]17510 	mov	dptr,#_f_stat_res_65536_258
      005D70 EC               [12]17511 	mov	a,r4
      005D71 F0               [24]17512 	movx	@dptr,a
                           005D72 17513 	C$ff.c$3300$2_0$259 ==.
                                  17514 ;	FATFS\src\ff.c:3300: if (res == FR_OK) {				/* Follow completed */
      005D72 EC               [12]17515 	mov	a,r4
      005D73 70 54            [24]17516 	jnz	00109$
                           005D75 17517 	C$ff.c$3301$3_0$261 ==.
                                  17518 ;	FATFS\src\ff.c:3301: if (dj.dir) {		/* Found an object */
      005D75 90r01rC9         [24]17519 	mov	dptr,#(_f_stat_dj_65536_258 + 0x0013)
      005D78 E0               [24]17520 	movx	a,@dptr
      005D79 FA               [12]17521 	mov	r2,a
      005D7A A3               [24]17522 	inc	dptr
      005D7B E0               [24]17523 	movx	a,@dptr
      005D7C FB               [12]17524 	mov	r3,a
      005D7D A3               [24]17525 	inc	dptr
      005D7E E0               [24]17526 	movx	a,@dptr
      005D7F FC               [12]17527 	mov	r4,a
      005D80 EA               [12]17528 	mov	a,r2
      005D81 4B               [12]17529 	orl	a,r3
      005D82 60 3F            [24]17530 	jz	00106$
                           005D84 17531 	C$ff.c$3302$4_0$262 ==.
                                  17532 ;	FATFS\src\ff.c:3302: if (fno) get_fileinfo(&dj, fno);
      005D84 90r01rAF         [24]17533 	mov	dptr,#_f_stat_PARM_2
      005D87 E0               [24]17534 	movx	a,@dptr
      005D88 FA               [12]17535 	mov	r2,a
      005D89 A3               [24]17536 	inc	dptr
      005D8A E0               [24]17537 	movx	a,@dptr
      005D8B FB               [12]17538 	mov	r3,a
      005D8C A3               [24]17539 	inc	dptr
      005D8D E0               [24]17540 	movx	a,@dptr
      005D8E FC               [12]17541 	mov	r4,a
      005D8F 90r01rAF         [24]17542 	mov	dptr,#_f_stat_PARM_2
      005D92 E0               [24]17543 	movx	a,@dptr
      005D93 F5 F0            [12]17544 	mov	b,a
      005D95 A3               [24]17545 	inc	dptr
      005D96 E0               [24]17546 	movx	a,@dptr
      005D97 45 F0            [12]17547 	orl	a,b
      005D99 60 2E            [24]17548 	jz	00109$
      005D9B 90r00rA9         [24]17549 	mov	dptr,#_get_fileinfo_PARM_2
      005D9E EA               [12]17550 	mov	a,r2
      005D9F F0               [24]17551 	movx	@dptr,a
      005DA0 EB               [12]17552 	mov	a,r3
      005DA1 A3               [24]17553 	inc	dptr
      005DA2 F0               [24]17554 	movx	@dptr,a
      005DA3 EC               [12]17555 	mov	a,r4
      005DA4 A3               [24]17556 	inc	dptr
      005DA5 F0               [24]17557 	movx	@dptr,a
      005DA6 90r01rB6         [24]17558 	mov	dptr,#_f_stat_dj_65536_258
      005DA9 75 F0 00         [24]17559 	mov	b,#0x00
      005DAC C0 07            [24]17560 	push	ar7
      005DAE C0 06            [24]17561 	push	ar6
      005DB0 C0 05            [24]17562 	push	ar5
      005DB2 78rDE            [12]17563 	mov	r0,#_get_fileinfo
      005DB4 79s1E            [12]17564 	mov	r1,#(_get_fileinfo >> 8)
      005DB6 7As00            [12]17565 	mov	r2,#(_get_fileinfo >> 16)
      005DB8 12r00r00         [24]17566 	lcall	__sdcc_banked_call
      005DBB D0 05            [24]17567 	pop	ar5
      005DBD D0 06            [24]17568 	pop	ar6
      005DBF D0 07            [24]17569 	pop	ar7
      005DC1 80 06            [24]17570 	sjmp	00109$
      005DC3                      17571 00106$:
                           005DC3 17572 	C$ff.c$3304$4_0$263 ==.
                                  17573 ;	FATFS\src\ff.c:3304: res = FR_INVALID_NAME;
      005DC3 90r01rB5         [24]17574 	mov	dptr,#_f_stat_res_65536_258
      005DC6 74 06            [12]17575 	mov	a,#0x06
      005DC8 F0               [24]17576 	movx	@dptr,a
      005DC9                      17577 00109$:
                           005DC9 17578 	C$ff.c$3307$2_0$259 ==.
                                  17579 ;	FATFS\src\ff.c:3307: FREE_BUF();
      005DC9 8D 82            [24]17580 	mov	dpl,r5
      005DCB 8E 83            [24]17581 	mov	dph,r6
      005DCD 8F F0            [24]17582 	mov	b,r7
      005DCF 78r00            [12]17583 	mov	r0,#_ff_memfree
      005DD1 79s00            [12]17584 	mov	r1,#(_ff_memfree >> 8)
      005DD3 7As00            [12]17585 	mov	r2,#(_ff_memfree >> 16)
      005DD5 12r00r00         [24]17586 	lcall	__sdcc_banked_call
      005DD8                      17587 00111$:
                           005DD8 17588 	C$ff.c$3310$1_0$258 ==.
                                  17589 ;	FATFS\src\ff.c:3310: LEAVE_FF(dj.fs, res);
      005DD8 90r01rB5         [24]17590 	mov	dptr,#_f_stat_res_65536_258
      005DDB E0               [24]17591 	movx	a,@dptr
      005DDC FF               [12]17592 	mov	r7,a
      005DDD F5 82            [12]17593 	mov	dpl,a
                           005DDF 17594 	C$ff.c$3311$1_0$258 ==.
                                  17595 ;	FATFS\src\ff.c:3311: }
                           005DDF 17596 	C$ff.c$3311$1_0$258 ==.
                           005DDF 17597 	XG$f_stat$0$0 ==.
      005DDF 02r00r00         [24]17598 	ljmp	__sdcc_banked_ret
                                  17599 ;------------------------------------------------------------
                                  17600 ;Allocation info for local variables in function 'f_getlabel'
                                  17601 ;------------------------------------------------------------
                                  17602 ;sloc0                     Allocated with name '_f_getlabel_sloc0_1_0'
                                  17603 ;sloc1                     Allocated with name '_f_getlabel_sloc1_1_0'
                                  17604 ;label                     Allocated with name '_f_getlabel_PARM_2'
                                  17605 ;sn                        Allocated with name '_f_getlabel_PARM_3'
                                  17606 ;path                      Allocated with name '_f_getlabel_path_65536_264'
                                  17607 ;res                       Allocated with name '_f_getlabel_res_65536_265'
                                  17608 ;dj                        Allocated with name '_f_getlabel_dj_65536_265'
                                  17609 ;i                         Allocated with name '_f_getlabel_i_65536_265'
                                  17610 ;j                         Allocated with name '_f_getlabel_j_65536_265'
                                  17611 ;------------------------------------------------------------
                           005DE2 17612 	G$f_getlabel$0$0 ==.
                           005DE2 17613 	C$ff.c$3756$1_0$265 ==.
                                  17614 ;	FATFS\src\ff.c:3756: FRESULT f_getlabel (
                                  17615 ;	-----------------------------------------
                                  17616 ;	 function f_getlabel
                                  17617 ;	-----------------------------------------
      005DE2                      17618 _f_getlabel:
      005DE2 AF F0            [24]17619 	mov	r7,b
      005DE4 AE 83            [24]17620 	mov	r6,dph
      005DE6 E5 82            [12]17621 	mov	a,dpl
      005DE8 90r01rE6         [24]17622 	mov	dptr,#_f_getlabel_path_65536_264
      005DEB F0               [24]17623 	movx	@dptr,a
      005DEC EE               [12]17624 	mov	a,r6
      005DED A3               [24]17625 	inc	dptr
      005DEE F0               [24]17626 	movx	@dptr,a
      005DEF EF               [12]17627 	mov	a,r7
      005DF0 A3               [24]17628 	inc	dptr
      005DF1 F0               [24]17629 	movx	@dptr,a
                           005DF2 17630 	C$ff.c$3768$1_0$265 ==.
                                  17631 ;	FATFS\src\ff.c:3768: res = find_volume(&dj.fs, &path, 0);
      005DF2 90r00rDD         [24]17632 	mov	dptr,#_find_volume_PARM_2
      005DF5 74rE6            [12]17633 	mov	a,#_f_getlabel_path_65536_264
      005DF7 F0               [24]17634 	movx	@dptr,a
      005DF8 74s01            [12]17635 	mov	a,#(_f_getlabel_path_65536_264 >> 8)
      005DFA A3               [24]17636 	inc	dptr
      005DFB F0               [24]17637 	movx	@dptr,a
      005DFC E4               [12]17638 	clr	a
      005DFD A3               [24]17639 	inc	dptr
      005DFE F0               [24]17640 	movx	@dptr,a
      005DFF 90r00rE0         [24]17641 	mov	dptr,#_find_volume_PARM_3
      005E02 F0               [24]17642 	movx	@dptr,a
      005E03 90r01rEA         [24]17643 	mov	dptr,#_f_getlabel_dj_65536_265
      005E06 75 F0 00         [24]17644 	mov	b,#0x00
      005E09 78rED            [12]17645 	mov	r0,#_find_volume
      005E0B 79s30            [12]17646 	mov	r1,#(_find_volume >> 8)
      005E0D 7As00            [12]17647 	mov	r2,#(_find_volume >> 16)
      005E0F 12r00r00         [24]17648 	lcall	__sdcc_banked_call
      005E12 AF 82            [24]17649 	mov	r7,dpl
      005E14 90r01rE9         [24]17650 	mov	dptr,#_f_getlabel_res_65536_265
      005E17 EF               [12]17651 	mov	a,r7
      005E18 F0               [24]17652 	movx	@dptr,a
                           005E19 17653 	C$ff.c$3771$1_0$265 ==.
                                  17654 ;	FATFS\src\ff.c:3771: if (res == FR_OK && label) {
      005E19 EF               [12]17655 	mov	a,r7
      005E1A 60 03            [24]17656 	jz	00169$
      005E1C 02r5Fr3F         [24]17657 	ljmp	00113$
      005E1F                      17658 00169$:
      005E1F 90r01rE0         [24]17659 	mov	dptr,#_f_getlabel_PARM_2
      005E22 E0               [24]17660 	movx	a,@dptr
      005E23 FD               [12]17661 	mov	r5,a
      005E24 A3               [24]17662 	inc	dptr
      005E25 E0               [24]17663 	movx	a,@dptr
      005E26 FE               [12]17664 	mov	r6,a
      005E27 A3               [24]17665 	inc	dptr
      005E28 E0               [24]17666 	movx	a,@dptr
      005E29 FF               [12]17667 	mov	r7,a
      005E2A ED               [12]17668 	mov	a,r5
      005E2B 4E               [12]17669 	orl	a,r6
      005E2C 70 03            [24]17670 	jnz	00170$
      005E2E 02r5Fr3F         [24]17671 	ljmp	00113$
      005E31                      17672 00170$:
                           005E31 17673 	C$ff.c$3772$2_0$266 ==.
                                  17674 ;	FATFS\src\ff.c:3772: dj.sclust = 0;					/* Open root directory */
      005E31 90r01rF1         [24]17675 	mov	dptr,#(_f_getlabel_dj_65536_265 + 0x0007)
      005E34 E4               [12]17676 	clr	a
      005E35 F0               [24]17677 	movx	@dptr,a
      005E36 A3               [24]17678 	inc	dptr
      005E37 F0               [24]17679 	movx	@dptr,a
      005E38 A3               [24]17680 	inc	dptr
      005E39 F0               [24]17681 	movx	@dptr,a
      005E3A A3               [24]17682 	inc	dptr
      005E3B F0               [24]17683 	movx	@dptr,a
                           005E3C 17684 	C$ff.c$3773$2_0$266 ==.
                                  17685 ;	FATFS\src\ff.c:3773: res = dir_sdi(&dj, 0);
      005E3C 90r00r49         [24]17686 	mov	dptr,#_dir_sdi_PARM_2
      005E3F F0               [24]17687 	movx	@dptr,a
      005E40 A3               [24]17688 	inc	dptr
      005E41 F0               [24]17689 	movx	@dptr,a
      005E42 90r01rEA         [24]17690 	mov	dptr,#_f_getlabel_dj_65536_265
      005E45 75 F0 00         [24]17691 	mov	b,#0x00
      005E48 C0 07            [24]17692 	push	ar7
      005E4A C0 06            [24]17693 	push	ar6
      005E4C C0 05            [24]17694 	push	ar5
      005E4E 78r7F            [12]17695 	mov	r0,#_dir_sdi
      005E50 79s09            [12]17696 	mov	r1,#(_dir_sdi >> 8)
      005E52 7As00            [12]17697 	mov	r2,#(_dir_sdi >> 16)
      005E54 12r00r00         [24]17698 	lcall	__sdcc_banked_call
      005E57 AC 82            [24]17699 	mov	r4,dpl
      005E59 D0 05            [24]17700 	pop	ar5
      005E5B D0 06            [24]17701 	pop	ar6
      005E5D D0 07            [24]17702 	pop	ar7
      005E5F 90r01rE9         [24]17703 	mov	dptr,#_f_getlabel_res_65536_265
      005E62 EC               [12]17704 	mov	a,r4
      005E63 F0               [24]17705 	movx	@dptr,a
                           005E64 17706 	C$ff.c$3774$2_0$266 ==.
                                  17707 ;	FATFS\src\ff.c:3774: if (res == FR_OK) {
      005E64 EC               [12]17708 	mov	a,r4
      005E65 60 03            [24]17709 	jz	00171$
      005E67 02r5Fr3F         [24]17710 	ljmp	00113$
      005E6A                      17711 00171$:
                           005E6A 17712 	C$ff.c$3775$3_0$267 ==.
                                  17713 ;	FATFS\src\ff.c:3775: res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
      005E6A 90r00rA0         [24]17714 	mov	dptr,#_dir_read_PARM_2
      005E6D 74 01            [12]17715 	mov	a,#0x01
      005E6F F0               [24]17716 	movx	@dptr,a
      005E70 E4               [12]17717 	clr	a
      005E71 A3               [24]17718 	inc	dptr
      005E72 F0               [24]17719 	movx	@dptr,a
      005E73 90r01rEA         [24]17720 	mov	dptr,#_f_getlabel_dj_65536_265
      005E76 75 F0 00         [24]17721 	mov	b,#0x00
      005E79 C0 07            [24]17722 	push	ar7
      005E7B C0 06            [24]17723 	push	ar6
      005E7D C0 05            [24]17724 	push	ar5
      005E7F 78rC1            [12]17725 	mov	r0,#_dir_read
      005E81 79s1B            [12]17726 	mov	r1,#(_dir_read >> 8)
      005E83 7As00            [12]17727 	mov	r2,#(_dir_read >> 16)
      005E85 12r00r00         [24]17728 	lcall	__sdcc_banked_call
      005E88 AC 82            [24]17729 	mov	r4,dpl
      005E8A D0 05            [24]17730 	pop	ar5
      005E8C D0 06            [24]17731 	pop	ar6
      005E8E D0 07            [24]17732 	pop	ar7
      005E90 90r01rE9         [24]17733 	mov	dptr,#_f_getlabel_res_65536_265
      005E93 EC               [12]17734 	mov	a,r4
      005E94 F0               [24]17735 	movx	@dptr,a
                           005E95 17736 	C$ff.c$3776$3_0$267 ==.
                                  17737 ;	FATFS\src\ff.c:3776: if (res == FR_OK) {			/* A volume label is exist */
      005E95 EC               [12]17738 	mov	a,r4
      005E96 60 03            [24]17739 	jz	00172$
      005E98 02r5Fr2E         [24]17740 	ljmp	00107$
      005E9B                      17741 00172$:
                           005E9B 17742 	C$ff.c$3787$1_0$265 ==.
                                  17743 ;	FATFS\src\ff.c:3787: mem_cpy(label, dj.dir, 11);
      005E9B C0 04            [24]17744 	push	ar4
      005E9D 8D 01            [24]17745 	mov	ar1,r5
      005E9F 8E 02            [24]17746 	mov	ar2,r6
      005EA1 8F 03            [24]17747 	mov	ar3,r7
      005EA3 89*00            [24]17748 	mov	_f_getlabel_sloc0_1_0,r1
      005EA5 8A*01            [24]17749 	mov	(_f_getlabel_sloc0_1_0 + 1),r2
      005EA7 8B*02            [24]17750 	mov	(_f_getlabel_sloc0_1_0 + 2),r3
      005EA9 90r01rFD         [24]17751 	mov	dptr,#(_f_getlabel_dj_65536_265 + 0x0013)
      005EAC E0               [24]17752 	movx	a,@dptr
      005EAD F8               [12]17753 	mov	r0,a
      005EAE A3               [24]17754 	inc	dptr
      005EAF E0               [24]17755 	movx	a,@dptr
      005EB0 FB               [12]17756 	mov	r3,a
      005EB1 A3               [24]17757 	inc	dptr
      005EB2 E0               [24]17758 	movx	a,@dptr
      005EB3 FC               [12]17759 	mov	r4,a
      005EB4 90r00r08         [24]17760 	mov	dptr,#_mem_cpy_PARM_2
      005EB7 E8               [12]17761 	mov	a,r0
      005EB8 F0               [24]17762 	movx	@dptr,a
      005EB9 EB               [12]17763 	mov	a,r3
      005EBA A3               [24]17764 	inc	dptr
      005EBB F0               [24]17765 	movx	@dptr,a
      005EBC EC               [12]17766 	mov	a,r4
      005EBD A3               [24]17767 	inc	dptr
      005EBE F0               [24]17768 	movx	@dptr,a
      005EBF 90r00r0B         [24]17769 	mov	dptr,#_mem_cpy_PARM_3
      005EC2 74 0B            [12]17770 	mov	a,#0x0b
      005EC4 F0               [24]17771 	movx	@dptr,a
      005EC5 E4               [12]17772 	clr	a
      005EC6 A3               [24]17773 	inc	dptr
      005EC7 F0               [24]17774 	movx	@dptr,a
      005EC8 85*00 82         [24]17775 	mov	dpl,_f_getlabel_sloc0_1_0
      005ECB 85*01 83         [24]17776 	mov	dph,(_f_getlabel_sloc0_1_0 + 1)
      005ECE 85*02 F0         [24]17777 	mov	b,(_f_getlabel_sloc0_1_0 + 2)
      005ED1 C0 07            [24]17778 	push	ar7
      005ED3 C0 06            [24]17779 	push	ar6
      005ED5 C0 05            [24]17780 	push	ar5
      005ED7 C0 04            [24]17781 	push	ar4
      005ED9 78r00            [12]17782 	mov	r0,#_mem_cpy
      005EDB 79s00            [12]17783 	mov	r1,#(_mem_cpy >> 8)
      005EDD 7As00            [12]17784 	mov	r2,#(_mem_cpy >> 16)
      005EDF 12r00r00         [24]17785 	lcall	__sdcc_banked_call
      005EE2 D0 04            [24]17786 	pop	ar4
      005EE4 D0 05            [24]17787 	pop	ar5
      005EE6 D0 06            [24]17788 	pop	ar6
      005EE8 D0 07            [24]17789 	pop	ar7
                           005EEA 17790 	C$ff.c$3790$1_0$265 ==.
                                  17791 ;	FATFS\src\ff.c:3790: do {
      005EEA 75*00 0B         [24]17792 	mov	_f_getlabel_sloc0_1_0,#0x0b
      005EED 75*01 00         [24]17793 	mov	(_f_getlabel_sloc0_1_0 + 1),#0x00
                           005EF0 17794 	C$ff.c$3811$1_0$265 ==.
                                  17795 ;	FATFS\src\ff.c:3811: LEAVE_FF(dj.fs, res);
      005EF0 D0 04            [24]17796 	pop	ar4
                           005EF2 17797 	C$ff.c$3790$4_0$268 ==.
                                  17798 ;	FATFS\src\ff.c:3790: do {
      005EF2                      17799 00103$:
                           005EF2 17800 	C$ff.c$3791$5_0$269 ==.
                                  17801 ;	FATFS\src\ff.c:3791: label[j] = 0;
      005EF2 E5*00            [12]17802 	mov	a,_f_getlabel_sloc0_1_0
      005EF4 2D               [12]17803 	add	a,r5
      005EF5 F9               [12]17804 	mov	r1,a
      005EF6 E5*01            [12]17805 	mov	a,(_f_getlabel_sloc0_1_0 + 1)
      005EF8 3E               [12]17806 	addc	a,r6
      005EF9 FA               [12]17807 	mov	r2,a
      005EFA 8F 03            [24]17808 	mov	ar3,r7
      005EFC 89 82            [24]17809 	mov	dpl,r1
      005EFE 8A 83            [24]17810 	mov	dph,r2
      005F00 8B F0            [24]17811 	mov	b,r3
      005F02 E4               [12]17812 	clr	a
      005F03 12r00r00         [24]17813 	lcall	__gptrput
                           005F06 17814 	C$ff.c$3792$5_0$269 ==.
                                  17815 ;	FATFS\src\ff.c:3792: if (!j) break;
      005F06 E5*00            [12]17816 	mov	a,_f_getlabel_sloc0_1_0
      005F08 45*01            [12]17817 	orl	a,(_f_getlabel_sloc0_1_0 + 1)
      005F0A 60 22            [24]17818 	jz	00107$
                           005F0C 17819 	C$ff.c$3793$4_0$268 ==.
                                  17820 ;	FATFS\src\ff.c:3793: } while (label[--j] == ' ');
      005F0C 15*00            [12]17821 	dec	_f_getlabel_sloc0_1_0
      005F0E 74 FF            [12]17822 	mov	a,#0xff
      005F10 B5*00 02         [24]17823 	cjne	a,_f_getlabel_sloc0_1_0,00174$
      005F13 15*01            [12]17824 	dec	(_f_getlabel_sloc0_1_0 + 1)
      005F15                      17825 00174$:
      005F15 E5*00            [12]17826 	mov	a,_f_getlabel_sloc0_1_0
      005F17 2D               [12]17827 	add	a,r5
      005F18 F9               [12]17828 	mov	r1,a
      005F19 E5*01            [12]17829 	mov	a,(_f_getlabel_sloc0_1_0 + 1)
      005F1B 3E               [12]17830 	addc	a,r6
      005F1C FA               [12]17831 	mov	r2,a
      005F1D 8F 03            [24]17832 	mov	ar3,r7
      005F1F 89 82            [24]17833 	mov	dpl,r1
      005F21 8A 83            [24]17834 	mov	dph,r2
      005F23 8B F0            [24]17835 	mov	b,r3
      005F25 12r00r00         [24]17836 	lcall	__gptrget
      005F28 F9               [12]17837 	mov	r1,a
      005F29 B9 20 02         [24]17838 	cjne	r1,#0x20,00175$
      005F2C 80 C4            [24]17839 	sjmp	00103$
      005F2E                      17840 00175$:
      005F2E                      17841 00107$:
                           005F2E 17842 	C$ff.c$3795$3_0$267 ==.
                                  17843 ;	FATFS\src\ff.c:3795: if (res == FR_NO_FILE) {	/* No label, return nul string */
      005F2E BC 04 0E         [24]17844 	cjne	r4,#0x04,00113$
                           005F31 17845 	C$ff.c$3796$4_0$270 ==.
                                  17846 ;	FATFS\src\ff.c:3796: label[0] = 0;
      005F31 8D 82            [24]17847 	mov	dpl,r5
      005F33 8E 83            [24]17848 	mov	dph,r6
      005F35 8F F0            [24]17849 	mov	b,r7
      005F37 E4               [12]17850 	clr	a
      005F38 12r00r00         [24]17851 	lcall	__gptrput
                           005F3B 17852 	C$ff.c$3797$4_0$270 ==.
                                  17853 ;	FATFS\src\ff.c:3797: res = FR_OK;
      005F3B 90r01rE9         [24]17854 	mov	dptr,#_f_getlabel_res_65536_265
      005F3E F0               [24]17855 	movx	@dptr,a
      005F3F                      17856 00113$:
                           005F3F 17857 	C$ff.c$3803$1_0$265 ==.
                                  17858 ;	FATFS\src\ff.c:3803: if (res == FR_OK && sn) {
      005F3F 90r01rE9         [24]17859 	mov	dptr,#_f_getlabel_res_65536_265
      005F42 E0               [24]17860 	movx	a,@dptr
      005F43 60 03            [24]17861 	jz	00178$
      005F45 02r60r99         [24]17862 	ljmp	00118$
      005F48                      17863 00178$:
      005F48 90r01rE3         [24]17864 	mov	dptr,#_f_getlabel_PARM_3
      005F4B E0               [24]17865 	movx	a,@dptr
      005F4C F5*00            [12]17866 	mov	_f_getlabel_sloc0_1_0,a
      005F4E A3               [24]17867 	inc	dptr
      005F4F E0               [24]17868 	movx	a,@dptr
      005F50 F5*01            [12]17869 	mov	(_f_getlabel_sloc0_1_0 + 1),a
      005F52 A3               [24]17870 	inc	dptr
      005F53 E0               [24]17871 	movx	a,@dptr
      005F54 F5*02            [12]17872 	mov	(_f_getlabel_sloc0_1_0 + 2),a
      005F56 90r01rE3         [24]17873 	mov	dptr,#_f_getlabel_PARM_3
      005F59 E0               [24]17874 	movx	a,@dptr
      005F5A F5 F0            [12]17875 	mov	b,a
      005F5C A3               [24]17876 	inc	dptr
      005F5D E0               [24]17877 	movx	a,@dptr
      005F5E 45 F0            [12]17878 	orl	a,b
      005F60 70 03            [24]17879 	jnz	00179$
      005F62 02r60r99         [24]17880 	ljmp	00118$
      005F65                      17881 00179$:
                           005F65 17882 	C$ff.c$3804$1_0$265 ==.
                                  17883 ;	FATFS\src\ff.c:3804: res = move_window(dj.fs, dj.fs->volbase);
      005F65 90r01rEA         [24]17884 	mov	dptr,#_f_getlabel_dj_65536_265
      005F68 E0               [24]17885 	movx	a,@dptr
      005F69 FA               [12]17886 	mov	r2,a
      005F6A A3               [24]17887 	inc	dptr
      005F6B E0               [24]17888 	movx	a,@dptr
      005F6C FB               [12]17889 	mov	r3,a
      005F6D A3               [24]17890 	inc	dptr
      005F6E E0               [24]17891 	movx	a,@dptr
      005F6F FC               [12]17892 	mov	r4,a
      005F70 74 12            [12]17893 	mov	a,#0x12
      005F72 2A               [12]17894 	add	a,r2
      005F73 F8               [12]17895 	mov	r0,a
      005F74 E4               [12]17896 	clr	a
      005F75 3B               [12]17897 	addc	a,r3
      005F76 F9               [12]17898 	mov	r1,a
      005F77 8C 07            [24]17899 	mov	ar7,r4
      005F79 88 82            [24]17900 	mov	dpl,r0
      005F7B 89 83            [24]17901 	mov	dph,r1
      005F7D 8F F0            [24]17902 	mov	b,r7
      005F7F 12r00r00         [24]17903 	lcall	__gptrget
      005F82 F8               [12]17904 	mov	r0,a
      005F83 A3               [24]17905 	inc	dptr
      005F84 12r00r00         [24]17906 	lcall	__gptrget
      005F87 F9               [12]17907 	mov	r1,a
      005F88 A3               [24]17908 	inc	dptr
      005F89 12r00r00         [24]17909 	lcall	__gptrget
      005F8C FF               [12]17910 	mov	r7,a
      005F8D A3               [24]17911 	inc	dptr
      005F8E 12r00r00         [24]17912 	lcall	__gptrget
      005F91 FE               [12]17913 	mov	r6,a
      005F92 90r00r26         [24]17914 	mov	dptr,#_move_window_PARM_2
      005F95 E8               [12]17915 	mov	a,r0
      005F96 F0               [24]17916 	movx	@dptr,a
      005F97 E9               [12]17917 	mov	a,r1
      005F98 A3               [24]17918 	inc	dptr
      005F99 F0               [24]17919 	movx	@dptr,a
      005F9A EF               [12]17920 	mov	a,r7
      005F9B A3               [24]17921 	inc	dptr
      005F9C F0               [24]17922 	movx	@dptr,a
      005F9D EE               [12]17923 	mov	a,r6
      005F9E A3               [24]17924 	inc	dptr
      005F9F F0               [24]17925 	movx	@dptr,a
      005FA0 8A 82            [24]17926 	mov	dpl,r2
      005FA2 8B 83            [24]17927 	mov	dph,r3
      005FA4 8C F0            [24]17928 	mov	b,r4
      005FA6 78rB4            [12]17929 	mov	r0,#_move_window
      005FA8 79s01            [12]17930 	mov	r1,#(_move_window >> 8)
      005FAA 7As00            [12]17931 	mov	r2,#(_move_window >> 16)
      005FAC 12r00r00         [24]17932 	lcall	__sdcc_banked_call
      005FAF AF 82            [24]17933 	mov	r7,dpl
      005FB1 90r01rE9         [24]17934 	mov	dptr,#_f_getlabel_res_65536_265
      005FB4 EF               [12]17935 	mov	a,r7
      005FB5 F0               [24]17936 	movx	@dptr,a
                           005FB6 17937 	C$ff.c$3805$1_0$265 ==.
                                  17938 ;	FATFS\src\ff.c:3805: if (res == FR_OK) {
      005FB6 EF               [12]17939 	mov	a,r7
      005FB7 60 03            [24]17940 	jz	00180$
      005FB9 02r60r99         [24]17941 	ljmp	00118$
      005FBC                      17942 00180$:
                           005FBC 17943 	C$ff.c$3806$3_0$272 ==.
                                  17944 ;	FATFS\src\ff.c:3806: i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
      005FBC 90r01rEA         [24]17945 	mov	dptr,#_f_getlabel_dj_65536_265
      005FBF E0               [24]17946 	movx	a,@dptr
      005FC0 FA               [12]17947 	mov	r2,a
      005FC1 A3               [24]17948 	inc	dptr
      005FC2 E0               [24]17949 	movx	a,@dptr
      005FC3 FB               [12]17950 	mov	r3,a
      005FC4 A3               [24]17951 	inc	dptr
      005FC5 E0               [24]17952 	movx	a,@dptr
      005FC6 FC               [12]17953 	mov	r4,a
      005FC7 8A 82            [24]17954 	mov	dpl,r2
      005FC9 8B 83            [24]17955 	mov	dph,r3
      005FCB 8C F0            [24]17956 	mov	b,r4
      005FCD 12r00r00         [24]17957 	lcall	__gptrget
      005FD0 FA               [12]17958 	mov	r2,a
      005FD1 BA 03 06         [24]17959 	cjne	r2,#0x03,00122$
      005FD4 7B 43            [12]17960 	mov	r3,#0x43
      005FD6 7C 00            [12]17961 	mov	r4,#0x00
      005FD8 80 04            [24]17962 	sjmp	00123$
      005FDA                      17963 00122$:
      005FDA 7B 27            [12]17964 	mov	r3,#0x27
      005FDC 7C 00            [12]17965 	mov	r4,#0x00
      005FDE                      17966 00123$:
                           005FDE 17967 	C$ff.c$3807$3_0$272 ==.
                                  17968 ;	FATFS\src\ff.c:3807: *sn = LD_DWORD(&dj.fs->win[i]);
      005FDE 90r01rEA         [24]17969 	mov	dptr,#_f_getlabel_dj_65536_265
      005FE1 E0               [24]17970 	movx	a,@dptr
      005FE2 F8               [12]17971 	mov	r0,a
      005FE3 A3               [24]17972 	inc	dptr
      005FE4 E0               [24]17973 	movx	a,@dptr
      005FE5 F9               [12]17974 	mov	r1,a
      005FE6 A3               [24]17975 	inc	dptr
      005FE7 E0               [24]17976 	movx	a,@dptr
      005FE8 FA               [12]17977 	mov	r2,a
      005FE9 74 26            [12]17978 	mov	a,#0x26
      005FEB 28               [12]17979 	add	a,r0
      005FEC F8               [12]17980 	mov	r0,a
      005FED E4               [12]17981 	clr	a
      005FEE 39               [12]17982 	addc	a,r1
      005FEF F9               [12]17983 	mov	r1,a
      005FF0 EB               [12]17984 	mov	a,r3
      005FF1 28               [12]17985 	add	a,r0
      005FF2 F8               [12]17986 	mov	r0,a
      005FF3 EC               [12]17987 	mov	a,r4
      005FF4 39               [12]17988 	addc	a,r1
      005FF5 F9               [12]17989 	mov	r1,a
      005FF6 74 03            [12]17990 	mov	a,#0x03
      005FF8 28               [12]17991 	add	a,r0
      005FF9 FB               [12]17992 	mov	r3,a
      005FFA E4               [12]17993 	clr	a
      005FFB 39               [12]17994 	addc	a,r1
      005FFC FC               [12]17995 	mov	r4,a
      005FFD 8A 07            [24]17996 	mov	ar7,r2
      005FFF 8B 82            [24]17997 	mov	dpl,r3
      006001 8C 83            [24]17998 	mov	dph,r4
      006003 8F F0            [24]17999 	mov	b,r7
      006005 12r00r00         [24]18000 	lcall	__gptrget
      006008 FB               [12]18001 	mov	r3,a
      006009 7F 00            [12]18002 	mov	r7,#0x00
      00600B 8B*06            [24]18003 	mov	(_f_getlabel_sloc1_1_0 + 3),r3
                                  18004 ;	1-genFromRTrack replaced	mov	_f_getlabel_sloc1_1_0,#0x00
      00600D 8F*03            [24]18005 	mov	_f_getlabel_sloc1_1_0,r7
                                  18006 ;	1-genFromRTrack replaced	mov	(_f_getlabel_sloc1_1_0 + 1),#0x00
      00600F 8F*04            [24]18007 	mov	(_f_getlabel_sloc1_1_0 + 1),r7
                                  18008 ;	1-genFromRTrack replaced	mov	(_f_getlabel_sloc1_1_0 + 2),#0x00
      006011 8F*05            [24]18009 	mov	(_f_getlabel_sloc1_1_0 + 2),r7
      006013 74 02            [12]18010 	mov	a,#0x02
      006015 28               [12]18011 	add	a,r0
      006016 FC               [12]18012 	mov	r4,a
      006017 E4               [12]18013 	clr	a
      006018 39               [12]18014 	addc	a,r1
      006019 FE               [12]18015 	mov	r6,a
      00601A 8A 07            [24]18016 	mov	ar7,r2
      00601C 8C 82            [24]18017 	mov	dpl,r4
      00601E 8E 83            [24]18018 	mov	dph,r6
      006020 8F F0            [24]18019 	mov	b,r7
      006022 12r00r00         [24]18020 	lcall	__gptrget
      006025 FC               [12]18021 	mov	r4,a
      006026 7F 00            [12]18022 	mov	r7,#0x00
      006028 8F 05            [24]18023 	mov	ar5,r7
      00602A 8C 06            [24]18024 	mov	ar6,r4
      00602C E4               [12]18025 	clr	a
      00602D FF               [12]18026 	mov	r7,a
      00602E 42*03            [12]18027 	orl	_f_getlabel_sloc1_1_0,a
      006030 EF               [12]18028 	mov	a,r7
      006031 42*04            [12]18029 	orl	(_f_getlabel_sloc1_1_0 + 1),a
      006033 EE               [12]18030 	mov	a,r6
      006034 42*05            [12]18031 	orl	(_f_getlabel_sloc1_1_0 + 2),a
      006036 ED               [12]18032 	mov	a,r5
      006037 42*06            [12]18033 	orl	(_f_getlabel_sloc1_1_0 + 3),a
      006039 74 01            [12]18034 	mov	a,#0x01
      00603B 28               [12]18035 	add	a,r0
      00603C FB               [12]18036 	mov	r3,a
      00603D E4               [12]18037 	clr	a
      00603E 39               [12]18038 	addc	a,r1
      00603F FE               [12]18039 	mov	r6,a
      006040 8A 07            [24]18040 	mov	ar7,r2
      006042 8B 82            [24]18041 	mov	dpl,r3
      006044 8E 83            [24]18042 	mov	dph,r6
      006046 8F F0            [24]18043 	mov	b,r7
      006048 12r00r00         [24]18044 	lcall	__gptrget
      00604B FF               [12]18045 	mov	r7,a
      00604C 7B 00            [12]18046 	mov	r3,#0x00
      00604E 8F 06            [24]18047 	mov	ar6,r7
      006050 E4               [12]18048 	clr	a
      006051 FF               [12]18049 	mov	r7,a
      006052 FD               [12]18050 	mov	r5,a
      006053 E5*03            [12]18051 	mov	a,_f_getlabel_sloc1_1_0
      006055 42 03            [12]18052 	orl	ar3,a
      006057 E5*04            [12]18053 	mov	a,(_f_getlabel_sloc1_1_0 + 1)
      006059 42 06            [12]18054 	orl	ar6,a
      00605B E5*05            [12]18055 	mov	a,(_f_getlabel_sloc1_1_0 + 2)
      00605D 42 07            [12]18056 	orl	ar7,a
      00605F E5*06            [12]18057 	mov	a,(_f_getlabel_sloc1_1_0 + 3)
      006061 42 05            [12]18058 	orl	ar5,a
      006063 88 82            [24]18059 	mov	dpl,r0
      006065 89 83            [24]18060 	mov	dph,r1
      006067 8A F0            [24]18061 	mov	b,r2
      006069 12r00r00         [24]18062 	lcall	__gptrget
      00606C F8               [12]18063 	mov	r0,a
      00606D E4               [12]18064 	clr	a
      00606E F9               [12]18065 	mov	r1,a
      00606F FA               [12]18066 	mov	r2,a
      006070 FC               [12]18067 	mov	r4,a
      006071 E8               [12]18068 	mov	a,r0
      006072 42 03            [12]18069 	orl	ar3,a
      006074 E9               [12]18070 	mov	a,r1
      006075 42 06            [12]18071 	orl	ar6,a
      006077 EA               [12]18072 	mov	a,r2
      006078 42 07            [12]18073 	orl	ar7,a
      00607A EC               [12]18074 	mov	a,r4
      00607B 42 05            [12]18075 	orl	ar5,a
      00607D 85*00 82         [24]18076 	mov	dpl,_f_getlabel_sloc0_1_0
      006080 85*01 83         [24]18077 	mov	dph,(_f_getlabel_sloc0_1_0 + 1)
      006083 85*02 F0         [24]18078 	mov	b,(_f_getlabel_sloc0_1_0 + 2)
      006086 EB               [12]18079 	mov	a,r3
      006087 12r00r00         [24]18080 	lcall	__gptrput
      00608A A3               [24]18081 	inc	dptr
      00608B EE               [12]18082 	mov	a,r6
      00608C 12r00r00         [24]18083 	lcall	__gptrput
      00608F A3               [24]18084 	inc	dptr
      006090 EF               [12]18085 	mov	a,r7
      006091 12r00r00         [24]18086 	lcall	__gptrput
      006094 A3               [24]18087 	inc	dptr
      006095 ED               [12]18088 	mov	a,r5
      006096 12r00r00         [24]18089 	lcall	__gptrput
      006099                      18090 00118$:
                           006099 18091 	C$ff.c$3811$1_0$265 ==.
                                  18092 ;	FATFS\src\ff.c:3811: LEAVE_FF(dj.fs, res);
      006099 90r01rE9         [24]18093 	mov	dptr,#_f_getlabel_res_65536_265
      00609C E0               [24]18094 	movx	a,@dptr
      00609D FF               [12]18095 	mov	r7,a
      00609E F5 82            [12]18096 	mov	dpl,a
                           0060A0 18097 	C$ff.c$3812$1_0$265 ==.
                                  18098 ;	FATFS\src\ff.c:3812: }
                           0060A0 18099 	C$ff.c$3812$1_0$265 ==.
                           0060A0 18100 	XG$f_getlabel$0$0 ==.
      0060A0 02r00r00         [24]18101 	ljmp	__sdcc_banked_ret
                                  18102 ;------------------------------------------------------------
                                  18103 ;Allocation info for local variables in function 'f_gets'
                                  18104 ;------------------------------------------------------------
                                  18105 ;len                       Allocated with name '_f_gets_PARM_2'
                                  18106 ;fp                        Allocated with name '_f_gets_PARM_3'
                                  18107 ;buff                      Allocated with name '_f_gets_buff_65536_273'
                                  18108 ;n                         Allocated with name '_f_gets_n_65536_274'
                                  18109 ;c                         Allocated with name '_f_gets_c_65536_274'
                                  18110 ;p                         Allocated with name '_f_gets_p_65536_274'
                                  18111 ;s                         Allocated with name '_f_gets_s_65536_274'
                                  18112 ;rc                        Allocated with name '_f_gets_rc_65536_274'
                                  18113 ;------------------------------------------------------------
                           0060A3 18114 	G$f_gets$0$0 ==.
                           0060A3 18115 	C$ff.c$4297$1_0$274 ==.
                                  18116 ;	FATFS\src\ff.c:4297: TCHAR* f_gets (
                                  18117 ;	-----------------------------------------
                                  18118 ;	 function f_gets
                                  18119 ;	-----------------------------------------
      0060A3                      18120 _f_gets:
      0060A3 AF F0            [24]18121 	mov	r7,b
      0060A5 AE 83            [24]18122 	mov	r6,dph
      0060A7 E5 82            [12]18123 	mov	a,dpl
      0060A9 90r02r0D         [24]18124 	mov	dptr,#_f_gets_buff_65536_273
      0060AC F0               [24]18125 	movx	@dptr,a
      0060AD EE               [12]18126 	mov	a,r6
      0060AE A3               [24]18127 	inc	dptr
      0060AF F0               [24]18128 	movx	@dptr,a
      0060B0 EF               [12]18129 	mov	a,r7
      0060B1 A3               [24]18130 	inc	dptr
      0060B2 F0               [24]18131 	movx	@dptr,a
                           0060B3 18132 	C$ff.c$4304$2_0$274 ==.
                                  18133 ;	FATFS\src\ff.c:4304: TCHAR c, *p = buff;
      0060B3 90r02r0D         [24]18134 	mov	dptr,#_f_gets_buff_65536_273
      0060B6 E0               [24]18135 	movx	a,@dptr
      0060B7 FD               [12]18136 	mov	r5,a
      0060B8 A3               [24]18137 	inc	dptr
      0060B9 E0               [24]18138 	movx	a,@dptr
      0060BA FE               [12]18139 	mov	r6,a
      0060BB A3               [24]18140 	inc	dptr
      0060BC E0               [24]18141 	movx	a,@dptr
      0060BD FF               [12]18142 	mov	r7,a
                           0060BE 18143 	C$ff.c$4309$1_0$274 ==.
                                  18144 ;	FATFS\src\ff.c:4309: while (n < len - 1) {	/* Read characters until buffer gets filled */
      0060BE 90r02r08         [24]18145 	mov	dptr,#_f_gets_PARM_2
      0060C1 E0               [24]18146 	movx	a,@dptr
      0060C2 FB               [12]18147 	mov	r3,a
      0060C3 A3               [24]18148 	inc	dptr
      0060C4 E0               [24]18149 	movx	a,@dptr
      0060C5 FC               [12]18150 	mov	r4,a
      0060C6 1B               [12]18151 	dec	r3
      0060C7 BB FF 01         [24]18152 	cjne	r3,#0xff,00132$
      0060CA 1C               [12]18153 	dec	r4
      0060CB                      18154 00132$:
      0060CB 79 00            [12]18155 	mov	r1,#0x00
      0060CD 7A 00            [12]18156 	mov	r2,#0x00
      0060CF                      18157 00108$:
      0060CF C3               [12]18158 	clr	c
      0060D0 E9               [12]18159 	mov	a,r1
      0060D1 9B               [12]18160 	subb	a,r3
      0060D2 EA               [12]18161 	mov	a,r2
      0060D3 64 80            [12]18162 	xrl	a,#0x80
      0060D5 8C F0            [24]18163 	mov	b,r4
      0060D7 63 F0 80         [24]18164 	xrl	b,#0x80
      0060DA 95 F0            [12]18165 	subb	a,b
      0060DC 40 03            [24]18166 	jc	00133$
      0060DE 02r61r77         [24]18167 	ljmp	00110$
      0060E1                      18168 00133$:
                           0060E1 18169 	C$ff.c$4354$1_0$274 ==.
                                  18170 ;	FATFS\src\ff.c:4354: f_read(fp, s, 1, &rc);
      0060E1 C0 03            [24]18171 	push	ar3
      0060E3 C0 04            [24]18172 	push	ar4
      0060E5 90r02r0A         [24]18173 	mov	dptr,#_f_gets_PARM_3
      0060E8 E0               [24]18174 	movx	a,@dptr
      0060E9 F8               [12]18175 	mov	r0,a
      0060EA A3               [24]18176 	inc	dptr
      0060EB E0               [24]18177 	movx	a,@dptr
      0060EC FB               [12]18178 	mov	r3,a
      0060ED A3               [24]18179 	inc	dptr
      0060EE E0               [24]18180 	movx	a,@dptr
      0060EF FC               [12]18181 	mov	r4,a
      0060F0 90r01r47         [24]18182 	mov	dptr,#_f_read_PARM_2
      0060F3 74r10            [12]18183 	mov	a,#_f_gets_s_65536_274
      0060F5 F0               [24]18184 	movx	@dptr,a
      0060F6 74s02            [12]18185 	mov	a,#(_f_gets_s_65536_274 >> 8)
      0060F8 A3               [24]18186 	inc	dptr
      0060F9 F0               [24]18187 	movx	@dptr,a
      0060FA E4               [12]18188 	clr	a
      0060FB A3               [24]18189 	inc	dptr
      0060FC F0               [24]18190 	movx	@dptr,a
      0060FD 90r01r4A         [24]18191 	mov	dptr,#_f_read_PARM_3
      006100 04               [12]18192 	inc	a
      006101 F0               [24]18193 	movx	@dptr,a
      006102 E4               [12]18194 	clr	a
      006103 A3               [24]18195 	inc	dptr
      006104 F0               [24]18196 	movx	@dptr,a
      006105 90r01r4C         [24]18197 	mov	dptr,#_f_read_PARM_4
      006108 74r12            [12]18198 	mov	a,#_f_gets_rc_65536_274
      00610A F0               [24]18199 	movx	@dptr,a
      00610B 74s02            [12]18200 	mov	a,#(_f_gets_rc_65536_274 >> 8)
      00610D A3               [24]18201 	inc	dptr
      00610E F0               [24]18202 	movx	@dptr,a
      00610F E4               [12]18203 	clr	a
      006110 A3               [24]18204 	inc	dptr
      006111 F0               [24]18205 	movx	@dptr,a
      006112 88 82            [24]18206 	mov	dpl,r0
      006114 8B 83            [24]18207 	mov	dph,r3
      006116 8C F0            [24]18208 	mov	b,r4
      006118 C0 07            [24]18209 	push	ar7
      00611A C0 06            [24]18210 	push	ar6
      00611C C0 05            [24]18211 	push	ar5
      00611E C0 04            [24]18212 	push	ar4
      006120 C0 03            [24]18213 	push	ar3
      006122 C0 02            [24]18214 	push	ar2
      006124 C0 01            [24]18215 	push	ar1
      006126 78rCC            [12]18216 	mov	r0,#_f_read
      006128 79s42            [12]18217 	mov	r1,#(_f_read >> 8)
      00612A 7As00            [12]18218 	mov	r2,#(_f_read >> 16)
      00612C 12r00r00         [24]18219 	lcall	__sdcc_banked_call
      00612F D0 01            [24]18220 	pop	ar1
      006131 D0 02            [24]18221 	pop	ar2
      006133 D0 03            [24]18222 	pop	ar3
      006135 D0 04            [24]18223 	pop	ar4
      006137 D0 05            [24]18224 	pop	ar5
      006139 D0 06            [24]18225 	pop	ar6
      00613B D0 07            [24]18226 	pop	ar7
                           00613D 18227 	C$ff.c$4355$2_0$275 ==.
                                  18228 ;	FATFS\src\ff.c:4355: if (rc != 1) break;
      00613D 90r02r12         [24]18229 	mov	dptr,#_f_gets_rc_65536_274
      006140 E0               [24]18230 	movx	a,@dptr
      006141 FB               [12]18231 	mov	r3,a
      006142 A3               [24]18232 	inc	dptr
      006143 E0               [24]18233 	movx	a,@dptr
      006144 FC               [12]18234 	mov	r4,a
      006145 BB 01 05         [24]18235 	cjne	r3,#0x01,00134$
      006148 BC 00 02         [24]18236 	cjne	r4,#0x00,00134$
      00614B 80 06            [24]18237 	sjmp	00135$
      00614D                      18238 00134$:
      00614D D0 04            [24]18239 	pop	ar4
      00614F D0 03            [24]18240 	pop	ar3
      006151 80 24            [24]18241 	sjmp	00110$
      006153                      18242 00135$:
      006153 D0 04            [24]18243 	pop	ar4
      006155 D0 03            [24]18244 	pop	ar3
                           006157 18245 	C$ff.c$4356$2_0$275 ==.
                                  18246 ;	FATFS\src\ff.c:4356: c = s[0];
      006157 90r02r10         [24]18247 	mov	dptr,#_f_gets_s_65536_274
      00615A E0               [24]18248 	movx	a,@dptr
                           00615B 18249 	C$ff.c$4359$2_0$275 ==.
                                  18250 ;	FATFS\src\ff.c:4359: *p++ = c;
      00615B F8               [12]18251 	mov	r0,a
      00615C 8D 82            [24]18252 	mov	dpl,r5
      00615E 8E 83            [24]18253 	mov	dph,r6
      006160 8F F0            [24]18254 	mov	b,r7
      006162 12r00r00         [24]18255 	lcall	__gptrput
      006165 A3               [24]18256 	inc	dptr
      006166 AD 82            [24]18257 	mov	r5,dpl
      006168 AE 83            [24]18258 	mov	r6,dph
                           00616A 18259 	C$ff.c$4360$2_0$275 ==.
                                  18260 ;	FATFS\src\ff.c:4360: n++;
      00616A 09               [12]18261 	inc	r1
      00616B B9 00 01         [24]18262 	cjne	r1,#0x00,00136$
      00616E 0A               [12]18263 	inc	r2
      00616F                      18264 00136$:
                           00616F 18265 	C$ff.c$4361$2_0$275 ==.
                                  18266 ;	FATFS\src\ff.c:4361: if (c == '\n') break;		/* Break on EOL */
      00616F B8 0A 02         [24]18267 	cjne	r0,#0x0a,00137$
      006172 80 03            [24]18268 	sjmp	00138$
      006174                      18269 00137$:
      006174 02r60rCF         [24]18270 	ljmp	00108$
      006177                      18271 00138$:
      006177                      18272 00110$:
                           006177 18273 	C$ff.c$4363$1_0$274 ==.
                                  18274 ;	FATFS\src\ff.c:4363: *p = 0;
      006177 8D 82            [24]18275 	mov	dpl,r5
      006179 8E 83            [24]18276 	mov	dph,r6
      00617B 8F F0            [24]18277 	mov	b,r7
      00617D E4               [12]18278 	clr	a
      00617E 12r00r00         [24]18279 	lcall	__gptrput
                           006181 18280 	C$ff.c$4364$1_0$274 ==.
                                  18281 ;	FATFS\src\ff.c:4364: return n ? buff : 0;			/* When no data read (eof or error), return with error. */
      006181 E9               [12]18282 	mov	a,r1
      006182 4A               [12]18283 	orl	a,r2
      006183 60 0D            [24]18284 	jz	00113$
      006185 90r02r0D         [24]18285 	mov	dptr,#_f_gets_buff_65536_273
      006188 E0               [24]18286 	movx	a,@dptr
      006189 FD               [12]18287 	mov	r5,a
      00618A A3               [24]18288 	inc	dptr
      00618B E0               [24]18289 	movx	a,@dptr
      00618C FE               [12]18290 	mov	r6,a
      00618D A3               [24]18291 	inc	dptr
      00618E E0               [24]18292 	movx	a,@dptr
      00618F FF               [12]18293 	mov	r7,a
      006190 80 06            [24]18294 	sjmp	00114$
      006192                      18295 00113$:
      006192 7D 00            [12]18296 	mov	r5,#0x00
      006194 7E 00            [12]18297 	mov	r6,#0x00
      006196 7F 00            [12]18298 	mov	r7,#0x00
      006198                      18299 00114$:
      006198 8D 82            [24]18300 	mov	dpl,r5
      00619A 8E 83            [24]18301 	mov	dph,r6
      00619C 8F F0            [24]18302 	mov	b,r7
                           00619E 18303 	C$ff.c$4365$1_0$274 ==.
                                  18304 ;	FATFS\src\ff.c:4365: }
                           00619E 18305 	C$ff.c$4365$1_0$274 ==.
                           00619E 18306 	XG$f_gets$0$0 ==.
      00619E 02r00r00         [24]18307 	ljmp	__sdcc_banked_ret
                                  18308 	.area CSEG    (CODE)
                                  18309 	.area CONST   (CODE)
                           000000 18310 Fff$ExCvt$0_0$0 == .
      000000                      18311 _ExCvt:
      000000 80                   18312 	.db #0x80	; 128
      000001 9A                   18313 	.db #0x9a	; 154
      000002 90                   18314 	.db #0x90	; 144
      000003 41                   18315 	.db #0x41	; 65	'A'
      000004 8E                   18316 	.db #0x8e	; 142
      000005 41                   18317 	.db #0x41	; 65	'A'
      000006 8F                   18318 	.db #0x8f	; 143
      000007 80                   18319 	.db #0x80	; 128
      000008 45                   18320 	.db #0x45	; 69	'E'
      000009 45                   18321 	.db #0x45	; 69	'E'
      00000A 45                   18322 	.db #0x45	; 69	'E'
      00000B 49                   18323 	.db #0x49	; 73	'I'
      00000C 49                   18324 	.db #0x49	; 73	'I'
      00000D 49                   18325 	.db #0x49	; 73	'I'
      00000E 8E                   18326 	.db #0x8e	; 142
      00000F 8F                   18327 	.db #0x8f	; 143
      000010 90                   18328 	.db #0x90	; 144
      000011 92                   18329 	.db #0x92	; 146
      000012 92                   18330 	.db #0x92	; 146
      000013 4F                   18331 	.db #0x4f	; 79	'O'
      000014 99                   18332 	.db #0x99	; 153
      000015 4F                   18333 	.db #0x4f	; 79	'O'
      000016 55                   18334 	.db #0x55	; 85	'U'
      000017 55                   18335 	.db #0x55	; 85	'U'
      000018 59                   18336 	.db #0x59	; 89	'Y'
      000019 99                   18337 	.db #0x99	; 153
      00001A 9A                   18338 	.db #0x9a	; 154
      00001B 9B                   18339 	.db #0x9b	; 155
      00001C 9C                   18340 	.db #0x9c	; 156
      00001D 9D                   18341 	.db #0x9d	; 157
      00001E 9E                   18342 	.db #0x9e	; 158
      00001F 9F                   18343 	.db #0x9f	; 159
      000020 41                   18344 	.db #0x41	; 65	'A'
      000021 49                   18345 	.db #0x49	; 73	'I'
      000022 4F                   18346 	.db #0x4f	; 79	'O'
      000023 55                   18347 	.db #0x55	; 85	'U'
      000024 A5                   18348 	.db #0xa5	; 165
      000025 A5                   18349 	.db #0xa5	; 165
      000026 A6                   18350 	.db #0xa6	; 166
      000027 A7                   18351 	.db #0xa7	; 167
      000028 A8                   18352 	.db #0xa8	; 168
      000029 A9                   18353 	.db #0xa9	; 169
      00002A AA                   18354 	.db #0xaa	; 170
      00002B AB                   18355 	.db #0xab	; 171
      00002C AC                   18356 	.db #0xac	; 172
      00002D 21                   18357 	.db #0x21	; 33
      00002E AE                   18358 	.db #0xae	; 174
      00002F AF                   18359 	.db #0xaf	; 175
      000030 B0                   18360 	.db #0xb0	; 176
      000031 B1                   18361 	.db #0xb1	; 177
      000032 B2                   18362 	.db #0xb2	; 178
      000033 B3                   18363 	.db #0xb3	; 179
      000034 B4                   18364 	.db #0xb4	; 180
      000035 B5                   18365 	.db #0xb5	; 181
      000036 B6                   18366 	.db #0xb6	; 182
      000037 B7                   18367 	.db #0xb7	; 183
      000038 B8                   18368 	.db #0xb8	; 184
      000039 B9                   18369 	.db #0xb9	; 185
      00003A BA                   18370 	.db #0xba	; 186
      00003B BB                   18371 	.db #0xbb	; 187
      00003C BC                   18372 	.db #0xbc	; 188
      00003D BD                   18373 	.db #0xbd	; 189
      00003E BE                   18374 	.db #0xbe	; 190
      00003F BF                   18375 	.db #0xbf	; 191
      000040 C0                   18376 	.db #0xc0	; 192
      000041 C1                   18377 	.db #0xc1	; 193
      000042 C2                   18378 	.db #0xc2	; 194
      000043 C3                   18379 	.db #0xc3	; 195
      000044 C4                   18380 	.db #0xc4	; 196
      000045 C5                   18381 	.db #0xc5	; 197
      000046 C6                   18382 	.db #0xc6	; 198
      000047 C7                   18383 	.db #0xc7	; 199
      000048 C8                   18384 	.db #0xc8	; 200
      000049 C9                   18385 	.db #0xc9	; 201
      00004A CA                   18386 	.db #0xca	; 202
      00004B CB                   18387 	.db #0xcb	; 203
      00004C CC                   18388 	.db #0xcc	; 204
      00004D CD                   18389 	.db #0xcd	; 205
      00004E CE                   18390 	.db #0xce	; 206
      00004F CF                   18391 	.db #0xcf	; 207
      000050 D0                   18392 	.db #0xd0	; 208
      000051 D1                   18393 	.db #0xd1	; 209
      000052 D2                   18394 	.db #0xd2	; 210
      000053 D3                   18395 	.db #0xd3	; 211
      000054 D4                   18396 	.db #0xd4	; 212
      000055 D5                   18397 	.db #0xd5	; 213
      000056 D6                   18398 	.db #0xd6	; 214
      000057 D7                   18399 	.db #0xd7	; 215
      000058 D8                   18400 	.db #0xd8	; 216
      000059 D9                   18401 	.db #0xd9	; 217
      00005A DA                   18402 	.db #0xda	; 218
      00005B DB                   18403 	.db #0xdb	; 219
      00005C DC                   18404 	.db #0xdc	; 220
      00005D DD                   18405 	.db #0xdd	; 221
      00005E DE                   18406 	.db #0xde	; 222
      00005F DF                   18407 	.db #0xdf	; 223
      000060 E0                   18408 	.db #0xe0	; 224
      000061 E1                   18409 	.db #0xe1	; 225
      000062 E2                   18410 	.db #0xe2	; 226
      000063 E3                   18411 	.db #0xe3	; 227
      000064 E4                   18412 	.db #0xe4	; 228
      000065 E5                   18413 	.db #0xe5	; 229
      000066 E6                   18414 	.db #0xe6	; 230
      000067 E7                   18415 	.db #0xe7	; 231
      000068 E8                   18416 	.db #0xe8	; 232
      000069 E9                   18417 	.db #0xe9	; 233
      00006A EA                   18418 	.db #0xea	; 234
      00006B EB                   18419 	.db #0xeb	; 235
      00006C EC                   18420 	.db #0xec	; 236
      00006D ED                   18421 	.db #0xed	; 237
      00006E EE                   18422 	.db #0xee	; 238
      00006F EF                   18423 	.db #0xef	; 239
      000070 F0                   18424 	.db #0xf0	; 240
      000071 F1                   18425 	.db #0xf1	; 241
      000072 F2                   18426 	.db #0xf2	; 242
      000073 F3                   18427 	.db #0xf3	; 243
      000074 F4                   18428 	.db #0xf4	; 244
      000075 F5                   18429 	.db #0xf5	; 245
      000076 F6                   18430 	.db #0xf6	; 246
      000077 F7                   18431 	.db #0xf7	; 247
      000078 F8                   18432 	.db #0xf8	; 248
      000079 F9                   18433 	.db #0xf9	; 249
      00007A FA                   18434 	.db #0xfa	; 250
      00007B FB                   18435 	.db #0xfb	; 251
      00007C FC                   18436 	.db #0xfc	; 252
      00007D FD                   18437 	.db #0xfd	; 253
      00007E FE                   18438 	.db #0xfe	; 254
      00007F FF                   18439 	.db #0xff	; 255
                           000080 18440 Fff$LfnOfs$0_0$0 == .
      000080                      18441 _LfnOfs:
      000080 01                   18442 	.db #0x01	; 1
      000081 03                   18443 	.db #0x03	; 3
      000082 05                   18444 	.db #0x05	; 5
      000083 07                   18445 	.db #0x07	; 7
      000084 09                   18446 	.db #0x09	; 9
      000085 0E                   18447 	.db #0x0e	; 14
      000086 10                   18448 	.db #0x10	; 16
      000087 12                   18449 	.db #0x12	; 18
      000088 14                   18450 	.db #0x14	; 20
      000089 16                   18451 	.db #0x16	; 22
      00008A 18                   18452 	.db #0x18	; 24
      00008B 1C                   18453 	.db #0x1c	; 28
      00008C 1E                   18454 	.db #0x1e	; 30
                           00008D 18455 Fff$__str_0$0_0$0 == .
      00008D                      18456 ___str_0:
      00008D 22                   18457 	.db 0x22
      00008E 2A 3A 3C 3E 3F 7C    18458 	.ascii "*:<>?|"
      000094 7F                   18459 	.db 0x7f
      000095 00                   18460 	.db 0x00
                           000096 18461 Fff$__str_1$0_0$0 == .
      000096                      18462 ___str_1:
      000096 2B 2C 3B 3D 5B 5D    18463 	.ascii "+,;=[]"
      00009C 00                   18464 	.db 0x00
                                  18465 	.area XINIT   (CODE)
                                  18466 	.area CABS    (ABS,CODE)
