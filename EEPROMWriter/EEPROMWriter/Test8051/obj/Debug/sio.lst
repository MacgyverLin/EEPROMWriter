                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module sio
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _data
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 	.globl _sioRXBuf_PARM_3
                                    109 	.globl _sioRXBuf_PARM_2
                                    110 	.globl _sioRXStr_PARM_3
                                    111 	.globl _sioRXStr_PARM_2
                                    112 	.globl _sioTXBuf_PARM_3
                                    113 	.globl _sioTXBuf_PARM_2
                                    114 	.globl _sioTXStr_PARM_2
                                    115 	.globl _sioTX_PARM_2
                                    116 	.globl _sioInit
                                    117 	.globl _sioClose
                                    118 	.globl _sioWaitTXDone
                                    119 	.globl _sioTX
                                    120 	.globl _sioTXStr
                                    121 	.globl _sioTXBuf
                                    122 	.globl _sioWaitRXDone
                                    123 	.globl _sioRX
                                    124 	.globl _sioRXStr
                                    125 	.globl _sioRXBuf
                                    126 	.globl _sioTest1
                                    127 	.globl _sioTest2
                                    128 	.globl _sioTest3
                                    129 ;--------------------------------------------------------
                                    130 ; special function registers
                                    131 ;--------------------------------------------------------
                                    132 	.area RSEG    (ABS,DATA)
      000000                        133 	.org 0x0000
                           000080   134 G$P0$0_0$0 == 0x0080
                           000080   135 _P0	=	0x0080
                           000081   136 G$SP$0_0$0 == 0x0081
                           000081   137 _SP	=	0x0081
                           000082   138 G$DPL$0_0$0 == 0x0082
                           000082   139 _DPL	=	0x0082
                           000083   140 G$DPH$0_0$0 == 0x0083
                           000083   141 _DPH	=	0x0083
                           000087   142 G$PCON$0_0$0 == 0x0087
                           000087   143 _PCON	=	0x0087
                           000088   144 G$TCON$0_0$0 == 0x0088
                           000088   145 _TCON	=	0x0088
                           000089   146 G$TMOD$0_0$0 == 0x0089
                           000089   147 _TMOD	=	0x0089
                           00008A   148 G$TL0$0_0$0 == 0x008a
                           00008A   149 _TL0	=	0x008a
                           00008B   150 G$TL1$0_0$0 == 0x008b
                           00008B   151 _TL1	=	0x008b
                           00008C   152 G$TH0$0_0$0 == 0x008c
                           00008C   153 _TH0	=	0x008c
                           00008D   154 G$TH1$0_0$0 == 0x008d
                           00008D   155 _TH1	=	0x008d
                           000090   156 G$P1$0_0$0 == 0x0090
                           000090   157 _P1	=	0x0090
                           000098   158 G$SCON$0_0$0 == 0x0098
                           000098   159 _SCON	=	0x0098
                           000099   160 G$SBUF$0_0$0 == 0x0099
                           000099   161 _SBUF	=	0x0099
                           0000A0   162 G$P2$0_0$0 == 0x00a0
                           0000A0   163 _P2	=	0x00a0
                           0000A8   164 G$IE$0_0$0 == 0x00a8
                           0000A8   165 _IE	=	0x00a8
                           0000B0   166 G$P3$0_0$0 == 0x00b0
                           0000B0   167 _P3	=	0x00b0
                           0000B8   168 G$IP$0_0$0 == 0x00b8
                           0000B8   169 _IP	=	0x00b8
                           0000D0   170 G$PSW$0_0$0 == 0x00d0
                           0000D0   171 _PSW	=	0x00d0
                           0000E0   172 G$ACC$0_0$0 == 0x00e0
                           0000E0   173 _ACC	=	0x00e0
                           0000F0   174 G$B$0_0$0 == 0x00f0
                           0000F0   175 _B	=	0x00f0
                                    176 ;--------------------------------------------------------
                                    177 ; special function bits
                                    178 ;--------------------------------------------------------
                                    179 	.area RSEG    (ABS,DATA)
      000000                        180 	.org 0x0000
                           000080   181 G$P0_0$0_0$0 == 0x0080
                           000080   182 _P0_0	=	0x0080
                           000081   183 G$P0_1$0_0$0 == 0x0081
                           000081   184 _P0_1	=	0x0081
                           000082   185 G$P0_2$0_0$0 == 0x0082
                           000082   186 _P0_2	=	0x0082
                           000083   187 G$P0_3$0_0$0 == 0x0083
                           000083   188 _P0_3	=	0x0083
                           000084   189 G$P0_4$0_0$0 == 0x0084
                           000084   190 _P0_4	=	0x0084
                           000085   191 G$P0_5$0_0$0 == 0x0085
                           000085   192 _P0_5	=	0x0085
                           000086   193 G$P0_6$0_0$0 == 0x0086
                           000086   194 _P0_6	=	0x0086
                           000087   195 G$P0_7$0_0$0 == 0x0087
                           000087   196 _P0_7	=	0x0087
                           000088   197 G$IT0$0_0$0 == 0x0088
                           000088   198 _IT0	=	0x0088
                           000089   199 G$IE0$0_0$0 == 0x0089
                           000089   200 _IE0	=	0x0089
                           00008A   201 G$IT1$0_0$0 == 0x008a
                           00008A   202 _IT1	=	0x008a
                           00008B   203 G$IE1$0_0$0 == 0x008b
                           00008B   204 _IE1	=	0x008b
                           00008C   205 G$TR0$0_0$0 == 0x008c
                           00008C   206 _TR0	=	0x008c
                           00008D   207 G$TF0$0_0$0 == 0x008d
                           00008D   208 _TF0	=	0x008d
                           00008E   209 G$TR1$0_0$0 == 0x008e
                           00008E   210 _TR1	=	0x008e
                           00008F   211 G$TF1$0_0$0 == 0x008f
                           00008F   212 _TF1	=	0x008f
                           000090   213 G$P1_0$0_0$0 == 0x0090
                           000090   214 _P1_0	=	0x0090
                           000091   215 G$P1_1$0_0$0 == 0x0091
                           000091   216 _P1_1	=	0x0091
                           000092   217 G$P1_2$0_0$0 == 0x0092
                           000092   218 _P1_2	=	0x0092
                           000093   219 G$P1_3$0_0$0 == 0x0093
                           000093   220 _P1_3	=	0x0093
                           000094   221 G$P1_4$0_0$0 == 0x0094
                           000094   222 _P1_4	=	0x0094
                           000095   223 G$P1_5$0_0$0 == 0x0095
                           000095   224 _P1_5	=	0x0095
                           000096   225 G$P1_6$0_0$0 == 0x0096
                           000096   226 _P1_6	=	0x0096
                           000097   227 G$P1_7$0_0$0 == 0x0097
                           000097   228 _P1_7	=	0x0097
                           000098   229 G$RI$0_0$0 == 0x0098
                           000098   230 _RI	=	0x0098
                           000099   231 G$TI$0_0$0 == 0x0099
                           000099   232 _TI	=	0x0099
                           00009A   233 G$RB8$0_0$0 == 0x009a
                           00009A   234 _RB8	=	0x009a
                           00009B   235 G$TB8$0_0$0 == 0x009b
                           00009B   236 _TB8	=	0x009b
                           00009C   237 G$REN$0_0$0 == 0x009c
                           00009C   238 _REN	=	0x009c
                           00009D   239 G$SM2$0_0$0 == 0x009d
                           00009D   240 _SM2	=	0x009d
                           00009E   241 G$SM1$0_0$0 == 0x009e
                           00009E   242 _SM1	=	0x009e
                           00009F   243 G$SM0$0_0$0 == 0x009f
                           00009F   244 _SM0	=	0x009f
                           0000A0   245 G$P2_0$0_0$0 == 0x00a0
                           0000A0   246 _P2_0	=	0x00a0
                           0000A1   247 G$P2_1$0_0$0 == 0x00a1
                           0000A1   248 _P2_1	=	0x00a1
                           0000A2   249 G$P2_2$0_0$0 == 0x00a2
                           0000A2   250 _P2_2	=	0x00a2
                           0000A3   251 G$P2_3$0_0$0 == 0x00a3
                           0000A3   252 _P2_3	=	0x00a3
                           0000A4   253 G$P2_4$0_0$0 == 0x00a4
                           0000A4   254 _P2_4	=	0x00a4
                           0000A5   255 G$P2_5$0_0$0 == 0x00a5
                           0000A5   256 _P2_5	=	0x00a5
                           0000A6   257 G$P2_6$0_0$0 == 0x00a6
                           0000A6   258 _P2_6	=	0x00a6
                           0000A7   259 G$P2_7$0_0$0 == 0x00a7
                           0000A7   260 _P2_7	=	0x00a7
                           0000A8   261 G$EX0$0_0$0 == 0x00a8
                           0000A8   262 _EX0	=	0x00a8
                           0000A9   263 G$ET0$0_0$0 == 0x00a9
                           0000A9   264 _ET0	=	0x00a9
                           0000AA   265 G$EX1$0_0$0 == 0x00aa
                           0000AA   266 _EX1	=	0x00aa
                           0000AB   267 G$ET1$0_0$0 == 0x00ab
                           0000AB   268 _ET1	=	0x00ab
                           0000AC   269 G$ES$0_0$0 == 0x00ac
                           0000AC   270 _ES	=	0x00ac
                           0000AF   271 G$EA$0_0$0 == 0x00af
                           0000AF   272 _EA	=	0x00af
                           0000B0   273 G$P3_0$0_0$0 == 0x00b0
                           0000B0   274 _P3_0	=	0x00b0
                           0000B1   275 G$P3_1$0_0$0 == 0x00b1
                           0000B1   276 _P3_1	=	0x00b1
                           0000B2   277 G$P3_2$0_0$0 == 0x00b2
                           0000B2   278 _P3_2	=	0x00b2
                           0000B3   279 G$P3_3$0_0$0 == 0x00b3
                           0000B3   280 _P3_3	=	0x00b3
                           0000B4   281 G$P3_4$0_0$0 == 0x00b4
                           0000B4   282 _P3_4	=	0x00b4
                           0000B5   283 G$P3_5$0_0$0 == 0x00b5
                           0000B5   284 _P3_5	=	0x00b5
                           0000B6   285 G$P3_6$0_0$0 == 0x00b6
                           0000B6   286 _P3_6	=	0x00b6
                           0000B7   287 G$P3_7$0_0$0 == 0x00b7
                           0000B7   288 _P3_7	=	0x00b7
                           0000B0   289 G$RXD$0_0$0 == 0x00b0
                           0000B0   290 _RXD	=	0x00b0
                           0000B1   291 G$TXD$0_0$0 == 0x00b1
                           0000B1   292 _TXD	=	0x00b1
                           0000B2   293 G$INT0$0_0$0 == 0x00b2
                           0000B2   294 _INT0	=	0x00b2
                           0000B3   295 G$INT1$0_0$0 == 0x00b3
                           0000B3   296 _INT1	=	0x00b3
                           0000B4   297 G$T0$0_0$0 == 0x00b4
                           0000B4   298 _T0	=	0x00b4
                           0000B5   299 G$T1$0_0$0 == 0x00b5
                           0000B5   300 _T1	=	0x00b5
                           0000B6   301 G$WR$0_0$0 == 0x00b6
                           0000B6   302 _WR	=	0x00b6
                           0000B7   303 G$RD$0_0$0 == 0x00b7
                           0000B7   304 _RD	=	0x00b7
                           0000B8   305 G$PX0$0_0$0 == 0x00b8
                           0000B8   306 _PX0	=	0x00b8
                           0000B9   307 G$PT0$0_0$0 == 0x00b9
                           0000B9   308 _PT0	=	0x00b9
                           0000BA   309 G$PX1$0_0$0 == 0x00ba
                           0000BA   310 _PX1	=	0x00ba
                           0000BB   311 G$PT1$0_0$0 == 0x00bb
                           0000BB   312 _PT1	=	0x00bb
                           0000BC   313 G$PS$0_0$0 == 0x00bc
                           0000BC   314 _PS	=	0x00bc
                           0000D0   315 G$P$0_0$0 == 0x00d0
                           0000D0   316 _P	=	0x00d0
                           0000D1   317 G$F1$0_0$0 == 0x00d1
                           0000D1   318 _F1	=	0x00d1
                           0000D2   319 G$OV$0_0$0 == 0x00d2
                           0000D2   320 _OV	=	0x00d2
                           0000D3   321 G$RS0$0_0$0 == 0x00d3
                           0000D3   322 _RS0	=	0x00d3
                           0000D4   323 G$RS1$0_0$0 == 0x00d4
                           0000D4   324 _RS1	=	0x00d4
                           0000D5   325 G$F0$0_0$0 == 0x00d5
                           0000D5   326 _F0	=	0x00d5
                           0000D6   327 G$AC$0_0$0 == 0x00d6
                           0000D6   328 _AC	=	0x00d6
                           0000D7   329 G$CY$0_0$0 == 0x00d7
                           0000D7   330 _CY	=	0x00d7
                                    331 ;--------------------------------------------------------
                                    332 ; overlayable register banks
                                    333 ;--------------------------------------------------------
                                    334 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        335 	.ds 8
                                    336 ;--------------------------------------------------------
                                    337 ; internal ram data
                                    338 ;--------------------------------------------------------
                                    339 	.area DSEG    (DATA)
                           000000   340 Lsio.sioTXBuf$i$1_0$26==.
      000000                        341 _sioTXBuf_i_65536_26:
      000000                        342 	.ds 2
                           000002   343 Lsio.sioRXStr$i$1_0$33==.
      000002                        344 _sioRXStr_i_65536_33:
      000002                        345 	.ds 2
                           000004   346 Lsio.sioRXBuf$i$1_0$36==.
      000004                        347 _sioRXBuf_i_65536_36:
      000004                        348 	.ds 2
                                    349 ;--------------------------------------------------------
                                    350 ; overlayable items in internal ram 
                                    351 ;--------------------------------------------------------
                                    352 	.area	OSEG    (OVR,DATA)
                                    353 ;--------------------------------------------------------
                                    354 ; indirectly addressable internal ram data
                                    355 ;--------------------------------------------------------
                                    356 	.area ISEG    (DATA)
                                    357 ;--------------------------------------------------------
                                    358 ; absolute internal ram data
                                    359 ;--------------------------------------------------------
                                    360 	.area IABS    (ABS,DATA)
                                    361 	.area IABS    (ABS,DATA)
                                    362 ;--------------------------------------------------------
                                    363 ; bit data
                                    364 ;--------------------------------------------------------
                                    365 	.area BSEG    (BIT)
                                    366 ;--------------------------------------------------------
                                    367 ; paged external ram data
                                    368 ;--------------------------------------------------------
                                    369 	.area PSEG    (PAG,XDATA)
                                    370 ;--------------------------------------------------------
                                    371 ; external ram data
                                    372 ;--------------------------------------------------------
                                    373 	.area XSEG    (XDATA)
                           000000   374 Lsio.sioTX$d$1_0$20==.
      000000                        375 _sioTX_PARM_2:
      000000                        376 	.ds 1
                           000001   377 Lsio.sioTXStr$s$1_0$22==.
      000001                        378 _sioTXStr_PARM_2:
      000001                        379 	.ds 3
                           000004   380 Lsio.sioTXStr$device$1_0$22==.
      000004                        381 _sioTXStr_device_65536_22:
      000004                        382 	.ds 1
                           000005   383 Lsio.sioTXBuf$buf$1_0$25==.
      000005                        384 _sioTXBuf_PARM_2:
      000005                        385 	.ds 3
                           000008   386 Lsio.sioTXBuf$size$1_0$25==.
      000008                        387 _sioTXBuf_PARM_3:
      000008                        388 	.ds 2
                           00000A   389 Lsio.sioTXBuf$device$1_0$25==.
      00000A                        390 _sioTXBuf_device_65536_25:
      00000A                        391 	.ds 1
                           00000B   392 Lsio.sioRXStr$s$1_0$32==.
      00000B                        393 _sioRXStr_PARM_2:
      00000B                        394 	.ds 3
                           00000E   395 Lsio.sioRXStr$size$1_0$32==.
      00000E                        396 _sioRXStr_PARM_3:
      00000E                        397 	.ds 2
                           000010   398 Lsio.sioRXStr$device$1_0$32==.
      000010                        399 _sioRXStr_device_65536_32:
      000010                        400 	.ds 1
                           000011   401 Lsio.sioRXBuf$buf$1_0$35==.
      000011                        402 _sioRXBuf_PARM_2:
      000011                        403 	.ds 3
                           000014   404 Lsio.sioRXBuf$size$1_0$35==.
      000014                        405 _sioRXBuf_PARM_3:
      000014                        406 	.ds 2
                           000016   407 Lsio.sioRXBuf$device$1_0$35==.
      000016                        408 _sioRXBuf_device_65536_35:
      000016                        409 	.ds 1
                           000017   410 Lsio.sioTest1$device$1_0$38==.
      000017                        411 _sioTest1_device_65536_38:
      000017                        412 	.ds 1
                           000018   413 Lsio.sioTest2$device$1_0$41==.
      000018                        414 _sioTest2_device_65536_41:
      000018                        415 	.ds 1
                                    416 ;--------------------------------------------------------
                                    417 ; absolute external ram data
                                    418 ;--------------------------------------------------------
                                    419 	.area XABS    (ABS,XDATA)
                                    420 ;--------------------------------------------------------
                                    421 ; external initialized ram data
                                    422 ;--------------------------------------------------------
                                    423 	.area XISEG   (XDATA)
                                    424 	.area HOME    (CODE)
                                    425 	.area GSINIT0 (CODE)
                                    426 	.area GSINIT1 (CODE)
                                    427 	.area GSINIT2 (CODE)
                                    428 	.area GSINIT3 (CODE)
                                    429 	.area GSINIT4 (CODE)
                                    430 	.area GSINIT5 (CODE)
                                    431 	.area GSINIT  (CODE)
                                    432 	.area GSFINAL (CODE)
                                    433 	.area CSEG    (CODE)
                                    434 ;--------------------------------------------------------
                                    435 ; global & static initialisations
                                    436 ;--------------------------------------------------------
                                    437 	.area HOME    (CODE)
                                    438 	.area GSINIT  (CODE)
                                    439 	.area GSFINAL (CODE)
                                    440 	.area GSINIT  (CODE)
                                    441 ;--------------------------------------------------------
                                    442 ; Home
                                    443 ;--------------------------------------------------------
                                    444 	.area HOME    (CODE)
                                    445 	.area HOME    (CODE)
                                    446 ;--------------------------------------------------------
                                    447 ; code
                                    448 ;--------------------------------------------------------
                                    449 	.area CSEG    (CODE)
                                    450 ;------------------------------------------------------------
                                    451 ;Allocation info for local variables in function 'sioInit'
                                    452 ;------------------------------------------------------------
                                    453 ;device                    Allocated with name '_sioInit_device_65536_14'
                                    454 ;------------------------------------------------------------
                           000000   455 	G$sioInit$0$0 ==.
                           000000   456 	C$sio.c$5$0_0$15 ==.
                                    457 ;	sio.c:5: void sioInit(char device)
                                    458 ;	-----------------------------------------
                                    459 ;	 function sioInit
                                    460 ;	-----------------------------------------
      000000                        461 _sioInit:
                           000007   462 	ar7 = 0x07
                           000006   463 	ar6 = 0x06
                           000005   464 	ar5 = 0x05
                           000004   465 	ar4 = 0x04
                           000003   466 	ar3 = 0x03
                           000002   467 	ar2 = 0x02
                           000001   468 	ar1 = 0x01
                           000000   469 	ar0 = 0x00
                           000000   470 	C$sio.c$9$1_0$15 ==.
                                    471 ;	sio.c:9: SCON = 0x50;
      000000 75 98 50         [24]  472 	mov	_SCON,#0x50
                           000003   473 	C$sio.c$10$1_0$15 ==.
                                    474 ;	sio.c:10: TMOD = (TMOD & T0_MASK) | 0x21;
      000003 AE 89            [24]  475 	mov	r6,_TMOD
      000005 53 06 0F         [24]  476 	anl	ar6,#0x0f
      000008 7F 00            [12]  477 	mov	r7,#0x00
      00000A 43 06 21         [24]  478 	orl	ar6,#0x21
      00000D 8E 89            [24]  479 	mov	_TMOD,r6
                           00000F   480 	C$sio.c$11$1_0$15 ==.
                                    481 ;	sio.c:11: PCON = 0x80;
      00000F 75 87 80         [24]  482 	mov	_PCON,#0x80
                           000012   483 	C$sio.c$14$1_0$15 ==.
                                    484 ;	sio.c:14: TH1 = 0xFA;
      000012 75 8D FA         [24]  485 	mov	_TH1,#0xfa
                           000015   486 	C$sio.c$15$1_0$15 ==.
                                    487 ;	sio.c:15: TL1 = 0xFA;
      000015 75 8B FA         [24]  488 	mov	_TL1,#0xfa
                           000018   489 	C$sio.c$16$1_0$15 ==.
                                    490 ;	sio.c:16: TR1 = 1;
                                    491 ;	assignBit
      000018 D2 8E            [12]  492 	setb	_TR1
                           00001A   493 	C$sio.c$19$1_0$15 ==.
                                    494 ;	sio.c:19: }
                           00001A   495 	C$sio.c$19$1_0$15 ==.
                           00001A   496 	XG$sioInit$0$0 ==.
      00001A 02r00r00         [24]  497 	ljmp	__sdcc_banked_ret
                                    498 ;------------------------------------------------------------
                                    499 ;Allocation info for local variables in function 'sioClose'
                                    500 ;------------------------------------------------------------
                                    501 ;device                    Allocated with name '_sioClose_device_65536_16'
                                    502 ;------------------------------------------------------------
                           00001D   503 	G$sioClose$0$0 ==.
                           00001D   504 	C$sio.c$21$1_0$17 ==.
                                    505 ;	sio.c:21: void sioClose(char device)
                                    506 ;	-----------------------------------------
                                    507 ;	 function sioClose
                                    508 ;	-----------------------------------------
      00001D                        509 _sioClose:
                           00001D   510 	C$sio.c$25$1_0$17 ==.
                                    511 ;	sio.c:25: SCON = 0x00;
      00001D 75 98 00         [24]  512 	mov	_SCON,#0x00
                           000020   513 	C$sio.c$26$1_0$17 ==.
                                    514 ;	sio.c:26: TMOD = (TMOD & T0_MASK);
      000020 53 89 0F         [24]  515 	anl	_TMOD,#0x0f
                           000023   516 	C$sio.c$27$1_0$17 ==.
                                    517 ;	sio.c:27: PCON &= ~SMOD;
      000023 53 87 7F         [24]  518 	anl	_PCON,#0x7f
                           000026   519 	C$sio.c$28$1_0$17 ==.
                                    520 ;	sio.c:28: TR1 = 0;
                                    521 ;	assignBit
      000026 C2 8E            [12]  522 	clr	_TR1
                           000028   523 	C$sio.c$29$1_0$17 ==.
                                    524 ;	sio.c:29: }
                           000028   525 	C$sio.c$29$1_0$17 ==.
                           000028   526 	XG$sioClose$0$0 ==.
      000028 02r00r00         [24]  527 	ljmp	__sdcc_banked_ret
                                    528 ;------------------------------------------------------------
                                    529 ;Allocation info for local variables in function 'sioWaitTXDone'
                                    530 ;------------------------------------------------------------
                                    531 ;device                    Allocated with name '_sioWaitTXDone_device_65536_18'
                                    532 ;------------------------------------------------------------
                           00002B   533 	G$sioWaitTXDone$0$0 ==.
                           00002B   534 	C$sio.c$31$1_0$19 ==.
                                    535 ;	sio.c:31: void sioWaitTXDone(char device)
                                    536 ;	-----------------------------------------
                                    537 ;	 function sioWaitTXDone
                                    538 ;	-----------------------------------------
      00002B                        539 _sioWaitTXDone:
                           00002B   540 	C$sio.c$35$1_0$19 ==.
                                    541 ;	sio.c:35: while(!TI);
      00002B                        542 00101$:
      00002B 30 99 FD         [24]  543 	jnb	_TI,00101$
                           00002E   544 	C$sio.c$36$1_0$19 ==.
                                    545 ;	sio.c:36: }
                           00002E   546 	C$sio.c$36$1_0$19 ==.
                           00002E   547 	XG$sioWaitTXDone$0$0 ==.
      00002E 02r00r00         [24]  548 	ljmp	__sdcc_banked_ret
                                    549 ;------------------------------------------------------------
                                    550 ;Allocation info for local variables in function 'sioTX'
                                    551 ;------------------------------------------------------------
                                    552 ;d                         Allocated with name '_sioTX_PARM_2'
                                    553 ;device                    Allocated with name '_sioTX_device_65536_20'
                                    554 ;------------------------------------------------------------
                           000031   555 	G$sioTX$0$0 ==.
                           000031   556 	C$sio.c$38$1_0$21 ==.
                                    557 ;	sio.c:38: void sioTX(char device, char d)
                                    558 ;	-----------------------------------------
                                    559 ;	 function sioTX
                                    560 ;	-----------------------------------------
      000031                        561 _sioTX:
                           000031   562 	C$sio.c$42$1_0$21 ==.
                                    563 ;	sio.c:42: TI = 0;
                                    564 ;	assignBit
      000031 C2 99            [12]  565 	clr	_TI
                           000033   566 	C$sio.c$43$1_0$21 ==.
                                    567 ;	sio.c:43: SBUF = d;
      000033 90r00r00         [24]  568 	mov	dptr,#_sioTX_PARM_2
      000036 E0               [24]  569 	movx	a,@dptr
      000037 F5 99            [12]  570 	mov	_SBUF,a
                           000039   571 	C$sio.c$44$1_0$21 ==.
                                    572 ;	sio.c:44: while(!TI) /* assumes UART is initialized */ ;
      000039                        573 00101$:
      000039 30 99 FD         [24]  574 	jnb	_TI,00101$
                           00003C   575 	C$sio.c$45$1_0$21 ==.
                                    576 ;	sio.c:45: }
                           00003C   577 	C$sio.c$45$1_0$21 ==.
                           00003C   578 	XG$sioTX$0$0 ==.
      00003C 02r00r00         [24]  579 	ljmp	__sdcc_banked_ret
                                    580 ;------------------------------------------------------------
                                    581 ;Allocation info for local variables in function 'sioTXStr'
                                    582 ;------------------------------------------------------------
                                    583 ;s                         Allocated with name '_sioTXStr_PARM_2'
                                    584 ;device                    Allocated with name '_sioTXStr_device_65536_22'
                                    585 ;------------------------------------------------------------
                           00003F   586 	G$sioTXStr$0$0 ==.
                           00003F   587 	C$sio.c$47$1_0$23 ==.
                                    588 ;	sio.c:47: void sioTXStr(char device, const char* s)
                                    589 ;	-----------------------------------------
                                    590 ;	 function sioTXStr
                                    591 ;	-----------------------------------------
      00003F                        592 _sioTXStr:
      00003F E5 82            [12]  593 	mov	a,dpl
      000041 90r00r04         [24]  594 	mov	dptr,#_sioTXStr_device_65536_22
      000044 F0               [24]  595 	movx	@dptr,a
                           000045   596 	C$sio.c$51$2_0$24 ==.
                                    597 ;	sio.c:51: do
      000045 E0               [24]  598 	movx	a,@dptr
      000046 FF               [12]  599 	mov	r7,a
      000047 90r00r01         [24]  600 	mov	dptr,#_sioTXStr_PARM_2
      00004A E0               [24]  601 	movx	a,@dptr
      00004B FC               [12]  602 	mov	r4,a
      00004C A3               [24]  603 	inc	dptr
      00004D E0               [24]  604 	movx	a,@dptr
      00004E FD               [12]  605 	mov	r5,a
      00004F A3               [24]  606 	inc	dptr
      000050 E0               [24]  607 	movx	a,@dptr
      000051 FE               [12]  608 	mov	r6,a
      000052                        609 00101$:
                           000052   610 	C$sio.c$53$2_0$24 ==.
                                    611 ;	sio.c:53: sioTX(device, *s);
      000052 8C 82            [24]  612 	mov	dpl,r4
      000054 8D 83            [24]  613 	mov	dph,r5
      000056 8E F0            [24]  614 	mov	b,r6
      000058 12r00r00         [24]  615 	lcall	__gptrget
      00005B 90r00r00         [24]  616 	mov	dptr,#_sioTX_PARM_2
      00005E F0               [24]  617 	movx	@dptr,a
      00005F 8F 82            [24]  618 	mov	dpl,r7
      000061 C0 07            [24]  619 	push	ar7
      000063 C0 06            [24]  620 	push	ar6
      000065 C0 05            [24]  621 	push	ar5
      000067 C0 04            [24]  622 	push	ar4
      000069 78r31            [12]  623 	mov	r0,#_sioTX
      00006B 79s00            [12]  624 	mov	r1,#(_sioTX >> 8)
      00006D 7As00            [12]  625 	mov	r2,#(_sioTX >> 16)
      00006F 12r00r00         [24]  626 	lcall	__sdcc_banked_call
      000072 D0 04            [24]  627 	pop	ar4
      000074 D0 05            [24]  628 	pop	ar5
      000076 D0 06            [24]  629 	pop	ar6
      000078 D0 07            [24]  630 	pop	ar7
                           00007A   631 	C$sio.c$54$1_0$23 ==.
                                    632 ;	sio.c:54: }while(*s++);
      00007A 8C 82            [24]  633 	mov	dpl,r4
      00007C 8D 83            [24]  634 	mov	dph,r5
      00007E 8E F0            [24]  635 	mov	b,r6
      000080 12r00r00         [24]  636 	lcall	__gptrget
      000083 FB               [12]  637 	mov	r3,a
      000084 A3               [24]  638 	inc	dptr
      000085 AC 82            [24]  639 	mov	r4,dpl
      000087 AD 83            [24]  640 	mov	r5,dph
      000089 EB               [12]  641 	mov	a,r3
      00008A 70 C6            [24]  642 	jnz	00101$
                           00008C   643 	C$sio.c$55$1_0$23 ==.
                                    644 ;	sio.c:55: }
                           00008C   645 	C$sio.c$55$1_0$23 ==.
                           00008C   646 	XG$sioTXStr$0$0 ==.
      00008C 02r00r00         [24]  647 	ljmp	__sdcc_banked_ret
                                    648 ;------------------------------------------------------------
                                    649 ;Allocation info for local variables in function 'sioTXBuf'
                                    650 ;------------------------------------------------------------
                                    651 ;i                         Allocated with name '_sioTXBuf_i_65536_26'
                                    652 ;buf                       Allocated with name '_sioTXBuf_PARM_2'
                                    653 ;size                      Allocated with name '_sioTXBuf_PARM_3'
                                    654 ;device                    Allocated with name '_sioTXBuf_device_65536_25'
                                    655 ;------------------------------------------------------------
                           00008F   656 	G$sioTXBuf$0$0 ==.
                           00008F   657 	C$sio.c$57$1_0$26 ==.
                                    658 ;	sio.c:57: void sioTXBuf(char device, const char* buf, unsigned int size)
                                    659 ;	-----------------------------------------
                                    660 ;	 function sioTXBuf
                                    661 ;	-----------------------------------------
      00008F                        662 _sioTXBuf:
      00008F E5 82            [12]  663 	mov	a,dpl
      000091 90r00r0A         [24]  664 	mov	dptr,#_sioTXBuf_device_65536_25
      000094 F0               [24]  665 	movx	@dptr,a
                           000095   666 	C$sio.c$63$2_0$27 ==.
                                    667 ;	sio.c:63: while(size--)
      000095 E0               [24]  668 	movx	a,@dptr
      000096 FF               [12]  669 	mov	r7,a
      000097 90r00r05         [24]  670 	mov	dptr,#_sioTXBuf_PARM_2
      00009A E0               [24]  671 	movx	a,@dptr
      00009B FC               [12]  672 	mov	r4,a
      00009C A3               [24]  673 	inc	dptr
      00009D E0               [24]  674 	movx	a,@dptr
      00009E FD               [12]  675 	mov	r5,a
      00009F A3               [24]  676 	inc	dptr
      0000A0 E0               [24]  677 	movx	a,@dptr
      0000A1 FE               [12]  678 	mov	r6,a
      0000A2 E4               [12]  679 	clr	a
      0000A3 F5*00            [12]  680 	mov	_sioTXBuf_i_65536_26,a
      0000A5 F5*01            [12]  681 	mov	(_sioTXBuf_i_65536_26 + 1),a
      0000A7 90r00r08         [24]  682 	mov	dptr,#_sioTXBuf_PARM_3
      0000AA E0               [24]  683 	movx	a,@dptr
      0000AB F8               [12]  684 	mov	r0,a
      0000AC A3               [24]  685 	inc	dptr
      0000AD E0               [24]  686 	movx	a,@dptr
      0000AE F9               [12]  687 	mov	r1,a
      0000AF                        688 00101$:
      0000AF 88 02            [24]  689 	mov	ar2,r0
      0000B1 89 03            [24]  690 	mov	ar3,r1
      0000B3 18               [12]  691 	dec	r0
      0000B4 B8 FF 01         [24]  692 	cjne	r0,#0xff,00115$
      0000B7 19               [12]  693 	dec	r1
      0000B8                        694 00115$:
      0000B8 EA               [12]  695 	mov	a,r2
      0000B9 4B               [12]  696 	orl	a,r3
      0000BA 60 4E            [24]  697 	jz	00104$
                           0000BC   698 	C$sio.c$65$1_0$26 ==.
                                    699 ;	sio.c:65: sioTX(device, buf[i++]);
      0000BC C0 00            [24]  700 	push	ar0
      0000BE C0 01            [24]  701 	push	ar1
      0000C0 AA*00            [24]  702 	mov	r2,_sioTXBuf_i_65536_26
      0000C2 AB*01            [24]  703 	mov	r3,(_sioTXBuf_i_65536_26 + 1)
      0000C4 05*00            [12]  704 	inc	_sioTXBuf_i_65536_26
      0000C6 E4               [12]  705 	clr	a
      0000C7 B5*00 02         [24]  706 	cjne	a,_sioTXBuf_i_65536_26,00117$
      0000CA 05*01            [12]  707 	inc	(_sioTXBuf_i_65536_26 + 1)
      0000CC                        708 00117$:
      0000CC EA               [12]  709 	mov	a,r2
      0000CD 2C               [12]  710 	add	a,r4
      0000CE FA               [12]  711 	mov	r2,a
      0000CF EB               [12]  712 	mov	a,r3
      0000D0 3D               [12]  713 	addc	a,r5
      0000D1 F9               [12]  714 	mov	r1,a
      0000D2 8E 03            [24]  715 	mov	ar3,r6
      0000D4 8A 82            [24]  716 	mov	dpl,r2
      0000D6 89 83            [24]  717 	mov	dph,r1
      0000D8 8B F0            [24]  718 	mov	b,r3
      0000DA 12r00r00         [24]  719 	lcall	__gptrget
      0000DD 90r00r00         [24]  720 	mov	dptr,#_sioTX_PARM_2
      0000E0 F0               [24]  721 	movx	@dptr,a
      0000E1 8F 82            [24]  722 	mov	dpl,r7
      0000E3 C0 07            [24]  723 	push	ar7
      0000E5 C0 06            [24]  724 	push	ar6
      0000E7 C0 05            [24]  725 	push	ar5
      0000E9 C0 04            [24]  726 	push	ar4
      0000EB C0 01            [24]  727 	push	ar1
      0000ED C0 00            [24]  728 	push	ar0
      0000EF 78r31            [12]  729 	mov	r0,#_sioTX
      0000F1 79s00            [12]  730 	mov	r1,#(_sioTX >> 8)
      0000F3 7As00            [12]  731 	mov	r2,#(_sioTX >> 16)
      0000F5 12r00r00         [24]  732 	lcall	__sdcc_banked_call
      0000F8 D0 00            [24]  733 	pop	ar0
      0000FA D0 01            [24]  734 	pop	ar1
      0000FC D0 04            [24]  735 	pop	ar4
      0000FE D0 05            [24]  736 	pop	ar5
      000100 D0 06            [24]  737 	pop	ar6
      000102 D0 07            [24]  738 	pop	ar7
      000104 D0 01            [24]  739 	pop	ar1
      000106 D0 00            [24]  740 	pop	ar0
      000108 80 A5            [24]  741 	sjmp	00101$
      00010A                        742 00104$:
                           00010A   743 	C$sio.c$67$1_0$26 ==.
                                    744 ;	sio.c:67: }
                           00010A   745 	C$sio.c$67$1_0$26 ==.
                           00010A   746 	XG$sioTXBuf$0$0 ==.
      00010A 02r00r00         [24]  747 	ljmp	__sdcc_banked_ret
                                    748 ;------------------------------------------------------------
                                    749 ;Allocation info for local variables in function 'sioWaitRXDone'
                                    750 ;------------------------------------------------------------
                                    751 ;device                    Allocated with name '_sioWaitRXDone_device_65536_28'
                                    752 ;------------------------------------------------------------
                           00010D   753 	G$sioWaitRXDone$0$0 ==.
                           00010D   754 	C$sio.c$69$1_0$29 ==.
                                    755 ;	sio.c:69: void sioWaitRXDone(char device)
                                    756 ;	-----------------------------------------
                                    757 ;	 function sioWaitRXDone
                                    758 ;	-----------------------------------------
      00010D                        759 _sioWaitRXDone:
                           00010D   760 	C$sio.c$73$1_0$29 ==.
                                    761 ;	sio.c:73: while(!RI);
      00010D                        762 00101$:
      00010D 30 98 FD         [24]  763 	jnb	_RI,00101$
                           000110   764 	C$sio.c$74$1_0$29 ==.
                                    765 ;	sio.c:74: }
                           000110   766 	C$sio.c$74$1_0$29 ==.
                           000110   767 	XG$sioWaitRXDone$0$0 ==.
      000110 02r00r00         [24]  768 	ljmp	__sdcc_banked_ret
                                    769 ;------------------------------------------------------------
                                    770 ;Allocation info for local variables in function 'sioRX'
                                    771 ;------------------------------------------------------------
                                    772 ;device                    Allocated with name '_sioRX_device_65536_30'
                                    773 ;d                         Allocated to registers r7 
                                    774 ;------------------------------------------------------------
                           000113   775 	G$sioRX$0$0 ==.
                           000113   776 	C$sio.c$76$1_0$31 ==.
                                    777 ;	sio.c:76: char sioRX(char device)
                                    778 ;	-----------------------------------------
                                    779 ;	 function sioRX
                                    780 ;	-----------------------------------------
      000113                        781 _sioRX:
                           000113   782 	C$sio.c$82$1_0$31 ==.
                                    783 ;	sio.c:82: while(!RI) /* assumes UART is initialized */ ;
      000113                        784 00101$:
      000113 30 98 FD         [24]  785 	jnb	_RI,00101$
                           000116   786 	C$sio.c$83$1_0$31 ==.
                                    787 ;	sio.c:83: d = SBUF;
      000116 AF 99            [24]  788 	mov	r7,_SBUF
                           000118   789 	C$sio.c$84$1_0$31 ==.
                                    790 ;	sio.c:84: RI = 0;
                                    791 ;	assignBit
      000118 C2 98            [12]  792 	clr	_RI
                           00011A   793 	C$sio.c$86$1_0$31 ==.
                                    794 ;	sio.c:86: return d;
      00011A 8F 82            [24]  795 	mov	dpl,r7
                           00011C   796 	C$sio.c$87$1_0$31 ==.
                                    797 ;	sio.c:87: }
                           00011C   798 	C$sio.c$87$1_0$31 ==.
                           00011C   799 	XG$sioRX$0$0 ==.
      00011C 02r00r00         [24]  800 	ljmp	__sdcc_banked_ret
                                    801 ;------------------------------------------------------------
                                    802 ;Allocation info for local variables in function 'sioRXStr'
                                    803 ;------------------------------------------------------------
                                    804 ;i                         Allocated with name '_sioRXStr_i_65536_33'
                                    805 ;s                         Allocated with name '_sioRXStr_PARM_2'
                                    806 ;size                      Allocated with name '_sioRXStr_PARM_3'
                                    807 ;device                    Allocated with name '_sioRXStr_device_65536_32'
                                    808 ;------------------------------------------------------------
                           00011F   809 	G$sioRXStr$0$0 ==.
                           00011F   810 	C$sio.c$89$1_0$33 ==.
                                    811 ;	sio.c:89: void sioRXStr(char device, char* s, unsigned int size)
                                    812 ;	-----------------------------------------
                                    813 ;	 function sioRXStr
                                    814 ;	-----------------------------------------
      00011F                        815 _sioRXStr:
      00011F E5 82            [12]  816 	mov	a,dpl
      000121 90r00r10         [24]  817 	mov	dptr,#_sioRXStr_device_65536_32
      000124 F0               [24]  818 	movx	@dptr,a
                           000125   819 	C$sio.c$95$2_0$34 ==.
                                    820 ;	sio.c:95: while(size--)
      000125 90r00r0B         [24]  821 	mov	dptr,#_sioRXStr_PARM_2
      000128 E0               [24]  822 	movx	a,@dptr
      000129 FD               [12]  823 	mov	r5,a
      00012A A3               [24]  824 	inc	dptr
      00012B E0               [24]  825 	movx	a,@dptr
      00012C FE               [12]  826 	mov	r6,a
      00012D A3               [24]  827 	inc	dptr
      00012E E0               [24]  828 	movx	a,@dptr
      00012F FF               [12]  829 	mov	r7,a
      000130 90r00r10         [24]  830 	mov	dptr,#_sioRXStr_device_65536_32
      000133 E0               [24]  831 	movx	a,@dptr
      000134 FC               [12]  832 	mov	r4,a
      000135 E4               [12]  833 	clr	a
      000136 F5*02            [12]  834 	mov	_sioRXStr_i_65536_33,a
      000138 F5*03            [12]  835 	mov	(_sioRXStr_i_65536_33 + 1),a
      00013A 90r00r0E         [24]  836 	mov	dptr,#_sioRXStr_PARM_3
      00013D E0               [24]  837 	movx	a,@dptr
      00013E F8               [12]  838 	mov	r0,a
      00013F A3               [24]  839 	inc	dptr
      000140 E0               [24]  840 	movx	a,@dptr
      000141 F9               [12]  841 	mov	r1,a
      000142                        842 00103$:
      000142 88 02            [24]  843 	mov	ar2,r0
      000144 89 03            [24]  844 	mov	ar3,r1
      000146 18               [12]  845 	dec	r0
      000147 B8 FF 01         [24]  846 	cjne	r0,#0xff,00117$
      00014A 19               [12]  847 	dec	r1
      00014B                        848 00117$:
      00014B EA               [12]  849 	mov	a,r2
      00014C 4B               [12]  850 	orl	a,r3
      00014D 60 51            [24]  851 	jz	00106$
                           00014F   852 	C$sio.c$97$1_0$33 ==.
                                    853 ;	sio.c:97: if((s[i++] = sioRX(device))==0)
      00014F C0 00            [24]  854 	push	ar0
      000151 C0 01            [24]  855 	push	ar1
      000153 AA*02            [24]  856 	mov	r2,_sioRXStr_i_65536_33
      000155 AB*03            [24]  857 	mov	r3,(_sioRXStr_i_65536_33 + 1)
      000157 05*02            [12]  858 	inc	_sioRXStr_i_65536_33
      000159 E4               [12]  859 	clr	a
      00015A B5*02 02         [24]  860 	cjne	a,_sioRXStr_i_65536_33,00119$
      00015D 05*03            [12]  861 	inc	(_sioRXStr_i_65536_33 + 1)
      00015F                        862 00119$:
      00015F EA               [12]  863 	mov	a,r2
      000160 2D               [12]  864 	add	a,r5
      000161 FA               [12]  865 	mov	r2,a
      000162 EB               [12]  866 	mov	a,r3
      000163 3E               [12]  867 	addc	a,r6
      000164 F9               [12]  868 	mov	r1,a
      000165 8F 03            [24]  869 	mov	ar3,r7
      000167 8C 82            [24]  870 	mov	dpl,r4
      000169 C0 07            [24]  871 	push	ar7
      00016B C0 06            [24]  872 	push	ar6
      00016D C0 05            [24]  873 	push	ar5
      00016F C0 04            [24]  874 	push	ar4
      000171 C0 03            [24]  875 	push	ar3
      000173 C0 02            [24]  876 	push	ar2
      000175 C0 01            [24]  877 	push	ar1
      000177 78r13            [12]  878 	mov	r0,#_sioRX
      000179 79s01            [12]  879 	mov	r1,#(_sioRX >> 8)
      00017B 7As00            [12]  880 	mov	r2,#(_sioRX >> 16)
      00017D 12r00r00         [24]  881 	lcall	__sdcc_banked_call
      000180 A8 82            [24]  882 	mov	r0,dpl
      000182 D0 01            [24]  883 	pop	ar1
      000184 D0 02            [24]  884 	pop	ar2
      000186 D0 03            [24]  885 	pop	ar3
      000188 D0 04            [24]  886 	pop	ar4
      00018A D0 05            [24]  887 	pop	ar5
      00018C D0 06            [24]  888 	pop	ar6
      00018E D0 07            [24]  889 	pop	ar7
      000190 8A 82            [24]  890 	mov	dpl,r2
      000192 89 83            [24]  891 	mov	dph,r1
      000194 8B F0            [24]  892 	mov	b,r3
      000196 E8               [12]  893 	mov	a,r0
      000197 12r00r00         [24]  894 	lcall	__gptrput
      00019A D0 01            [24]  895 	pop	ar1
      00019C D0 00            [24]  896 	pop	ar0
      00019E 70 A2            [24]  897 	jnz	00103$
                           0001A0   898 	C$sio.c$98$1_0$33 ==.
                                    899 ;	sio.c:98: break;
      0001A0                        900 00106$:
                           0001A0   901 	C$sio.c$100$1_0$33 ==.
                                    902 ;	sio.c:100: }
                           0001A0   903 	C$sio.c$100$1_0$33 ==.
                           0001A0   904 	XG$sioRXStr$0$0 ==.
      0001A0 02r00r00         [24]  905 	ljmp	__sdcc_banked_ret
                                    906 ;------------------------------------------------------------
                                    907 ;Allocation info for local variables in function 'sioRXBuf'
                                    908 ;------------------------------------------------------------
                                    909 ;i                         Allocated with name '_sioRXBuf_i_65536_36'
                                    910 ;buf                       Allocated with name '_sioRXBuf_PARM_2'
                                    911 ;size                      Allocated with name '_sioRXBuf_PARM_3'
                                    912 ;device                    Allocated with name '_sioRXBuf_device_65536_35'
                                    913 ;------------------------------------------------------------
                           0001A3   914 	G$sioRXBuf$0$0 ==.
                           0001A3   915 	C$sio.c$102$1_0$36 ==.
                                    916 ;	sio.c:102: void sioRXBuf(char device, char* buf, unsigned int size)
                                    917 ;	-----------------------------------------
                                    918 ;	 function sioRXBuf
                                    919 ;	-----------------------------------------
      0001A3                        920 _sioRXBuf:
      0001A3 E5 82            [12]  921 	mov	a,dpl
      0001A5 90r00r16         [24]  922 	mov	dptr,#_sioRXBuf_device_65536_35
      0001A8 F0               [24]  923 	movx	@dptr,a
                           0001A9   924 	C$sio.c$108$2_0$37 ==.
                                    925 ;	sio.c:108: while(size--)
      0001A9 90r00r11         [24]  926 	mov	dptr,#_sioRXBuf_PARM_2
      0001AC E0               [24]  927 	movx	a,@dptr
      0001AD FD               [12]  928 	mov	r5,a
      0001AE A3               [24]  929 	inc	dptr
      0001AF E0               [24]  930 	movx	a,@dptr
      0001B0 FE               [12]  931 	mov	r6,a
      0001B1 A3               [24]  932 	inc	dptr
      0001B2 E0               [24]  933 	movx	a,@dptr
      0001B3 FF               [12]  934 	mov	r7,a
      0001B4 90r00r16         [24]  935 	mov	dptr,#_sioRXBuf_device_65536_35
      0001B7 E0               [24]  936 	movx	a,@dptr
      0001B8 FC               [12]  937 	mov	r4,a
      0001B9 E4               [12]  938 	clr	a
      0001BA F5*04            [12]  939 	mov	_sioRXBuf_i_65536_36,a
      0001BC F5*05            [12]  940 	mov	(_sioRXBuf_i_65536_36 + 1),a
      0001BE 90r00r14         [24]  941 	mov	dptr,#_sioRXBuf_PARM_3
      0001C1 E0               [24]  942 	movx	a,@dptr
      0001C2 F8               [12]  943 	mov	r0,a
      0001C3 A3               [24]  944 	inc	dptr
      0001C4 E0               [24]  945 	movx	a,@dptr
      0001C5 F9               [12]  946 	mov	r1,a
      0001C6                        947 00101$:
      0001C6 88 02            [24]  948 	mov	ar2,r0
      0001C8 89 03            [24]  949 	mov	ar3,r1
      0001CA 18               [12]  950 	dec	r0
      0001CB B8 FF 01         [24]  951 	cjne	r0,#0xff,00115$
      0001CE 19               [12]  952 	dec	r1
      0001CF                        953 00115$:
      0001CF EA               [12]  954 	mov	a,r2
      0001D0 4B               [12]  955 	orl	a,r3
      0001D1 60 51            [24]  956 	jz	00104$
                           0001D3   957 	C$sio.c$110$1_0$36 ==.
                                    958 ;	sio.c:110: buf[i++] = sioRX(device);
      0001D3 C0 00            [24]  959 	push	ar0
      0001D5 C0 01            [24]  960 	push	ar1
      0001D7 AA*04            [24]  961 	mov	r2,_sioRXBuf_i_65536_36
      0001D9 AB*05            [24]  962 	mov	r3,(_sioRXBuf_i_65536_36 + 1)
      0001DB 05*04            [12]  963 	inc	_sioRXBuf_i_65536_36
      0001DD E4               [12]  964 	clr	a
      0001DE B5*04 02         [24]  965 	cjne	a,_sioRXBuf_i_65536_36,00117$
      0001E1 05*05            [12]  966 	inc	(_sioRXBuf_i_65536_36 + 1)
      0001E3                        967 00117$:
      0001E3 EA               [12]  968 	mov	a,r2
      0001E4 2D               [12]  969 	add	a,r5
      0001E5 FA               [12]  970 	mov	r2,a
      0001E6 EB               [12]  971 	mov	a,r3
      0001E7 3E               [12]  972 	addc	a,r6
      0001E8 F9               [12]  973 	mov	r1,a
      0001E9 8F 03            [24]  974 	mov	ar3,r7
      0001EB 8C 82            [24]  975 	mov	dpl,r4
      0001ED C0 07            [24]  976 	push	ar7
      0001EF C0 06            [24]  977 	push	ar6
      0001F1 C0 05            [24]  978 	push	ar5
      0001F3 C0 04            [24]  979 	push	ar4
      0001F5 C0 03            [24]  980 	push	ar3
      0001F7 C0 02            [24]  981 	push	ar2
      0001F9 C0 01            [24]  982 	push	ar1
      0001FB 78r13            [12]  983 	mov	r0,#_sioRX
      0001FD 79s01            [12]  984 	mov	r1,#(_sioRX >> 8)
      0001FF 7As00            [12]  985 	mov	r2,#(_sioRX >> 16)
      000201 12r00r00         [24]  986 	lcall	__sdcc_banked_call
      000204 A8 82            [24]  987 	mov	r0,dpl
      000206 D0 01            [24]  988 	pop	ar1
      000208 D0 02            [24]  989 	pop	ar2
      00020A D0 03            [24]  990 	pop	ar3
      00020C D0 04            [24]  991 	pop	ar4
      00020E D0 05            [24]  992 	pop	ar5
      000210 D0 06            [24]  993 	pop	ar6
      000212 D0 07            [24]  994 	pop	ar7
      000214 8A 82            [24]  995 	mov	dpl,r2
      000216 89 83            [24]  996 	mov	dph,r1
      000218 8B F0            [24]  997 	mov	b,r3
      00021A E8               [12]  998 	mov	a,r0
      00021B 12r00r00         [24]  999 	lcall	__gptrput
      00021E D0 01            [24] 1000 	pop	ar1
      000220 D0 00            [24] 1001 	pop	ar0
      000222 80 A2            [24] 1002 	sjmp	00101$
      000224                       1003 00104$:
                           000224  1004 	C$sio.c$112$1_0$36 ==.
                                   1005 ;	sio.c:112: }
                           000224  1006 	C$sio.c$112$1_0$36 ==.
                           000224  1007 	XG$sioRXBuf$0$0 ==.
      000224 02r00r00         [24] 1008 	ljmp	__sdcc_banked_ret
                                   1009 ;------------------------------------------------------------
                                   1010 ;Allocation info for local variables in function 'sioTest1'
                                   1011 ;------------------------------------------------------------
                                   1012 ;device                    Allocated with name '_sioTest1_device_65536_38'
                                   1013 ;------------------------------------------------------------
                           000227  1014 	G$sioTest1$0$0 ==.
                           000227  1015 	C$sio.c$114$1_0$39 ==.
                                   1016 ;	sio.c:114: void sioTest1(char device)
                                   1017 ;	-----------------------------------------
                                   1018 ;	 function sioTest1
                                   1019 ;	-----------------------------------------
      000227                       1020 _sioTest1:
      000227 E5 82            [12] 1021 	mov	a,dpl
      000229 90r00r17         [24] 1022 	mov	dptr,#_sioTest1_device_65536_38
      00022C F0               [24] 1023 	movx	@dptr,a
                           00022D  1024 	C$sio.c$116$1_0$39 ==.
                                   1025 ;	sio.c:116: sioInit(device);
      00022D E0               [24] 1026 	movx	a,@dptr
      00022E FF               [12] 1027 	mov	r7,a
      00022F F5 82            [12] 1028 	mov	dpl,a
      000231 C0 07            [24] 1029 	push	ar7
      000233 78r00            [12] 1030 	mov	r0,#_sioInit
      000235 79s00            [12] 1031 	mov	r1,#(_sioInit >> 8)
      000237 7As00            [12] 1032 	mov	r2,#(_sioInit >> 16)
      000239 12r00r00         [24] 1033 	lcall	__sdcc_banked_call
      00023C D0 07            [24] 1034 	pop	ar7
                           00023E  1035 	C$sio.c$117$1_0$39 ==.
                                   1036 ;	sio.c:117: while(1)
      00023E                       1037 00102$:
                           00023E  1038 	C$sio.c$119$2_0$40 ==.
                                   1039 ;	sio.c:119: sioTX(device, sioRX(device));
      00023E 8F 82            [24] 1040 	mov	dpl,r7
      000240 C0 07            [24] 1041 	push	ar7
      000242 78r13            [12] 1042 	mov	r0,#_sioRX
      000244 79s01            [12] 1043 	mov	r1,#(_sioRX >> 8)
      000246 7As00            [12] 1044 	mov	r2,#(_sioRX >> 16)
      000248 12r00r00         [24] 1045 	lcall	__sdcc_banked_call
      00024B AE 82            [24] 1046 	mov	r6,dpl
      00024D D0 07            [24] 1047 	pop	ar7
      00024F 90r00r00         [24] 1048 	mov	dptr,#_sioTX_PARM_2
      000252 EE               [12] 1049 	mov	a,r6
      000253 F0               [24] 1050 	movx	@dptr,a
      000254 8F 82            [24] 1051 	mov	dpl,r7
      000256 C0 07            [24] 1052 	push	ar7
      000258 78r31            [12] 1053 	mov	r0,#_sioTX
      00025A 79s00            [12] 1054 	mov	r1,#(_sioTX >> 8)
      00025C 7As00            [12] 1055 	mov	r2,#(_sioTX >> 16)
      00025E 12r00r00         [24] 1056 	lcall	__sdcc_banked_call
      000261 D0 07            [24] 1057 	pop	ar7
                           000263  1058 	C$sio.c$121$1_0$39 ==.
                                   1059 ;	sio.c:121: }
                           000263  1060 	C$sio.c$121$1_0$39 ==.
                           000263  1061 	XG$sioTest1$0$0 ==.
      000263 80 D9            [24] 1062 	sjmp	00102$
                                   1063 ;------------------------------------------------------------
                                   1064 ;Allocation info for local variables in function 'sioTest2'
                                   1065 ;------------------------------------------------------------
                                   1066 ;device                    Allocated with name '_sioTest2_device_65536_41'
                                   1067 ;------------------------------------------------------------
                           000265  1068 	G$sioTest2$0$0 ==.
                           000265  1069 	C$sio.c$133$1_0$42 ==.
                                   1070 ;	sio.c:133: void sioTest2(char device)
                                   1071 ;	-----------------------------------------
                                   1072 ;	 function sioTest2
                                   1073 ;	-----------------------------------------
      000265                       1074 _sioTest2:
      000265 E5 82            [12] 1075 	mov	a,dpl
      000267 90r00r18         [24] 1076 	mov	dptr,#_sioTest2_device_65536_41
      00026A F0               [24] 1077 	movx	@dptr,a
                           00026B  1078 	C$sio.c$135$1_0$42 ==.
                                   1079 ;	sio.c:135: sioInit(device);
      00026B E0               [24] 1080 	movx	a,@dptr
      00026C FF               [12] 1081 	mov	r7,a
      00026D F5 82            [12] 1082 	mov	dpl,a
      00026F C0 07            [24] 1083 	push	ar7
      000271 78r00            [12] 1084 	mov	r0,#_sioInit
      000273 79s00            [12] 1085 	mov	r1,#(_sioInit >> 8)
      000275 7As00            [12] 1086 	mov	r2,#(_sioInit >> 16)
      000277 12r00r00         [24] 1087 	lcall	__sdcc_banked_call
      00027A D0 07            [24] 1088 	pop	ar7
                           00027C  1089 	C$sio.c$136$1_0$42 ==.
                                   1090 ;	sio.c:136: while(1)
      00027C                       1091 00102$:
                           00027C  1092 	C$sio.c$138$2_0$43 ==.
                                   1093 ;	sio.c:138: sioTXStr(device, "Fuck you now!!!!\r\n");
      00027C 90r00r01         [24] 1094 	mov	dptr,#_sioTXStr_PARM_2
      00027F 74r34            [12] 1095 	mov	a,#___str_0
      000281 F0               [24] 1096 	movx	@dptr,a
      000282 74s00            [12] 1097 	mov	a,#(___str_0 >> 8)
      000284 A3               [24] 1098 	inc	dptr
      000285 F0               [24] 1099 	movx	@dptr,a
      000286 74 80            [12] 1100 	mov	a,#0x80
      000288 A3               [24] 1101 	inc	dptr
      000289 F0               [24] 1102 	movx	@dptr,a
      00028A 8F 82            [24] 1103 	mov	dpl,r7
      00028C C0 07            [24] 1104 	push	ar7
      00028E 78r3F            [12] 1105 	mov	r0,#_sioTXStr
      000290 79s00            [12] 1106 	mov	r1,#(_sioTXStr >> 8)
      000292 7As00            [12] 1107 	mov	r2,#(_sioTXStr >> 16)
      000294 12r00r00         [24] 1108 	lcall	__sdcc_banked_call
      000297 D0 07            [24] 1109 	pop	ar7
                           000299  1110 	C$sio.c$139$2_0$43 ==.
                                   1111 ;	sio.c:139: sioTXBuf(device, data, 26*2);
      000299 90r00r05         [24] 1112 	mov	dptr,#_sioTXBuf_PARM_2
      00029C 74r00            [12] 1113 	mov	a,#_data
      00029E F0               [24] 1114 	movx	@dptr,a
      00029F 74s00            [12] 1115 	mov	a,#(_data >> 8)
      0002A1 A3               [24] 1116 	inc	dptr
      0002A2 F0               [24] 1117 	movx	@dptr,a
      0002A3 74 80            [12] 1118 	mov	a,#0x80
      0002A5 A3               [24] 1119 	inc	dptr
      0002A6 F0               [24] 1120 	movx	@dptr,a
      0002A7 90r00r08         [24] 1121 	mov	dptr,#_sioTXBuf_PARM_3
      0002AA 74 34            [12] 1122 	mov	a,#0x34
      0002AC F0               [24] 1123 	movx	@dptr,a
      0002AD E4               [12] 1124 	clr	a
      0002AE A3               [24] 1125 	inc	dptr
      0002AF F0               [24] 1126 	movx	@dptr,a
      0002B0 8F 82            [24] 1127 	mov	dpl,r7
      0002B2 C0 07            [24] 1128 	push	ar7
      0002B4 78r8F            [12] 1129 	mov	r0,#_sioTXBuf
      0002B6 79s00            [12] 1130 	mov	r1,#(_sioTXBuf >> 8)
      0002B8 7As00            [12] 1131 	mov	r2,#(_sioTXBuf >> 16)
      0002BA 12r00r00         [24] 1132 	lcall	__sdcc_banked_call
      0002BD D0 07            [24] 1133 	pop	ar7
                           0002BF  1134 	C$sio.c$141$1_0$42 ==.
                                   1135 ;	sio.c:141: }
                           0002BF  1136 	C$sio.c$141$1_0$42 ==.
                           0002BF  1137 	XG$sioTest2$0$0 ==.
      0002BF 80 BB            [24] 1138 	sjmp	00102$
                                   1139 ;------------------------------------------------------------
                                   1140 ;Allocation info for local variables in function 'sioTest3'
                                   1141 ;------------------------------------------------------------
                                   1142 ;device                    Allocated with name '_sioTest3_device_65536_44'
                                   1143 ;------------------------------------------------------------
                           0002C1  1144 	G$sioTest3$0$0 ==.
                           0002C1  1145 	C$sio.c$143$1_0$45 ==.
                                   1146 ;	sio.c:143: void sioTest3(char device)
                                   1147 ;	-----------------------------------------
                                   1148 ;	 function sioTest3
                                   1149 ;	-----------------------------------------
      0002C1                       1150 _sioTest3:
                           0002C1  1151 	C$sio.c$145$1_0$45 ==.
                                   1152 ;	sio.c:145: device;
                           0002C1  1153 	C$sio.c$146$1_0$45 ==.
                                   1154 ;	sio.c:146: }
                           0002C1  1155 	C$sio.c$146$1_0$45 ==.
                           0002C1  1156 	XG$sioTest3$0$0 ==.
      0002C1 02r00r00         [24] 1157 	ljmp	__sdcc_banked_ret
                                   1158 	.area CSEG    (CODE)
                                   1159 	.area CONST   (CODE)
                           000000  1160 G$data$0_0$0 == .
      000000                       1161 _data:
      000000 61                    1162 	.db #0x61	; 97	'a'
      000001 62                    1163 	.db #0x62	; 98	'b'
      000002 63                    1164 	.db #0x63	; 99	'c'
      000003 64                    1165 	.db #0x64	; 100	'd'
      000004 65                    1166 	.db #0x65	; 101	'e'
      000005 66                    1167 	.db #0x66	; 102	'f'
      000006 67                    1168 	.db #0x67	; 103	'g'
      000007 68                    1169 	.db #0x68	; 104	'h'
      000008 69                    1170 	.db #0x69	; 105	'i'
      000009 6A                    1171 	.db #0x6a	; 106	'j'
      00000A 6B                    1172 	.db #0x6b	; 107	'k'
      00000B 6C                    1173 	.db #0x6c	; 108	'l'
      00000C 6D                    1174 	.db #0x6d	; 109	'm'
      00000D 6E                    1175 	.db #0x6e	; 110	'n'
      00000E 6F                    1176 	.db #0x6f	; 111	'o'
      00000F 70                    1177 	.db #0x70	; 112	'p'
      000010 71                    1178 	.db #0x71	; 113	'q'
      000011 72                    1179 	.db #0x72	; 114	'r'
      000012 73                    1180 	.db #0x73	; 115	's'
      000013 74                    1181 	.db #0x74	; 116	't'
      000014 75                    1182 	.db #0x75	; 117	'u'
      000015 76                    1183 	.db #0x76	; 118	'v'
      000016 77                    1184 	.db #0x77	; 119	'w'
      000017 78                    1185 	.db #0x78	; 120	'x'
      000018 79                    1186 	.db #0x79	; 121	'y'
      000019 7A                    1187 	.db #0x7a	; 122	'z'
      00001A 41                    1188 	.db #0x41	; 65	'A'
      00001B 42                    1189 	.db #0x42	; 66	'B'
      00001C 43                    1190 	.db #0x43	; 67	'C'
      00001D 44                    1191 	.db #0x44	; 68	'D'
      00001E 45                    1192 	.db #0x45	; 69	'E'
      00001F 46                    1193 	.db #0x46	; 70	'F'
      000020 47                    1194 	.db #0x47	; 71	'G'
      000021 48                    1195 	.db #0x48	; 72	'H'
      000022 49                    1196 	.db #0x49	; 73	'I'
      000023 4A                    1197 	.db #0x4a	; 74	'J'
      000024 4B                    1198 	.db #0x4b	; 75	'K'
      000025 4C                    1199 	.db #0x4c	; 76	'L'
      000026 4D                    1200 	.db #0x4d	; 77	'M'
      000027 4E                    1201 	.db #0x4e	; 78	'N'
      000028 4F                    1202 	.db #0x4f	; 79	'O'
      000029 50                    1203 	.db #0x50	; 80	'P'
      00002A 51                    1204 	.db #0x51	; 81	'Q'
      00002B 52                    1205 	.db #0x52	; 82	'R'
      00002C 53                    1206 	.db #0x53	; 83	'S'
      00002D 54                    1207 	.db #0x54	; 84	'T'
      00002E 55                    1208 	.db #0x55	; 85	'U'
      00002F 56                    1209 	.db #0x56	; 86	'V'
      000030 57                    1210 	.db #0x57	; 87	'W'
      000031 58                    1211 	.db #0x58	; 88	'X'
      000032 59                    1212 	.db #0x59	; 89	'Y'
      000033 5A                    1213 	.db #0x5a	; 90	'Z'
                           000034  1214 Fsio$__str_0$0_0$0 == .
      000034                       1215 ___str_0:
      000034 46 75 63 6B 20 79 6F  1216 	.ascii "Fuck you now!!!!"
             75 20 6E 6F 77 21 21
             21 21
      000044 0D                    1217 	.db 0x0d
      000045 0A                    1218 	.db 0x0a
      000046 00                    1219 	.db 0x00
                                   1220 	.area XINIT   (CODE)
                                   1221 	.area CABS    (ABS,CODE)
