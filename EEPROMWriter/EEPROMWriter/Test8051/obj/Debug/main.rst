                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _sysLoadProgram
                                     13 	.globl _FATTest
                                     14 	.globl _cfTest
                                     15 	.globl _ledTest
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _F1
                                     23 	.globl _P
                                     24 	.globl _PS
                                     25 	.globl _PT1
                                     26 	.globl _PX1
                                     27 	.globl _PT0
                                     28 	.globl _PX0
                                     29 	.globl _RD
                                     30 	.globl _WR
                                     31 	.globl _T1
                                     32 	.globl _T0
                                     33 	.globl _INT1
                                     34 	.globl _INT0
                                     35 	.globl _TXD
                                     36 	.globl _RXD
                                     37 	.globl _P3_7
                                     38 	.globl _P3_6
                                     39 	.globl _P3_5
                                     40 	.globl _P3_4
                                     41 	.globl _P3_3
                                     42 	.globl _P3_2
                                     43 	.globl _P3_1
                                     44 	.globl _P3_0
                                     45 	.globl _EA
                                     46 	.globl _ES
                                     47 	.globl _ET1
                                     48 	.globl _EX1
                                     49 	.globl _ET0
                                     50 	.globl _EX0
                                     51 	.globl _P2_7
                                     52 	.globl _P2_6
                                     53 	.globl _P2_5
                                     54 	.globl _P2_4
                                     55 	.globl _P2_3
                                     56 	.globl _P2_2
                                     57 	.globl _P2_1
                                     58 	.globl _P2_0
                                     59 	.globl _SM0
                                     60 	.globl _SM1
                                     61 	.globl _SM2
                                     62 	.globl _REN
                                     63 	.globl _TB8
                                     64 	.globl _RB8
                                     65 	.globl _TI
                                     66 	.globl _RI
                                     67 	.globl _P1_7
                                     68 	.globl _P1_6
                                     69 	.globl _P1_5
                                     70 	.globl _P1_4
                                     71 	.globl _P1_3
                                     72 	.globl _P1_2
                                     73 	.globl _P1_1
                                     74 	.globl _P1_0
                                     75 	.globl _TF1
                                     76 	.globl _TR1
                                     77 	.globl _TF0
                                     78 	.globl _TR0
                                     79 	.globl _IE1
                                     80 	.globl _IT1
                                     81 	.globl _IE0
                                     82 	.globl _IT0
                                     83 	.globl _P0_7
                                     84 	.globl _P0_6
                                     85 	.globl _P0_5
                                     86 	.globl _P0_4
                                     87 	.globl _P0_3
                                     88 	.globl _P0_2
                                     89 	.globl _P0_1
                                     90 	.globl _P0_0
                                     91 	.globl _B
                                     92 	.globl _ACC
                                     93 	.globl _PSW
                                     94 	.globl _IP
                                     95 	.globl _P3
                                     96 	.globl _IE
                                     97 	.globl _P2
                                     98 	.globl _SBUF
                                     99 	.globl _SCON
                                    100 	.globl _P1
                                    101 	.globl _TH1
                                    102 	.globl _TH0
                                    103 	.globl _TL1
                                    104 	.globl _TL0
                                    105 	.globl _TMOD
                                    106 	.globl _TCON
                                    107 	.globl _PCON
                                    108 	.globl _DPH
                                    109 	.globl _DPL
                                    110 	.globl _SP
                                    111 	.globl _P0
                                    112 ;--------------------------------------------------------
                                    113 ; special function registers
                                    114 ;--------------------------------------------------------
                                    115 	.area RSEG    (ABS,DATA)
      000000                        116 	.org 0x0000
                           000080   117 G$P0$0_0$0 == 0x0080
                           000080   118 _P0	=	0x0080
                           000081   119 G$SP$0_0$0 == 0x0081
                           000081   120 _SP	=	0x0081
                           000082   121 G$DPL$0_0$0 == 0x0082
                           000082   122 _DPL	=	0x0082
                           000083   123 G$DPH$0_0$0 == 0x0083
                           000083   124 _DPH	=	0x0083
                           000087   125 G$PCON$0_0$0 == 0x0087
                           000087   126 _PCON	=	0x0087
                           000088   127 G$TCON$0_0$0 == 0x0088
                           000088   128 _TCON	=	0x0088
                           000089   129 G$TMOD$0_0$0 == 0x0089
                           000089   130 _TMOD	=	0x0089
                           00008A   131 G$TL0$0_0$0 == 0x008a
                           00008A   132 _TL0	=	0x008a
                           00008B   133 G$TL1$0_0$0 == 0x008b
                           00008B   134 _TL1	=	0x008b
                           00008C   135 G$TH0$0_0$0 == 0x008c
                           00008C   136 _TH0	=	0x008c
                           00008D   137 G$TH1$0_0$0 == 0x008d
                           00008D   138 _TH1	=	0x008d
                           000090   139 G$P1$0_0$0 == 0x0090
                           000090   140 _P1	=	0x0090
                           000098   141 G$SCON$0_0$0 == 0x0098
                           000098   142 _SCON	=	0x0098
                           000099   143 G$SBUF$0_0$0 == 0x0099
                           000099   144 _SBUF	=	0x0099
                           0000A0   145 G$P2$0_0$0 == 0x00a0
                           0000A0   146 _P2	=	0x00a0
                           0000A8   147 G$IE$0_0$0 == 0x00a8
                           0000A8   148 _IE	=	0x00a8
                           0000B0   149 G$P3$0_0$0 == 0x00b0
                           0000B0   150 _P3	=	0x00b0
                           0000B8   151 G$IP$0_0$0 == 0x00b8
                           0000B8   152 _IP	=	0x00b8
                           0000D0   153 G$PSW$0_0$0 == 0x00d0
                           0000D0   154 _PSW	=	0x00d0
                           0000E0   155 G$ACC$0_0$0 == 0x00e0
                           0000E0   156 _ACC	=	0x00e0
                           0000F0   157 G$B$0_0$0 == 0x00f0
                           0000F0   158 _B	=	0x00f0
                                    159 ;--------------------------------------------------------
                                    160 ; special function bits
                                    161 ;--------------------------------------------------------
                                    162 	.area RSEG    (ABS,DATA)
      000000                        163 	.org 0x0000
                           000080   164 G$P0_0$0_0$0 == 0x0080
                           000080   165 _P0_0	=	0x0080
                           000081   166 G$P0_1$0_0$0 == 0x0081
                           000081   167 _P0_1	=	0x0081
                           000082   168 G$P0_2$0_0$0 == 0x0082
                           000082   169 _P0_2	=	0x0082
                           000083   170 G$P0_3$0_0$0 == 0x0083
                           000083   171 _P0_3	=	0x0083
                           000084   172 G$P0_4$0_0$0 == 0x0084
                           000084   173 _P0_4	=	0x0084
                           000085   174 G$P0_5$0_0$0 == 0x0085
                           000085   175 _P0_5	=	0x0085
                           000086   176 G$P0_6$0_0$0 == 0x0086
                           000086   177 _P0_6	=	0x0086
                           000087   178 G$P0_7$0_0$0 == 0x0087
                           000087   179 _P0_7	=	0x0087
                           000088   180 G$IT0$0_0$0 == 0x0088
                           000088   181 _IT0	=	0x0088
                           000089   182 G$IE0$0_0$0 == 0x0089
                           000089   183 _IE0	=	0x0089
                           00008A   184 G$IT1$0_0$0 == 0x008a
                           00008A   185 _IT1	=	0x008a
                           00008B   186 G$IE1$0_0$0 == 0x008b
                           00008B   187 _IE1	=	0x008b
                           00008C   188 G$TR0$0_0$0 == 0x008c
                           00008C   189 _TR0	=	0x008c
                           00008D   190 G$TF0$0_0$0 == 0x008d
                           00008D   191 _TF0	=	0x008d
                           00008E   192 G$TR1$0_0$0 == 0x008e
                           00008E   193 _TR1	=	0x008e
                           00008F   194 G$TF1$0_0$0 == 0x008f
                           00008F   195 _TF1	=	0x008f
                           000090   196 G$P1_0$0_0$0 == 0x0090
                           000090   197 _P1_0	=	0x0090
                           000091   198 G$P1_1$0_0$0 == 0x0091
                           000091   199 _P1_1	=	0x0091
                           000092   200 G$P1_2$0_0$0 == 0x0092
                           000092   201 _P1_2	=	0x0092
                           000093   202 G$P1_3$0_0$0 == 0x0093
                           000093   203 _P1_3	=	0x0093
                           000094   204 G$P1_4$0_0$0 == 0x0094
                           000094   205 _P1_4	=	0x0094
                           000095   206 G$P1_5$0_0$0 == 0x0095
                           000095   207 _P1_5	=	0x0095
                           000096   208 G$P1_6$0_0$0 == 0x0096
                           000096   209 _P1_6	=	0x0096
                           000097   210 G$P1_7$0_0$0 == 0x0097
                           000097   211 _P1_7	=	0x0097
                           000098   212 G$RI$0_0$0 == 0x0098
                           000098   213 _RI	=	0x0098
                           000099   214 G$TI$0_0$0 == 0x0099
                           000099   215 _TI	=	0x0099
                           00009A   216 G$RB8$0_0$0 == 0x009a
                           00009A   217 _RB8	=	0x009a
                           00009B   218 G$TB8$0_0$0 == 0x009b
                           00009B   219 _TB8	=	0x009b
                           00009C   220 G$REN$0_0$0 == 0x009c
                           00009C   221 _REN	=	0x009c
                           00009D   222 G$SM2$0_0$0 == 0x009d
                           00009D   223 _SM2	=	0x009d
                           00009E   224 G$SM1$0_0$0 == 0x009e
                           00009E   225 _SM1	=	0x009e
                           00009F   226 G$SM0$0_0$0 == 0x009f
                           00009F   227 _SM0	=	0x009f
                           0000A0   228 G$P2_0$0_0$0 == 0x00a0
                           0000A0   229 _P2_0	=	0x00a0
                           0000A1   230 G$P2_1$0_0$0 == 0x00a1
                           0000A1   231 _P2_1	=	0x00a1
                           0000A2   232 G$P2_2$0_0$0 == 0x00a2
                           0000A2   233 _P2_2	=	0x00a2
                           0000A3   234 G$P2_3$0_0$0 == 0x00a3
                           0000A3   235 _P2_3	=	0x00a3
                           0000A4   236 G$P2_4$0_0$0 == 0x00a4
                           0000A4   237 _P2_4	=	0x00a4
                           0000A5   238 G$P2_5$0_0$0 == 0x00a5
                           0000A5   239 _P2_5	=	0x00a5
                           0000A6   240 G$P2_6$0_0$0 == 0x00a6
                           0000A6   241 _P2_6	=	0x00a6
                           0000A7   242 G$P2_7$0_0$0 == 0x00a7
                           0000A7   243 _P2_7	=	0x00a7
                           0000A8   244 G$EX0$0_0$0 == 0x00a8
                           0000A8   245 _EX0	=	0x00a8
                           0000A9   246 G$ET0$0_0$0 == 0x00a9
                           0000A9   247 _ET0	=	0x00a9
                           0000AA   248 G$EX1$0_0$0 == 0x00aa
                           0000AA   249 _EX1	=	0x00aa
                           0000AB   250 G$ET1$0_0$0 == 0x00ab
                           0000AB   251 _ET1	=	0x00ab
                           0000AC   252 G$ES$0_0$0 == 0x00ac
                           0000AC   253 _ES	=	0x00ac
                           0000AF   254 G$EA$0_0$0 == 0x00af
                           0000AF   255 _EA	=	0x00af
                           0000B0   256 G$P3_0$0_0$0 == 0x00b0
                           0000B0   257 _P3_0	=	0x00b0
                           0000B1   258 G$P3_1$0_0$0 == 0x00b1
                           0000B1   259 _P3_1	=	0x00b1
                           0000B2   260 G$P3_2$0_0$0 == 0x00b2
                           0000B2   261 _P3_2	=	0x00b2
                           0000B3   262 G$P3_3$0_0$0 == 0x00b3
                           0000B3   263 _P3_3	=	0x00b3
                           0000B4   264 G$P3_4$0_0$0 == 0x00b4
                           0000B4   265 _P3_4	=	0x00b4
                           0000B5   266 G$P3_5$0_0$0 == 0x00b5
                           0000B5   267 _P3_5	=	0x00b5
                           0000B6   268 G$P3_6$0_0$0 == 0x00b6
                           0000B6   269 _P3_6	=	0x00b6
                           0000B7   270 G$P3_7$0_0$0 == 0x00b7
                           0000B7   271 _P3_7	=	0x00b7
                           0000B0   272 G$RXD$0_0$0 == 0x00b0
                           0000B0   273 _RXD	=	0x00b0
                           0000B1   274 G$TXD$0_0$0 == 0x00b1
                           0000B1   275 _TXD	=	0x00b1
                           0000B2   276 G$INT0$0_0$0 == 0x00b2
                           0000B2   277 _INT0	=	0x00b2
                           0000B3   278 G$INT1$0_0$0 == 0x00b3
                           0000B3   279 _INT1	=	0x00b3
                           0000B4   280 G$T0$0_0$0 == 0x00b4
                           0000B4   281 _T0	=	0x00b4
                           0000B5   282 G$T1$0_0$0 == 0x00b5
                           0000B5   283 _T1	=	0x00b5
                           0000B6   284 G$WR$0_0$0 == 0x00b6
                           0000B6   285 _WR	=	0x00b6
                           0000B7   286 G$RD$0_0$0 == 0x00b7
                           0000B7   287 _RD	=	0x00b7
                           0000B8   288 G$PX0$0_0$0 == 0x00b8
                           0000B8   289 _PX0	=	0x00b8
                           0000B9   290 G$PT0$0_0$0 == 0x00b9
                           0000B9   291 _PT0	=	0x00b9
                           0000BA   292 G$PX1$0_0$0 == 0x00ba
                           0000BA   293 _PX1	=	0x00ba
                           0000BB   294 G$PT1$0_0$0 == 0x00bb
                           0000BB   295 _PT1	=	0x00bb
                           0000BC   296 G$PS$0_0$0 == 0x00bc
                           0000BC   297 _PS	=	0x00bc
                           0000D0   298 G$P$0_0$0 == 0x00d0
                           0000D0   299 _P	=	0x00d0
                           0000D1   300 G$F1$0_0$0 == 0x00d1
                           0000D1   301 _F1	=	0x00d1
                           0000D2   302 G$OV$0_0$0 == 0x00d2
                           0000D2   303 _OV	=	0x00d2
                           0000D3   304 G$RS0$0_0$0 == 0x00d3
                           0000D3   305 _RS0	=	0x00d3
                           0000D4   306 G$RS1$0_0$0 == 0x00d4
                           0000D4   307 _RS1	=	0x00d4
                           0000D5   308 G$F0$0_0$0 == 0x00d5
                           0000D5   309 _F0	=	0x00d5
                           0000D6   310 G$AC$0_0$0 == 0x00d6
                           0000D6   311 _AC	=	0x00d6
                           0000D7   312 G$CY$0_0$0 == 0x00d7
                           0000D7   313 _CY	=	0x00d7
                                    314 ;--------------------------------------------------------
                                    315 ; overlayable register banks
                                    316 ;--------------------------------------------------------
                                    317 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        318 	.ds 8
                                    319 ;--------------------------------------------------------
                                    320 ; internal ram data
                                    321 ;--------------------------------------------------------
                                    322 	.area DSEG    (DATA)
                                    323 ;--------------------------------------------------------
                                    324 ; overlayable items in internal ram 
                                    325 ;--------------------------------------------------------
                                    326 ;--------------------------------------------------------
                                    327 ; Stack segment in internal ram 
                                    328 ;--------------------------------------------------------
                                    329 	.area	SSEG
      000021                        330 __start__stack:
      000021                        331 	.ds	1
                                    332 
                                    333 ;--------------------------------------------------------
                                    334 ; indirectly addressable internal ram data
                                    335 ;--------------------------------------------------------
                                    336 	.area ISEG    (DATA)
                                    337 ;--------------------------------------------------------
                                    338 ; absolute internal ram data
                                    339 ;--------------------------------------------------------
                                    340 	.area IABS    (ABS,DATA)
                                    341 	.area IABS    (ABS,DATA)
                                    342 ;--------------------------------------------------------
                                    343 ; bit data
                                    344 ;--------------------------------------------------------
                                    345 	.area BSEG    (BIT)
                                    346 ;--------------------------------------------------------
                                    347 ; paged external ram data
                                    348 ;--------------------------------------------------------
                                    349 	.area PSEG    (PAG,XDATA)
                                    350 ;--------------------------------------------------------
                                    351 ; external ram data
                                    352 ;--------------------------------------------------------
                                    353 	.area XSEG    (XDATA)
                                    354 ;--------------------------------------------------------
                                    355 ; absolute external ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area XABS    (ABS,XDATA)
                                    358 ;--------------------------------------------------------
                                    359 ; external initialized ram data
                                    360 ;--------------------------------------------------------
                                    361 	.area XISEG   (XDATA)
                                    362 	.area HOME    (CODE)
                                    363 	.area GSINIT0 (CODE)
                                    364 	.area GSINIT1 (CODE)
                                    365 	.area GSINIT2 (CODE)
                                    366 	.area GSINIT3 (CODE)
                                    367 	.area GSINIT4 (CODE)
                                    368 	.area GSINIT5 (CODE)
                                    369 	.area GSINIT  (CODE)
                                    370 	.area GSFINAL (CODE)
                                    371 	.area CSEG    (CODE)
                                    372 ;--------------------------------------------------------
                                    373 ; interrupt vector 
                                    374 ;--------------------------------------------------------
                                    375 	.area HOME    (CODE)
      000000                        376 __interrupt_vect:
      000000 02 00 06         [24]  377 	ljmp	__sdcc_gsinit_startup
                                    378 ;--------------------------------------------------------
                                    379 ; global & static initialisations
                                    380 ;--------------------------------------------------------
                                    381 	.area HOME    (CODE)
                                    382 	.area GSINIT  (CODE)
                                    383 	.area GSFINAL (CODE)
                                    384 	.area GSINIT  (CODE)
                                    385 	.globl __sdcc_gsinit_startup
                                    386 	.globl __sdcc_program_startup
                                    387 	.globl __start__stack
                                    388 	.globl __mcs51_genXINIT
                                    389 	.globl __mcs51_genXRAMCLEAR
                                    390 	.globl __mcs51_genRAMCLEAR
                                    391 	.area GSFINAL (CODE)
      00005F 02 00 03         [24]  392 	ljmp	__sdcc_program_startup
                                    393 ;--------------------------------------------------------
                                    394 ; Home
                                    395 ;--------------------------------------------------------
                                    396 	.area HOME    (CODE)
                                    397 	.area HOME    (CODE)
      000003                        398 __sdcc_program_startup:
      000003 02 04 35         [24]  399 	ljmp	_main
                                    400 ;	return from main will return to caller
                                    401 ;--------------------------------------------------------
                                    402 ; code
                                    403 ;--------------------------------------------------------
                                    404 	.area CSEG    (CODE)
                                    405 ;------------------------------------------------------------
                                    406 ;Allocation info for local variables in function 'sysLoadProgram'
                                    407 ;------------------------------------------------------------
                           000000   408 	G$sysLoadProgram$0$0 ==.
                           000000   409 	C$main.c$4$0_0$25 ==.
                                    410 ;	main.c:4: void sysLoadProgram()
                                    411 ;	-----------------------------------------
                                    412 ;	 function sysLoadProgram
                                    413 ;	-----------------------------------------
      0003DA                        414 _sysLoadProgram:
                           000007   415 	ar7 = 0x07
                           000006   416 	ar6 = 0x06
                           000005   417 	ar5 = 0x05
                           000004   418 	ar4 = 0x04
                           000003   419 	ar3 = 0x03
                           000002   420 	ar2 = 0x02
                           000001   421 	ar1 = 0x01
                           000000   422 	ar0 = 0x00
                           000000   423 	C$main.c$67$1_0$25 ==.
                                    424 ;	main.c:67: __endasm;
      0003DA C0 04            [24]  425 	PUSH	ar4
      0003DC C0 05            [24]  426 	PUSH	ar5
      0003DE C0 82            [24]  427 	PUSH	DPL
      0003E0 C0 83            [24]  428 	PUSH	DPH
      0003E2 75 98 50         [24]  429 	MOV	SCON, #0x50
      0003E5 75 89 21         [24]  430 	MOV	TMOD, #0x21
      0003E8 75 87 80         [24]  431 	MOV	PCON, #0x80
      0003EB 75 8D FA         [24]  432 	MOV	TH1, #0xFA
      0003EE 75 8B FA         [24]  433 	MOV	TL1, #0xFA
      0003F1 D2 8E            [12]  434 	SETB	TR1
      0003F3 05 90            [12]  435 	INC	P1
      0003F5                        436 	    WAIT_RX1:
      0003F5 30 98 FD         [24]  437 	JNB	RI, WAIT_RX1
      0003F8 E5 99            [12]  438 	MOV	A, SBUF
      0003FA FC               [12]  439 	MOV	R4, A
      0003FB C2 98            [12]  440 	CLR	RI
      0003FD 05 90            [12]  441 	INC	P1
      0003FF                        442 	    WAIT_RX2:
      0003FF 30 98 FD         [24]  443 	JNB	RI, WAIT_RX2
      000402 E5 99            [12]  444 	MOV	A, SBUF
      000404 FD               [12]  445 	MOV	R5, A
      000405 C2 98            [12]  446 	CLR	RI
      000407 05 90            [12]  447 	INC	P1
      000409 90 00 00         [24]  448 	MOV	DPTR, #0x0000
      00040C                        449 	    sysLoadProgram_LP:
      00040C E4               [12]  450 	CLR	A
      00040D C3               [12]  451 	CLR	C
      00040E                        452 	    WAIT_RX3:
      00040E 30 98 FD         [24]  453 	JNB	RI, WAIT_RX3
      000411 E5 99            [12]  454 	MOV	A, SBUF
      000413 C2 98            [12]  455 	CLR	RI
      000415 05 90            [12]  456 	INC	P1
      000417 F0               [24]  457 	MOVX	@DPTR, A
      000418 A3               [24]  458 	INC	DPTR
      000419 E5 82            [12]  459 	MOV	A, DPL
      00041B 9C               [12]  460 	SUBB	A, R4
      00041C 70 EE            [24]  461 	JNZ	sysLoadProgram_LP
      00041E E5 83            [12]  462 	MOV	A, DPH
      000420 9D               [12]  463 	SUBB	A, R5
      000421 70 E9            [24]  464 	JNZ	sysLoadProgram_LP
      000423 D0 83            [24]  465 	POP	DPH
      000425 D0 82            [24]  466 	POP	DPL
      000427 D0 05            [24]  467 	POP	ar5
      000429 D0 04            [24]  468 	POP	ar4
      00042B 90 FF 70         [24]  469 	MOV	DPTR, #0xFF70
      00042E E0               [24]  470 	MOVX	A, @DPTR
      00042F 90 00 00         [24]  471 	MOV	DPTR, #0x0000
      000432 E4               [12]  472 	CLR	A
      000433 73               [24]  473 	JMP	@A+DPTR
                           00005A   474 	C$main.c$68$1_0$25 ==.
                                    475 ;	main.c:68: }
                           00005A   476 	C$main.c$68$1_0$25 ==.
                           00005A   477 	XG$sysLoadProgram$0$0 ==.
      000434 22               [24]  478 	ret
                                    479 ;------------------------------------------------------------
                                    480 ;Allocation info for local variables in function 'main'
                                    481 ;------------------------------------------------------------
                                    482 ;res                       Allocated to stack - _bp +1
                                    483 ;br                        Allocated to stack - _bp +2
                                    484 ;src                       Allocated to registers 
                                    485 ;dst                       Allocated to stack - _bp +1
                                    486 ;count                     Allocated to registers r2 r3 
                                    487 ;------------------------------------------------------------
                           00005B   488 	G$main$0$0 ==.
                           00005B   489 	C$main.c$70$1_0$26 ==.
                                    490 ;	main.c:70: void main()
                                    491 ;	-----------------------------------------
                                    492 ;	 function main
                                    493 ;	-----------------------------------------
      000435                        494 _main:
      000435 C0 08            [24]  495 	push	_bp
      000437 85 81 08         [24]  496 	mov	_bp,sp
      00043A 05 81            [12]  497 	inc	sp
      00043C 05 81            [12]  498 	inc	sp
                           000064   499 	C$main.c$75$1_0$26 ==.
                                    500 ;	main.c:75: P1 = 0x01;
      00043E 75 90 01         [24]  501 	mov	_P1,#0x01
                           000067   502 	C$main.c$76$2_0$27 ==.
                                    503 ;	main.c:76: sysCopyBIOS(0x0000, 0x0000, 0x8000);
      000441 90 00 00         [24]  504 	mov	dptr,#0x0000
      000444 E4               [12]  505 	clr	a
      000445 93               [24]  506 	movc	a,@a+dptr
      000446 FE               [12]  507 	mov	r6,a
      000447 7F 00            [12]  508 	mov	r7,#0x00
      000449 90 00 00         [24]  509 	mov	dptr,#0x0000
      00044C E0               [24]  510 	movx	a,@dptr
      00044D FC               [12]  511 	mov	r4,a
      00044E 7D 00            [12]  512 	mov	r5,#0x00
      000450 7A 00            [12]  513 	mov	r2,#0x00
      000452 7B 80            [12]  514 	mov	r3,#0x80
      000454                        515 00101$:
      000454 8A 00            [24]  516 	mov	ar0,r2
      000456 8B 01            [24]  517 	mov	ar1,r3
      000458 1A               [12]  518 	dec	r2
      000459 BA FF 01         [24]  519 	cjne	r2,#0xff,00125$
      00045C 1B               [12]  520 	dec	r3
      00045D                        521 00125$:
      00045D E8               [12]  522 	mov	a,r0
      00045E 49               [12]  523 	orl	a,r1
      00045F 60 19            [24]  524 	jz	00104$
      000461 8E 82            [24]  525 	mov	dpl,r6
      000463 8F 83            [24]  526 	mov	dph,r7
      000465 E4               [12]  527 	clr	a
      000466 93               [24]  528 	movc	a,@a+dptr
      000467 F9               [12]  529 	mov	r1,a
      000468 A3               [24]  530 	inc	dptr
      000469 AE 82            [24]  531 	mov	r6,dpl
      00046B AF 83            [24]  532 	mov	r7,dph
      00046D 8C 82            [24]  533 	mov	dpl,r4
      00046F 8D 83            [24]  534 	mov	dph,r5
      000471 E9               [12]  535 	mov	a,r1
      000472 F0               [24]  536 	movx	@dptr,a
      000473 A3               [24]  537 	inc	dptr
      000474 AC 82            [24]  538 	mov	r4,dpl
      000476 AD 83            [24]  539 	mov	r5,dph
                           00009E   540 	C$main.c$79$1_0$26 ==.
                                    541 ;	main.c:79: if(1)
      000478 80 DA            [24]  542 	sjmp	00101$
      00047A                        543 00104$:
                           0000A0   544 	C$main.c$81$2_0$28 ==.
                                    545 ;	main.c:81: sysEnterNormalMode();
      00047A 90 FF 70         [24]  546 	mov	dptr,#0xff70
      00047D E4               [12]  547 	clr	a
      00047E F0               [24]  548 	movx	@dptr,a
                           0000A5   549 	C$main.c$83$2_0$28 ==.
                                    550 ;	main.c:83: ledTest();
      00047F 12 35 D1         [24]  551 	lcall	_ledTest
                           0000A8   552 	C$main.c$97$2_0$28 ==.
                                    553 ;	main.c:97: cfTest(0);
      000482 75 82 00         [24]  554 	mov	dpl,#0x00
      000485 12 37 55         [24]  555 	lcall	_cfTest
                           0000AE   556 	C$main.c$99$2_0$28 ==.
                                    557 ;	main.c:99: FATTest(0);
      000488 75 82 00         [24]  558 	mov	dpl,#0x00
      00048B 12 37 F7         [24]  559 	lcall	_FATTest
                           0000B4   560 	C$main.c$110$1_0$26 ==.
                                    561 ;	main.c:110: while(1);
      00048E                        562 00108$:
      00048E 80 FE            [24]  563 	sjmp	00108$
                           0000B6   564 	C$main.c$111$1_0$26 ==.
                                    565 ;	main.c:111: }
      000490 85 08 81         [24]  566 	mov	sp,_bp
      000493 D0 08            [24]  567 	pop	_bp
                           0000BB   568 	C$main.c$111$1_0$26 ==.
                           0000BB   569 	XG$main$0$0 ==.
      000495 22               [24]  570 	ret
                                    571 	.area CSEG    (CODE)
                                    572 	.area CONST   (CODE)
                                    573 	.area XINIT   (CODE)
                                    574 	.area CABS    (ABS,CODE)
