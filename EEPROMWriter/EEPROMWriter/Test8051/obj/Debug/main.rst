                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _ledTest
                                     13 	.globl _cfTest
                                     14 	.globl _sioTXBuf
                                     15 	.globl _sioInit
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _F1
                                     23 	.globl _P
                                     24 	.globl _PS
                                     25 	.globl _PT1
                                     26 	.globl _PX1
                                     27 	.globl _PT0
                                     28 	.globl _PX0
                                     29 	.globl _RD
                                     30 	.globl _WR
                                     31 	.globl _T1
                                     32 	.globl _T0
                                     33 	.globl _INT1
                                     34 	.globl _INT0
                                     35 	.globl _TXD
                                     36 	.globl _RXD
                                     37 	.globl _P3_7
                                     38 	.globl _P3_6
                                     39 	.globl _P3_5
                                     40 	.globl _P3_4
                                     41 	.globl _P3_3
                                     42 	.globl _P3_2
                                     43 	.globl _P3_1
                                     44 	.globl _P3_0
                                     45 	.globl _EA
                                     46 	.globl _ES
                                     47 	.globl _ET1
                                     48 	.globl _EX1
                                     49 	.globl _ET0
                                     50 	.globl _EX0
                                     51 	.globl _P2_7
                                     52 	.globl _P2_6
                                     53 	.globl _P2_5
                                     54 	.globl _P2_4
                                     55 	.globl _P2_3
                                     56 	.globl _P2_2
                                     57 	.globl _P2_1
                                     58 	.globl _P2_0
                                     59 	.globl _SM0
                                     60 	.globl _SM1
                                     61 	.globl _SM2
                                     62 	.globl _REN
                                     63 	.globl _TB8
                                     64 	.globl _RB8
                                     65 	.globl _TI
                                     66 	.globl _RI
                                     67 	.globl _P1_7
                                     68 	.globl _P1_6
                                     69 	.globl _P1_5
                                     70 	.globl _P1_4
                                     71 	.globl _P1_3
                                     72 	.globl _P1_2
                                     73 	.globl _P1_1
                                     74 	.globl _P1_0
                                     75 	.globl _TF1
                                     76 	.globl _TR1
                                     77 	.globl _TF0
                                     78 	.globl _TR0
                                     79 	.globl _IE1
                                     80 	.globl _IT1
                                     81 	.globl _IE0
                                     82 	.globl _IT0
                                     83 	.globl _P0_7
                                     84 	.globl _P0_6
                                     85 	.globl _P0_5
                                     86 	.globl _P0_4
                                     87 	.globl _P0_3
                                     88 	.globl _P0_2
                                     89 	.globl _P0_1
                                     90 	.globl _P0_0
                                     91 	.globl _B
                                     92 	.globl _ACC
                                     93 	.globl _PSW
                                     94 	.globl _IP
                                     95 	.globl _P3
                                     96 	.globl _IE
                                     97 	.globl _P2
                                     98 	.globl _SBUF
                                     99 	.globl _SCON
                                    100 	.globl _P1
                                    101 	.globl _TH1
                                    102 	.globl _TH0
                                    103 	.globl _TL1
                                    104 	.globl _TL0
                                    105 	.globl _TMOD
                                    106 	.globl _TCON
                                    107 	.globl _PCON
                                    108 	.globl _DPH
                                    109 	.globl _DPL
                                    110 	.globl _SP
                                    111 	.globl _P0
                                    112 	.globl _buf
                                    113 ;--------------------------------------------------------
                                    114 ; special function registers
                                    115 ;--------------------------------------------------------
                                    116 	.area RSEG    (ABS,DATA)
      000000                        117 	.org 0x0000
                           000080   118 G$P0$0_0$0 == 0x0080
                           000080   119 _P0	=	0x0080
                           000081   120 G$SP$0_0$0 == 0x0081
                           000081   121 _SP	=	0x0081
                           000082   122 G$DPL$0_0$0 == 0x0082
                           000082   123 _DPL	=	0x0082
                           000083   124 G$DPH$0_0$0 == 0x0083
                           000083   125 _DPH	=	0x0083
                           000087   126 G$PCON$0_0$0 == 0x0087
                           000087   127 _PCON	=	0x0087
                           000088   128 G$TCON$0_0$0 == 0x0088
                           000088   129 _TCON	=	0x0088
                           000089   130 G$TMOD$0_0$0 == 0x0089
                           000089   131 _TMOD	=	0x0089
                           00008A   132 G$TL0$0_0$0 == 0x008a
                           00008A   133 _TL0	=	0x008a
                           00008B   134 G$TL1$0_0$0 == 0x008b
                           00008B   135 _TL1	=	0x008b
                           00008C   136 G$TH0$0_0$0 == 0x008c
                           00008C   137 _TH0	=	0x008c
                           00008D   138 G$TH1$0_0$0 == 0x008d
                           00008D   139 _TH1	=	0x008d
                           000090   140 G$P1$0_0$0 == 0x0090
                           000090   141 _P1	=	0x0090
                           000098   142 G$SCON$0_0$0 == 0x0098
                           000098   143 _SCON	=	0x0098
                           000099   144 G$SBUF$0_0$0 == 0x0099
                           000099   145 _SBUF	=	0x0099
                           0000A0   146 G$P2$0_0$0 == 0x00a0
                           0000A0   147 _P2	=	0x00a0
                           0000A8   148 G$IE$0_0$0 == 0x00a8
                           0000A8   149 _IE	=	0x00a8
                           0000B0   150 G$P3$0_0$0 == 0x00b0
                           0000B0   151 _P3	=	0x00b0
                           0000B8   152 G$IP$0_0$0 == 0x00b8
                           0000B8   153 _IP	=	0x00b8
                           0000D0   154 G$PSW$0_0$0 == 0x00d0
                           0000D0   155 _PSW	=	0x00d0
                           0000E0   156 G$ACC$0_0$0 == 0x00e0
                           0000E0   157 _ACC	=	0x00e0
                           0000F0   158 G$B$0_0$0 == 0x00f0
                           0000F0   159 _B	=	0x00f0
                                    160 ;--------------------------------------------------------
                                    161 ; special function bits
                                    162 ;--------------------------------------------------------
                                    163 	.area RSEG    (ABS,DATA)
      000000                        164 	.org 0x0000
                           000080   165 G$P0_0$0_0$0 == 0x0080
                           000080   166 _P0_0	=	0x0080
                           000081   167 G$P0_1$0_0$0 == 0x0081
                           000081   168 _P0_1	=	0x0081
                           000082   169 G$P0_2$0_0$0 == 0x0082
                           000082   170 _P0_2	=	0x0082
                           000083   171 G$P0_3$0_0$0 == 0x0083
                           000083   172 _P0_3	=	0x0083
                           000084   173 G$P0_4$0_0$0 == 0x0084
                           000084   174 _P0_4	=	0x0084
                           000085   175 G$P0_5$0_0$0 == 0x0085
                           000085   176 _P0_5	=	0x0085
                           000086   177 G$P0_6$0_0$0 == 0x0086
                           000086   178 _P0_6	=	0x0086
                           000087   179 G$P0_7$0_0$0 == 0x0087
                           000087   180 _P0_7	=	0x0087
                           000088   181 G$IT0$0_0$0 == 0x0088
                           000088   182 _IT0	=	0x0088
                           000089   183 G$IE0$0_0$0 == 0x0089
                           000089   184 _IE0	=	0x0089
                           00008A   185 G$IT1$0_0$0 == 0x008a
                           00008A   186 _IT1	=	0x008a
                           00008B   187 G$IE1$0_0$0 == 0x008b
                           00008B   188 _IE1	=	0x008b
                           00008C   189 G$TR0$0_0$0 == 0x008c
                           00008C   190 _TR0	=	0x008c
                           00008D   191 G$TF0$0_0$0 == 0x008d
                           00008D   192 _TF0	=	0x008d
                           00008E   193 G$TR1$0_0$0 == 0x008e
                           00008E   194 _TR1	=	0x008e
                           00008F   195 G$TF1$0_0$0 == 0x008f
                           00008F   196 _TF1	=	0x008f
                           000090   197 G$P1_0$0_0$0 == 0x0090
                           000090   198 _P1_0	=	0x0090
                           000091   199 G$P1_1$0_0$0 == 0x0091
                           000091   200 _P1_1	=	0x0091
                           000092   201 G$P1_2$0_0$0 == 0x0092
                           000092   202 _P1_2	=	0x0092
                           000093   203 G$P1_3$0_0$0 == 0x0093
                           000093   204 _P1_3	=	0x0093
                           000094   205 G$P1_4$0_0$0 == 0x0094
                           000094   206 _P1_4	=	0x0094
                           000095   207 G$P1_5$0_0$0 == 0x0095
                           000095   208 _P1_5	=	0x0095
                           000096   209 G$P1_6$0_0$0 == 0x0096
                           000096   210 _P1_6	=	0x0096
                           000097   211 G$P1_7$0_0$0 == 0x0097
                           000097   212 _P1_7	=	0x0097
                           000098   213 G$RI$0_0$0 == 0x0098
                           000098   214 _RI	=	0x0098
                           000099   215 G$TI$0_0$0 == 0x0099
                           000099   216 _TI	=	0x0099
                           00009A   217 G$RB8$0_0$0 == 0x009a
                           00009A   218 _RB8	=	0x009a
                           00009B   219 G$TB8$0_0$0 == 0x009b
                           00009B   220 _TB8	=	0x009b
                           00009C   221 G$REN$0_0$0 == 0x009c
                           00009C   222 _REN	=	0x009c
                           00009D   223 G$SM2$0_0$0 == 0x009d
                           00009D   224 _SM2	=	0x009d
                           00009E   225 G$SM1$0_0$0 == 0x009e
                           00009E   226 _SM1	=	0x009e
                           00009F   227 G$SM0$0_0$0 == 0x009f
                           00009F   228 _SM0	=	0x009f
                           0000A0   229 G$P2_0$0_0$0 == 0x00a0
                           0000A0   230 _P2_0	=	0x00a0
                           0000A1   231 G$P2_1$0_0$0 == 0x00a1
                           0000A1   232 _P2_1	=	0x00a1
                           0000A2   233 G$P2_2$0_0$0 == 0x00a2
                           0000A2   234 _P2_2	=	0x00a2
                           0000A3   235 G$P2_3$0_0$0 == 0x00a3
                           0000A3   236 _P2_3	=	0x00a3
                           0000A4   237 G$P2_4$0_0$0 == 0x00a4
                           0000A4   238 _P2_4	=	0x00a4
                           0000A5   239 G$P2_5$0_0$0 == 0x00a5
                           0000A5   240 _P2_5	=	0x00a5
                           0000A6   241 G$P2_6$0_0$0 == 0x00a6
                           0000A6   242 _P2_6	=	0x00a6
                           0000A7   243 G$P2_7$0_0$0 == 0x00a7
                           0000A7   244 _P2_7	=	0x00a7
                           0000A8   245 G$EX0$0_0$0 == 0x00a8
                           0000A8   246 _EX0	=	0x00a8
                           0000A9   247 G$ET0$0_0$0 == 0x00a9
                           0000A9   248 _ET0	=	0x00a9
                           0000AA   249 G$EX1$0_0$0 == 0x00aa
                           0000AA   250 _EX1	=	0x00aa
                           0000AB   251 G$ET1$0_0$0 == 0x00ab
                           0000AB   252 _ET1	=	0x00ab
                           0000AC   253 G$ES$0_0$0 == 0x00ac
                           0000AC   254 _ES	=	0x00ac
                           0000AF   255 G$EA$0_0$0 == 0x00af
                           0000AF   256 _EA	=	0x00af
                           0000B0   257 G$P3_0$0_0$0 == 0x00b0
                           0000B0   258 _P3_0	=	0x00b0
                           0000B1   259 G$P3_1$0_0$0 == 0x00b1
                           0000B1   260 _P3_1	=	0x00b1
                           0000B2   261 G$P3_2$0_0$0 == 0x00b2
                           0000B2   262 _P3_2	=	0x00b2
                           0000B3   263 G$P3_3$0_0$0 == 0x00b3
                           0000B3   264 _P3_3	=	0x00b3
                           0000B4   265 G$P3_4$0_0$0 == 0x00b4
                           0000B4   266 _P3_4	=	0x00b4
                           0000B5   267 G$P3_5$0_0$0 == 0x00b5
                           0000B5   268 _P3_5	=	0x00b5
                           0000B6   269 G$P3_6$0_0$0 == 0x00b6
                           0000B6   270 _P3_6	=	0x00b6
                           0000B7   271 G$P3_7$0_0$0 == 0x00b7
                           0000B7   272 _P3_7	=	0x00b7
                           0000B0   273 G$RXD$0_0$0 == 0x00b0
                           0000B0   274 _RXD	=	0x00b0
                           0000B1   275 G$TXD$0_0$0 == 0x00b1
                           0000B1   276 _TXD	=	0x00b1
                           0000B2   277 G$INT0$0_0$0 == 0x00b2
                           0000B2   278 _INT0	=	0x00b2
                           0000B3   279 G$INT1$0_0$0 == 0x00b3
                           0000B3   280 _INT1	=	0x00b3
                           0000B4   281 G$T0$0_0$0 == 0x00b4
                           0000B4   282 _T0	=	0x00b4
                           0000B5   283 G$T1$0_0$0 == 0x00b5
                           0000B5   284 _T1	=	0x00b5
                           0000B6   285 G$WR$0_0$0 == 0x00b6
                           0000B6   286 _WR	=	0x00b6
                           0000B7   287 G$RD$0_0$0 == 0x00b7
                           0000B7   288 _RD	=	0x00b7
                           0000B8   289 G$PX0$0_0$0 == 0x00b8
                           0000B8   290 _PX0	=	0x00b8
                           0000B9   291 G$PT0$0_0$0 == 0x00b9
                           0000B9   292 _PT0	=	0x00b9
                           0000BA   293 G$PX1$0_0$0 == 0x00ba
                           0000BA   294 _PX1	=	0x00ba
                           0000BB   295 G$PT1$0_0$0 == 0x00bb
                           0000BB   296 _PT1	=	0x00bb
                           0000BC   297 G$PS$0_0$0 == 0x00bc
                           0000BC   298 _PS	=	0x00bc
                           0000D0   299 G$P$0_0$0 == 0x00d0
                           0000D0   300 _P	=	0x00d0
                           0000D1   301 G$F1$0_0$0 == 0x00d1
                           0000D1   302 _F1	=	0x00d1
                           0000D2   303 G$OV$0_0$0 == 0x00d2
                           0000D2   304 _OV	=	0x00d2
                           0000D3   305 G$RS0$0_0$0 == 0x00d3
                           0000D3   306 _RS0	=	0x00d3
                           0000D4   307 G$RS1$0_0$0 == 0x00d4
                           0000D4   308 _RS1	=	0x00d4
                           0000D5   309 G$F0$0_0$0 == 0x00d5
                           0000D5   310 _F0	=	0x00d5
                           0000D6   311 G$AC$0_0$0 == 0x00d6
                           0000D6   312 _AC	=	0x00d6
                           0000D7   313 G$CY$0_0$0 == 0x00d7
                           0000D7   314 _CY	=	0x00d7
                                    315 ;--------------------------------------------------------
                                    316 ; overlayable register banks
                                    317 ;--------------------------------------------------------
                                    318 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        319 	.ds 8
                                    320 ;--------------------------------------------------------
                                    321 ; internal ram data
                                    322 ;--------------------------------------------------------
                                    323 	.area DSEG    (DATA)
                           000000   324 Lmain.main$dst$2_0$22==.
      00000A                        325 _main_dst_131072_22:
      00000A                        326 	.ds 2
                                    327 ;--------------------------------------------------------
                                    328 ; overlayable items in internal ram 
                                    329 ;--------------------------------------------------------
                                    330 ;--------------------------------------------------------
                                    331 ; Stack segment in internal ram 
                                    332 ;--------------------------------------------------------
                                    333 	.area	SSEG
      000012                        334 __start__stack:
      000012                        335 	.ds	1
                                    336 
                                    337 ;--------------------------------------------------------
                                    338 ; indirectly addressable internal ram data
                                    339 ;--------------------------------------------------------
                                    340 	.area ISEG    (DATA)
                                    341 ;--------------------------------------------------------
                                    342 ; absolute internal ram data
                                    343 ;--------------------------------------------------------
                                    344 	.area IABS    (ABS,DATA)
                                    345 	.area IABS    (ABS,DATA)
                                    346 ;--------------------------------------------------------
                                    347 ; bit data
                                    348 ;--------------------------------------------------------
                                    349 	.area BSEG    (BIT)
                                    350 ;--------------------------------------------------------
                                    351 ; paged external ram data
                                    352 ;--------------------------------------------------------
                                    353 	.area PSEG    (PAG,XDATA)
                                    354 ;--------------------------------------------------------
                                    355 ; external ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area XSEG    (XDATA)
                           000000   358 G$buf$0_0$0==.
      00400E                        359 _buf::
      00400E                        360 	.ds 512
                                    361 ;--------------------------------------------------------
                                    362 ; absolute external ram data
                                    363 ;--------------------------------------------------------
                                    364 	.area XABS    (ABS,XDATA)
                                    365 ;--------------------------------------------------------
                                    366 ; external initialized ram data
                                    367 ;--------------------------------------------------------
                                    368 	.area XISEG   (XDATA)
                                    369 	.area HOME    (CODE)
                                    370 	.area GSINIT0 (CODE)
                                    371 	.area GSINIT1 (CODE)
                                    372 	.area GSINIT2 (CODE)
                                    373 	.area GSINIT3 (CODE)
                                    374 	.area GSINIT4 (CODE)
                                    375 	.area GSINIT5 (CODE)
                                    376 	.area GSINIT  (CODE)
                                    377 	.area GSFINAL (CODE)
                                    378 	.area CSEG    (CODE)
                                    379 ;--------------------------------------------------------
                                    380 ; interrupt vector 
                                    381 ;--------------------------------------------------------
                                    382 	.area HOME    (CODE)
      000000                        383 __interrupt_vect:
      000000 02 00 1B         [24]  384 	ljmp	__sdcc_gsinit_startup
                                    385 ;--------------------------------------------------------
                                    386 ; global & static initialisations
                                    387 ;--------------------------------------------------------
                                    388 	.area HOME    (CODE)
                                    389 	.area GSINIT  (CODE)
                                    390 	.area GSFINAL (CODE)
                                    391 	.area GSINIT  (CODE)
                                    392 	.globl __sdcc_gsinit_startup
                                    393 	.globl __sdcc_program_startup
                                    394 	.globl __start__stack
                                    395 	.globl __mcs51_genXINIT
                                    396 	.globl __mcs51_genXRAMCLEAR
                                    397 	.globl __mcs51_genRAMCLEAR
                                    398 	.area GSFINAL (CODE)
      000074 02 00 03         [24]  399 	ljmp	__sdcc_program_startup
                                    400 ;--------------------------------------------------------
                                    401 ; Home
                                    402 ;--------------------------------------------------------
                                    403 	.area HOME    (CODE)
                                    404 	.area HOME    (CODE)
      000003                        405 __sdcc_program_startup:
      000003 02 04 0A         [24]  406 	ljmp	_main
                                    407 ;	return from main will return to caller
                                    408 ;--------------------------------------------------------
                                    409 ; code
                                    410 ;--------------------------------------------------------
                                    411 	.area CSEG    (CODE)
                                    412 ;------------------------------------------------------------
                                    413 ;Allocation info for local variables in function 'main'
                                    414 ;------------------------------------------------------------
                                    415 ;res                       Allocated to registers 
                                    416 ;src                       Allocated to registers 
                                    417 ;dst                       Allocated with name '_main_dst_131072_22'
                                    418 ;count                     Allocated to registers r2 r3 
                                    419 ;------------------------------------------------------------
                           000000   420 	G$main$0$0 ==.
                           000000   421 	C$main.c$9$0_0$21 ==.
                                    422 ;	main.c:9: void main()
                                    423 ;	-----------------------------------------
                                    424 ;	 function main
                                    425 ;	-----------------------------------------
      00040A                        426 _main:
                           000007   427 	ar7 = 0x07
                           000006   428 	ar6 = 0x06
                           000005   429 	ar5 = 0x05
                           000004   430 	ar4 = 0x04
                           000003   431 	ar3 = 0x03
                           000002   432 	ar2 = 0x02
                           000001   433 	ar1 = 0x01
                           000000   434 	ar0 = 0x00
                           000000   435 	C$main.c$20$1_0$21 ==.
                                    436 ;	main.c:20: P1 = 0x01;
      00040A 75 90 01         [24]  437 	mov	_P1,#0x01
                           000003   438 	C$main.c$21$2_0$22 ==.
                                    439 ;	main.c:21: sysCopyBIOS(0x0000, 0x0000, 0x4000);
      00040D 90 00 00         [24]  440 	mov	dptr,#0x0000
      000410 E4               [12]  441 	clr	a
      000411 93               [24]  442 	movc	a,@a+dptr
      000412 FE               [12]  443 	mov	r6,a
      000413 7F 00            [12]  444 	mov	r7,#0x00
      000415 90 00 00         [24]  445 	mov	dptr,#0x0000
      000418 E0               [24]  446 	movx	a,@dptr
      000419 FC               [12]  447 	mov	r4,a
      00041A 7D 00            [12]  448 	mov	r5,#0x00
      00041C 7A 00            [12]  449 	mov	r2,#0x00
      00041E 7B 40            [12]  450 	mov	r3,#0x40
      000420                        451 00101$:
      000420 8A 00            [24]  452 	mov	ar0,r2
      000422 8B 01            [24]  453 	mov	ar1,r3
      000424 1A               [12]  454 	dec	r2
      000425 BA FF 01         [24]  455 	cjne	r2,#0xff,00118$
      000428 1B               [12]  456 	dec	r3
      000429                        457 00118$:
      000429 E8               [12]  458 	mov	a,r0
      00042A 49               [12]  459 	orl	a,r1
      00042B 60 19            [24]  460 	jz	00103$
      00042D 8E 82            [24]  461 	mov	dpl,r6
      00042F 8F 83            [24]  462 	mov	dph,r7
      000431 E4               [12]  463 	clr	a
      000432 93               [24]  464 	movc	a,@a+dptr
      000433 F9               [12]  465 	mov	r1,a
      000434 A3               [24]  466 	inc	dptr
      000435 AE 82            [24]  467 	mov	r6,dpl
      000437 AF 83            [24]  468 	mov	r7,dph
      000439 8C 82            [24]  469 	mov	dpl,r4
      00043B 8D 83            [24]  470 	mov	dph,r5
      00043D E9               [12]  471 	mov	a,r1
      00043E F0               [24]  472 	movx	@dptr,a
      00043F A3               [24]  473 	inc	dptr
      000440 AC 82            [24]  474 	mov	r4,dpl
      000442 AD 83            [24]  475 	mov	r5,dph
      000444 80 DA            [24]  476 	sjmp	00101$
      000446                        477 00103$:
                           00003C   478 	C$main.c$23$1_0$21 ==.
                                    479 ;	main.c:23: P1 = 0x02;
      000446 75 90 02         [24]  480 	mov	_P1,#0x02
                           00003F   481 	C$main.c$24$1_0$21 ==.
                                    482 ;	main.c:24: sysEnterNormalMode();
      000449 90 FF 70         [24]  483 	mov	dptr,#0xff70
      00044C E4               [12]  484 	clr	a
      00044D F0               [24]  485 	movx	@dptr,a
                           000044   486 	C$main.c$26$1_0$21 ==.
                                    487 ;	main.c:26: P1 = 0x03;
      00044E 75 90 03         [24]  488 	mov	_P1,#0x03
                           000047   489 	C$main.c$31$2_0$23 ==.
                                    490 ;	main.c:31: ledTest();
      000451 78 8F            [12]  491 	mov	r0,#_ledTest
      000453 79 03            [12]  492 	mov	r1,#(_ledTest >> 8)
      000455 7A 00            [12]  493 	mov	r2,#(_ledTest >> 16)
      000457 12 00 06         [24]  494 	lcall	__sdcc_banked_call
                           000050   495 	C$main.c$35$2_0$23 ==.
                                    496 ;	main.c:35: P1 = 0x04;
      00045A 75 90 04         [24]  497 	mov	_P1,#0x04
                           000053   498 	C$main.c$38$2_0$23 ==.
                                    499 ;	main.c:38: P1 = 0x05;
      00045D 75 90 05         [24]  500 	mov	_P1,#0x05
                           000056   501 	C$main.c$41$2_0$23 ==.
                                    502 ;	main.c:41: P1 = 0x06;
      000460 75 90 06         [24]  503 	mov	_P1,#0x06
                           000059   504 	C$main.c$69$2_0$23 ==.
                                    505 ;	main.c:69: P1 = 0x10;
      000463 75 90 10         [24]  506 	mov	_P1,#0x10
                           00005C   507 	C$main.c$72$2_0$23 ==.
                                    508 ;	main.c:72: P1 = 0x11;
      000466 75 90 11         [24]  509 	mov	_P1,#0x11
                           00005F   510 	C$main.c$75$2_0$23 ==.
                                    511 ;	main.c:75: P1 = 0x12;
      000469 75 90 12         [24]  512 	mov	_P1,#0x12
                           000062   513 	C$main.c$78$2_0$23 ==.
                                    514 ;	main.c:78: P1 = 0x13;
      00046C 75 90 13         [24]  515 	mov	_P1,#0x13
                           000065   516 	C$main.c$79$2_0$23 ==.
                                    517 ;	main.c:79: sioInit(0);
      00046F 75 82 00         [24]  518 	mov	dpl,#0x00
      000472 78 94            [12]  519 	mov	r0,#_sioInit
      000474 79 05            [12]  520 	mov	r1,#(_sioInit >> 8)
      000476 7A 00            [12]  521 	mov	r2,#(_sioInit >> 16)
      000478 12 00 06         [24]  522 	lcall	__sdcc_banked_call
                           000071   523 	C$main.c$80$2_0$23 ==.
                                    524 ;	main.c:80: cfTest(0, buf);
      00047B 90 40 0A         [24]  525 	mov	dptr,#_cfTest_PARM_2
      00047E 74 0E            [12]  526 	mov	a,#_buf
      000480 F0               [24]  527 	movx	@dptr,a
      000481 74 40            [12]  528 	mov	a,#(_buf >> 8)
      000483 A3               [24]  529 	inc	dptr
      000484 F0               [24]  530 	movx	@dptr,a
      000485 E4               [12]  531 	clr	a
      000486 A3               [24]  532 	inc	dptr
      000487 F0               [24]  533 	movx	@dptr,a
      000488 75 82 00         [24]  534 	mov	dpl,#0x00
      00048B 78 0C            [12]  535 	mov	r0,#_cfTest
      00048D 79 03            [12]  536 	mov	r1,#(_cfTest >> 8)
      00048F 7A 00            [12]  537 	mov	r2,#(_cfTest >> 16)
      000491 12 00 06         [24]  538 	lcall	__sdcc_banked_call
                           00008A   539 	C$main.c$81$2_0$23 ==.
                                    540 ;	main.c:81: sioTXBuf(0, buf, SECTOR_SIZE);
      000494 90 42 14         [24]  541 	mov	dptr,#_sioTXBuf_PARM_2
      000497 74 0E            [12]  542 	mov	a,#_buf
      000499 F0               [24]  543 	movx	@dptr,a
      00049A 74 40            [12]  544 	mov	a,#(_buf >> 8)
      00049C A3               [24]  545 	inc	dptr
      00049D F0               [24]  546 	movx	@dptr,a
      00049E E4               [12]  547 	clr	a
      00049F A3               [24]  548 	inc	dptr
      0004A0 F0               [24]  549 	movx	@dptr,a
      0004A1 90 42 17         [24]  550 	mov	dptr,#_sioTXBuf_PARM_3
      0004A4 F0               [24]  551 	movx	@dptr,a
      0004A5 74 02            [12]  552 	mov	a,#0x02
      0004A7 A3               [24]  553 	inc	dptr
      0004A8 F0               [24]  554 	movx	@dptr,a
      0004A9 75 82 00         [24]  555 	mov	dpl,#0x00
      0004AC 78 23            [12]  556 	mov	r0,#_sioTXBuf
      0004AE 79 06            [12]  557 	mov	r1,#(_sioTXBuf >> 8)
      0004B0 7A 00            [12]  558 	mov	r2,#(_sioTXBuf >> 16)
      0004B2 12 00 06         [24]  559 	lcall	__sdcc_banked_call
                           0000AB   560 	C$main.c$86$2_0$23 ==.
                                    561 ;	main.c:86: P1 = 0x81;
      0004B5 75 90 81         [24]  562 	mov	_P1,#0x81
                           0000AE   563 	C$main.c$90$1_0$21 ==.
                                    564 ;	main.c:90: P1 = 0x82;
                           0000AE   565 	C$main.c$92$1_0$21 ==.
                                    566 ;	main.c:92: }
                           0000AE   567 	C$main.c$92$1_0$21 ==.
                           0000AE   568 	XG$main$0$0 ==.
      0004B8 02 00 18         [24]  569 	ljmp	__sdcc_banked_ret
                                    570 	.area CSEG    (CODE)
                                    571 	.area CONST   (CODE)
                                    572 	.area XINIT   (CODE)
                                    573 	.area CABS    (ABS,CODE)
